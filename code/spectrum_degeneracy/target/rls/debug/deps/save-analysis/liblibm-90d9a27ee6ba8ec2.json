{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1","program":"/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","libm","--edition=2018","/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","-C","metadata=90d9a27ee6ba8ec2","-C","extra-filename=-90d9a27ee6ba8ec2","--out-dir","/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","-L","dependency=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/liblibm-90d9a27ee6ba8ec2.rmeta"},"prelude":{"crate_id":{"name":"libm","disambiguator":[11210125239737082950,8864002574336366646]},"crate_root":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src","external_crates":[{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}}],"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":0,"byte_end":1326,"line_start":1,"line_end":58,"column_start":1,"column_end":54}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":527,"byte_end":528,"line_start":22,"line_end":22,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":0,"byte_end":1326,"line_start":1,"line_end":58,"column_start":1,"column_end":54},"name":"","qualname":"::","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2085},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090}],"decl_id":null,"docs":" libm in pure Rust\n","sig":null,"attributes":[{"value":"/ libm in pure Rust","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":0,"byte_end":21,"line_start":1,"line_end":1,"column_start":1,"column_end":22}},{"value":"deny(warnings)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":22,"byte_end":40,"line_start":2,"line_end":2,"column_start":1,"column_end":19}},{"value":"no_std","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":41,"byte_end":51,"line_start":3,"line_end":3,"column_start":1,"column_end":11}},{"value":"allow(clippy :: unreadable_literal)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":152,"byte_end":189,"line_start":8,"line_end":8,"column_start":1,"column_end":38}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":190,"byte_end":231,"line_start":9,"line_end":9,"column_start":1,"column_end":42}},{"value":"allow(clippy :: needless_return)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":232,"byte_end":266,"line_start":10,"line_end":10,"column_start":1,"column_end":35}},{"value":"allow(clippy :: int_plus_one)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":267,"byte_end":298,"line_start":11,"line_end":11,"column_start":1,"column_end":32}},{"value":"allow(clippy :: deprecated_cfg_attr)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":299,"byte_end":337,"line_start":12,"line_end":12,"column_start":1,"column_end":39}},{"value":"allow(clippy :: mixed_case_hex_literals)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":338,"byte_end":380,"line_start":13,"line_end":13,"column_start":1,"column_end":43}},{"value":"allow(clippy :: float_cmp)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":381,"byte_end":409,"line_start":14,"line_end":14,"column_start":1,"column_end":29}},{"value":"allow(clippy :: eq_op)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":410,"byte_end":434,"line_start":15,"line_end":15,"column_start":1,"column_end":25}},{"value":"allow(clippy :: assign_op_pattern)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":435,"byte_end":471,"line_start":16,"line_end":16,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":25},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11264,"byte_end":11268,"line_start":63,"line_end":63,"column_start":8,"column_end":12},"name":"acos","qualname":"::math::acos::acos","value":"pub fn acos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Arccosine (f64)","sig":null,"attributes":[{"value":"/ Arccosine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11008,"byte_end":11027,"line_start":57,"line_end":57,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11028,"byte_end":11031,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse cosine (arc cosine) of the input value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11032,"byte_end":11096,"line_start":59,"line_end":59,"column_start":1,"column_end":65}},{"value":"/ Arguments must be in the range -1 to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11097,"byte_end":11140,"line_start":60,"line_end":60,"column_start":1,"column_end":44}},{"value":"/ Returns values in radians, in the range of 0 to pi.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acos.rs","byte_start":11141,"byte_end":11196,"line_start":61,"line_end":61,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":37},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13687,"byte_end":13692,"line_start":37,"line_end":37,"column_start":8,"column_end":13},"name":"acosf","qualname":"::math::acosf::acosf","value":"pub fn acosf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Arccosine (f32)","sig":null,"attributes":[{"value":"/ Arccosine (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13431,"byte_end":13450,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13451,"byte_end":13454,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse cosine (arc cosine) of the input value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13455,"byte_end":13519,"line_start":33,"line_end":33,"column_start":1,"column_end":65}},{"value":"/ Arguments must be in the range -1 to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13520,"byte_end":13563,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/ Returns values in radians, in the range of 0 to pi.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosf.rs","byte_start":13564,"byte_end":13619,"line_start":35,"line_end":35,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":50},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":15050,"byte_end":15055,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"acosh","qualname":"::math::acosh::acosh","value":"pub fn acosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine (f64)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":14855,"byte_end":14890,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":14891,"byte_end":14894,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic cosine of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":14895,"byte_end":14947,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ Is defined as `log(x + sqrt(x*x-1))`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":14948,"byte_end":14989,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ `x` must be a number greater than or equal to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acosh.rs","byte_start":14990,"byte_end":15042,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":63},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15832,"byte_end":15838,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"acoshf","qualname":"::math::acoshf::acoshf","value":"pub fn acoshf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic cosine (f32)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic cosine (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15637,"byte_end":15672,"line_start":5,"line_end":5,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15673,"byte_end":15676,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic cosine of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15677,"byte_end":15729,"line_start":7,"line_end":7,"column_start":1,"column_end":53}},{"value":"/ Is defined as `log(x + sqrt(x*x-1))`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15730,"byte_end":15771,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"/ `x` must be a number greater than or equal to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/acoshf.rs","byte_start":15772,"byte_end":15824,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Function","id":{"krate":0,"index":94},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19328,"byte_end":19332,"line_start":70,"line_end":70,"column_start":8,"column_end":12},"name":"asin","qualname":"::math::asin::asin","value":"pub fn asin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Arcsine (f64)","sig":null,"attributes":[{"value":"/ Arcsine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19063,"byte_end":19080,"line_start":64,"line_end":64,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19081,"byte_end":19084,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse sine (arc sine) of the argument `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19085,"byte_end":19146,"line_start":66,"line_end":66,"column_start":1,"column_end":62}},{"value":"/ Arguments to asin must be in the range -1 to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19147,"byte_end":19198,"line_start":67,"line_end":67,"column_start":1,"column_end":52}},{"value":"/ Returns values in radians, in the range of -pi/2 to pi/2.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asin.rs","byte_start":19199,"byte_end":19260,"line_start":68,"line_end":68,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":108},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21762,"byte_end":21767,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"asinf","qualname":"::math::asinf::asinf","value":"pub fn asinf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Arcsine (f32)","sig":null,"attributes":[{"value":"/ Arcsine (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21497,"byte_end":21514,"line_start":33,"line_end":33,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21515,"byte_end":21518,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse sine (arc sine) of the argument `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21519,"byte_end":21580,"line_start":35,"line_end":35,"column_start":1,"column_end":62}},{"value":"/ Arguments to asin must be in the range -1 to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21581,"byte_end":21632,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/ Returns values in radians, in the range of -pi/2 to pi/2.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinf.rs","byte_start":21633,"byte_end":21694,"line_start":37,"line_end":37,"column_start":1,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":121},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinh.rs","byte_start":22984,"byte_end":22989,"line_start":10,"line_end":10,"column_start":8,"column_end":13},"name":"asinh","qualname":"::math::asinh::asinh","value":"pub fn asinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine (f64)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinh.rs","byte_start":22839,"byte_end":22872,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinh.rs","byte_start":22873,"byte_end":22876,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic sine of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinh.rs","byte_start":22877,"byte_end":22927,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"/ Is defined as `sgn(x)*log(|x|+sqrt(x*x+1))`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinh.rs","byte_start":22928,"byte_end":22976,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":134},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinhf.rs","byte_start":24061,"byte_end":24067,"line_start":10,"line_end":10,"column_start":8,"column_end":14},"name":"asinhf","qualname":"::math::asinhf::asinhf","value":"pub fn asinhf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic sine (f32)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic sine (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinhf.rs","byte_start":23916,"byte_end":23949,"line_start":6,"line_end":6,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinhf.rs","byte_start":23950,"byte_end":23953,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic sine of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinhf.rs","byte_start":23954,"byte_end":24004,"line_start":8,"line_end":8,"column_start":1,"column_end":51}},{"value":"/ Is defined as `sgn(x)*log(|x|+sqrt(x*x+1))`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/asinhf.rs","byte_start":24005,"byte_end":24053,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":148},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan.rs","byte_start":27747,"byte_end":27751,"line_start":68,"line_end":68,"column_start":8,"column_end":12},"name":"atan","qualname":"::math::atan::atan","value":"pub fn atan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Arctangent (f64)","sig":null,"attributes":[{"value":"/ Arctangent (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan.rs","byte_start":27525,"byte_end":27545,"line_start":63,"line_end":63,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan.rs","byte_start":27546,"byte_end":27549,"line_start":64,"line_end":64,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse tangent (arc tangent) of the input value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan.rs","byte_start":27550,"byte_end":27616,"line_start":65,"line_end":65,"column_start":1,"column_end":67}},{"value":"/ Returns a value in radians, in the range of -pi/2 to pi/2.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan.rs","byte_start":27617,"byte_end":27679,"line_start":66,"line_end":66,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":158},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32603,"byte_end":32608,"line_start":52,"line_end":52,"column_start":8,"column_end":13},"name":"atan2","qualname":"::math::atan2::atan2","value":"pub fn atan2(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Arctangent of y/x (f64)","sig":null,"attributes":[{"value":"/ Arctangent of y/x (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32290,"byte_end":32317,"line_start":46,"line_end":46,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32318,"byte_end":32321,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse tangent (arc tangent) of `y/x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32322,"byte_end":32378,"line_start":48,"line_end":48,"column_start":1,"column_end":57}},{"value":"/ Produces the correct result even for angles near pi/2 or -pi/2 (that is, when `x` is near 0).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32379,"byte_end":32476,"line_start":49,"line_end":49,"column_start":1,"column_end":98}},{"value":"/ Returns a value in radians, in the range of -pi to pi.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2.rs","byte_start":32477,"byte_end":32535,"line_start":50,"line_end":50,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":168},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35936,"byte_end":35942,"line_start":28,"line_end":28,"column_start":8,"column_end":14},"name":"atan2f","qualname":"::math::atan2f::atan2f","value":"pub fn atan2f(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Arctangent of y/x (f32)","sig":null,"attributes":[{"value":"/ Arctangent of y/x (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35623,"byte_end":35650,"line_start":22,"line_end":22,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35651,"byte_end":35654,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse tangent (arc tangent) of `y/x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35655,"byte_end":35711,"line_start":24,"line_end":24,"column_start":1,"column_end":57}},{"value":"/ Produces the correct result even for angles near pi/2 or -pi/2 (that is, when `x` is near 0).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35712,"byte_end":35809,"line_start":25,"line_end":25,"column_start":1,"column_end":98}},{"value":"/ Returns a value in radians, in the range of -pi to pi.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atan2f.rs","byte_start":35810,"byte_end":35868,"line_start":26,"line_end":26,"column_start":1,"column_end":59}}]},{"kind":"Function","id":{"krate":0,"index":179},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanf.rs","byte_start":39226,"byte_end":39231,"line_start":45,"line_end":45,"column_start":8,"column_end":13},"name":"atanf","qualname":"::math::atanf::atanf","value":"pub fn atanf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Arctangent (f32)","sig":null,"attributes":[{"value":"/ Arctangent (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanf.rs","byte_start":39004,"byte_end":39024,"line_start":40,"line_end":40,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanf.rs","byte_start":39025,"byte_end":39028,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ Computes the inverse tangent (arc tangent) of the input value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanf.rs","byte_start":39029,"byte_end":39095,"line_start":42,"line_end":42,"column_start":1,"column_end":67}},{"value":"/ Returns a value in radians, in the range of -pi/2 to pi/2.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanf.rs","byte_start":39096,"byte_end":39158,"line_start":43,"line_end":43,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":184},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanh.rs","byte_start":41232,"byte_end":41237,"line_start":8,"line_end":8,"column_start":8,"column_end":13},"name":"atanh","qualname":"::math::atanh::atanh","value":"pub fn atanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent (f64)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanh.rs","byte_start":41070,"byte_end":41106,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanh.rs","byte_start":41107,"byte_end":41110,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic tangent of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanh.rs","byte_start":41111,"byte_end":41164,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/ Is defined as `log((1+x)/(1-x))/2 = log1p(2x/(1-x))/2`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanh.rs","byte_start":41165,"byte_end":41224,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":189},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanhf.rs","byte_start":42144,"byte_end":42150,"line_start":8,"line_end":8,"column_start":8,"column_end":14},"name":"atanhf","qualname":"::math::atanhf::atanhf","value":"pub fn atanhf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Inverse hyperbolic tangent (f32)","sig":null,"attributes":[{"value":"/ Inverse hyperbolic tangent (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanhf.rs","byte_start":41982,"byte_end":42018,"line_start":4,"line_end":4,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanhf.rs","byte_start":42019,"byte_end":42022,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ Calculates the inverse hyperbolic tangent of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanhf.rs","byte_start":42023,"byte_end":42076,"line_start":6,"line_end":6,"column_start":1,"column_end":54}},{"value":"/ Is defined as `log((1+x)/(1-x))/2 = log1p(2x/(1-x))/2`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/atanhf.rs","byte_start":42077,"byte_end":42136,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":201},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrt.rs","byte_start":44014,"byte_end":44018,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"cbrt","qualname":"::math::cbrt::cbrt","value":"pub fn cbrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"\n Computes the cube root of the argument.\n","sig":null,"attributes":[{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrt.rs","byte_start":43899,"byte_end":43902,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ Computes the cube root of the argument.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrt.rs","byte_start":43903,"byte_end":43946,"line_start":32,"line_end":32,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":208},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrtf.rs","byte_start":48042,"byte_end":48047,"line_start":29,"line_end":29,"column_start":8,"column_end":13},"name":"cbrtf","qualname":"::math::cbrtf::cbrtf","value":"pub fn cbrtf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Cube root (f32)","sig":null,"attributes":[{"value":"/ Cube root (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrtf.rs","byte_start":47907,"byte_end":47926,"line_start":25,"line_end":25,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrtf.rs","byte_start":47927,"byte_end":47930,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Computes the cube root of the argument.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cbrtf.rs","byte_start":47931,"byte_end":47974,"line_start":27,"line_end":27,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":214},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceil.rs","byte_start":49488,"byte_end":49492,"line_start":9,"line_end":9,"column_start":8,"column_end":12},"name":"ceil","qualname":"::math::ceil::ceil","value":"pub fn ceil(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Ceil (f64)","sig":null,"attributes":[{"value":"/ Ceil (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceil.rs","byte_start":49342,"byte_end":49356,"line_start":5,"line_end":5,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceil.rs","byte_start":49357,"byte_end":49360,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Finds the nearest integer greater than or equal to `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceil.rs","byte_start":49361,"byte_end":49420,"line_start":7,"line_end":7,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":219},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceilf.rs","byte_start":51074,"byte_end":51079,"line_start":7,"line_end":7,"column_start":8,"column_end":13},"name":"ceilf","qualname":"::math::ceilf::ceilf","value":"pub fn ceilf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Ceil (f32)","sig":null,"attributes":[{"value":"/ Ceil (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceilf.rs","byte_start":50928,"byte_end":50942,"line_start":3,"line_end":3,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceilf.rs","byte_start":50943,"byte_end":50946,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Finds the nearest integer greater than or equal to `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ceilf.rs","byte_start":50947,"byte_end":51006,"line_start":5,"line_end":5,"column_start":1,"column_end":60}}]},{"kind":"Function","id":{"krate":0,"index":221},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysign.rs","byte_start":52717,"byte_end":52725,"line_start":5,"line_end":5,"column_start":8,"column_end":16},"name":"copysign","qualname":"::math::copysign::copysign","value":"pub fn copysign(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Sign of Y, magnitude of X (f64)","sig":null,"attributes":[{"value":"/ Sign of Y, magnitude of X (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysign.rs","byte_start":52536,"byte_end":52571,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysign.rs","byte_start":52572,"byte_end":52575,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Constructs a number with the magnitude (absolute value) of its","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysign.rs","byte_start":52576,"byte_end":52642,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ first argument, `x`, and the sign of its second argument, `y`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysign.rs","byte_start":52643,"byte_end":52709,"line_start":4,"line_end":4,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":223},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysignf.rs","byte_start":53061,"byte_end":53070,"line_start":5,"line_end":5,"column_start":8,"column_end":17},"name":"copysignf","qualname":"::math::copysignf::copysignf","value":"pub fn copysignf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Sign of Y, magnitude of X (f32)","sig":null,"attributes":[{"value":"/ Sign of Y, magnitude of X (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysignf.rs","byte_start":52880,"byte_end":52915,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysignf.rs","byte_start":52916,"byte_end":52919,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ Constructs a number with the magnitude (absolute value) of its","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysignf.rs","byte_start":52920,"byte_end":52986,"line_start":3,"line_end":3,"column_start":1,"column_end":67}},{"value":"/ first argument, `x`, and the sign of its second argument, `y`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/copysignf.rs","byte_start":52987,"byte_end":53053,"line_start":4,"line_end":4,"column_start":1,"column_end":67}}]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cos.rs","byte_start":54816,"byte_end":54819,"line_start":45,"line_end":45,"column_start":8,"column_end":11},"name":"cos","qualname":"::math::cos::cos","value":"pub fn cos(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":254},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosf.rs","byte_start":56499,"byte_end":56503,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"cosf","qualname":"::math::cosf::cosf","value":"pub fn cosf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":265},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":58208,"byte_end":58212,"line_start":11,"line_end":11,"column_start":8,"column_end":12},"name":"cosh","qualname":"::math::cosh::cosh","value":"pub fn cosh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic cosine (f64)","sig":null,"attributes":[{"value":"/ Hyperbolic cosine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":57977,"byte_end":58004,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":58005,"byte_end":58008,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Computes the hyperbolic cosine of the argument x.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":58009,"byte_end":58062,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Is defined as `(exp(x) + exp(-x))/2`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":58063,"byte_end":58103,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ Angles are specified in radians.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/cosh.rs","byte_start":58104,"byte_end":58140,"line_start":9,"line_end":9,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":276},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":59205,"byte_end":59210,"line_start":11,"line_end":11,"column_start":8,"column_end":13},"name":"coshf","qualname":"::math::coshf::coshf","value":"pub fn coshf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Hyperbolic cosine (f64)","sig":null,"attributes":[{"value":"/ Hyperbolic cosine (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":58974,"byte_end":59001,"line_start":5,"line_end":5,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":59002,"byte_end":59005,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Computes the hyperbolic cosine of the argument x.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":59006,"byte_end":59059,"line_start":7,"line_end":7,"column_start":1,"column_end":54}},{"value":"/ Is defined as `(exp(x) + exp(-x))/2`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":59060,"byte_end":59100,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"/ Angles are specified in radians.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/coshf.rs","byte_start":59101,"byte_end":59137,"line_start":9,"line_end":9,"column_start":1,"column_end":37}}]},{"kind":"Function","id":{"krate":0,"index":348},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69970,"byte_end":69973,"line_start":222,"line_end":222,"column_start":8,"column_end":11},"name":"erf","qualname":"::math::erf::erf","value":"pub fn erf(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Error function (f64)","sig":null,"attributes":[{"value":"/ Error function (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69728,"byte_end":69752,"line_start":217,"line_end":217,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69753,"byte_end":69756,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ Calculates an approximation to the “error function”, which estimates","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69757,"byte_end":69833,"line_start":219,"line_end":219,"column_start":1,"column_end":73}},{"value":"/ the probability that an observation will fall within x standard","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69834,"byte_end":69901,"line_start":220,"line_end":220,"column_start":1,"column_end":68}},{"value":"/ deviations of the mean (assuming a normal distribution).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":69902,"byte_end":69962,"line_start":221,"line_end":221,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":349},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71244,"byte_end":71248,"line_start":271,"line_end":271,"column_start":8,"column_end":12},"name":"erfc","qualname":"::math::erf::erfc","value":"pub fn erfc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Error function (f64)","sig":null,"attributes":[{"value":"/ Error function (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":70979,"byte_end":71003,"line_start":265,"line_end":265,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71004,"byte_end":71007,"line_start":266,"line_end":266,"column_start":1,"column_end":4}},{"value":"/ Calculates the complementary probability.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71008,"byte_end":71053,"line_start":267,"line_end":267,"column_start":1,"column_end":46}},{"value":"/ Is `1 - erf(x)`. Is computed directly, so that you can use it to avoid","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71054,"byte_end":71128,"line_start":268,"line_end":268,"column_start":1,"column_end":75}},{"value":"/ the loss of precision that would result from subtracting","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71129,"byte_end":71189,"line_start":269,"line_end":269,"column_start":1,"column_end":61}},{"value":"/ large probabilities (on large `x`) from 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erf.rs","byte_start":71190,"byte_end":71236,"line_start":270,"line_end":270,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":415},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77549,"byte_end":77553,"line_start":133,"line_end":133,"column_start":8,"column_end":12},"name":"erff","qualname":"::math::erff::erff","value":"pub fn erff(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Error function (f32)","sig":null,"attributes":[{"value":"/ Error function (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77307,"byte_end":77331,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77332,"byte_end":77335,"line_start":129,"line_end":129,"column_start":1,"column_end":4}},{"value":"/ Calculates an approximation to the “error function”, which estimates","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77336,"byte_end":77412,"line_start":130,"line_end":130,"column_start":1,"column_end":73}},{"value":"/ the probability that an observation will fall within x standard","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77413,"byte_end":77480,"line_start":131,"line_end":131,"column_start":1,"column_end":68}},{"value":"/ deviations of the mean (assuming a normal distribution).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":77481,"byte_end":77541,"line_start":132,"line_end":132,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":416},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78797,"byte_end":78802,"line_start":182,"line_end":182,"column_start":8,"column_end":13},"name":"erfcf","qualname":"::math::erff::erfcf","value":"pub fn erfcf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Error function (f32)","sig":null,"attributes":[{"value":"/ Error function (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78532,"byte_end":78556,"line_start":176,"line_end":176,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78557,"byte_end":78560,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"/ Calculates the complementary probability.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78561,"byte_end":78606,"line_start":178,"line_end":178,"column_start":1,"column_end":46}},{"value":"/ Is `1 - erf(x)`. Is computed directly, so that you can use it to avoid","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78607,"byte_end":78681,"line_start":179,"line_end":179,"column_start":1,"column_end":75}},{"value":"/ the loss of precision that would result from subtracting","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78682,"byte_end":78742,"line_start":180,"line_end":180,"column_start":1,"column_end":61}},{"value":"/ large probabilities (on large `x`) from 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/erff.rs","byte_start":78743,"byte_end":78789,"line_start":181,"line_end":181,"column_start":1,"column_end":47}}]},{"kind":"Function","id":{"krate":0,"index":431},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp.rs","byte_start":83248,"byte_end":83251,"line_start":85,"line_end":85,"column_start":8,"column_end":11},"name":"exp","qualname":"::math::exp::exp","value":"pub fn exp(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base *e* (f64)","sig":null,"attributes":[{"value":"/ Exponential, base *e* (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp.rs","byte_start":82982,"byte_end":83013,"line_start":80,"line_end":80,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp.rs","byte_start":83014,"byte_end":83017,"line_start":81,"line_end":81,"column_start":1,"column_end":4}},{"value":"/ Calculate the exponential of `x`, that is, *e* raised to the power `x`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp.rs","byte_start":83018,"byte_end":83092,"line_start":82,"line_end":82,"column_start":1,"column_end":75}},{"value":"/ (where *e* is the base of the natural system of logarithms, approximately 2.71828).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp.rs","byte_start":83093,"byte_end":83180,"line_start":83,"line_end":83,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":445},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp10.rs","byte_start":85333,"byte_end":85338,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"exp10","qualname":"::math::exp10::exp10","value":"pub fn exp10(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":460},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp10f.rs","byte_start":85981,"byte_end":85987,"line_start":9,"line_end":9,"column_start":8,"column_end":14},"name":"exp10f","qualname":"::math::exp10f::exp10f","value":"pub fn exp10f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":468},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2.rs","byte_start":100607,"byte_end":100611,"line_start":326,"line_end":326,"column_start":8,"column_end":12},"name":"exp2","qualname":"::math::exp2::exp2","value":"pub fn exp2(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base 2 (f64)","sig":null,"attributes":[{"value":"/ Exponential, base 2 (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2.rs","byte_start":100449,"byte_end":100478,"line_start":322,"line_end":322,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2.rs","byte_start":100479,"byte_end":100482,"line_start":323,"line_end":323,"column_start":1,"column_end":4}},{"value":"/ Calculate `2^x`, that is, 2 raised to the power `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2.rs","byte_start":100483,"byte_end":100539,"line_start":324,"line_end":324,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":473},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2f.rs","byte_start":105780,"byte_end":105785,"line_start":77,"line_end":77,"column_start":8,"column_end":13},"name":"exp2f","qualname":"::math::exp2f::exp2f","value":"pub fn exp2f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base 2 (f32)","sig":null,"attributes":[{"value":"/ Exponential, base 2 (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2f.rs","byte_start":105622,"byte_end":105651,"line_start":73,"line_end":73,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2f.rs","byte_start":105652,"byte_end":105655,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ Calculate `2^x`, that is, 2 raised to the power `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/exp2f.rs","byte_start":105656,"byte_end":105712,"line_start":75,"line_end":75,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":485},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expf.rs","byte_start":108759,"byte_end":108763,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"expf","qualname":"::math::expf::expf","value":"pub fn expf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base *e* (f32)","sig":null,"attributes":[{"value":"/ Exponential, base *e* (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expf.rs","byte_start":108493,"byte_end":108524,"line_start":29,"line_end":29,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expf.rs","byte_start":108525,"byte_end":108528,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Calculate the exponential of `x`, that is, *e* raised to the power `x`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expf.rs","byte_start":108529,"byte_end":108603,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/ (where *e* is the base of the natural system of logarithms, approximately 2.71828).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expf.rs","byte_start":108604,"byte_end":108691,"line_start":32,"line_end":32,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":499},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":112163,"byte_end":112168,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"expm1","qualname":"::math::expm1::expm1","value":"pub fn expm1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base *e*, of x-1 (f64)","sig":null,"attributes":[{"value":"/ Exponential, base *e*, of x-1 (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111741,"byte_end":111780,"line_start":26,"line_end":26,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111781,"byte_end":111784,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Calculates the exponential of `x` and subtract 1, that is, *e* raised","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111785,"byte_end":111858,"line_start":28,"line_end":28,"column_start":1,"column_end":74}},{"value":"/ to the power `x` minus 1 (where *e* is the base of the natural","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111859,"byte_end":111925,"line_start":29,"line_end":29,"column_start":1,"column_end":67}},{"value":"/ system of logarithms, approximately 2.71828).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111926,"byte_end":111975,"line_start":30,"line_end":30,"column_start":1,"column_end":50}},{"value":"/ The result is accurate even for small values of `x`,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":111976,"byte_end":112032,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ where using `exp(x)-1` would lose many significant digits.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1.rs","byte_start":112033,"byte_end":112095,"line_start":32,"line_end":32,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":116361,"byte_end":116367,"line_start":36,"line_end":36,"column_start":8,"column_end":14},"name":"expm1f","qualname":"::math::expm1f::expm1f","value":"pub fn expm1f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Exponential, base *e*, of x-1 (f32)","sig":null,"attributes":[{"value":"/ Exponential, base *e*, of x-1 (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":115939,"byte_end":115978,"line_start":28,"line_end":28,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":115979,"byte_end":115982,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ Calculates the exponential of `x` and subtract 1, that is, *e* raised","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":115983,"byte_end":116056,"line_start":30,"line_end":30,"column_start":1,"column_end":74}},{"value":"/ to the power `x` minus 1 (where *e* is the base of the natural","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":116057,"byte_end":116123,"line_start":31,"line_end":31,"column_start":1,"column_end":67}},{"value":"/ system of logarithms, approximately 2.71828).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":116124,"byte_end":116173,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ The result is accurate even for small values of `x`,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":116174,"byte_end":116230,"line_start":33,"line_end":33,"column_start":1,"column_end":57}},{"value":"/ where using `exp(x)-1` would lose many significant digits.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/expm1f.rs","byte_start":116231,"byte_end":116293,"line_start":34,"line_end":34,"column_start":1,"column_end":63}}]},{"kind":"Function","id":{"krate":0,"index":512},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabs.rs","byte_start":119076,"byte_end":119080,"line_start":7,"line_end":7,"column_start":8,"column_end":12},"name":"fabs","qualname":"::math::fabs::fabs","value":"pub fn fabs(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Absolute value (magnitude) (f64)\n Calculates the absolute value (magnitude) of the argument `x`,\n by direct manipulation of the bit representation of `x`.\n","sig":null,"attributes":[{"value":"/ Absolute value (magnitude) (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabs.rs","byte_start":118844,"byte_end":118880,"line_start":3,"line_end":3,"column_start":1,"column_end":37}},{"value":"/ Calculates the absolute value (magnitude) of the argument `x`,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabs.rs","byte_start":118881,"byte_end":118947,"line_start":4,"line_end":4,"column_start":1,"column_end":67}},{"value":"/ by direct manipulation of the bit representation of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabs.rs","byte_start":118948,"byte_end":119008,"line_start":5,"line_end":5,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":514},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabsf.rs","byte_start":120250,"byte_end":120255,"line_start":5,"line_end":5,"column_start":8,"column_end":13},"name":"fabsf","qualname":"::math::fabsf::fabsf","value":"pub fn fabsf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Absolute value (magnitude) (f32)\n Calculates the absolute value (magnitude) of the argument `x`,\n by direct manipulation of the bit representation of `x`.\n","sig":null,"attributes":[{"value":"/ Absolute value (magnitude) (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabsf.rs","byte_start":120018,"byte_end":120054,"line_start":1,"line_end":1,"column_start":1,"column_end":37}},{"value":"/ Calculates the absolute value (magnitude) of the argument `x`,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabsf.rs","byte_start":120055,"byte_end":120121,"line_start":2,"line_end":2,"column_start":1,"column_end":67}},{"value":"/ by direct manipulation of the bit representation of `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fabsf.rs","byte_start":120122,"byte_end":120182,"line_start":3,"line_end":3,"column_start":1,"column_end":61}}]},{"kind":"Function","id":{"krate":0,"index":519},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121498,"byte_end":121502,"line_start":12,"line_end":12,"column_start":8,"column_end":12},"name":"fdim","qualname":"::math::fdim::fdim","value":"pub fn fdim(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Positive difference (f64)","sig":null,"attributes":[{"value":"/ Positive difference (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121210,"byte_end":121239,"line_start":3,"line_end":3,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121240,"byte_end":121243,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Determines the positive difference between arguments, returning:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121244,"byte_end":121312,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ * x - y\tif x > y, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121313,"byte_end":121337,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/ * +0\tif x <= y, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121338,"byte_end":121360,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/ * NAN\tif either argument is NAN.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121361,"byte_end":121397,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121398,"byte_end":121401,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A range error may occur.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdim.rs","byte_start":121402,"byte_end":121430,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":524},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121969,"byte_end":121974,"line_start":12,"line_end":12,"column_start":8,"column_end":13},"name":"fdimf","qualname":"::math::fdimf::fdimf","value":"pub fn fdimf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Positive difference (f32)","sig":null,"attributes":[{"value":"/ Positive difference (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121681,"byte_end":121710,"line_start":3,"line_end":3,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121711,"byte_end":121714,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Determines the positive difference between arguments, returning:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121715,"byte_end":121783,"line_start":5,"line_end":5,"column_start":1,"column_end":69}},{"value":"/ * x - y\tif x > y, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121784,"byte_end":121808,"line_start":6,"line_end":6,"column_start":1,"column_end":25}},{"value":"/ * +0\tif x <= y, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121809,"byte_end":121831,"line_start":7,"line_end":7,"column_start":1,"column_end":23}},{"value":"/ * NAN\tif either argument is NAN.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121832,"byte_end":121868,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121869,"byte_end":121872,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ A range error may occur.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fdimf.rs","byte_start":121873,"byte_end":121901,"line_start":10,"line_end":10,"column_start":1,"column_end":29}}]},{"kind":"Function","id":{"krate":0,"index":530},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floor.rs","byte_start":122336,"byte_end":122341,"line_start":9,"line_end":9,"column_start":8,"column_end":13},"name":"floor","qualname":"::math::floor::floor","value":"pub fn floor(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Floor (f64)","sig":null,"attributes":[{"value":"/ Floor (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floor.rs","byte_start":122192,"byte_end":122207,"line_start":5,"line_end":5,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floor.rs","byte_start":122208,"byte_end":122211,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ Finds the nearest integer less than or equal to `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floor.rs","byte_start":122212,"byte_end":122268,"line_start":7,"line_end":7,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":535},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floorf.rs","byte_start":123922,"byte_end":123928,"line_start":7,"line_end":7,"column_start":8,"column_end":14},"name":"floorf","qualname":"::math::floorf::floorf","value":"pub fn floorf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Floor (f32)","sig":null,"attributes":[{"value":"/ Floor (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floorf.rs","byte_start":123778,"byte_end":123793,"line_start":3,"line_end":3,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floorf.rs","byte_start":123794,"byte_end":123797,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ Finds the nearest integer less than or equal to `x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/floorf.rs","byte_start":123798,"byte_end":123854,"line_start":5,"line_end":5,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":554},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126781,"byte_end":126784,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fma","qualname":"::math::fma::fma","value":"pub fn fma(f64, f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":" Floating multiply add (f64)","sig":null,"attributes":[{"value":"/ Floating multiply add (f64)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126452,"byte_end":126483,"line_start":49,"line_end":49,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126484,"byte_end":126487,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Computes `(x*y)+z`, rounded as one ternary operation:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126488,"byte_end":126545,"line_start":51,"line_end":51,"column_start":1,"column_end":58}},{"value":"/ Computes the value (as if) to infinite precision and rounds once to the result format,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126546,"byte_end":126636,"line_start":52,"line_end":52,"column_start":1,"column_end":91}},{"value":"/ according to the rounding mode characterized by the value of FLT_ROUNDS.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fma.rs","byte_start":126637,"byte_end":126713,"line_start":53,"line_end":53,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":590},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133994,"byte_end":133998,"line_start":50,"line_end":50,"column_start":8,"column_end":12},"name":"fmaf","qualname":"::math::fmaf::fmaf","value":"pub fn fmaf(f32, f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":" Floating multiply add (f32)","sig":null,"attributes":[{"value":"/ Floating multiply add (f32)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133665,"byte_end":133696,"line_start":44,"line_end":44,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133697,"byte_end":133700,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ Computes `(x*y)+z`, rounded as one ternary operation:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133701,"byte_end":133758,"line_start":46,"line_end":46,"column_start":1,"column_end":58}},{"value":"/ Computes the value (as if) to infinite precision and rounds once to the result format,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133759,"byte_end":133849,"line_start":47,"line_end":47,"column_start":1,"column_end":91}},{"value":"/ according to the rounding mode characterized by the value of FLT_ROUNDS.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaf.rs","byte_start":133850,"byte_end":133926,"line_start":48,"line_end":48,"column_start":1,"column_end":77}}]},{"kind":"Function","id":{"krate":0,"index":592},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmax.rs","byte_start":135870,"byte_end":135874,"line_start":2,"line_end":2,"column_start":8,"column_end":12},"name":"fmax","qualname":"::math::fmax::fmax","value":"pub fn fmax(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":594},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmaxf.rs","byte_start":136642,"byte_end":136647,"line_start":2,"line_end":2,"column_start":8,"column_end":13},"name":"fmaxf","qualname":"::math::fmaxf::fmaxf","value":"pub fn fmaxf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":596},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmin.rs","byte_start":137415,"byte_end":137419,"line_start":2,"line_end":2,"column_start":8,"column_end":12},"name":"fmin","qualname":"::math::fmin::fmin","value":"pub fn fmin(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":598},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fminf.rs","byte_start":138187,"byte_end":138192,"line_start":2,"line_end":2,"column_start":8,"column_end":13},"name":"fminf","qualname":"::math::fminf::fminf","value":"pub fn fminf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":603},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmod.rs","byte_start":138976,"byte_end":138980,"line_start":4,"line_end":4,"column_start":8,"column_end":12},"name":"fmod","qualname":"::math::fmod::fmod","value":"pub fn fmod(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":611},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/fmodf.rs","byte_start":140629,"byte_end":140634,"line_start":5,"line_end":5,"column_start":8,"column_end":13},"name":"fmodf","qualname":"::math::fmodf::fmodf","value":"pub fn fmodf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":613},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/frexp.rs","byte_start":142188,"byte_end":142193,"line_start":1,"line_end":1,"column_start":8,"column_end":13},"name":"frexp","qualname":"::math::frexp::frexp","value":"pub fn frexp(f64) -> (f64, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/frexpf.rs","byte_start":142681,"byte_end":142687,"line_start":1,"line_end":1,"column_start":8,"column_end":14},"name":"frexpf","qualname":"::math::frexpf::frexpf","value":"pub fn frexpf(f32) -> (f32, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":625},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/hypot.rs","byte_start":143558,"byte_end":143563,"line_start":21,"line_end":21,"column_start":8,"column_end":13},"name":"hypot","qualname":"::math::hypot::hypot","value":"pub fn hypot(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":633},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/hypotf.rs","byte_start":145043,"byte_end":145049,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"hypotf","qualname":"::math::hypotf::hypotf","value":"pub fn hypotf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":637},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ilogb.rs","byte_start":146028,"byte_end":146033,"line_start":4,"line_end":4,"column_start":8,"column_end":13},"name":"ilogb","qualname":"::math::ilogb::ilogb","value":"pub fn ilogb(f64) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":641},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ilogbf.rs","byte_start":146695,"byte_end":146701,"line_start":4,"line_end":4,"column_start":8,"column_end":14},"name":"ilogbf","qualname":"::math::ilogbf::ilogbf","value":"pub fn ilogbf(f32) -> i32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":676},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j0.rs","byte_start":151460,"byte_end":151462,"line_start":112,"line_end":112,"column_start":8,"column_end":10},"name":"j0","qualname":"::math::j0::j0","value":"pub fn j0(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":688},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j0.rs","byte_start":153278,"byte_end":153280,"line_start":165,"line_end":165,"column_start":8,"column_end":10},"name":"y0","qualname":"::math::j0::y0","value":"pub fn y0(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":755},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j0f.rs","byte_start":164594,"byte_end":164597,"line_start":65,"line_end":65,"column_start":8,"column_end":11},"name":"j0f","qualname":"::math::j0f::j0f","value":"pub fn j0f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":767},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j0f.rs","byte_start":165941,"byte_end":165944,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"y0f","qualname":"::math::j0f::y0f","value":"pub fn y0f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":841},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j1.rs","byte_start":177518,"byte_end":177520,"line_start":116,"line_end":116,"column_start":8,"column_end":10},"name":"j1","qualname":"::math::j1::j1","value":"pub fn j1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":846},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j1.rs","byte_start":178891,"byte_end":178893,"line_start":161,"line_end":161,"column_start":8,"column_end":10},"name":"y1","qualname":"::math::j1::y1","value":"pub fn y1(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":914},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j1f.rs","byte_start":189951,"byte_end":189954,"line_start":66,"line_end":66,"column_start":8,"column_end":11},"name":"j1f","qualname":"::math::j1f::j1f","value":"pub fn j1f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":919},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/j1f.rs","byte_start":191047,"byte_end":191050,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"y1f","qualname":"::math::j1f::y1f","value":"pub fn y1f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":994},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/jn.rs","byte_start":199856,"byte_end":199858,"line_start":41,"line_end":41,"column_start":8,"column_end":10},"name":"jn","qualname":"::math::jn::jn","value":"pub fn jn(i32, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":995},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/jn.rs","byte_start":206436,"byte_end":206438,"line_start":254,"line_end":254,"column_start":8,"column_end":10},"name":"yn","qualname":"::math::jn::yn","value":"pub fn yn(i32, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1016},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/jnf.rs","byte_start":209120,"byte_end":209123,"line_start":18,"line_end":18,"column_start":8,"column_end":11},"name":"jnf","qualname":"::math::jnf::jnf","value":"pub fn jnf(i32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1017},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/jnf.rs","byte_start":214396,"byte_end":214399,"line_start":198,"line_end":198,"column_start":8,"column_end":11},"name":"ynf","qualname":"::math::jnf::ynf","value":"pub fn ynf(i32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1019},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ldexp.rs","byte_start":215548,"byte_end":215553,"line_start":2,"line_end":2,"column_start":8,"column_end":13},"name":"ldexp","qualname":"::math::ldexp::ldexp","value":"pub fn ldexp(f64, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1021},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/ldexpf.rs","byte_start":215673,"byte_end":215679,"line_start":2,"line_end":2,"column_start":8,"column_end":14},"name":"ldexpf","qualname":"::math::ldexpf::ldexpf","value":"pub fn ldexpf(f32, i32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1026},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/lgamma.rs","byte_start":215762,"byte_end":215768,"line_start":3,"line_end":3,"column_start":8,"column_end":14},"name":"lgamma","qualname":"::math::lgamma::lgamma","value":"pub fn lgamma(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1104},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/lgamma_r.rs","byte_start":224167,"byte_end":224175,"line_start":167,"line_end":167,"column_start":8,"column_end":16},"name":"lgamma_r","qualname":"::math::lgamma_r::lgamma_r","value":"pub fn lgamma_r(f64) -> (f64, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1109},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/lgammaf.rs","byte_start":228482,"byte_end":228489,"line_start":3,"line_end":3,"column_start":8,"column_end":15},"name":"lgammaf","qualname":"::math::lgammaf::lgammaf","value":"pub fn lgammaf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1187},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/lgammaf_r.rs","byte_start":232803,"byte_end":232812,"line_start":102,"line_end":102,"column_start":8,"column_end":17},"name":"lgammaf_r","qualname":"::math::lgammaf_r::lgammaf_r","value":"pub fn lgammaf_r(f32) -> (f32, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1198},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log.rs","byte_start":240271,"byte_end":240274,"line_start":74,"line_end":74,"column_start":8,"column_end":11},"name":"log","qualname":"::math::log::log","value":"pub fn log(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1214},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log10.rs","byte_start":243155,"byte_end":243160,"line_start":35,"line_end":35,"column_start":8,"column_end":13},"name":"log10","qualname":"::math::log10::log10","value":"pub fn log10(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1227},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log10f.rs","byte_start":246435,"byte_end":246441,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"log10f","qualname":"::math::log10f::log10f","value":"pub fn log10f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1241},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log1p.rs","byte_start":250667,"byte_end":250672,"line_start":69,"line_end":69,"column_start":8,"column_end":13},"name":"log1p","qualname":"::math::log1p::log1p","value":"pub fn log1p(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1252},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log1pf.rs","byte_start":253611,"byte_end":253617,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"log1pf","qualname":"::math::log1pf::log1pf","value":"pub fn log1pf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1266},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log2.rs","byte_start":256917,"byte_end":256921,"line_start":33,"line_end":33,"column_start":8,"column_end":12},"name":"log2","qualname":"::math::log2::log2","value":"pub fn log2(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1277},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/log2f.rs","byte_start":259710,"byte_end":259715,"line_start":27,"line_end":27,"column_start":8,"column_end":13},"name":"log2f","qualname":"::math::log2f::log2f","value":"pub fn log2f(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1285},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/logf.rs","byte_start":262121,"byte_end":262125,"line_start":25,"line_end":25,"column_start":8,"column_end":12},"name":"logf","qualname":"::math::logf::logf","value":"pub fn logf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1287},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/modf.rs","byte_start":263219,"byte_end":263223,"line_start":1,"line_end":1,"column_start":8,"column_end":12},"name":"modf","qualname":"::math::modf::modf","value":"pub fn modf(f64) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1289},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/modff.rs","byte_start":263950,"byte_end":263955,"line_start":1,"line_end":1,"column_start":8,"column_end":13},"name":"modff","qualname":"::math::modff::modff","value":"pub fn modff(f32) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1291},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/nextafter.rs","byte_start":264750,"byte_end":264759,"line_start":2,"line_end":2,"column_start":8,"column_end":17},"name":"nextafter","qualname":"::math::nextafter::nextafter","value":"pub fn nextafter(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1293},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/nextafterf.rs","byte_start":265637,"byte_end":265647,"line_start":2,"line_end":2,"column_start":8,"column_end":18},"name":"nextafterf","qualname":"::math::nextafterf::nextafterf","value":"pub fn nextafterf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1344},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/pow.rs","byte_start":271023,"byte_end":271026,"line_start":93,"line_end":93,"column_start":8,"column_end":11},"name":"pow","qualname":"::math::pow::pow","value":"pub fn pow(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1386},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/powf.rs","byte_start":289735,"byte_end":289739,"line_start":47,"line_end":47,"column_start":8,"column_end":12},"name":"powf","qualname":"::math::powf::powf","value":"pub fn powf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1388},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/remainder.rs","byte_start":297847,"byte_end":297856,"line_start":2,"line_end":2,"column_start":8,"column_end":17},"name":"remainder","qualname":"::math::remainder::remainder","value":"pub fn remainder(f64, f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1390},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/remainderf.rs","byte_start":298006,"byte_end":298016,"line_start":2,"line_end":2,"column_start":8,"column_end":18},"name":"remainderf","qualname":"::math::remainderf::remainderf","value":"pub fn remainderf(f32, f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1392},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/remquo.rs","byte_start":298167,"byte_end":298173,"line_start":2,"line_end":2,"column_start":8,"column_end":14},"name":"remquo","qualname":"::math::remquo::remquo","value":"pub fn remquo(f64, f64) -> (f64, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1394},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/remquof.rs","byte_start":300630,"byte_end":300637,"line_start":2,"line_end":2,"column_start":8,"column_end":15},"name":"remquof","qualname":"::math::remquof::remquof","value":"pub fn remquof(f32, f32) -> (f32, i32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1400},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/round.rs","byte_start":302846,"byte_end":302851,"line_start":6,"line_end":6,"column_start":8,"column_end":13},"name":"round","qualname":"::math::round::round","value":"pub fn round(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1406},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/roundf.rs","byte_start":303678,"byte_end":303684,"line_start":6,"line_end":6,"column_start":8,"column_end":14},"name":"roundf","qualname":"::math::roundf::roundf","value":"pub fn roundf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1408},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/scalbn.rs","byte_start":304426,"byte_end":304432,"line_start":2,"line_end":2,"column_start":8,"column_end":14},"name":"scalbn","qualname":"::math::scalbn::scalbn","value":"pub fn scalbn(f64, i32) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1410},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/scalbnf.rs","byte_start":305391,"byte_end":305398,"line_start":2,"line_end":2,"column_start":8,"column_end":15},"name":"scalbnf","qualname":"::math::scalbnf::scalbnf","value":"pub fn scalbnf(f32, i32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1422},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sin.rs","byte_start":307717,"byte_end":307720,"line_start":44,"line_end":44,"column_start":8,"column_end":11},"name":"sin","qualname":"::math::sin::sin","value":"pub fn sin(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1437},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sincos.rs","byte_start":309299,"byte_end":309305,"line_start":15,"line_end":15,"column_start":8,"column_end":14},"name":"sincos","qualname":"::math::sincos::sincos","value":"pub fn sincos(f64) -> (f64, f64)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1454},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sincosf.rs","byte_start":311375,"byte_end":311382,"line_start":26,"line_end":26,"column_start":8,"column_end":15},"name":"sincosf","qualname":"::math::sincosf::sincosf","value":"pub fn sincosf(f32) -> (f32, f32)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1473},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sinf.rs","byte_start":315831,"byte_end":315835,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"sinf","qualname":"::math::sinf::sinf","value":"pub fn sinf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1482},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sinh.rs","byte_start":317674,"byte_end":317678,"line_start":8,"line_end":8,"column_start":8,"column_end":12},"name":"sinh","qualname":"::math::sinh::sinh","value":"pub fn sinh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1490},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sinhf.rs","byte_start":318833,"byte_end":318838,"line_start":5,"line_end":5,"column_start":8,"column_end":13},"name":"sinhf","qualname":"::math::sinhf::sinhf","value":"pub fn sinhf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1495},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sqrt.rs","byte_start":322836,"byte_end":322840,"line_start":82,"line_end":82,"column_start":8,"column_end":12},"name":"sqrt","qualname":"::math::sqrt::sqrt","value":"pub fn sqrt(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1498},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/sqrtf.rs","byte_start":328846,"byte_end":328851,"line_start":17,"line_end":17,"column_start":8,"column_end":13},"name":"sqrtf","qualname":"::math::sqrtf::sqrtf","value":"pub fn sqrtf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1508},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tan.rs","byte_start":334076,"byte_end":334079,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"tan","qualname":"::math::tan::tan","value":"pub fn tan(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1524},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tanf.rs","byte_start":335810,"byte_end":335814,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"tanf","qualname":"::math::tanf::tanf","value":"pub fn tanf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1529},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tanh.rs","byte_start":337451,"byte_end":337455,"line_start":8,"line_end":8,"column_start":8,"column_end":12},"name":"tanh","qualname":"::math::tanh::tanh","value":"pub fn tanh(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1534},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tanhf.rs","byte_start":338662,"byte_end":338667,"line_start":4,"line_end":4,"column_start":8,"column_end":13},"name":"tanhf","qualname":"::math::tanhf::tanhf","value":"pub fn tanhf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1564},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tgamma.rs","byte_start":342940,"byte_end":342946,"line_start":133,"line_end":133,"column_start":8,"column_end":14},"name":"tgamma","qualname":"::math::tgamma::tgamma","value":"pub fn tgamma(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1569},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/tgammaf.rs","byte_start":344941,"byte_end":344948,"line_start":3,"line_end":3,"column_start":8,"column_end":15},"name":"tgammaf","qualname":"::math::tgammaf::tgammaf","value":"pub fn tgammaf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1574},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/trunc.rs","byte_start":345080,"byte_end":345085,"line_start":4,"line_end":4,"column_start":8,"column_end":13},"name":"trunc","qualname":"::math::trunc::trunc","value":"pub fn trunc(f64) -> f64","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1579},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/math/truncf.rs","byte_start":346043,"byte_end":346049,"line_start":4,"line_end":4,"column_start":8,"column_end":14},"name":"truncf","qualname":"::math::truncf::truncf","value":"pub fn truncf(f32) -> f32","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2089},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":612,"byte_end":616,"line_start":27,"line_end":27,"column_start":8,"column_end":12},"name":"_eqf","qualname":"::_eqf","value":"pub fn _eqf(f32, f32) -> Result<(), u32>","parent":null,"children":[],"decl_id":null,"docs":" Approximate equality with 1 ULP of tolerance\n","sig":null,"attributes":[{"value":"/ Approximate equality with 1 ULP of tolerance","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":531,"byte_end":579,"line_start":24,"line_end":24,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":595,"byte_end":604,"line_start":26,"line_end":26,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":2090},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":933,"byte_end":936,"line_start":43,"line_end":43,"column_start":8,"column_end":11},"name":"_eq","qualname":"::_eq","value":"pub fn _eq(f64, f64) -> Result<(), u64>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/libm-0.2.1/src/lib.rs","byte_start":916,"byte_end":925,"line_start":42,"line_end":42,"column_start":1,"column_end":10}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[]}