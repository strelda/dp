{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0","program":"/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","rawpointer","/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=20e2429884dbe14d","-C","extra-filename=-20e2429884dbe14d","--out-dir","/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","-L","dependency=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/librawpointer-20e2429884dbe14d.rmeta"},"prelude":{"crate_id":{"name":"rawpointer","disambiguator":[1511843138874150877,8446366201479112217]},"crate_root":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src","external_crates":[{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}}],"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":354,"byte_end":3000,"line_start":8,"line_end":118,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":354,"byte_end":3000,"line_start":8,"line_end":118,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":9},{"krate":0,"index":18},{"krate":0,"index":21}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":354,"byte_end":364,"line_start":8,"line_end":8,"column_start":1,"column_end":11}}]},{"kind":"Function","id":{"krate":0,"index":7},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":542,"byte_end":553,"line_start":15,"line_end":15,"column_start":8,"column_end":19},"name":"ptrdistance","qualname":"::ptrdistance","value":"pub fn ptrdistance<T>(*const T, *const T) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Return the number of elements of `T` from `start` to `end`.<br>\n Return the arithmetic difference if `T` is zero size.\n","sig":null,"attributes":[{"value":"/ Return the number of elements of `T` from `start` to `end`.<br>","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":391,"byte_end":458,"line_start":12,"line_end":12,"column_start":1,"column_end":68}},{"value":"/ Return the arithmetic difference if `T` is zero size.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":459,"byte_end":516,"line_start":13,"line_end":13,"column_start":1,"column_end":58}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":517,"byte_end":534,"line_start":14,"line_end":14,"column_start":1,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":9},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":820,"byte_end":830,"line_start":25,"line_end":25,"column_start":11,"column_end":21},"name":"PointerExt","qualname":"::PointerExt","value":"PointerExt: Copy","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17}],"decl_id":null,"docs":" Extension methods for raw pointers\n","sig":null,"attributes":[{"value":"/ Extension methods for raw pointers","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":771,"byte_end":809,"line_start":24,"line_end":24,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":10},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":854,"byte_end":860,"line_start":26,"line_end":26,"column_start":15,"column_end":21},"name":"offset","qualname":"::PointerExt::offset","value":"pub unsafe fn offset(Self, isize) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1036,"byte_end":1043,"line_start":32,"line_end":32,"column_start":15,"column_end":22},"name":"pre_inc","qualname":"::PointerExt::pre_inc","value":"pub unsafe fn pre_inc(&mut Self) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, and return its new value.","sig":null,"attributes":[{"value":"/ Increment the pointer by 1, and return its new value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":891,"byte_end":948,"line_start":28,"line_end":28,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":953,"byte_end":956,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ Equivalent to the C idiom `++ptr`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":961,"byte_end":999,"line_start":30,"line_end":30,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1004,"byte_end":1021,"line_start":31,"line_end":31,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":12},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1267,"byte_end":1275,"line_start":41,"line_end":41,"column_start":15,"column_end":23},"name":"post_inc","qualname":"::PointerExt::post_inc","value":"pub unsafe fn post_inc(&mut Self) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Increment the pointer by 1, but return its old value.","sig":null,"attributes":[{"value":"/ Increment the pointer by 1, but return its old value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1122,"byte_end":1179,"line_start":37,"line_end":37,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1184,"byte_end":1187,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ Equivalent to the C idiom `ptr++`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1192,"byte_end":1230,"line_start":39,"line_end":39,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1235,"byte_end":1252,"line_start":40,"line_end":40,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":13},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1530,"byte_end":1537,"line_start":51,"line_end":51,"column_start":15,"column_end":22},"name":"pre_dec","qualname":"::PointerExt::pre_dec","value":"pub unsafe fn pre_dec(&mut Self) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, and return its new value.","sig":null,"attributes":[{"value":"/ Decrement the pointer by 1, and return its new value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1385,"byte_end":1442,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1447,"byte_end":1450,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Equivalent to the C idiom `--ptr`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1455,"byte_end":1493,"line_start":49,"line_end":49,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1498,"byte_end":1515,"line_start":50,"line_end":50,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":14},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1762,"byte_end":1770,"line_start":60,"line_end":60,"column_start":15,"column_end":23},"name":"post_dec","qualname":"::PointerExt::post_dec","value":"pub unsafe fn post_dec(&mut Self) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Decrement the pointer by 1, but return its old value.","sig":null,"attributes":[{"value":"/ Decrement the pointer by 1, but return its old value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1617,"byte_end":1674,"line_start":56,"line_end":56,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1679,"byte_end":1682,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Equivalent to the C idiom `ptr--`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1687,"byte_end":1725,"line_start":58,"line_end":58,"column_start":5,"column_end":43}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1730,"byte_end":1747,"line_start":59,"line_end":59,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":15},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1936,"byte_end":1939,"line_start":68,"line_end":68,"column_start":15,"column_end":18},"name":"inc","qualname":"::PointerExt::inc","value":"pub unsafe fn inc(&mut Self)","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Increment by 1\n","sig":null,"attributes":[{"value":"/ Increment by 1","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1881,"byte_end":1899,"line_start":66,"line_end":66,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1904,"byte_end":1921,"line_start":67,"line_end":67,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":16},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":2051,"byte_end":2054,"line_start":74,"line_end":74,"column_start":15,"column_end":18},"name":"dec","qualname":"::PointerExt::dec","value":"pub unsafe fn dec(&mut Self)","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Decrement by 1\n","sig":null,"attributes":[{"value":"/ Decrement by 1","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":1996,"byte_end":2014,"line_start":72,"line_end":72,"column_start":5,"column_end":23}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":2019,"byte_end":2036,"line_start":73,"line_end":73,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":2201,"byte_end":2214,"line_start":80,"line_end":80,"column_start":15,"column_end":28},"name":"stride_offset","qualname":"::PointerExt::stride_offset","value":"pub unsafe fn stride_offset(Self, isize, usize) -> Self","parent":{"krate":0,"index":9},"children":[],"decl_id":null,"docs":" Offset the pointer by `s` multiplied by `index`.\n","sig":null,"attributes":[{"value":"/ Offset the pointer by `s` multiplied by `index`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":2112,"byte_end":2164,"line_start":78,"line_end":78,"column_start":5,"column_end":57}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":2169,"byte_end":2186,"line_start":79,"line_end":79,"column_start":5,"column_end":22}}]}],"impls":[],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/rawpointer-0.1.0/src/lib.rs","byte_start":833,"byte_end":837,"line_start":25,"line_end":25,"column_start":24,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2863},"to":{"krate":0,"index":9}}]}