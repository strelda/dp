{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0","program":"/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","nalgebra","--edition=2018","/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"matrixmultiply\"","--cfg","feature=\"rand_distr\"","--cfg","feature=\"std\"","-C","metadata=b5192a64d2a4e31b","-C","extra-filename=-b5192a64d2a4e31b","--out-dir","/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","-L","dependency=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps","--extern","alga=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libalga-a403c91386e16493.rmeta","--extern","approx=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libapprox-8166b3ebffa2b785.rmeta","--extern","generic_array=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libgeneric_array-a5bbfaa4fc14dcee.rmeta","--extern","matrixmultiply=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libmatrixmultiply-ad46383a811f536f.rmeta","--extern","num_complex=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libnum_complex-b6580dc0ac868a73.rmeta","--extern","num_rational=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libnum_rational-b6a5f70a8e0a203e.rmeta","--extern","num_traits=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libnum_traits-36945435b346d9c6.rmeta","--extern","rand=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/librand-6e7a03f66cbf5f8c.rmeta","--extern","rand_distr=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/librand_distr-4361ade7ae5449b3.rmeta","--extern","typenum=/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libtypenum-8fa0e6bbb9428c5d.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/strelda/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/strelda/Documents/mff/dp/code/spectrum_degeneracy/target/rls/debug/deps/libnalgebra-b5192a64d2a4e31b.rmeta"},"prelude":{"crate_id":{"name":"nalgebra","disambiguator":[351945538298687026,7972293810524133613]},"crate_root":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src","external_crates":[{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[15256637969148649584,12170509131058075833]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[2572959971889902175,17506693968225989007]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[7380289047210505863,13821127130725723065]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[15494144285296940423,1517275930380298805]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[16074686111301742862,11174094882134223101]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[9848143689052418189,5596786287495938678]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4765876764407181064,11122159180720543906]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[3249135693812064660,5763443684941168569]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[17048817722375060837,16920886256309599893]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[13552797903376776722,10482089333731059857]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[5989449439605467183,7256304997069434828]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[13279369789493161905,12463804053127379464]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":13,"id":{"name":"addr2line","disambiguator":[295047501211602818,3843164955111373824]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":14,"id":{"name":"gimli","disambiguator":[14781020588812023641,7393321088923443539]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":15,"id":{"name":"object","disambiguator":[1927264790928947756,6617054577979570835]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":16,"id":{"name":"miniz_oxide","disambiguator":[7597657085106642381,11470551509849691989]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":17,"id":{"name":"adler","disambiguator":[2355022556203982070,155364045674250901]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":18,"id":{"name":"panic_unwind","disambiguator":[3046834347757213021,4625500188193743608]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":19,"id":{"name":"approx","disambiguator":[5818759019776068413,2572251874152357256]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":20,"id":{"name":"num_traits","disambiguator":[468258127332996008,10301193667755463888]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":21,"id":{"name":"generic_array","disambiguator":[12079527779217415778,13083402877010744411]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":22,"id":{"name":"typenum","disambiguator":[6578675967236591406,12581686752636525447]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":23,"id":{"name":"matrixmultiply","disambiguator":[15045354039041294955,10350935483844554325]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":24,"id":{"name":"rawpointer","disambiguator":[12497493122326690977,13825836558626677164]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":25,"id":{"name":"num_complex","disambiguator":[17872560142149014032,10156406315603362374]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":26,"id":{"name":"num_rational","disambiguator":[8892350839030283478,5594005860922181052]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":27,"id":{"name":"num_integer","disambiguator":[2148939669658638950,11721986914887954930]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":28,"id":{"name":"rand","disambiguator":[17561839813816711879,16031214908450619867]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":29,"id":{"name":"rand_core","disambiguator":[8770168004857400430,14733887116596971414]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":30,"id":{"name":"getrandom","disambiguator":[7228635107424616051,4912745335246501796]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":31,"id":{"name":"cfg_if","disambiguator":[663853888918535240,12010312547204163862]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":32,"id":{"name":"libc","disambiguator":[6239922692478618424,13891686025122525393]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":33,"id":{"name":"rand_chacha","disambiguator":[14943605398771928436,8087151095102497018]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":34,"id":{"name":"ppv_lite86","disambiguator":[16342140534606003648,15606045994417953711]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":35,"id":{"name":"rand_distr","disambiguator":[3825571668849149885,11332838202296284782]}},{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","num":36,"id":{"name":"alga","disambiguator":[3324915885725225395,1611465457281717452]}}],"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":0,"byte_end":20130,"line_start":1,"line_end":730,"column_start":1,"column_end":2}},"imports":[{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20793,"byte_end":20794,"line_start":38,"line_end":38,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Vector, RowVector, MatrixSum, Matrix, VectorSum, SquareMatrix","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20818,"byte_end":20819,"line_start":39,"line_end":39,"column_start":23,"column_end":24},"alias_span":null,"name":"*","value":"Scalar","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20841,"byte_end":20842,"line_start":40,"line_end":40,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Unit","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20864,"byte_end":20865,"line_start":41,"line_end":41,"column_start":21,"column_end":22},"alias_span":null,"name":"*","value":"Norm","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20901,"byte_end":20902,"line_start":43,"line_end":43,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"DefaultAllocator","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20929,"byte_end":20930,"line_start":44,"line_end":44,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"DimSub, DimName, DimDiff, Dim, Dynamic, U1","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20954,"byte_end":20955,"line_start":46,"line_end":46,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"MatrixMN, Vector2, Matrix2, Vector4, MatrixN, Vector1, Matrix4, Matrix2x3, Vector3, VectorN, RowVectorN, Matrix3, DMatrix","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20984,"byte_end":20985,"line_start":47,"line_end":47,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"VectorSliceN, MatrixSliceMN, DVectorSlice, MatrixSliceMutMN","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":21016,"byte_end":21017,"line_start":48,"line_end":48,"column_start":30,"column_end":31},"alias_span":null,"name":"*","value":"ArrayStorage","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":21047,"byte_end":21048,"line_start":49,"line_end":49,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"MatrixSliceMut, SliceStorageMut, MatrixSlice, SliceStorage","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":21125,"byte_end":21126,"line_start":51,"line_end":51,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"VecStorage","parent":{"krate":0,"index":13}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":485983,"byte_end":485984,"line_start":71,"line_end":71,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Point","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486013,"byte_end":486014,"line_start":72,"line_end":72,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Point3, Point2","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486041,"byte_end":486042,"line_start":74,"line_end":74,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Rotation","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486074,"byte_end":486075,"line_start":75,"line_end":75,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"Rotation3, Rotation2","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486104,"byte_end":486105,"line_start":77,"line_end":77,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Quaternion, UnitQuaternion","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486136,"byte_end":486137,"line_start":79,"line_end":79,"column_start":29,"column_end":30},"alias_span":null,"name":"*","value":"UnitComplex","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486167,"byte_end":486168,"line_start":81,"line_end":81,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"Translation","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486203,"byte_end":486204,"line_start":82,"line_end":82,"column_start":34,"column_end":35},"alias_span":null,"name":"*","value":"Translation3, Translation2","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486231,"byte_end":486232,"line_start":84,"line_end":84,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"Isometry","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486264,"byte_end":486265,"line_start":85,"line_end":85,"column_start":31,"column_end":32},"alias_span":null,"name":"*","value":"IsometryMatrix3","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486294,"byte_end":486295,"line_start":87,"line_end":87,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Similarity","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486329,"byte_end":486330,"line_start":88,"line_end":88,"column_start":33,"column_end":34},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486358,"byte_end":486359,"line_start":90,"line_end":90,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"TGeneral, Transform, TCategoryMul, TCategory, SuperTCategoryOf, TProjective, SubTCategoryOf, TAffine","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486392,"byte_end":486393,"line_start":91,"line_end":91,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"Projective3","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486422,"byte_end":486423,"line_start":93,"line_end":93,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Reflection","parent":{"krate":0,"index":4929}},{"kind":"Use","ref_id":{"krate":0,"index":9965},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486454,"byte_end":486467,"line_start":95,"line_end":95,"column_start":29,"column_end":42},"alias_span":null,"name":"Orthographic3","value":"","parent":{"krate":0,"index":4929}},{"kind":"Use","ref_id":{"krate":0,"index":10069},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":486496,"byte_end":486508,"line_start":96,"line_end":96,"column_start":28,"column_end":40},"alias_span":null,"name":"Perspective3","value":"","parent":{"krate":0,"index":4929}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988333,"byte_end":988334,"line_start":26,"line_end":26,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Bidiagonal","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988360,"byte_end":988361,"line_start":27,"line_end":27,"column_start":25,"column_end":26},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988390,"byte_end":988391,"line_start":28,"line_end":28,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988419,"byte_end":988420,"line_start":29,"line_end":29,"column_start":27,"column_end":28},"alias_span":null,"name":"*","value":"Hessenberg","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988440,"byte_end":988441,"line_start":30,"line_end":30,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"LU","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988479,"byte_end":988480,"line_start":31,"line_end":31,"column_start":37,"column_end":38},"alias_span":null,"name":"*","value":"PermutationSequence","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988500,"byte_end":988501,"line_start":32,"line_end":32,"column_start":19,"column_end":20},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988524,"byte_end":988525,"line_start":33,"line_end":33,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988546,"byte_end":988547,"line_start":34,"line_end":34,"column_start":20,"column_end":21},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988580,"byte_end":988581,"line_start":35,"line_end":35,"column_start":32,"column_end":33},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988620,"byte_end":988621,"line_start":36,"line_end":36,"column_start":38,"column_end":39},"alias_span":null,"name":"*","value":"SymmetricTridiagonal","parent":{"krate":0,"index":10138}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988650,"byte_end":988651,"line_start":37,"line_end":37,"column_start":28,"column_end":29},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":10138}},{"kind":"Use","ref_id":{"krate":0,"index":13},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4652,"byte_end":4656,"line_start":148,"line_end":148,"column_start":9,"column_end":13},"alias_span":null,"name":"core","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4687,"byte_end":4688,"line_start":149,"line_end":149,"column_start":22,"column_end":23},"alias_span":null,"name":"*","value":"Norm, VectorSliceN, Matrix, Dim, DefaultAllocator, constraint, Scalar, U1, dimension, RowVectorN, storage, allocator, VectorN, Vector","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4715,"byte_end":4716,"line_start":150,"line_end":150,"column_start":26,"column_end":27},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4741,"byte_end":4742,"line_start":151,"line_end":151,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1830},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5175,"byte_end":5177,"line_start":165,"line_end":165,"column_start":25,"column_end":27},"alias_span":null,"name":"Id","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":771},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5179,"byte_end":5188,"line_start":165,"line_end":165,"column_start":29,"column_end":38},"alias_span":null,"name":"RealField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":290},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5190,"byte_end":5202,"line_start":165,"line_end":165,"column_start":40,"column_end":52},"alias_span":null,"name":"ComplexField","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":36,"index":1104},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5249,"byte_end":5253,"line_start":167,"line_end":167,"column_start":24,"column_end":28},"alias_span":null,"name":"Real","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":25,"index":545},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5276,"byte_end":5283,"line_start":168,"line_end":168,"column_start":22,"column_end":29},"alias_span":null,"name":"Complex","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":0,"byte_end":20130,"line_start":1,"line_end":730,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":4929},{"krate":0,"index":10138},{"krate":0,"index":11525},{"krate":0,"index":11528},{"krate":0,"index":11529},{"krate":0,"index":11530},{"krate":0,"index":11531},{"krate":0,"index":11532},{"krate":0,"index":11535},{"krate":0,"index":11538},{"krate":0,"index":11539},{"krate":0,"index":11541},{"krate":0,"index":11542},{"krate":0,"index":11543},{"krate":0,"index":11545},{"krate":0,"index":11548},{"krate":0,"index":11551},{"krate":0,"index":11554},{"krate":0,"index":11557},{"krate":0,"index":11560},{"krate":0,"index":11563},{"krate":0,"index":11564},{"krate":0,"index":11566},{"krate":0,"index":11569},{"krate":0,"index":11572},{"krate":0,"index":11573},{"krate":0,"index":11576},{"krate":0,"index":11579},{"krate":0,"index":11582},{"krate":0,"index":11585},{"krate":0,"index":11588},{"krate":0,"index":11589},{"krate":0,"index":11592},{"krate":0,"index":11595},{"krate":0,"index":11598},{"krate":0,"index":11601},{"krate":0,"index":11604},{"krate":0,"index":11605},{"krate":0,"index":11607},{"krate":0,"index":11609},{"krate":0,"index":11611},{"krate":0,"index":11613},{"krate":0,"index":11615},{"krate":0,"index":11617},{"krate":0,"index":11619},{"krate":0,"index":11621},{"krate":0,"index":11623},{"krate":0,"index":11625},{"krate":0,"index":11627},{"krate":0,"index":11629},{"krate":0,"index":11631},{"krate":0,"index":11633},{"krate":0,"index":11635},{"krate":0,"index":11637},{"krate":0,"index":11639},{"krate":0,"index":11642},{"krate":0,"index":11645},{"krate":0,"index":11648},{"krate":0,"index":11651},{"krate":0,"index":11653},{"krate":0,"index":11655},{"krate":0,"index":11657},{"krate":0,"index":11659},{"krate":0,"index":11661},{"krate":0,"index":11663},{"krate":0,"index":11665},{"krate":0,"index":11667},{"krate":0,"index":11669},{"krate":0,"index":11671},{"krate":0,"index":11673},{"krate":0,"index":11675},{"krate":0,"index":11677},{"krate":0,"index":11680},{"krate":0,"index":11683},{"krate":0,"index":11686},{"krate":0,"index":11689},{"krate":0,"index":11692},{"krate":0,"index":11695}],"decl_id":null,"docs":"# nalgebra","sig":null,"attributes":[{"value":"*\n# nalgebra\n\n**nalgebra** is a linear algebra library written for Rust targeting:\n\n* General-purpose linear algebra (still lacks a lot of features…)\n* Real-time computer graphics.\n* Real-time computer physics.\n\n## Using **nalgebra**\nYou will need the last stable build of the [rust compiler](https://www.rust-lang.org)\nand the official package manager: [cargo](https://github.com/rust-lang/cargo).\n\nSimply add the following to your `Cargo.toml` file:\n\n```.ignore\n[dependencies]\nnalgebra = \"0.18\"\n```\n\n\nMost useful functionalities of **nalgebra** are grouped in the root module `nalgebra::`.\n\nHowever, the recommended way to use **nalgebra** is to import types and traits\nexplicitly, and call free-functions using the `na::` prefix:\n\n```.rust\n#[macro_use]\nextern crate approx; // For the macro relative_eq!\nextern crate nalgebra as na;\nuse na::{Vector3, Rotation3};\n\nfn main() {\n    let axis  = Vector3::x_axis();\n    let angle = 1.57;\n    let b     = Rotation3::from_axis_angle(&axis, angle);\n\n    relative_eq!(b.axis().unwrap(), axis);\n    relative_eq!(b.angle(), angle);\n}\n```\n\n\n## Features\n**nalgebra** is meant to be a general-purpose, low-dimensional, linear algebra library, with\nan optimized set of tools for computer graphics and physics. Those features include:\n\n* A single parametrizable type `Matrix` for vectors, (square or rectangular) matrices, and slices\n  with dimensions known either at compile-time (using type-level integers) or at runtime.\n* Matrices and vectors with compile-time sizes are statically allocated while dynamic ones are\n  allocated on the heap.\n* Convenient aliases for low-dimensional matrices and vectors: `Vector1` to `Vector6` and\n  `Matrix1x1` to `Matrix6x6`, including rectangular matrices like `Matrix2x5`.\n* Points sizes known at compile time, and convenience aliases:: `Point1` to `Point6`.\n* Translation (seen as a transformation that composes by multiplication): `Translation2`,\n  `Translation3`.\n* Rotation matrices: `Rotation2`, `Rotation3`.\n* Quaternions: `Quaternion`, `UnitQuaternion` (for 3D rotation).\n* Unit complex numbers can be used for 2D rotation: `UnitComplex`.\n* Algebraic entities with a norm equal to one: `Unit<T>`, e.g., `Unit<Vector3<f32>>`.\n* Isometries (translation ⨯ rotation): `Isometry2`, `Isometry3`\n* Similarity transformations (translation ⨯ rotation ⨯ uniform scale): `Similarity2`, `Similarity3`.\n* Affine transformations stored as an homogeneous matrix: `Affine2`, `Affine3`.\n* Projective (i.e. invertible) transformations stored as an homogeneous matrix: `Projective2`,\n  `Projective3`.\n* General transformations that does not have to be invertible, stored as an homogeneous matrix:\n  `Transform2`, `Transform3`.\n* 3D projections for computer graphics: `Perspective3`, `Orthographic3`.\n* Matrix factorizations: `Cholesky`, `QR`, `LU`, `FullPivLU`, `SVD`, `Schur`, `Hessenberg`, `SymmetricEigen`.\n* Insertion and removal of rows of columns of a matrix.\n* Implements traits from the [alga](https://crates.io/crates/alga) crate for\n  generic programming.\n*/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":0,"byte_end":3043,"line_start":1,"line_end":73,"column_start":1,"column_end":3}},{"value":"deny(non_camel_case_types)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3094,"byte_end":3124,"line_start":79,"line_end":79,"column_start":1,"column_end":31}},{"value":"deny(unused_parens)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3125,"byte_end":3148,"line_start":80,"line_end":80,"column_start":1,"column_end":24}},{"value":"deny(non_upper_case_globals)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3149,"byte_end":3181,"line_start":81,"line_end":81,"column_start":1,"column_end":33}},{"value":"deny(unused_qualifications)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3182,"byte_end":3213,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"deny(unused_results)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3214,"byte_end":3238,"line_start":83,"line_end":83,"column_start":1,"column_end":25}},{"value":"deny(missing_docs)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":3239,"byte_end":3261,"line_start":84,"line_end":84,"column_start":1,"column_end":23}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"base","qualname":"::base","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":86},{"krate":0,"index":394},{"krate":0,"index":444},{"krate":0,"index":490},{"krate":0,"index":605},{"krate":0,"index":770},{"krate":0,"index":921},{"krate":0,"index":1299},{"krate":0,"index":1385},{"krate":0,"index":1536},{"krate":0,"index":2167},{"krate":0,"index":2323},{"krate":0,"index":2401},{"krate":0,"index":2594},{"krate":0,"index":2662},{"krate":0,"index":2893},{"krate":0,"index":3111},{"krate":0,"index":3288},{"krate":0,"index":3820},{"krate":0,"index":4034},{"krate":0,"index":4180},{"krate":0,"index":4379},{"krate":0,"index":4509},{"krate":0,"index":4579},{"krate":0,"index":4594},{"krate":0,"index":4625},{"krate":0,"index":4682},{"krate":0,"index":4761},{"krate":0,"index":4899},{"krate":0,"index":4918},{"krate":0,"index":4919},{"krate":0,"index":4920},{"krate":0,"index":4921},{"krate":0,"index":4922},{"krate":0,"index":4923},{"krate":0,"index":4924},{"krate":0,"index":4925},{"krate":0,"index":4926},{"krate":0,"index":4927},{"krate":0,"index":4928}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for vector and matrix computations.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for vector and matrix computations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20132,"byte_end":20227,"line_start":1,"line_end":1,"column_start":1,"column_end":96}}]},{"kind":"Mod","id":{"krate":0,"index":14},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"allocator","qualname":"::base::allocator","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","parent":null,"children":[{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":33},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":39},{"krate":0,"index":40},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":53},{"krate":0,"index":60},{"krate":0,"index":63},{"krate":0,"index":66},{"krate":0,"index":72},{"krate":0,"index":78},{"krate":0,"index":82}],"decl_id":null,"docs":" Abstract definition of a matrix data storage allocator.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage allocator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21129,"byte_end":21188,"line_start":1,"line_end":1,"column_start":1,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":45},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21859,"byte_end":21868,"line_start":19,"line_end":19,"column_start":11,"column_end":20},"name":"Allocator","qualname":"::base::allocator::Allocator","value":"Allocator<N: Scalar, R: Dim, C: Dim = U1>: Any + Sized","parent":null,"children":[{"krate":0,"index":49},{"krate":0,"index":50},{"krate":0,"index":51}],"decl_id":null,"docs":" A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`\n elements of type `N`.","sig":null,"attributes":[{"value":"/ A matrix allocator of a memory buffer that may contain `R::to_usize() * C::to_usize()`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21430,"byte_end":21520,"line_start":10,"line_end":10,"column_start":1,"column_end":91}},{"value":"/ elements of type `N`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21521,"byte_end":21546,"line_start":11,"line_end":11,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21547,"byte_end":21550,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ An allocator is said to be:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21551,"byte_end":21582,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/   − static:  if `R` and `C` both implement `DimName`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21583,"byte_end":21642,"line_start":14,"line_end":14,"column_start":1,"column_end":58}},{"value":"/   − dynamic: if either one (or both) of `R` or `C` is equal to `Dynamic`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21643,"byte_end":21722,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21723,"byte_end":21726,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Every allocator must be both static and dynamic. Though not all implementations may share the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21727,"byte_end":21824,"line_start":17,"line_end":17,"column_start":1,"column_end":98}},{"value":"/ same `Buffer` type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21825,"byte_end":21848,"line_start":18,"line_end":18,"column_start":1,"column_end":24}}]},{"kind":"Type","id":{"krate":0,"index":49},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21984,"byte_end":21990,"line_start":21,"line_end":21,"column_start":10,"column_end":16},"name":"Buffer","qualname":"::base::allocator::Allocator::Buffer","value":"type Buffer: ContiguousStorageMut<N, R, C> + Clone;","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" The type of buffer this allocator can instanciate.\n","sig":null,"attributes":[{"value":"/ The type of buffer this allocator can instanciate.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21920,"byte_end":21974,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":50},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22149,"byte_end":22171,"line_start":24,"line_end":24,"column_start":15,"column_end":37},"name":"allocate_uninitialized","qualname":"::base::allocator::Allocator::allocate_uninitialized","value":"pub unsafe fn allocate_uninitialized(R, C) -> Self::Buffer","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Allocates a buffer with the given number of rows and columns without initializing its content.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer with the given number of rows and columns without initializing its content.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22036,"byte_end":22134,"line_start":23,"line_end":23,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":51},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22296,"byte_end":22318,"line_start":27,"line_end":27,"column_start":8,"column_end":30},"name":"allocate_from_iterator","qualname":"::base::allocator::Allocator::allocate_from_iterator","value":"pub fn allocate_from_iterator<I: IntoIterator<Item = N>>(R, C, I)\n-> Self::Buffer","parent":{"krate":0,"index":45},"children":[],"decl_id":null,"docs":" Allocates a buffer initialized with the content of the given iterator.\n","sig":null,"attributes":[{"value":"/ Allocates a buffer initialized with the content of the given iterator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22214,"byte_end":22288,"line_start":26,"line_end":26,"column_start":5,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":53},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22594,"byte_end":22605,"line_start":36,"line_end":36,"column_start":11,"column_end":22},"name":"Reallocator","qualname":"::base::allocator::Reallocator","value":"Reallocator<N: Scalar, RFrom: Dim, CFrom: Dim, RTo: Dim, CTo: Dim>: Allocator<N, RFrom, CFrom> + Allocator<N, RTo, CTo>","parent":null,"children":[{"krate":0,"index":59}],"decl_id":null,"docs":" A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×\n CFrom) elements to a smaller or larger size (RTo, CTo).\n","sig":null,"attributes":[{"value":"/ A matrix reallocator. Changes the size of the memory buffer that initially contains (RFrom ×","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22426,"byte_end":22523,"line_start":34,"line_end":34,"column_start":1,"column_end":97}},{"value":"/ CFrom) elements to a smaller or larger size (RTo, CTo).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22524,"byte_end":22583,"line_start":35,"line_end":35,"column_start":1,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":59},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23215,"byte_end":23230,"line_start":46,"line_end":46,"column_start":15,"column_end":30},"name":"reallocate_copy","qualname":"::base::allocator::Reallocator::reallocate_copy","value":"pub unsafe fn reallocate_copy(RTo, CTo,\n                              <Self as Allocator<N, RFrom, CFrom>>::Buffer)\n-> <Self as Allocator<N, RTo, CTo>>::Buffer","parent":{"krate":0,"index":53},"children":[],"decl_id":null,"docs":" Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer\n `buf`. Data stored by `buf` are linearly copied to the output:","sig":null,"attributes":[{"value":"/ Reallocates a buffer of shape `(RTo, CTo)`, possibly reusing a previously allocated buffer","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22724,"byte_end":22818,"line_start":39,"line_end":39,"column_start":5,"column_end":99}},{"value":"/ `buf`. Data stored by `buf` are linearly copied to the output:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22823,"byte_end":22889,"line_start":40,"line_end":40,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22894,"byte_end":22897,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ * The copy is performed as if both were just arrays (without a matrix structure).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22902,"byte_end":22987,"line_start":42,"line_end":42,"column_start":5,"column_end":90}},{"value":"/ * If `buf` is larger than the output size, then extra elements of `buf` are truncated.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22992,"byte_end":23082,"line_start":43,"line_end":43,"column_start":5,"column_end":95}},{"value":"/ * If `buf` is smaller than the output size, then extra elements of the output are left","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23087,"byte_end":23177,"line_start":44,"line_end":44,"column_start":5,"column_end":95}},{"value":"/ uninitialized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23182,"byte_end":23200,"line_start":45,"line_end":45,"column_start":5,"column_end":23}}]},{"kind":"Type","id":{"krate":0,"index":60},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23477,"byte_end":23487,"line_start":54,"line_end":54,"column_start":10,"column_end":20},"name":"SameShapeR","qualname":"::base::allocator::SameShapeR","value":"<ShapeConstraint as SameNumberOfRows<R1, R2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of rows of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23385,"byte_end":23467,"line_start":53,"line_end":53,"column_start":1,"column_end":83}}]},{"kind":"Type","id":{"krate":0,"index":63},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23657,"byte_end":23667,"line_start":57,"line_end":57,"column_start":10,"column_end":20},"name":"SameShapeC","qualname":"::base::allocator::SameShapeC","value":"<ShapeConstraint as SameNumberOfColumns<C1, C2>>::Representative","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of the result of a componentwise operation on two matrices.\n","sig":null,"attributes":[{"value":"/ The number of columns of the result of a componentwise operation on two matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23562,"byte_end":23647,"line_start":56,"line_end":56,"column_start":1,"column_end":86}}]},{"kind":"Trait","id":{"krate":0,"index":66},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23855,"byte_end":23873,"line_start":61,"line_end":61,"column_start":11,"column_end":29},"name":"SameShapeAllocator","qualname":"::base::allocator::SameShapeAllocator","value":"SameShapeAllocator<N, R1, C1, R2, C2>: Allocator<N, R1, C1> + Allocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows and columns to be respectively the same.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows and columns to be respectively the same.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23765,"byte_end":23844,"line_start":60,"line_end":60,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":78},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24545,"byte_end":24569,"line_start":86,"line_end":86,"column_start":11,"column_end":35},"name":"SameShapeVectorAllocator","qualname":"::base::allocator::SameShapeVectorAllocator","value":"SameShapeVectorAllocator<N, R1, R2>: Allocator<N, R1> + Allocator<N, SameShapeR<R1, R2>> +\nSameShapeAllocator<N, R1, U1, R2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Restricts the given number of rows to be equal.\n","sig":null,"attributes":[{"value":"/ Restricts the given number of rows to be equal.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24483,"byte_end":24534,"line_start":85,"line_end":85,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":184},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26182,"byte_end":26188,"line_start":32,"line_end":32,"column_start":12,"column_end":18},"name":"icamax","qualname":"<Vector<N, D, S>>::icamax","value":"pub fn icamax(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest complex or real absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest complex or real absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25718,"byte_end":25813,"line_start":19,"line_end":19,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25818,"byte_end":25821,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25826,"byte_end":25841,"line_start":21,"line_end":21,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25846,"byte_end":25849,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25854,"byte_end":25861,"line_start":23,"line_end":23,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25866,"byte_end":25897,"line_start":24,"line_end":24,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25902,"byte_end":25930,"line_start":25,"line_end":25,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25935,"byte_end":25966,"line_start":26,"line_end":26,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25971,"byte_end":25999,"line_start":27,"line_end":27,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(Complex::new(11.0, 3.0), Complex::new(-15.0, 0.0), Complex::new(13.0, 5.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26004,"byte_end":26107,"line_start":28,"line_end":28,"column_start":5,"column_end":108}},{"value":"/ assert_eq!(vec.icamax(), 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26112,"byte_end":26144,"line_start":29,"line_end":29,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26149,"byte_end":26156,"line_start":30,"line_end":30,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26161,"byte_end":26170,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":189},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26981,"byte_end":26987,"line_start":62,"line_end":62,"column_start":12,"column_end":18},"name":"argmax","qualname":"<Vector<N, D, S>>::argmax","value":"pub fn argmax(&Self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the largest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26694,"byte_end":26774,"line_start":52,"line_end":52,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26779,"byte_end":26782,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26787,"byte_end":26802,"line_start":54,"line_end":54,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26807,"byte_end":26810,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26815,"byte_end":26822,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26827,"byte_end":26855,"line_start":57,"line_end":57,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26860,"byte_end":26900,"line_start":58,"line_end":58,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmax(), (2, 13));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26905,"byte_end":26943,"line_start":59,"line_end":59,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26948,"byte_end":26955,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26960,"byte_end":26969,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":190},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27688,"byte_end":27692,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"name":"imax","qualname":"<Vector<N, D, S>>::imax","value":"pub fn imax(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27419,"byte_end":27489,"line_start":80,"line_end":80,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27494,"byte_end":27497,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27502,"byte_end":27517,"line_start":82,"line_end":82,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27522,"byte_end":27525,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27530,"byte_end":27537,"line_start":84,"line_end":84,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27542,"byte_end":27570,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27575,"byte_end":27615,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imax(), 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27620,"byte_end":27650,"line_start":87,"line_end":87,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27655,"byte_end":27662,"line_start":88,"line_end":88,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27667,"byte_end":27676,"line_start":89,"line_end":89,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":191},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28025,"byte_end":28030,"line_start":104,"line_end":104,"column_start":12,"column_end":17},"name":"iamax","qualname":"<Vector<N, D, S>>::iamax","value":"pub fn iamax(&Self) -> usize where N: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the largest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27746,"byte_end":27825,"line_start":94,"line_end":94,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27830,"byte_end":27833,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27838,"byte_end":27853,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27858,"byte_end":27861,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27866,"byte_end":27873,"line_start":98,"line_end":98,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27878,"byte_end":27906,"line_start":99,"line_end":99,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27911,"byte_end":27951,"line_start":100,"line_end":100,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamax(), 1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27956,"byte_end":27987,"line_start":101,"line_end":101,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":27992,"byte_end":27999,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28004,"byte_end":28013,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":192},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28770,"byte_end":28776,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"argmin","qualname":"<Vector<N, D, S>>::argmin","value":"pub fn argmin(&Self) -> (usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index and value of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index and value of the vector component with the smallest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28481,"byte_end":28562,"line_start":123,"line_end":123,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28567,"byte_end":28570,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28575,"byte_end":28590,"line_start":125,"line_end":125,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28595,"byte_end":28598,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28603,"byte_end":28610,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28615,"byte_end":28643,"line_start":128,"line_end":128,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28648,"byte_end":28688,"line_start":129,"line_end":129,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.argmin(), (1, -15));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28693,"byte_end":28732,"line_start":130,"line_end":130,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28737,"byte_end":28744,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":28749,"byte_end":28758,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":193},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29478,"byte_end":29482,"line_start":161,"line_end":161,"column_start":12,"column_end":16},"name":"imin","qualname":"<Vector<N, D, S>>::imin","value":"pub fn imin(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29208,"byte_end":29279,"line_start":151,"line_end":151,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29284,"byte_end":29287,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29292,"byte_end":29307,"line_start":153,"line_end":153,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29312,"byte_end":29315,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29320,"byte_end":29327,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29332,"byte_end":29360,"line_start":156,"line_end":156,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29365,"byte_end":29405,"line_start":157,"line_end":157,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.imin(), 1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29410,"byte_end":29440,"line_start":158,"line_end":158,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29445,"byte_end":29452,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29457,"byte_end":29466,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":194},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29816,"byte_end":29821,"line_start":175,"line_end":175,"column_start":12,"column_end":17},"name":"iamin","qualname":"<Vector<N, D, S>>::iamin","value":"pub fn iamin(&Self) -> usize where N: Signed","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the vector component with the smallest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the vector component with the smallest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29536,"byte_end":29616,"line_start":165,"line_end":165,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29621,"byte_end":29624,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29629,"byte_end":29644,"line_start":167,"line_end":167,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29649,"byte_end":29652,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29657,"byte_end":29664,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29669,"byte_end":29697,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/ let vec = Vector3::new(11, -15, 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29702,"byte_end":29742,"line_start":171,"line_end":171,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec.iamin(), 0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29747,"byte_end":29778,"line_start":172,"line_end":172,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29783,"byte_end":29790,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":29795,"byte_end":29804,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":200},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31006,"byte_end":31017,"line_start":211,"line_end":211,"column_start":12,"column_end":23},"name":"icamax_full","qualname":"<Matrix<N, R, C, S>>::icamax_full","value":"pub fn icamax_full(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30434,"byte_end":30513,"line_start":197,"line_end":197,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30518,"byte_end":30521,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30526,"byte_end":30541,"line_start":199,"line_end":199,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30546,"byte_end":30549,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30554,"byte_end":30561,"line_start":201,"line_end":201,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30566,"byte_end":30597,"line_start":202,"line_end":202,"column_start":5,"column_end":36}},{"value":"/ # extern crate nalgebra;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30602,"byte_end":30630,"line_start":203,"line_end":203,"column_start":5,"column_end":33}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30635,"byte_end":30666,"line_start":204,"line_end":204,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30671,"byte_end":30701,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(Complex::new(11.0, 1.0), Complex::new(-12.0, 2.0), Complex::new(13.0, 3.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30706,"byte_end":30810,"line_start":206,"line_end":206,"column_start":5,"column_end":109}},{"value":"/                          Complex::new(21.0, 43.0), Complex::new(22.0, 5.0), Complex::new(-23.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30815,"byte_end":30921,"line_start":207,"line_end":207,"column_start":5,"column_end":111}},{"value":"/ assert_eq!(mat.icamax_full(), (1, 0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30926,"byte_end":30968,"line_start":208,"line_end":208,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30973,"byte_end":30980,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30985,"byte_end":30994,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31989,"byte_end":31999,"line_start":245,"line_end":245,"column_start":12,"column_end":22},"name":"iamax_full","qualname":"<Matrix<N, R, C, S>>::iamax_full","value":"pub fn iamax_full(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the index of the matrix component with the largest absolute value.","sig":null,"attributes":[{"value":"/ Computes the index of the matrix component with the largest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31650,"byte_end":31729,"line_start":234,"line_end":234,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31734,"byte_end":31737,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31742,"byte_end":31757,"line_start":236,"line_end":236,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31762,"byte_end":31765,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31770,"byte_end":31777,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31782,"byte_end":31812,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, -12, 13,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31817,"byte_end":31858,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"/                          21, 22, -23);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31863,"byte_end":31905,"line_start":241,"line_end":241,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.iamax_full(), (1, 2));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31910,"byte_end":31951,"line_start":242,"line_end":242,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31956,"byte_end":31963,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31968,"byte_end":31977,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":217},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37714,"byte_end":37717,"line_start":393,"line_end":393,"column_start":12,"column_end":15},"name":"dot","qualname":"<Matrix<N, R, C, S>>::dot","value":"pub fn dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> + DimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":36806,"byte_end":36876,"line_start":369,"line_end":369,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":36881,"byte_end":36884,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.transpose() * rhs`. For the sesquilinear complex dot product, use","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":36889,"byte_end":36981,"line_start":371,"line_end":371,"column_start":5,"column_end":97}},{"value":"/ `self.dotc(rhs)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":36986,"byte_end":37007,"line_start":372,"line_end":372,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37012,"byte_end":37015,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37020,"byte_end":37106,"line_start":374,"line_end":374,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37111,"byte_end":37188,"line_start":375,"line_end":375,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37193,"byte_end":37196,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37201,"byte_end":37216,"line_start":377,"line_end":377,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37221,"byte_end":37224,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37229,"byte_end":37236,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix2x3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37241,"byte_end":37282,"line_start":380,"line_end":380,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37287,"byte_end":37330,"line_start":381,"line_end":381,"column_start":5,"column_end":48}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37335,"byte_end":37378,"line_start":382,"line_end":382,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(vec1.dot(&vec2), 1.4);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37383,"byte_end":37420,"line_start":383,"line_end":383,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37425,"byte_end":37428,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37433,"byte_end":37477,"line_start":385,"line_end":385,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37482,"byte_end":37527,"line_start":386,"line_end":386,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix2x3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37532,"byte_end":37576,"line_start":387,"line_end":387,"column_start":5,"column_end":49}},{"value":"/                           0.4, 0.5, 0.6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37581,"byte_end":37626,"line_start":388,"line_end":388,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(mat1.dot(&mat2), 9.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37631,"byte_end":37668,"line_start":389,"line_end":389,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37673,"byte_end":37680,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37685,"byte_end":37688,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37693,"byte_end":37702,"line_start":392,"line_end":392,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38832,"byte_end":38836,"line_start":421,"line_end":421,"column_start":12,"column_end":16},"name":"dotc","qualname":"<Matrix<N, R, C, S>>::dotc","value":"pub fn dotc<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nN: ComplexField, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> +\nDimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate-linear dot product between two vectors or matrices (seen as vectors).","sig":null,"attributes":[{"value":"/ The conjugate-linear dot product between two vectors or matrices (seen as vectors).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":37924,"byte_end":38011,"line_start":401,"line_end":401,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38016,"byte_end":38019,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ This is equal to `self.adjoint() * rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38024,"byte_end":38068,"line_start":403,"line_end":403,"column_start":5,"column_end":49}},{"value":"/ For real vectors, this is identical to `self.dot(&rhs)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38073,"byte_end":38133,"line_start":404,"line_end":404,"column_start":5,"column_end":65}},{"value":"/ Note that this is **not** the matrix multiplication as in, e.g., numpy. For matrix","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38138,"byte_end":38224,"line_start":405,"line_end":405,"column_start":5,"column_end":91}},{"value":"/ multiplication, use one of: `.gemm`, `.mul_to`, `.mul`, the `*` operator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38229,"byte_end":38306,"line_start":406,"line_end":406,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38311,"byte_end":38314,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38319,"byte_end":38334,"line_start":408,"line_end":408,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38339,"byte_end":38342,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38347,"byte_end":38354,"line_start":410,"line_end":410,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector2, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38359,"byte_end":38398,"line_start":411,"line_end":411,"column_start":5,"column_end":44}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38403,"byte_end":38479,"line_start":412,"line_end":412,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.4, 0.3), Complex::new(0.2, 0.1));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38484,"byte_end":38560,"line_start":413,"line_end":413,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(vec1.dotc(&vec2), Complex::new(2.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38565,"byte_end":38623,"line_start":414,"line_end":414,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38628,"byte_end":38631,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ // Note that for complex vectors, we generally have:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38636,"byte_end":38692,"line_start":416,"line_end":416,"column_start":5,"column_end":61}},{"value":"/ // vec1.dotc(&vec2) != vec2.dot(&vec2)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38697,"byte_end":38739,"line_start":417,"line_end":417,"column_start":5,"column_end":47}},{"value":"/ assert_ne!(vec1.dotc(&vec2), vec1.dot(&vec2));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38744,"byte_end":38794,"line_start":418,"line_end":418,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38799,"byte_end":38806,"line_start":419,"line_end":419,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":38811,"byte_end":38820,"line_start":420,"line_end":420,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39748,"byte_end":39754,"line_start":448,"line_end":448,"column_start":12,"column_end":18},"name":"tr_dot","qualname":"<Matrix<N, R, C, S>>::tr_dot","value":"pub fn tr_dot<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where\nSB: Storage<N, R2, C2>, ShapeConstraint: DimEq<C, R2> + DimEq<R, C2>","parent":null,"children":[],"decl_id":null,"docs":" The dot product between the transpose of `self` and `rhs`.","sig":null,"attributes":[{"value":"/ The dot product between the transpose of `self` and `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39102,"byte_end":39164,"line_start":430,"line_end":430,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39169,"byte_end":39172,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39177,"byte_end":39192,"line_start":432,"line_end":432,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39197,"byte_end":39200,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39205,"byte_end":39212,"line_start":434,"line_end":434,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, RowVector3, Matrix2x3, Matrix3x2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39217,"byte_end":39281,"line_start":435,"line_end":435,"column_start":5,"column_end":69}},{"value":"/ let vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39286,"byte_end":39329,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let vec2 = RowVector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39334,"byte_end":39380,"line_start":437,"line_end":437,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(vec1.tr_dot(&vec2), 1.4);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39385,"byte_end":39425,"line_start":438,"line_end":438,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39430,"byte_end":39433,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let mat1 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39438,"byte_end":39482,"line_start":440,"line_end":440,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39487,"byte_end":39532,"line_start":441,"line_end":441,"column_start":5,"column_end":50}},{"value":"/ let mat2 = Matrix3x2::new(0.1, 0.4,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39537,"byte_end":39576,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/                           0.2, 0.5,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39581,"byte_end":39620,"line_start":443,"line_end":443,"column_start":5,"column_end":44}},{"value":"/                           0.3, 0.6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39625,"byte_end":39665,"line_start":444,"line_end":444,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat1.tr_dot(&mat2), 9.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39670,"byte_end":39710,"line_start":445,"line_end":445,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39715,"byte_end":39722,"line_start":446,"line_end":446,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":39727,"byte_end":39736,"line_start":447,"line_end":447,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41466,"byte_end":41470,"line_start":509,"line_end":509,"column_start":12,"column_end":16},"name":"axpy","qualname":"<Vector<N, D, S>>::axpy","value":"pub fn axpy<D2: Dim, SB>(&mut Self, N, &Vector<N, D2, SB>, N) where\nSB: Storage<N, D2>, ShapeConstraint: DimEq<D, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = a * x + b * self`.","sig":null,"attributes":[{"value":"/ Computes `self = a * x + b * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41055,"byte_end":41094,"line_start":495,"line_end":495,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41099,"byte_end":41102,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ If `b` is zero, `self` is never read from.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41107,"byte_end":41153,"line_start":497,"line_end":497,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41158,"byte_end":41161,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41166,"byte_end":41181,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41186,"byte_end":41189,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41194,"byte_end":41201,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41206,"byte_end":41234,"line_start":502,"line_end":502,"column_start":5,"column_end":33}},{"value":"/ let mut vec1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41239,"byte_end":41286,"line_start":503,"line_end":503,"column_start":5,"column_end":52}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41291,"byte_end":41334,"line_start":504,"line_end":504,"column_start":5,"column_end":48}},{"value":"/ vec1.axpy(10.0, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41339,"byte_end":41371,"line_start":505,"line_end":505,"column_start":5,"column_end":37}},{"value":"/ assert_eq!(vec1, Vector3::new(6.0, 12.0, 18.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41376,"byte_end":41428,"line_start":506,"line_end":506,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41433,"byte_end":41440,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":41445,"byte_end":41454,"line_start":508,"line_end":508,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42622,"byte_end":42626,"line_start":546,"line_end":546,"column_start":12,"column_end":16},"name":"gemv","qualname":"<Vector<N, D, S>>::gemv","value":"pub fn gemv<R2: Dim, C2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, R2, C2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, R2> + AreMultipliable<R2, C2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42041,"byte_end":42132,"line_start":529,"line_end":529,"column_start":5,"column_end":96}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42137,"byte_end":42167,"line_start":530,"line_end":530,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42172,"byte_end":42175,"line_start":531,"line_end":531,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42180,"byte_end":42224,"line_start":532,"line_end":532,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42229,"byte_end":42232,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42237,"byte_end":42252,"line_start":534,"line_end":534,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42257,"byte_end":42260,"line_start":535,"line_end":535,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42265,"byte_end":42272,"line_start":536,"line_end":536,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42277,"byte_end":42316,"line_start":537,"line_end":537,"column_start":5,"column_end":44}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42321,"byte_end":42363,"line_start":538,"line_end":538,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42368,"byte_end":42406,"line_start":539,"line_end":539,"column_start":5,"column_end":43}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42411,"byte_end":42447,"line_start":540,"line_end":540,"column_start":5,"column_end":41}},{"value":"/                        3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42452,"byte_end":42489,"line_start":541,"line_end":541,"column_start":5,"column_end":42}},{"value":"/ vec1.gemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42494,"byte_end":42532,"line_start":542,"line_end":542,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 21.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42537,"byte_end":42584,"line_start":543,"line_end":543,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42589,"byte_end":42596,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":42601,"byte_end":42610,"line_start":545,"line_end":545,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":45714,"byte_end":45723,"line_start":648,"line_end":648,"column_start":12,"column_end":21},"name":"gemv_symm","qualname":"<Vector<N, D, S>>::gemv_symm","value":"pub fn gemv_symm<D2: Dim, D3: Dim, SB,\n                 SC>(&mut Self, N, &SquareMatrix<N, D2, SB>,\n                     &Vector<N, D3, SC>, N) where N: One,\nSB: Storage<N, D2, D2>, SC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.\n","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":45421,"byte_end":45514,"line_start":644,"line_end":644,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars. DEPRECATED: use `sygemv` instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":45519,"byte_end":45595,"line_start":645,"line_end":645,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":45600,"byte_end":45609,"line_start":646,"line_end":646,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `sygemv` to match the original BLAS terminology.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":45614,"byte_end":45702,"line_start":647,"line_end":647,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47312,"byte_end":47318,"line_start":692,"line_end":692,"column_start":12,"column_end":18},"name":"sygemv","qualname":"<Vector<N, D, S>>::sygemv","value":"pub fn sygemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: One, SB: Storage<N, D2, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<D, D2> + AreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is a **symmetric** matrix, `x` a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46090,"byte_end":46183,"line_start":663,"line_end":663,"column_start":5,"column_end":98}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46188,"byte_end":46230,"line_start":664,"line_end":664,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46235,"byte_end":46238,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ For hermitian matrices, use `.hegemv` instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46243,"byte_end":46293,"line_start":666,"line_end":666,"column_start":5,"column_end":55}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46298,"byte_end":46392,"line_start":667,"line_end":667,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46397,"byte_end":46443,"line_start":668,"line_end":668,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46448,"byte_end":46451,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46456,"byte_end":46471,"line_start":670,"line_end":670,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46476,"byte_end":46479,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46484,"byte_end":46491,"line_start":672,"line_end":672,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46496,"byte_end":46535,"line_start":673,"line_end":673,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 2.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46540,"byte_end":46576,"line_start":674,"line_end":674,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46581,"byte_end":46618,"line_start":675,"line_end":675,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46623,"byte_end":46665,"line_start":676,"line_end":676,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46670,"byte_end":46708,"line_start":677,"line_end":677,"column_start":5,"column_end":43}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46713,"byte_end":46753,"line_start":678,"line_end":678,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46758,"byte_end":46805,"line_start":679,"line_end":679,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46810,"byte_end":46813,"line_start":680,"line_end":680,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46818,"byte_end":46821,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46826,"byte_end":46904,"line_start":682,"line_end":682,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46909,"byte_end":46985,"line_start":683,"line_end":683,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":46990,"byte_end":47035,"line_start":684,"line_end":684,"column_start":5,"column_end":50}},{"value":"/ let mat = Matrix2::new(1.0, 9999999.9999999,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47040,"byte_end":47088,"line_start":685,"line_end":685,"column_start":5,"column_end":53}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47093,"byte_end":47130,"line_start":686,"line_end":686,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47135,"byte_end":47177,"line_start":687,"line_end":687,"column_start":5,"column_end":47}},{"value":"/ vec1.sygemv(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47182,"byte_end":47222,"line_start":688,"line_end":688,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(vec1, Vector2::new(10.0, 20.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47227,"byte_end":47274,"line_start":689,"line_end":689,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47279,"byte_end":47286,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47291,"byte_end":47300,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":264},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49404,"byte_end":49410,"line_start":737,"line_end":737,"column_start":12,"column_end":18},"name":"hegemv","qualname":"<Vector<N, D, S>>::hegemv","value":"pub fn hegemv<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &SquareMatrix<N, D2, SB>, &Vector<N, D3, SC>,\n                  N) where N: ComplexField, SB: Storage<N, D2, D2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, D2> +\nAreMultipliable<D2, D2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a\n vector, and `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * x + beta * self`, where `a` is an **hermitian** matrix, `x` a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47702,"byte_end":47796,"line_start":707,"line_end":707,"column_start":5,"column_end":99}},{"value":"/ vector, and `alpha, beta` two scalars.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47801,"byte_end":47843,"line_start":708,"line_end":708,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47848,"byte_end":47851,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. If `self` is read, only its lower-triangular part","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47856,"byte_end":47950,"line_start":710,"line_end":710,"column_start":5,"column_end":99}},{"value":"/ (including the diagonal) is actually read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":47955,"byte_end":48001,"line_start":711,"line_end":711,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48006,"byte_end":48009,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48014,"byte_end":48029,"line_start":713,"line_end":713,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48034,"byte_end":48037,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48042,"byte_end":48049,"line_start":715,"line_end":715,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48054,"byte_end":48102,"line_start":716,"line_end":716,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(2.0, -0.1),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48107,"byte_end":48182,"line_start":717,"line_end":717,"column_start":5,"column_end":80}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48187,"byte_end":48262,"line_start":718,"line_end":718,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48267,"byte_end":48347,"line_start":719,"line_end":719,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48352,"byte_end":48428,"line_start":720,"line_end":720,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48433,"byte_end":48513,"line_start":721,"line_end":721,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48518,"byte_end":48608,"line_start":722,"line_end":722,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48613,"byte_end":48616,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48621,"byte_end":48624,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ // The matrix upper-triangular elements can be garbage because it is never","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48629,"byte_end":48707,"line_start":725,"line_end":725,"column_start":5,"column_end":83}},{"value":"/ // read by this method. Therefore, it is not necessary for the caller to","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48712,"byte_end":48788,"line_start":726,"line_end":726,"column_start":5,"column_end":81}},{"value":"/ // fill the matrix struct upper-triangle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48793,"byte_end":48838,"line_start":727,"line_end":727,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48843,"byte_end":48846,"line_start":728,"line_end":728,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 0.0), Complex::new(99999999.9, 999999999.9),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48851,"byte_end":48940,"line_start":729,"line_end":729,"column_start":5,"column_end":94}},{"value":"/                        Complex::new(2.0, 1.0), Complex::new(4.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":48945,"byte_end":49020,"line_start":730,"line_end":730,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49025,"byte_end":49105,"line_start":731,"line_end":731,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49110,"byte_end":49186,"line_start":732,"line_end":732,"column_start":5,"column_end":81}},{"value":"/ vec1.sygemv(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49191,"byte_end":49271,"line_start":733,"line_end":733,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(vec1, Vector2::new(Complex::new(-48.0, 44.0), Complex::new(-75.0, 110.0)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49276,"byte_end":49366,"line_start":734,"line_end":734,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49371,"byte_end":49378,"line_start":735,"line_end":735,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":49383,"byte_end":49392,"line_start":736,"line_end":736,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51599,"byte_end":51606,"line_start":813,"line_end":813,"column_start":12,"column_end":19},"name":"gemv_tr","qualname":"<Vector<N, D, S>>::gemv_tr","value":"pub fn gemv_tr<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":50944,"byte_end":51047,"line_start":794,"line_end":794,"column_start":5,"column_end":108}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51052,"byte_end":51082,"line_start":795,"line_end":795,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51087,"byte_end":51090,"line_start":796,"line_end":796,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51095,"byte_end":51139,"line_start":797,"line_end":797,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51144,"byte_end":51147,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51152,"byte_end":51167,"line_start":799,"line_end":799,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51172,"byte_end":51175,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51180,"byte_end":51187,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51192,"byte_end":51231,"line_start":802,"line_end":802,"column_start":5,"column_end":44}},{"value":"/ let mat = Matrix2::new(1.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51236,"byte_end":51272,"line_start":803,"line_end":803,"column_start":5,"column_end":41}},{"value":"/                        2.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51277,"byte_end":51314,"line_start":804,"line_end":804,"column_start":5,"column_end":42}},{"value":"/ let mut vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51319,"byte_end":51361,"line_start":805,"line_end":805,"column_start":5,"column_end":47}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51366,"byte_end":51404,"line_start":806,"line_end":806,"column_start":5,"column_end":43}},{"value":"/ let expected = mat.transpose() * vec2 * 10.0 + vec1 * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51409,"byte_end":51471,"line_start":807,"line_end":807,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51476,"byte_end":51479,"line_start":808,"line_end":808,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_tr(10.0, &mat, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51484,"byte_end":51525,"line_start":809,"line_end":809,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51530,"byte_end":51561,"line_start":810,"line_end":810,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51566,"byte_end":51573,"line_start":811,"line_end":811,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51578,"byte_end":51587,"line_start":812,"line_end":812,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52949,"byte_end":52956,"line_start":848,"line_end":848,"column_start":12,"column_end":19},"name":"gemv_ad","qualname":"<Vector<N, D, S>>::gemv_ad","value":"pub fn gemv_ad<R2: Dim, C2: Dim, D3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Vector<N, D3, SC>,\n                   N) where N: ComplexField, SB: Storage<N, R2, C2>,\nSC: Storage<N, D3>, ShapeConstraint: DimEq<D, C2> +\nAreMultipliable<C2, R2, D3, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and\n `alpha, beta` two scalars.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * x + beta * self`, where `a` is a matrix, `x` a vector, and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":51998,"byte_end":52099,"line_start":828,"line_end":828,"column_start":5,"column_end":106}},{"value":"/ `alpha, beta` two scalars.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52104,"byte_end":52134,"line_start":829,"line_end":829,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52139,"byte_end":52142,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ For real matrices, this is the same as `.gemv_tr`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52147,"byte_end":52201,"line_start":831,"line_end":831,"column_start":5,"column_end":59}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52206,"byte_end":52250,"line_start":832,"line_end":832,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52255,"byte_end":52258,"line_start":833,"line_end":833,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52263,"byte_end":52278,"line_start":834,"line_end":834,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52283,"byte_end":52286,"line_start":835,"line_end":835,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52291,"byte_end":52298,"line_start":836,"line_end":836,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52303,"byte_end":52351,"line_start":837,"line_end":837,"column_start":5,"column_end":53}},{"value":"/ let mat = Matrix2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52356,"byte_end":52430,"line_start":838,"line_end":838,"column_start":5,"column_end":79}},{"value":"/                        Complex::new(5.0, 6.0), Complex::new(7.0, 8.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52435,"byte_end":52510,"line_start":839,"line_end":839,"column_start":5,"column_end":80}},{"value":"/ let mut vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52515,"byte_end":52595,"line_start":840,"line_end":840,"column_start":5,"column_end":85}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.1, 0.2), Complex::new(0.3, 0.4));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52600,"byte_end":52676,"line_start":841,"line_end":841,"column_start":5,"column_end":81}},{"value":"/ let expected = mat.adjoint() * vec2 * Complex::new(10.0, 20.0) + vec1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52681,"byte_end":52781,"line_start":842,"line_end":842,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52786,"byte_end":52789,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ vec1.gemv_ad(Complex::new(10.0, 20.0), &mat, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52794,"byte_end":52875,"line_start":844,"line_end":844,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(vec1, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52880,"byte_end":52911,"line_start":845,"line_end":845,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52916,"byte_end":52923,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":52928,"byte_end":52937,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54824,"byte_end":54827,"line_start":914,"line_end":914,"column_start":12,"column_end":15},"name":"ger","qualname":"<Matrix<N, R1, C1, S>>::ger","value":"pub fn ger<D2: Dim, D3: Dim, SB,\n           SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54275,"byte_end":54337,"line_start":897,"line_end":897,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54342,"byte_end":54345,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54350,"byte_end":54394,"line_start":899,"line_end":899,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54399,"byte_end":54402,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54407,"byte_end":54422,"line_start":901,"line_end":901,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54427,"byte_end":54430,"line_start":902,"line_end":902,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54435,"byte_end":54442,"line_start":903,"line_end":903,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54447,"byte_end":54497,"line_start":904,"line_end":904,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2x3::repeat(4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54502,"byte_end":54543,"line_start":905,"line_end":905,"column_start":5,"column_end":46}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54548,"byte_end":54586,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54591,"byte_end":54634,"line_start":907,"line_end":907,"column_start":5,"column_end":48}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54639,"byte_end":54701,"line_start":908,"line_end":908,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54706,"byte_end":54709,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ mat.ger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54714,"byte_end":54751,"line_start":910,"line_end":910,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54756,"byte_end":54786,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54791,"byte_end":54798,"line_start":912,"line_end":912,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":54803,"byte_end":54812,"line_start":913,"line_end":913,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55965,"byte_end":55969,"line_start":947,"line_end":947,"column_start":12,"column_end":16},"name":"gerc","qualname":"<Matrix<N, R1, C1, S>>::gerc","value":"pub fn gerc<D2: Dim, D3: Dim, SB,\n            SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N) where\nN: ComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55172,"byte_end":55232,"line_start":929,"line_end":929,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55237,"byte_end":55240,"line_start":930,"line_end":930,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55245,"byte_end":55289,"line_start":931,"line_end":931,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55294,"byte_end":55297,"line_start":932,"line_end":932,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55302,"byte_end":55317,"line_start":933,"line_end":933,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55322,"byte_end":55325,"line_start":934,"line_end":934,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55330,"byte_end":55337,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55342,"byte_end":55381,"line_start":936,"line_end":936,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2, Vector3, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55386,"byte_end":55445,"line_start":937,"line_end":937,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2x3::repeat(Complex::new(4.0, 5.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55450,"byte_end":55510,"line_start":938,"line_end":938,"column_start":5,"column_end":65}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 2.0), Complex::new(3.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55515,"byte_end":55591,"line_start":939,"line_end":939,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector3::new(Complex::new(0.6, 0.5), Complex::new(0.4, 0.5), Complex::new(0.2, 0.1));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55596,"byte_end":55696,"line_start":940,"line_end":940,"column_start":5,"column_end":105}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55701,"byte_end":55801,"line_start":941,"line_end":941,"column_start":5,"column_end":105}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55806,"byte_end":55809,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ mat.gerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55814,"byte_end":55892,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55897,"byte_end":55927,"line_start":944,"line_end":944,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55932,"byte_end":55939,"line_start":945,"line_end":945,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":55944,"byte_end":55953,"line_start":946,"line_end":946,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57170,"byte_end":57174,"line_start":984,"line_end":984,"column_start":12,"column_end":16},"name":"gemm","qualname":"<Matrix<N, R1, C1, S>>::gemm","value":"pub fn gemm<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: One, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C3> + AreMultipliable<R2, C2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56341,"byte_end":56424,"line_start":962,"line_end":962,"column_start":5,"column_end":88}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56429,"byte_end":56463,"line_start":963,"line_end":963,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56468,"byte_end":56471,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56476,"byte_end":56520,"line_start":965,"line_end":965,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56525,"byte_end":56528,"line_start":966,"line_end":966,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56533,"byte_end":56548,"line_start":967,"line_end":967,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56553,"byte_end":56556,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56561,"byte_end":56568,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56573,"byte_end":56612,"line_start":970,"line_end":970,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56617,"byte_end":56671,"line_start":971,"line_end":971,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56676,"byte_end":56717,"line_start":972,"line_end":972,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56722,"byte_end":56766,"line_start":973,"line_end":973,"column_start":5,"column_end":49}},{"value":"/                           4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56771,"byte_end":56816,"line_start":974,"line_end":974,"column_start":5,"column_end":50}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56821,"byte_end":56870,"line_start":975,"line_end":975,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56875,"byte_end":56924,"line_start":976,"line_end":976,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56929,"byte_end":56979,"line_start":977,"line_end":977,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2 * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":56984,"byte_end":57035,"line_start":978,"line_end":978,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57040,"byte_end":57043,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57048,"byte_end":57087,"line_start":980,"line_end":980,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(mat1, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57092,"byte_end":57132,"line_start":981,"line_end":981,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57137,"byte_end":57144,"line_start":982,"line_end":982,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":57149,"byte_end":57158,"line_start":983,"line_end":983,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":321},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63172,"byte_end":63179,"line_start":1134,"line_end":1134,"column_start":12,"column_end":19},"name":"gemm_tr","qualname":"<Matrix<N, R1, C1, S>>::gemm_tr","value":"pub fn gemm_tr<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: One,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.transpose() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62291,"byte_end":62386,"line_start":1111,"line_end":1111,"column_start":5,"column_end":100}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62391,"byte_end":62425,"line_start":1112,"line_end":1112,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62430,"byte_end":62433,"line_start":1113,"line_end":1113,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62438,"byte_end":62482,"line_start":1114,"line_end":1114,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62487,"byte_end":62490,"line_start":1115,"line_end":1115,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62495,"byte_end":62510,"line_start":1116,"line_end":1116,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62515,"byte_end":62518,"line_start":1117,"line_end":1117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62523,"byte_end":62530,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62535,"byte_end":62574,"line_start":1119,"line_end":1119,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62579,"byte_end":62633,"line_start":1120,"line_end":1120,"column_start":5,"column_end":59}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62638,"byte_end":62679,"line_start":1121,"line_end":1121,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(1.0, 4.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62684,"byte_end":62723,"line_start":1122,"line_end":1122,"column_start":5,"column_end":44}},{"value":"/                           2.0, 5.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62728,"byte_end":62767,"line_start":1123,"line_end":1123,"column_start":5,"column_end":44}},{"value":"/                           3.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62772,"byte_end":62812,"line_start":1124,"line_end":1124,"column_start":5,"column_end":45}},{"value":"/ let mat3 = Matrix3x4::new(0.1, 0.2, 0.3, 0.4,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62817,"byte_end":62866,"line_start":1125,"line_end":1125,"column_start":5,"column_end":54}},{"value":"/                           0.5, 0.6, 0.7, 0.8,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62871,"byte_end":62920,"line_start":1126,"line_end":1126,"column_start":5,"column_end":54}},{"value":"/                           0.9, 1.0, 1.1, 1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62925,"byte_end":62975,"line_start":1127,"line_end":1127,"column_start":5,"column_end":55}},{"value":"/ let expected = mat2.transpose() * mat3 * 10.0 + mat1 * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":62980,"byte_end":63043,"line_start":1128,"line_end":1128,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63048,"byte_end":63051,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_tr(10.0, &mat2, &mat3, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63056,"byte_end":63098,"line_start":1130,"line_end":1130,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63103,"byte_end":63134,"line_start":1131,"line_end":1131,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63139,"byte_end":63146,"line_start":1132,"line_end":1132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":63151,"byte_end":63160,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":328},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65458,"byte_end":65465,"line_start":1192,"line_end":1192,"column_start":12,"column_end":19},"name":"gemm_ad","qualname":"<Matrix<N, R1, C1, S>>::gemm_ad","value":"pub fn gemm_ad<R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB,\n               SC>(&mut Self, N, &Matrix<N, R2, C2, SB>,\n                   &Matrix<N, R3, C3, SC>, N) where N: ComplexField,\nSB: Storage<N, R2, C2>, SC: Storage<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, C2> + SameNumberOfColumns<C1, C3> +\nAreMultipliable<C2, R2, R3, C3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.\n `alpha` and `beta` are scalar.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * a.adjoint() * b + beta * self`, where `a, b, self` are matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64147,"byte_end":64240,"line_start":1169,"line_end":1169,"column_start":5,"column_end":98}},{"value":"/ `alpha` and `beta` are scalar.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64245,"byte_end":64279,"line_start":1170,"line_end":1170,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64284,"byte_end":64287,"line_start":1171,"line_end":1171,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64292,"byte_end":64336,"line_start":1172,"line_end":1172,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64341,"byte_end":64344,"line_start":1173,"line_end":1173,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64349,"byte_end":64364,"line_start":1174,"line_end":1174,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64369,"byte_end":64372,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64377,"byte_end":64384,"line_start":1176,"line_end":1176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64389,"byte_end":64428,"line_start":1177,"line_end":1177,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3x2, Matrix3x4, Matrix2x4, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64433,"byte_end":64496,"line_start":1178,"line_end":1178,"column_start":5,"column_end":68}},{"value":"/ let mut mat1 = Matrix2x4::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64501,"byte_end":64542,"line_start":1179,"line_end":1179,"column_start":5,"column_end":46}},{"value":"/ let mat2 = Matrix3x2::new(Complex::new(1.0, 4.0), Complex::new(7.0, 8.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64547,"byte_end":64624,"line_start":1180,"line_end":1180,"column_start":5,"column_end":82}},{"value":"/                           Complex::new(2.0, 5.0), Complex::new(9.0, 10.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64629,"byte_end":64707,"line_start":1181,"line_end":1181,"column_start":5,"column_end":83}},{"value":"/                           Complex::new(3.0, 6.0), Complex::new(11.0, 12.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64712,"byte_end":64792,"line_start":1182,"line_end":1182,"column_start":5,"column_end":85}},{"value":"/ let mat3 = Matrix3x4::new(Complex::new(0.1, 1.3), Complex::new(0.2, 1.4), Complex::new(0.3, 1.5), Complex::new(0.4, 1.6),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64797,"byte_end":64922,"line_start":1183,"line_end":1183,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.5, 1.7), Complex::new(0.6, 1.8), Complex::new(0.7, 1.9), Complex::new(0.8, 2.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":64927,"byte_end":65052,"line_start":1184,"line_end":1184,"column_start":5,"column_end":130}},{"value":"/                           Complex::new(0.9, 2.1), Complex::new(1.0, 2.2), Complex::new(1.1, 2.3), Complex::new(1.2, 2.4));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65057,"byte_end":65183,"line_start":1185,"line_end":1185,"column_start":5,"column_end":131}},{"value":"/ let expected = mat2.adjoint() * mat3 * Complex::new(10.0, 20.0) + mat1 * Complex::new(5.0, 15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65188,"byte_end":65289,"line_start":1186,"line_end":1186,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65294,"byte_end":65297,"line_start":1187,"line_end":1187,"column_start":5,"column_end":8}},{"value":"/ mat1.gemm_ad(Complex::new(10.0, 20.0), &mat2, &mat3, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65302,"byte_end":65384,"line_start":1188,"line_end":1188,"column_start":5,"column_end":87}},{"value":"/ assert_eq!(mat1, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65389,"byte_end":65420,"line_start":1189,"line_end":1189,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65425,"byte_end":65432,"line_start":1190,"line_end":1190,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":65437,"byte_end":65446,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":346},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68564,"byte_end":68572,"line_start":1287,"line_end":1287,"column_start":12,"column_end":20},"name":"ger_symm","qualname":"<Matrix<N, R1, C1, S>>::ger_symm","value":"pub fn ger_symm<D2: Dim, D3: Dim, SB,\n                SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67575,"byte_end":67669,"line_start":1266,"line_end":1266,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67674,"byte_end":67685,"line_start":1267,"line_end":1267,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67690,"byte_end":67693,"line_start":1268,"line_end":1268,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67698,"byte_end":67793,"line_start":1269,"line_end":1269,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67798,"byte_end":67858,"line_start":1270,"line_end":1270,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67863,"byte_end":67866,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67871,"byte_end":67886,"line_start":1272,"line_end":1272,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67891,"byte_end":67894,"line_start":1273,"line_end":1273,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67899,"byte_end":67906,"line_start":1274,"line_end":1274,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67911,"byte_end":67950,"line_start":1275,"line_end":1275,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67955,"byte_end":67993,"line_start":1276,"line_end":1276,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":67998,"byte_end":68036,"line_start":1277,"line_end":1277,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68041,"byte_end":68079,"line_start":1278,"line_end":1278,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68084,"byte_end":68146,"line_start":1279,"line_end":1279,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68151,"byte_end":68257,"line_start":1280,"line_end":1280,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68262,"byte_end":68265,"line_start":1281,"line_end":1281,"column_start":5,"column_end":8}},{"value":"/ mat.ger_symm(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68270,"byte_end":68312,"line_start":1282,"line_end":1282,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68317,"byte_end":68381,"line_start":1283,"line_end":1283,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68386,"byte_end":68446,"line_start":1284,"line_end":1284,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68451,"byte_end":68460,"line_start":1285,"line_end":1285,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This is renamed `syger` to match the original BLAS terminology.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68465,"byte_end":68552,"line_start":1286,"line_end":1286,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":351},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69868,"byte_end":69873,"line_start":1323,"line_end":1323,"column_start":12,"column_end":17},"name":"syger","qualname":"<Matrix<N, R1, C1, S>>::syger","value":"pub fn syger<D2: Dim, D3: Dim, SB,\n             SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: One, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.transpose() + beta * self`, where `self` is a **symmetric**","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":68911,"byte_end":69005,"line_start":1302,"line_end":1302,"column_start":5,"column_end":99}},{"value":"/ matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69010,"byte_end":69021,"line_start":1303,"line_end":1303,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69026,"byte_end":69029,"line_start":1304,"line_end":1304,"column_start":5,"column_end":8}},{"value":"/ For hermitian complex matrices, use `.hegerc` instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69034,"byte_end":69092,"line_start":1305,"line_end":1305,"column_start":5,"column_end":63}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69097,"byte_end":69192,"line_start":1306,"line_end":1306,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69197,"byte_end":69257,"line_start":1307,"line_end":1307,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69262,"byte_end":69265,"line_start":1308,"line_end":1308,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69270,"byte_end":69285,"line_start":1309,"line_end":1309,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69290,"byte_end":69293,"line_start":1310,"line_end":1310,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69298,"byte_end":69305,"line_start":1311,"line_end":1311,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69310,"byte_end":69349,"line_start":1312,"line_end":1312,"column_start":5,"column_end":44}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69354,"byte_end":69392,"line_start":1313,"line_end":1313,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69397,"byte_end":69435,"line_start":1314,"line_end":1314,"column_start":5,"column_end":43}},{"value":"/ let vec2 = Vector2::new(0.1, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69440,"byte_end":69478,"line_start":1315,"line_end":1315,"column_start":5,"column_end":43}},{"value":"/ let expected = vec1 * vec2.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69483,"byte_end":69545,"line_start":1316,"line_end":1316,"column_start":5,"column_end":67}},{"value":"/ mat.m12 = 99999.99999; // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69550,"byte_end":69656,"line_start":1317,"line_end":1317,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69661,"byte_end":69664,"line_start":1318,"line_end":1318,"column_start":5,"column_end":8}},{"value":"/ mat.syger(10.0, &vec1, &vec2, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69669,"byte_end":69708,"line_start":1319,"line_end":1319,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69713,"byte_end":69777,"line_start":1320,"line_end":1320,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, 99999.99999); // This was untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69782,"byte_end":69842,"line_start":1321,"line_end":1321,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":69847,"byte_end":69856,"line_start":1322,"line_end":1322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71331,"byte_end":71337,"line_start":1358,"line_end":1358,"column_start":12,"column_end":18},"name":"hegerc","qualname":"<Matrix<N, R1, C1, S>>::hegerc","value":"pub fn hegerc<D2: Dim, D3: Dim, SB,\n              SC>(&mut Self, N, &Vector<N, D2, SB>, &Vector<N, D3, SC>, N)\nwhere N: ComplexField, SB: Storage<N, D2>, SC: Storage<N, D3>,\nShapeConstraint: DimEq<R1, D2> + DimEq<C1, D3>","parent":null,"children":[],"decl_id":null,"docs":" Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**\n matrix.","sig":null,"attributes":[{"value":"/ Computes `self = alpha * x * y.adjoint() + beta * self`, where `self` is an **hermitian**","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70220,"byte_end":70313,"line_start":1338,"line_end":1338,"column_start":5,"column_end":98}},{"value":"/ matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70318,"byte_end":70329,"line_start":1339,"line_end":1339,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70334,"byte_end":70337,"line_start":1340,"line_end":1340,"column_start":5,"column_end":8}},{"value":"/ If `beta` is zero, `self` is never read. The result is symmetric. Only the lower-triangular","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70342,"byte_end":70437,"line_start":1341,"line_end":1341,"column_start":5,"column_end":100}},{"value":"/ (including the diagonal) part of `self` is read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70442,"byte_end":70502,"line_start":1342,"line_end":1342,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70507,"byte_end":70510,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70515,"byte_end":70530,"line_start":1344,"line_end":1344,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70535,"byte_end":70538,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70543,"byte_end":70550,"line_start":1346,"line_end":1346,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2, Vector2, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70555,"byte_end":70603,"line_start":1347,"line_end":1347,"column_start":5,"column_end":53}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70608,"byte_end":70646,"line_start":1348,"line_end":1348,"column_start":5,"column_end":43}},{"value":"/ let vec1 = Vector2::new(Complex::new(1.0, 3.0), Complex::new(2.0, 4.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70651,"byte_end":70727,"line_start":1349,"line_end":1349,"column_start":5,"column_end":81}},{"value":"/ let vec2 = Vector2::new(Complex::new(0.2, 0.4), Complex::new(0.1, 0.3));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70732,"byte_end":70808,"line_start":1350,"line_end":1350,"column_start":5,"column_end":81}},{"value":"/ let expected = vec1 * vec2.adjoint() * Complex::new(10.0, 20.0) + mat * Complex::new(5.0, 15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70813,"byte_end":70913,"line_start":1351,"line_end":1351,"column_start":5,"column_end":105}},{"value":"/ mat.m12 = Complex::new(99999.99999, 88888.88888); // This component is on the upper-triangular part and will not be read/written.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":70918,"byte_end":71051,"line_start":1352,"line_end":1352,"column_start":5,"column_end":138}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71056,"byte_end":71059,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ mat.hegerc(Complex::new(10.0, 20.0), &vec1, &vec2, Complex::new(5.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71064,"byte_end":71144,"line_start":1354,"line_end":1354,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(mat.lower_triangle(), expected.lower_triangle());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71149,"byte_end":71213,"line_start":1355,"line_end":1355,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(mat.m12, Complex::new(99999.99999, 88888.88888)); // This was untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71218,"byte_end":71305,"line_start":1356,"line_end":1356,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71310,"byte_end":71319,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":366},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":73250,"byte_end":73276,"line_start":1403,"line_end":1403,"column_start":12,"column_end":38},"name":"quadform_tr_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr_with_workspace","value":"pub fn quadform_tr_with_workspace<D2, S2, R3, C3, S3, D4,\n                                  S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                      &Matrix<N, R3, C3, S3>,\n                                      &SquareMatrix<N, D4, S4>, N) where\nD2: Dim, R3: Dim, C3: Dim, D4: Dim, S2: StorageMut<N, D2>,\nS3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D2> + DimEq<D1, R3> + DimEq<D2, R3> + DimEq<C3, D4>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71834,"byte_end":71925,"line_start":1377,"line_end":1377,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71930,"byte_end":71933,"line_start":1378,"line_end":1378,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71938,"byte_end":72028,"line_start":1379,"line_end":1379,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72033,"byte_end":72036,"line_start":1380,"line_end":1380,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72041,"byte_end":72056,"line_start":1381,"line_end":1381,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72061,"byte_end":72064,"line_start":1382,"line_end":1382,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72069,"byte_end":72076,"line_start":1383,"line_end":1383,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72081,"byte_end":72120,"line_start":1384,"line_end":1384,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72125,"byte_end":72164,"line_start":1385,"line_end":1385,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72169,"byte_end":72243,"line_start":1386,"line_end":1386,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72248,"byte_end":72329,"line_start":1387,"line_end":1387,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72334,"byte_end":72413,"line_start":1388,"line_end":1388,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72418,"byte_end":72494,"line_start":1389,"line_end":1389,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72499,"byte_end":72541,"line_start":1390,"line_end":1390,"column_start":5,"column_end":47}},{"value":"/ let lhs = DMatrix::from_row_slice(2, 3, &[1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72546,"byte_end":72606,"line_start":1391,"line_end":1391,"column_start":5,"column_end":65}},{"value":"/                                           4.0, 5.0, 6.0]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72611,"byte_end":72673,"line_start":1392,"line_end":1392,"column_start":5,"column_end":67}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72678,"byte_end":72738,"line_start":1393,"line_end":1393,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72743,"byte_end":72803,"line_start":1394,"line_end":1394,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72808,"byte_end":72870,"line_start":1395,"line_end":1395,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72875,"byte_end":72934,"line_start":1396,"line_end":1396,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72939,"byte_end":72981,"line_start":1397,"line_end":1397,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":72986,"byte_end":73033,"line_start":1398,"line_end":1398,"column_start":5,"column_end":52}},{"value":"/ let expected = &lhs * &mid * lhs.transpose() * 10.0 + &mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":73038,"byte_end":73107,"line_start":1399,"line_end":1399,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":73112,"byte_end":73115,"line_start":1400,"line_end":1400,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr_with_workspace(&mut workspace, 10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":73120,"byte_end":73194,"line_start":1401,"line_end":1401,"column_start":5,"column_end":79}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":73199,"byte_end":73238,"line_start":1402,"line_end":1402,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75005,"byte_end":75016,"line_start":1450,"line_end":1450,"column_start":12,"column_end":23},"name":"quadform_tr","qualname":"<SquareMatrix<N, D1, S>>::quadform_tr","value":"pub fn quadform_tr<R3, C3, S3, D4,\n                   S4>(&mut Self, N, &Matrix<N, R3, C3, S3>,\n                       &SquareMatrix<N, D4, S4>, N) where R3: Dim, C3: Dim,\nD4: Dim, S3: Storage<N, R3, C3>, S4: Storage<N, D4, D4>,\nShapeConstraint: DimEq<D1, D1> + DimEq<D1, R3> + DimEq<C3, D4>,\nDefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * lhs * mid * lhs.transpose() + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74039,"byte_end":74130,"line_start":1429,"line_end":1429,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74135,"byte_end":74138,"line_start":1430,"line_end":1430,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D1 for intermediate results.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74143,"byte_end":74222,"line_start":1431,"line_end":1431,"column_start":5,"column_end":84}},{"value":"/ If `D1` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74227,"byte_end":74310,"line_start":1432,"line_end":1432,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_tr_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74315,"byte_end":74387,"line_start":1433,"line_end":1433,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74392,"byte_end":74395,"line_start":1434,"line_end":1434,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74400,"byte_end":74415,"line_start":1435,"line_end":1435,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74420,"byte_end":74423,"line_start":1436,"line_end":1436,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74428,"byte_end":74435,"line_start":1437,"line_end":1437,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74440,"byte_end":74479,"line_start":1438,"line_end":1438,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3, Matrix2x3, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74484,"byte_end":74543,"line_start":1439,"line_end":1439,"column_start":5,"column_end":64}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74548,"byte_end":74586,"line_start":1440,"line_end":1440,"column_start":5,"column_end":43}},{"value":"/ let lhs = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74591,"byte_end":74634,"line_start":1441,"line_end":1441,"column_start":5,"column_end":48}},{"value":"/                          4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74639,"byte_end":74683,"line_start":1442,"line_end":1442,"column_start":5,"column_end":49}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74688,"byte_end":74729,"line_start":1443,"line_end":1443,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74734,"byte_end":74775,"line_start":1444,"line_end":1444,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74780,"byte_end":74822,"line_start":1445,"line_end":1445,"column_start":5,"column_end":47}},{"value":"/ let expected = lhs * mid * lhs.transpose() * 10.0 + mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74827,"byte_end":74893,"line_start":1446,"line_end":1446,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74898,"byte_end":74901,"line_start":1447,"line_end":1447,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_tr(10.0, &lhs, &mid, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74906,"byte_end":74949,"line_start":1448,"line_end":1448,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":74954,"byte_end":74993,"line_start":1449,"line_end":1449,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":380},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":77031,"byte_end":77054,"line_start":1494,"line_end":1494,"column_start":12,"column_end":35},"name":"quadform_with_workspace","qualname":"<SquareMatrix<N, D1, S>>::quadform_with_workspace","value":"pub fn quadform_with_workspace<D2, S2, D3, S3, R4, C4,\n                               S4>(&mut Self, &mut Vector<N, D2, S2>, N,\n                                   &SquareMatrix<N, D3, S3>,\n                                   &Matrix<N, R4, C4, S4>, N) where D2: Dim,\nD3: Dim, R4: Dim, C4: Dim, S2: StorageMut<N, D2>, S3: Storage<N, D3, D3>,\nS4: Storage<N, R4, C4>, ShapeConstraint: DimEq<D3, R4> + DimEq<D1, C4> +\nDimEq<D2, D3> + AreMultipliable<C4, R4, D2, U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75596,"byte_end":75687,"line_start":1469,"line_end":1469,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75692,"byte_end":75695,"line_start":1470,"line_end":1470,"column_start":5,"column_end":8}},{"value":"/ This uses the provided workspace `work` to avoid allocations for intermediate results.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75700,"byte_end":75790,"line_start":1471,"line_end":1471,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75795,"byte_end":75798,"line_start":1472,"line_end":1472,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75803,"byte_end":75810,"line_start":1473,"line_end":1473,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75815,"byte_end":75854,"line_start":1474,"line_end":1474,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{DMatrix, DVector};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75859,"byte_end":75898,"line_start":1475,"line_end":1475,"column_start":5,"column_end":44}},{"value":"/ // Note that all those would also work with statically-sized matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75903,"byte_end":75977,"line_start":1476,"line_end":1476,"column_start":5,"column_end":79}},{"value":"/ // We use DMatrix/DVector since that's the only case where pre-allocating the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":75982,"byte_end":76063,"line_start":1477,"line_end":1477,"column_start":5,"column_end":86}},{"value":"/ // workspace is actually useful (assuming the same workspace is re-used for","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76068,"byte_end":76147,"line_start":1478,"line_end":1478,"column_start":5,"column_end":84}},{"value":"/ // several computations) because it avoids repeated dynamic allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76152,"byte_end":76228,"line_start":1479,"line_end":1479,"column_start":5,"column_end":81}},{"value":"/ let mut mat = DMatrix::identity(2, 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76233,"byte_end":76275,"line_start":1480,"line_end":1480,"column_start":5,"column_end":47}},{"value":"/ let rhs = DMatrix::from_row_slice(3, 2, &[1.0, 2.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76280,"byte_end":76335,"line_start":1481,"line_end":1481,"column_start":5,"column_end":60}},{"value":"/                                           3.0, 4.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76340,"byte_end":76395,"line_start":1482,"line_end":1482,"column_start":5,"column_end":60}},{"value":"/                                           5.0, 6.0]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76400,"byte_end":76457,"line_start":1483,"line_end":1483,"column_start":5,"column_end":62}},{"value":"/ let mid = DMatrix::from_row_slice(3, 3, &[0.1, 0.2, 0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76462,"byte_end":76522,"line_start":1484,"line_end":1484,"column_start":5,"column_end":65}},{"value":"/                                           0.5, 0.6, 0.7,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76527,"byte_end":76587,"line_start":1485,"line_end":1485,"column_start":5,"column_end":65}},{"value":"/                                           0.9, 1.0, 1.1]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76592,"byte_end":76654,"line_start":1486,"line_end":1486,"column_start":5,"column_end":67}},{"value":"/ // The random shows that values on the workspace do not","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76659,"byte_end":76718,"line_start":1487,"line_end":1487,"column_start":5,"column_end":64}},{"value":"/ // matter as they will be overwritten.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76723,"byte_end":76765,"line_start":1488,"line_end":1488,"column_start":5,"column_end":47}},{"value":"/ let mut workspace = DVector::new_random(3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76770,"byte_end":76817,"line_start":1489,"line_end":1489,"column_start":5,"column_end":52}},{"value":"/ let expected = rhs.transpose() * &mid * &rhs * 10.0 + &mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76822,"byte_end":76891,"line_start":1490,"line_end":1490,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76896,"byte_end":76899,"line_start":1491,"line_end":1491,"column_start":5,"column_end":8}},{"value":"/ mat.quadform_with_workspace(&mut workspace, 10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76904,"byte_end":76975,"line_start":1492,"line_end":1492,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":76980,"byte_end":77019,"line_start":1493,"line_end":1493,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78815,"byte_end":78823,"line_start":1541,"line_end":1541,"column_start":12,"column_end":20},"name":"quadform","qualname":"<SquareMatrix<N, D1, S>>::quadform","value":"pub fn quadform<D2, S2, R3, C3,\n                S3>(&mut Self, N, &SquareMatrix<N, D2, S2>,\n                    &Matrix<N, R3, C3, S3>, N) where D2: Dim, R3: Dim,\nC3: Dim, S2: Storage<N, D2, D2>, S3: Storage<N, R3, C3>,\nShapeConstraint: DimEq<D2, R3> + DimEq<D1, C3> +\nAreMultipliable<C3, R3, D2, U1>, DefaultAllocator: Allocator<N, D2>","parent":null,"children":[],"decl_id":null,"docs":" Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","sig":null,"attributes":[{"value":"/ Computes the quadratic form `self = alpha * rhs.transpose() * mid * rhs + beta * self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":77859,"byte_end":77950,"line_start":1521,"line_end":1521,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":77955,"byte_end":77958,"line_start":1522,"line_end":1522,"column_start":5,"column_end":8}},{"value":"/ This allocates a workspace vector of dimension D2 for intermediate results.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":77963,"byte_end":78042,"line_start":1523,"line_end":1523,"column_start":5,"column_end":84}},{"value":"/ If `D2` is a type-level integer, then the allocation is performed on the stack.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78047,"byte_end":78130,"line_start":1524,"line_end":1524,"column_start":5,"column_end":88}},{"value":"/ Use `.quadform_with_workspace(...)` instead to avoid allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78135,"byte_end":78204,"line_start":1525,"line_end":1525,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78209,"byte_end":78212,"line_start":1526,"line_end":1526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78217,"byte_end":78224,"line_start":1527,"line_end":1527,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78229,"byte_end":78268,"line_start":1528,"line_end":1528,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2, Matrix3x2, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78273,"byte_end":78323,"line_start":1529,"line_end":1529,"column_start":5,"column_end":55}},{"value":"/ let mut mat = Matrix2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78328,"byte_end":78366,"line_start":1530,"line_end":1530,"column_start":5,"column_end":43}},{"value":"/ let rhs = Matrix3x2::new(1.0, 2.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78371,"byte_end":78409,"line_start":1531,"line_end":1531,"column_start":5,"column_end":43}},{"value":"/                          3.0, 4.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78414,"byte_end":78452,"line_start":1532,"line_end":1532,"column_start":5,"column_end":43}},{"value":"/                          5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78457,"byte_end":78496,"line_start":1533,"line_end":1533,"column_start":5,"column_end":44}},{"value":"/ let mid = Matrix3::new(0.1, 0.2, 0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78501,"byte_end":78542,"line_start":1534,"line_end":1534,"column_start":5,"column_end":46}},{"value":"/                        0.5, 0.6, 0.7,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78547,"byte_end":78588,"line_start":1535,"line_end":1535,"column_start":5,"column_end":46}},{"value":"/                        0.9, 1.0, 1.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78593,"byte_end":78635,"line_start":1536,"line_end":1536,"column_start":5,"column_end":47}},{"value":"/ let expected = rhs.transpose() * mid * rhs * 10.0 + mat * 5.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78640,"byte_end":78706,"line_start":1537,"line_end":1537,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78711,"byte_end":78714,"line_start":1538,"line_end":1538,"column_start":5,"column_end":8}},{"value":"/ mat.quadform(10.0, &mid, &rhs, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78719,"byte_end":78759,"line_start":1539,"line_end":1539,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":78764,"byte_end":78803,"line_start":1540,"line_end":1540,"column_start":5,"column_end":44}}]},{"kind":"Mod","id":{"krate":0,"index":394},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"constraint","qualname":"::base::constraint","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","parent":null,"children":[{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":399},{"krate":0,"index":402},{"krate":0,"index":405},{"krate":0,"index":407},{"krate":0,"index":412},{"krate":0,"index":417},{"krate":0,"index":421},{"krate":0,"index":424},{"krate":0,"index":427},{"krate":0,"index":11698},{"krate":0,"index":11702},{"krate":0,"index":11705},{"krate":0,"index":11708},{"krate":0,"index":11711},{"krate":0,"index":11715},{"krate":0,"index":11718},{"krate":0,"index":11721},{"krate":0,"index":431},{"krate":0,"index":435},{"krate":0,"index":438},{"krate":0,"index":441}],"decl_id":null,"docs":" Compatibility constraints between matrix shapes, e.g., for addition or multiplication.\n","sig":null,"attributes":[{"value":"/ Compatibility constraints between matrix shapes, e.g., for addition or multiplication.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79415,"byte_end":79505,"line_start":1,"line_end":1,"column_start":1,"column_end":91}}]},{"kind":"Struct","id":{"krate":0,"index":405},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79634,"byte_end":79649,"line_start":6,"line_end":6,"column_start":12,"column_end":27},"name":"ShapeConstraint","qualname":"::base::constraint::ShapeConstraint","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type used in `where` clauses for enforcing constraints.\n","sig":null,"attributes":[{"value":"/ A type used in `where` clauses for enforcing constraints.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79561,"byte_end":79622,"line_start":5,"line_end":5,"column_start":1,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":407},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79710,"byte_end":79725,"line_start":9,"line_end":9,"column_start":11,"column_end":26},"name":"AreMultipliable","qualname":"::base::constraint::AreMultipliable","value":"AreMultipliable<R1: Dim, C1: Dim, R2: Dim, C2: Dim>: DimEq<C1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Constraints `C1` and `R2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `C1` and `R2` to be equivalent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79652,"byte_end":79699,"line_start":8,"line_end":8,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":417},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79973,"byte_end":79978,"line_start":15,"line_end":15,"column_start":11,"column_end":16},"name":"DimEq","qualname":"::base::constraint::DimEq","value":"DimEq<D1: Dim, D2: Dim>","parent":null,"children":[{"krate":0,"index":420}],"decl_id":null,"docs":" Constraints `D1` and `D2` to be equivalent.\n","sig":null,"attributes":[{"value":"/ Constraints `D1` and `D2` to be equivalent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79915,"byte_end":79962,"line_start":14,"line_end":14,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":420},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80127,"byte_end":80141,"line_start":18,"line_end":18,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::DimEq::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":417},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80003,"byte_end":80099,"line_start":16,"line_end":16,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80104,"byte_end":80117,"line_start":17,"line_end":17,"column_start":5,"column_end":18}}]},{"kind":"Trait","id":{"krate":0,"index":11698},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81374,"byte_end":81390,"line_start":61,"line_end":61,"column_start":5,"column_end":21},"name":"SameNumberOfRows","qualname":"::base::constraint::SameNumberOfRows","value":"SameNumberOfRows<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":11701}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of rows of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":11711},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81524,"byte_end":81543,"line_start":65,"line_end":65,"column_start":5,"column_end":24},"name":"SameNumberOfColumns","qualname":"::base::constraint::SameNumberOfColumns","value":"SameNumberOfColumns<D1: Dim, D2: Dim>: DimEq<D1, D2> + DimEq<D2, D1>","parent":null,"children":[{"krate":0,"index":11714}],"decl_id":null,"docs":"Constraints `D1` and `D2` to be equivalent. They are both assumed to be the number of columns of a matrix.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81689,"byte_end":81702,"line_start":70,"line_end":70,"column_start":11,"column_end":24},"name":"SameDimension","qualname":"::base::constraint::SameDimension","value":"SameDimension<D1: Dim, D2: Dim>: SameNumberOfRows<D1, D2> + SameNumberOfColumns<D1, D2>","parent":null,"children":[{"krate":0,"index":434}],"decl_id":null,"docs":" Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic\n entities (e.g. square matrices).\n","sig":null,"attributes":[{"value":"/ Constraints D1 and D2 to be equivalent, where they both designate dimensions of algebraic","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81548,"byte_end":81641,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ entities (e.g. square matrices).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81642,"byte_end":81678,"line_start":69,"line_end":69,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":434},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81911,"byte_end":81925,"line_start":75,"line_end":75,"column_start":10,"column_end":24},"name":"Representative","qualname":"::base::constraint::SameDimension::Representative","value":"type Representative: Dim;","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":" This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level\n constant.\n","sig":null,"attributes":[{"value":"/ This is either equal to `D1` or `D2`, always choosing the one (if any) which is a type-level","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81787,"byte_end":81883,"line_start":73,"line_end":73,"column_start":5,"column_end":101}},{"value":"/ constant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81888,"byte_end":81901,"line_start":74,"line_end":74,"column_start":5,"column_end":18}}]},{"kind":"Mod","id":{"krate":0,"index":444},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"coordinates","qualname":"::base::coordinates","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":452},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":462},{"krate":0,"index":463},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":468},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":474},{"krate":0,"index":475},{"krate":0,"index":478},{"krate":0,"index":481},{"krate":0,"index":482},{"krate":0,"index":485},{"krate":0,"index":11724},{"krate":0,"index":11727},{"krate":0,"index":11729},{"krate":0,"index":11732},{"krate":0,"index":11734},{"krate":0,"index":11738},{"krate":0,"index":11741},{"krate":0,"index":11745},{"krate":0,"index":11748},{"krate":0,"index":11750},{"krate":0,"index":11754},{"krate":0,"index":11756},{"krate":0,"index":11759},{"krate":0,"index":11761},{"krate":0,"index":11765},{"krate":0,"index":11768},{"krate":0,"index":11772},{"krate":0,"index":11775},{"krate":0,"index":11777},{"krate":0,"index":11782},{"krate":0,"index":11784},{"krate":0,"index":11787},{"krate":0,"index":11789},{"krate":0,"index":11793},{"krate":0,"index":11796},{"krate":0,"index":11800},{"krate":0,"index":11803},{"krate":0,"index":11805},{"krate":0,"index":11811},{"krate":0,"index":11813},{"krate":0,"index":11816},{"krate":0,"index":11818},{"krate":0,"index":11822},{"krate":0,"index":11825},{"krate":0,"index":11829},{"krate":0,"index":11832},{"krate":0,"index":11834},{"krate":0,"index":11841},{"krate":0,"index":11843},{"krate":0,"index":11846},{"krate":0,"index":11848},{"krate":0,"index":11852},{"krate":0,"index":11855},{"krate":0,"index":11859},{"krate":0,"index":11862},{"krate":0,"index":11864},{"krate":0,"index":11872},{"krate":0,"index":11874},{"krate":0,"index":11877},{"krate":0,"index":11879},{"krate":0,"index":11883},{"krate":0,"index":11886},{"krate":0,"index":11890},{"krate":0,"index":11893},{"krate":0,"index":11895},{"krate":0,"index":11901},{"krate":0,"index":11903},{"krate":0,"index":11906},{"krate":0,"index":11908},{"krate":0,"index":11912},{"krate":0,"index":11915},{"krate":0,"index":11919},{"krate":0,"index":11922},{"krate":0,"index":11924},{"krate":0,"index":11930},{"krate":0,"index":11932},{"krate":0,"index":11935},{"krate":0,"index":11937},{"krate":0,"index":11941},{"krate":0,"index":11944},{"krate":0,"index":11948},{"krate":0,"index":11951},{"krate":0,"index":11953},{"krate":0,"index":11961},{"krate":0,"index":11963},{"krate":0,"index":11966},{"krate":0,"index":11968},{"krate":0,"index":11972},{"krate":0,"index":11975},{"krate":0,"index":11979},{"krate":0,"index":11982},{"krate":0,"index":11984},{"krate":0,"index":11994},{"krate":0,"index":11996},{"krate":0,"index":11999},{"krate":0,"index":12001},{"krate":0,"index":12005},{"krate":0,"index":12008},{"krate":0,"index":12012},{"krate":0,"index":12015},{"krate":0,"index":12017},{"krate":0,"index":12029},{"krate":0,"index":12031},{"krate":0,"index":12034},{"krate":0,"index":12036},{"krate":0,"index":12040},{"krate":0,"index":12043},{"krate":0,"index":12047},{"krate":0,"index":12050},{"krate":0,"index":12052},{"krate":0,"index":12066},{"krate":0,"index":12068},{"krate":0,"index":12071},{"krate":0,"index":12073},{"krate":0,"index":12077},{"krate":0,"index":12080},{"krate":0,"index":12084},{"krate":0,"index":12087},{"krate":0,"index":12089},{"krate":0,"index":12097},{"krate":0,"index":12099},{"krate":0,"index":12102},{"krate":0,"index":12104},{"krate":0,"index":12108},{"krate":0,"index":12111},{"krate":0,"index":12115},{"krate":0,"index":12118},{"krate":0,"index":12120},{"krate":0,"index":12131},{"krate":0,"index":12133},{"krate":0,"index":12136},{"krate":0,"index":12138},{"krate":0,"index":12142},{"krate":0,"index":12145},{"krate":0,"index":12149},{"krate":0,"index":12152},{"krate":0,"index":12154},{"krate":0,"index":12168},{"krate":0,"index":12170},{"krate":0,"index":12173},{"krate":0,"index":12175},{"krate":0,"index":12179},{"krate":0,"index":12182},{"krate":0,"index":12186},{"krate":0,"index":12189},{"krate":0,"index":12191},{"krate":0,"index":12208},{"krate":0,"index":12210},{"krate":0,"index":12213},{"krate":0,"index":12215},{"krate":0,"index":12219},{"krate":0,"index":12222},{"krate":0,"index":12226},{"krate":0,"index":12229},{"krate":0,"index":12231},{"krate":0,"index":12251},{"krate":0,"index":12253},{"krate":0,"index":12256},{"krate":0,"index":12258},{"krate":0,"index":12262},{"krate":0,"index":12265},{"krate":0,"index":12269},{"krate":0,"index":12272},{"krate":0,"index":12274},{"krate":0,"index":12284},{"krate":0,"index":12286},{"krate":0,"index":12289},{"krate":0,"index":12291},{"krate":0,"index":12295},{"krate":0,"index":12298},{"krate":0,"index":12302},{"krate":0,"index":12305},{"krate":0,"index":12307},{"krate":0,"index":12321},{"krate":0,"index":12323},{"krate":0,"index":12326},{"krate":0,"index":12328},{"krate":0,"index":12332},{"krate":0,"index":12335},{"krate":0,"index":12339},{"krate":0,"index":12342},{"krate":0,"index":12344},{"krate":0,"index":12362},{"krate":0,"index":12364},{"krate":0,"index":12367},{"krate":0,"index":12369},{"krate":0,"index":12373},{"krate":0,"index":12376},{"krate":0,"index":12380},{"krate":0,"index":12383},{"krate":0,"index":12385},{"krate":0,"index":12407},{"krate":0,"index":12409},{"krate":0,"index":12412},{"krate":0,"index":12414},{"krate":0,"index":12418},{"krate":0,"index":12421},{"krate":0,"index":12425},{"krate":0,"index":12428},{"krate":0,"index":12430},{"krate":0,"index":12456},{"krate":0,"index":12458},{"krate":0,"index":12461},{"krate":0,"index":12463},{"krate":0,"index":12467},{"krate":0,"index":12470},{"krate":0,"index":12474},{"krate":0,"index":12477},{"krate":0,"index":12479},{"krate":0,"index":12491},{"krate":0,"index":12493},{"krate":0,"index":12496},{"krate":0,"index":12498},{"krate":0,"index":12502},{"krate":0,"index":12505},{"krate":0,"index":12509},{"krate":0,"index":12512},{"krate":0,"index":12514},{"krate":0,"index":12531},{"krate":0,"index":12533},{"krate":0,"index":12536},{"krate":0,"index":12538},{"krate":0,"index":12542},{"krate":0,"index":12545},{"krate":0,"index":12549},{"krate":0,"index":12552},{"krate":0,"index":12554},{"krate":0,"index":12576},{"krate":0,"index":12578},{"krate":0,"index":12581},{"krate":0,"index":12583},{"krate":0,"index":12587},{"krate":0,"index":12590},{"krate":0,"index":12594},{"krate":0,"index":12597},{"krate":0,"index":12599},{"krate":0,"index":12626},{"krate":0,"index":12628},{"krate":0,"index":12631},{"krate":0,"index":12633},{"krate":0,"index":12637},{"krate":0,"index":12640},{"krate":0,"index":12644},{"krate":0,"index":12647},{"krate":0,"index":12649},{"krate":0,"index":12681},{"krate":0,"index":12683},{"krate":0,"index":12686},{"krate":0,"index":12688},{"krate":0,"index":12692},{"krate":0,"index":12695},{"krate":0,"index":12699},{"krate":0,"index":12702},{"krate":0,"index":12704},{"krate":0,"index":12718},{"krate":0,"index":12720},{"krate":0,"index":12723},{"krate":0,"index":12725},{"krate":0,"index":12729},{"krate":0,"index":12732},{"krate":0,"index":12736},{"krate":0,"index":12739},{"krate":0,"index":12741},{"krate":0,"index":12761},{"krate":0,"index":12763},{"krate":0,"index":12766},{"krate":0,"index":12768},{"krate":0,"index":12772},{"krate":0,"index":12775},{"krate":0,"index":12779},{"krate":0,"index":12782},{"krate":0,"index":12784},{"krate":0,"index":12810},{"krate":0,"index":12812},{"krate":0,"index":12815},{"krate":0,"index":12817},{"krate":0,"index":12821},{"krate":0,"index":12824},{"krate":0,"index":12828},{"krate":0,"index":12831},{"krate":0,"index":12833},{"krate":0,"index":12865},{"krate":0,"index":12867},{"krate":0,"index":12870},{"krate":0,"index":12872},{"krate":0,"index":12876},{"krate":0,"index":12879},{"krate":0,"index":12883},{"krate":0,"index":12886},{"krate":0,"index":12888},{"krate":0,"index":12926},{"krate":0,"index":12928},{"krate":0,"index":12931},{"krate":0,"index":12933},{"krate":0,"index":12937},{"krate":0,"index":12940},{"krate":0,"index":12944},{"krate":0,"index":12947},{"krate":0,"index":12949},{"krate":0,"index":12954},{"krate":0,"index":12958},{"krate":0,"index":12963},{"krate":0,"index":12967},{"krate":0,"index":12972},{"krate":0,"index":12976},{"krate":0,"index":12981},{"krate":0,"index":12985},{"krate":0,"index":12990},{"krate":0,"index":12994},{"krate":0,"index":12999},{"krate":0,"index":13003},{"krate":0,"index":13008},{"krate":0,"index":13012},{"krate":0,"index":13017},{"krate":0,"index":13021},{"krate":0,"index":13026},{"krate":0,"index":13030},{"krate":0,"index":13035},{"krate":0,"index":13039},{"krate":0,"index":13044},{"krate":0,"index":13048},{"krate":0,"index":13053},{"krate":0,"index":13057},{"krate":0,"index":13062},{"krate":0,"index":13066},{"krate":0,"index":13071},{"krate":0,"index":13075},{"krate":0,"index":13080},{"krate":0,"index":13084},{"krate":0,"index":13089},{"krate":0,"index":13093},{"krate":0,"index":13098},{"krate":0,"index":13102},{"krate":0,"index":13107},{"krate":0,"index":13111},{"krate":0,"index":13116},{"krate":0,"index":13120},{"krate":0,"index":13125},{"krate":0,"index":13129},{"krate":0,"index":13134},{"krate":0,"index":13138},{"krate":0,"index":13143},{"krate":0,"index":13147},{"krate":0,"index":13152},{"krate":0,"index":13156},{"krate":0,"index":13161},{"krate":0,"index":13165},{"krate":0,"index":13170},{"krate":0,"index":13174},{"krate":0,"index":13179},{"krate":0,"index":13183},{"krate":0,"index":13188},{"krate":0,"index":13192},{"krate":0,"index":13197},{"krate":0,"index":13201},{"krate":0,"index":13206},{"krate":0,"index":13210},{"krate":0,"index":13215},{"krate":0,"index":13219},{"krate":0,"index":13224},{"krate":0,"index":13228},{"krate":0,"index":13233},{"krate":0,"index":13237},{"krate":0,"index":13242},{"krate":0,"index":13246},{"krate":0,"index":13251},{"krate":0,"index":13255},{"krate":0,"index":13260},{"krate":0,"index":13264},{"krate":0,"index":13269}],"decl_id":null,"docs":" Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access\n components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead\n of `v[2]`.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82216,"byte_end":82239,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Structures to which matrices and vector can be auto-dereferenced (through `Deref`) to access","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82241,"byte_end":82337,"line_start":3,"line_end":3,"column_start":1,"column_end":97}},{"value":"/ components using their names. For example, if `v` is a 3D vector, one can write `v.z` instead","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82338,"byte_end":82435,"line_start":4,"line_end":4,"column_start":1,"column_end":98}},{"value":"/ of `v[2]`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82436,"byte_end":82450,"line_start":5,"line_end":5,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":11724},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83926,"byte_end":83927,"line_start":60,"line_end":60,"column_start":14,"column_end":15},"name":"X","qualname":"::base::coordinates::X","value":"X { x }","parent":null,"children":[{"krate":0,"index":11726}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11726},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83929,"byte_end":83930,"line_start":60,"line_end":60,"column_start":17,"column_end":18},"name":"x","qualname":"::base::coordinates::X::x","value":"N","parent":{"krate":0,"index":11724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11750},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83946,"byte_end":83948,"line_start":61,"line_end":61,"column_start":14,"column_end":16},"name":"XY","qualname":"::base::coordinates::XY","value":"XY { x, y }","parent":null,"children":[{"krate":0,"index":11752},{"krate":0,"index":11753}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11752},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83950,"byte_end":83951,"line_start":61,"line_end":61,"column_start":18,"column_end":19},"name":"x","qualname":"::base::coordinates::XY::x","value":"N","parent":{"krate":0,"index":11750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11753},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83953,"byte_end":83954,"line_start":61,"line_end":61,"column_start":21,"column_end":22},"name":"y","qualname":"::base::coordinates::XY::y","value":"N","parent":{"krate":0,"index":11750},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11777},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83970,"byte_end":83973,"line_start":62,"line_end":62,"column_start":14,"column_end":17},"name":"XYZ","qualname":"::base::coordinates::XYZ","value":"XYZ { x, y, z }","parent":null,"children":[{"krate":0,"index":11779},{"krate":0,"index":11780},{"krate":0,"index":11781}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11779},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83975,"byte_end":83976,"line_start":62,"line_end":62,"column_start":19,"column_end":20},"name":"x","qualname":"::base::coordinates::XYZ::x","value":"N","parent":{"krate":0,"index":11777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11780},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83978,"byte_end":83979,"line_start":62,"line_end":62,"column_start":22,"column_end":23},"name":"y","qualname":"::base::coordinates::XYZ::y","value":"N","parent":{"krate":0,"index":11777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11781},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83981,"byte_end":83982,"line_start":62,"line_end":62,"column_start":25,"column_end":26},"name":"z","qualname":"::base::coordinates::XYZ::z","value":"N","parent":{"krate":0,"index":11777},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":83998,"byte_end":84002,"line_start":63,"line_end":63,"column_start":14,"column_end":18},"name":"XYZW","qualname":"::base::coordinates::XYZW","value":"XYZW { x, y, z, w }","parent":null,"children":[{"krate":0,"index":11807},{"krate":0,"index":11808},{"krate":0,"index":11809},{"krate":0,"index":11810}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11807},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84004,"byte_end":84005,"line_start":63,"line_end":63,"column_start":20,"column_end":21},"name":"x","qualname":"::base::coordinates::XYZW::x","value":"N","parent":{"krate":0,"index":11805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11808},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84007,"byte_end":84008,"line_start":63,"line_end":63,"column_start":23,"column_end":24},"name":"y","qualname":"::base::coordinates::XYZW::y","value":"N","parent":{"krate":0,"index":11805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11809},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84010,"byte_end":84011,"line_start":63,"line_end":63,"column_start":26,"column_end":27},"name":"z","qualname":"::base::coordinates::XYZW::z","value":"N","parent":{"krate":0,"index":11805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11810},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84013,"byte_end":84014,"line_start":63,"line_end":63,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::XYZW::w","value":"N","parent":{"krate":0,"index":11805},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11834},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84030,"byte_end":84035,"line_start":64,"line_end":64,"column_start":14,"column_end":19},"name":"XYZWA","qualname":"::base::coordinates::XYZWA","value":"XYZWA { x, y, z, w, a }","parent":null,"children":[{"krate":0,"index":11836},{"krate":0,"index":11837},{"krate":0,"index":11838},{"krate":0,"index":11839},{"krate":0,"index":11840}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11836},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84037,"byte_end":84038,"line_start":64,"line_end":64,"column_start":21,"column_end":22},"name":"x","qualname":"::base::coordinates::XYZWA::x","value":"N","parent":{"krate":0,"index":11834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11837},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84040,"byte_end":84041,"line_start":64,"line_end":64,"column_start":24,"column_end":25},"name":"y","qualname":"::base::coordinates::XYZWA::y","value":"N","parent":{"krate":0,"index":11834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11838},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84043,"byte_end":84044,"line_start":64,"line_end":64,"column_start":27,"column_end":28},"name":"z","qualname":"::base::coordinates::XYZWA::z","value":"N","parent":{"krate":0,"index":11834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11839},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84046,"byte_end":84047,"line_start":64,"line_end":64,"column_start":30,"column_end":31},"name":"w","qualname":"::base::coordinates::XYZWA::w","value":"N","parent":{"krate":0,"index":11834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11840},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84049,"byte_end":84050,"line_start":64,"line_end":64,"column_start":33,"column_end":34},"name":"a","qualname":"::base::coordinates::XYZWA::a","value":"N","parent":{"krate":0,"index":11834},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11864},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84066,"byte_end":84072,"line_start":65,"line_end":65,"column_start":14,"column_end":20},"name":"XYZWAB","qualname":"::base::coordinates::XYZWAB","value":"XYZWAB { x, y, z, w, a, b }","parent":null,"children":[{"krate":0,"index":11866},{"krate":0,"index":11867},{"krate":0,"index":11868},{"krate":0,"index":11869},{"krate":0,"index":11870},{"krate":0,"index":11871}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11866},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84074,"byte_end":84075,"line_start":65,"line_end":65,"column_start":22,"column_end":23},"name":"x","qualname":"::base::coordinates::XYZWAB::x","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11867},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84077,"byte_end":84078,"line_start":65,"line_end":65,"column_start":25,"column_end":26},"name":"y","qualname":"::base::coordinates::XYZWAB::y","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11868},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84080,"byte_end":84081,"line_start":65,"line_end":65,"column_start":28,"column_end":29},"name":"z","qualname":"::base::coordinates::XYZWAB::z","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11869},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84083,"byte_end":84084,"line_start":65,"line_end":65,"column_start":31,"column_end":32},"name":"w","qualname":"::base::coordinates::XYZWAB::w","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11870},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84086,"byte_end":84087,"line_start":65,"line_end":65,"column_start":34,"column_end":35},"name":"a","qualname":"::base::coordinates::XYZWAB::a","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11871},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84089,"byte_end":84090,"line_start":65,"line_end":65,"column_start":37,"column_end":38},"name":"b","qualname":"::base::coordinates::XYZWAB::b","value":"N","parent":{"krate":0,"index":11864},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11895},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84106,"byte_end":84110,"line_start":66,"line_end":66,"column_start":14,"column_end":18},"name":"IJKW","qualname":"::base::coordinates::IJKW","value":"IJKW { i, j, k, w }","parent":null,"children":[{"krate":0,"index":11897},{"krate":0,"index":11898},{"krate":0,"index":11899},{"krate":0,"index":11900}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11897},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84112,"byte_end":84113,"line_start":66,"line_end":66,"column_start":20,"column_end":21},"name":"i","qualname":"::base::coordinates::IJKW::i","value":"N","parent":{"krate":0,"index":11895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11898},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84115,"byte_end":84116,"line_start":66,"line_end":66,"column_start":23,"column_end":24},"name":"j","qualname":"::base::coordinates::IJKW::j","value":"N","parent":{"krate":0,"index":11895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11899},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84118,"byte_end":84119,"line_start":66,"line_end":66,"column_start":26,"column_end":27},"name":"k","qualname":"::base::coordinates::IJKW::k","value":"N","parent":{"krate":0,"index":11895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11900},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84121,"byte_end":84122,"line_start":66,"line_end":66,"column_start":29,"column_end":30},"name":"w","qualname":"::base::coordinates::IJKW::w","value":"N","parent":{"krate":0,"index":11895},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11924},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84183,"byte_end":84187,"line_start":71,"line_end":71,"column_start":14,"column_end":18},"name":"M2x2","qualname":"::base::coordinates::M2x2","value":"M2x2 { m11, m21, m12, m22 }","parent":null,"children":[{"krate":0,"index":11926},{"krate":0,"index":11927},{"krate":0,"index":11928},{"krate":0,"index":11929}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11926},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84189,"byte_end":84192,"line_start":71,"line_end":71,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x2::m11","value":"N","parent":{"krate":0,"index":11924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11927},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84194,"byte_end":84197,"line_start":71,"line_end":71,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x2::m21","value":"N","parent":{"krate":0,"index":11924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11928},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84218,"byte_end":84221,"line_start":72,"line_end":72,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x2::m12","value":"N","parent":{"krate":0,"index":11924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11929},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84223,"byte_end":84226,"line_start":72,"line_end":72,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x2::m22","value":"N","parent":{"krate":0,"index":11924},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11953},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84242,"byte_end":84246,"line_start":73,"line_end":73,"column_start":14,"column_end":18},"name":"M2x3","qualname":"::base::coordinates::M2x3","value":"M2x3 { m11, m21, m12, m22, m13, m23 }","parent":null,"children":[{"krate":0,"index":11955},{"krate":0,"index":11956},{"krate":0,"index":11957},{"krate":0,"index":11958},{"krate":0,"index":11959},{"krate":0,"index":11960}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11955},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84248,"byte_end":84251,"line_start":73,"line_end":73,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x3::m11","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11956},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84253,"byte_end":84256,"line_start":73,"line_end":73,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x3::m21","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11957},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84277,"byte_end":84280,"line_start":74,"line_end":74,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x3::m12","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11958},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84282,"byte_end":84285,"line_start":74,"line_end":74,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x3::m22","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11959},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84306,"byte_end":84309,"line_start":75,"line_end":75,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x3::m13","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11960},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84311,"byte_end":84314,"line_start":75,"line_end":75,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x3::m23","value":"N","parent":{"krate":0,"index":11953},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":11984},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84330,"byte_end":84334,"line_start":76,"line_end":76,"column_start":14,"column_end":18},"name":"M2x4","qualname":"::base::coordinates::M2x4","value":"M2x4 { m11, m21, m12, m22, m13, m23, m14, m24 }","parent":null,"children":[{"krate":0,"index":11986},{"krate":0,"index":11987},{"krate":0,"index":11988},{"krate":0,"index":11989},{"krate":0,"index":11990},{"krate":0,"index":11991},{"krate":0,"index":11992},{"krate":0,"index":11993}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":11986},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84336,"byte_end":84339,"line_start":76,"line_end":76,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x4::m11","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11987},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84341,"byte_end":84344,"line_start":76,"line_end":76,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x4::m21","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11988},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84365,"byte_end":84368,"line_start":77,"line_end":77,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x4::m12","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11989},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84370,"byte_end":84373,"line_start":77,"line_end":77,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x4::m22","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11990},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84394,"byte_end":84397,"line_start":78,"line_end":78,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x4::m13","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11991},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84399,"byte_end":84402,"line_start":78,"line_end":78,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x4::m23","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11992},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84423,"byte_end":84426,"line_start":79,"line_end":79,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x4::m14","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":11993},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84428,"byte_end":84431,"line_start":79,"line_end":79,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x4::m24","value":"N","parent":{"krate":0,"index":11984},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12017},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84447,"byte_end":84451,"line_start":80,"line_end":80,"column_start":14,"column_end":18},"name":"M2x5","qualname":"::base::coordinates::M2x5","value":"M2x5 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25 }","parent":null,"children":[{"krate":0,"index":12019},{"krate":0,"index":12020},{"krate":0,"index":12021},{"krate":0,"index":12022},{"krate":0,"index":12023},{"krate":0,"index":12024},{"krate":0,"index":12025},{"krate":0,"index":12026},{"krate":0,"index":12027},{"krate":0,"index":12028}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12019},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84453,"byte_end":84456,"line_start":80,"line_end":80,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x5::m11","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12020},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84458,"byte_end":84461,"line_start":80,"line_end":80,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x5::m21","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12021},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84482,"byte_end":84485,"line_start":81,"line_end":81,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x5::m12","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12022},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84487,"byte_end":84490,"line_start":81,"line_end":81,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x5::m22","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12023},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84511,"byte_end":84514,"line_start":82,"line_end":82,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x5::m13","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12024},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84516,"byte_end":84519,"line_start":82,"line_end":82,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x5::m23","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12025},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84540,"byte_end":84543,"line_start":83,"line_end":83,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x5::m14","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12026},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84545,"byte_end":84548,"line_start":83,"line_end":83,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x5::m24","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12027},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84569,"byte_end":84572,"line_start":84,"line_end":84,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x5::m15","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12028},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84574,"byte_end":84577,"line_start":84,"line_end":84,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x5::m25","value":"N","parent":{"krate":0,"index":12017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12052},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84593,"byte_end":84597,"line_start":85,"line_end":85,"column_start":14,"column_end":18},"name":"M2x6","qualname":"::base::coordinates::M2x6","value":"M2x6 { m11, m21, m12, m22, m13, m23, m14, m24, m15, m25, m16, m26 }","parent":null,"children":[{"krate":0,"index":12054},{"krate":0,"index":12055},{"krate":0,"index":12056},{"krate":0,"index":12057},{"krate":0,"index":12058},{"krate":0,"index":12059},{"krate":0,"index":12060},{"krate":0,"index":12061},{"krate":0,"index":12062},{"krate":0,"index":12063},{"krate":0,"index":12064},{"krate":0,"index":12065}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12054},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84599,"byte_end":84602,"line_start":85,"line_end":85,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M2x6::m11","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12055},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84604,"byte_end":84607,"line_start":85,"line_end":85,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M2x6::m21","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12056},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84628,"byte_end":84631,"line_start":86,"line_end":86,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M2x6::m12","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12057},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84633,"byte_end":84636,"line_start":86,"line_end":86,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M2x6::m22","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12058},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84657,"byte_end":84660,"line_start":87,"line_end":87,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M2x6::m13","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12059},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84662,"byte_end":84665,"line_start":87,"line_end":87,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M2x6::m23","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12060},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84686,"byte_end":84689,"line_start":88,"line_end":88,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M2x6::m14","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12061},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84691,"byte_end":84694,"line_start":88,"line_end":88,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M2x6::m24","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12062},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84715,"byte_end":84718,"line_start":89,"line_end":89,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M2x6::m15","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12063},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84720,"byte_end":84723,"line_start":89,"line_end":89,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M2x6::m25","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12064},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84744,"byte_end":84747,"line_start":90,"line_end":90,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M2x6::m16","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12065},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84749,"byte_end":84752,"line_start":90,"line_end":90,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M2x6::m26","value":"N","parent":{"krate":0,"index":12052},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12089},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84813,"byte_end":84817,"line_start":95,"line_end":95,"column_start":14,"column_end":18},"name":"M3x2","qualname":"::base::coordinates::M3x2","value":"M3x2 { m11, m21, m31, m12, m22, m32 }","parent":null,"children":[{"krate":0,"index":12091},{"krate":0,"index":12092},{"krate":0,"index":12093},{"krate":0,"index":12094},{"krate":0,"index":12095},{"krate":0,"index":12096}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12091},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84819,"byte_end":84822,"line_start":95,"line_end":95,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x2::m11","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12092},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84824,"byte_end":84827,"line_start":95,"line_end":95,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x2::m21","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12093},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84829,"byte_end":84832,"line_start":95,"line_end":95,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x2::m31","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12094},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84853,"byte_end":84856,"line_start":96,"line_end":96,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x2::m12","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12095},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84858,"byte_end":84861,"line_start":96,"line_end":96,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x2::m22","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12096},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84863,"byte_end":84866,"line_start":96,"line_end":96,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x2::m32","value":"N","parent":{"krate":0,"index":12089},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12120},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84882,"byte_end":84886,"line_start":97,"line_end":97,"column_start":14,"column_end":18},"name":"M3x3","qualname":"::base::coordinates::M3x3","value":"M3x3 { m11, m21, m31, m12, m22, m32, m13, m23, m33 }","parent":null,"children":[{"krate":0,"index":12122},{"krate":0,"index":12123},{"krate":0,"index":12124},{"krate":0,"index":12125},{"krate":0,"index":12126},{"krate":0,"index":12127},{"krate":0,"index":12128},{"krate":0,"index":12129},{"krate":0,"index":12130}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12122},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84888,"byte_end":84891,"line_start":97,"line_end":97,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x3::m11","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12123},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84893,"byte_end":84896,"line_start":97,"line_end":97,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x3::m21","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12124},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84898,"byte_end":84901,"line_start":97,"line_end":97,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x3::m31","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12125},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84922,"byte_end":84925,"line_start":98,"line_end":98,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x3::m12","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12126},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84927,"byte_end":84930,"line_start":98,"line_end":98,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x3::m22","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12127},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84932,"byte_end":84935,"line_start":98,"line_end":98,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x3::m32","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12128},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84956,"byte_end":84959,"line_start":99,"line_end":99,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x3::m13","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12129},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84961,"byte_end":84964,"line_start":99,"line_end":99,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x3::m23","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12130},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84966,"byte_end":84969,"line_start":99,"line_end":99,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x3::m33","value":"N","parent":{"krate":0,"index":12120},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12154},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84985,"byte_end":84989,"line_start":100,"line_end":100,"column_start":14,"column_end":18},"name":"M3x4","qualname":"::base::coordinates::M3x4","value":"M3x4 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34 }","parent":null,"children":[{"krate":0,"index":12156},{"krate":0,"index":12157},{"krate":0,"index":12158},{"krate":0,"index":12159},{"krate":0,"index":12160},{"krate":0,"index":12161},{"krate":0,"index":12162},{"krate":0,"index":12163},{"krate":0,"index":12164},{"krate":0,"index":12165},{"krate":0,"index":12166},{"krate":0,"index":12167}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12156},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84991,"byte_end":84994,"line_start":100,"line_end":100,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x4::m11","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12157},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":84996,"byte_end":84999,"line_start":100,"line_end":100,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x4::m21","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12158},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85001,"byte_end":85004,"line_start":100,"line_end":100,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x4::m31","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12159},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85025,"byte_end":85028,"line_start":101,"line_end":101,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x4::m12","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12160},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85030,"byte_end":85033,"line_start":101,"line_end":101,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x4::m22","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12161},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85035,"byte_end":85038,"line_start":101,"line_end":101,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x4::m32","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12162},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85059,"byte_end":85062,"line_start":102,"line_end":102,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x4::m13","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12163},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85064,"byte_end":85067,"line_start":102,"line_end":102,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x4::m23","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12164},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85069,"byte_end":85072,"line_start":102,"line_end":102,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x4::m33","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12165},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85093,"byte_end":85096,"line_start":103,"line_end":103,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x4::m14","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12166},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85098,"byte_end":85101,"line_start":103,"line_end":103,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x4::m24","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12167},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85103,"byte_end":85106,"line_start":103,"line_end":103,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x4::m34","value":"N","parent":{"krate":0,"index":12154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12191},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85122,"byte_end":85126,"line_start":104,"line_end":104,"column_start":14,"column_end":18},"name":"M3x5","qualname":"::base::coordinates::M3x5","value":"M3x5 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35 }","parent":null,"children":[{"krate":0,"index":12193},{"krate":0,"index":12194},{"krate":0,"index":12195},{"krate":0,"index":12196},{"krate":0,"index":12197},{"krate":0,"index":12198},{"krate":0,"index":12199},{"krate":0,"index":12200},{"krate":0,"index":12201},{"krate":0,"index":12202},{"krate":0,"index":12203},{"krate":0,"index":12204},{"krate":0,"index":12205},{"krate":0,"index":12206},{"krate":0,"index":12207}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12193},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85128,"byte_end":85131,"line_start":104,"line_end":104,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x5::m11","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12194},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85133,"byte_end":85136,"line_start":104,"line_end":104,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x5::m21","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12195},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85138,"byte_end":85141,"line_start":104,"line_end":104,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x5::m31","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12196},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85162,"byte_end":85165,"line_start":105,"line_end":105,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x5::m12","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12197},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85167,"byte_end":85170,"line_start":105,"line_end":105,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x5::m22","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12198},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85172,"byte_end":85175,"line_start":105,"line_end":105,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x5::m32","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12199},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85196,"byte_end":85199,"line_start":106,"line_end":106,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x5::m13","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12200},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85201,"byte_end":85204,"line_start":106,"line_end":106,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x5::m23","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12201},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85206,"byte_end":85209,"line_start":106,"line_end":106,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x5::m33","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12202},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85230,"byte_end":85233,"line_start":107,"line_end":107,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x5::m14","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12203},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85235,"byte_end":85238,"line_start":107,"line_end":107,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x5::m24","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12204},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85240,"byte_end":85243,"line_start":107,"line_end":107,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x5::m34","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12205},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85264,"byte_end":85267,"line_start":108,"line_end":108,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x5::m15","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12206},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85269,"byte_end":85272,"line_start":108,"line_end":108,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x5::m25","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12207},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85274,"byte_end":85277,"line_start":108,"line_end":108,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x5::m35","value":"N","parent":{"krate":0,"index":12191},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12231},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85293,"byte_end":85297,"line_start":109,"line_end":109,"column_start":14,"column_end":18},"name":"M3x6","qualname":"::base::coordinates::M3x6","value":"M3x6 { m11, m21, m31, m12, m22, m32, m13, m23, m33, m14, m24, m34, m15, m25, m35, m16, m26, m36 }","parent":null,"children":[{"krate":0,"index":12233},{"krate":0,"index":12234},{"krate":0,"index":12235},{"krate":0,"index":12236},{"krate":0,"index":12237},{"krate":0,"index":12238},{"krate":0,"index":12239},{"krate":0,"index":12240},{"krate":0,"index":12241},{"krate":0,"index":12242},{"krate":0,"index":12243},{"krate":0,"index":12244},{"krate":0,"index":12245},{"krate":0,"index":12246},{"krate":0,"index":12247},{"krate":0,"index":12248},{"krate":0,"index":12249},{"krate":0,"index":12250}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12233},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85299,"byte_end":85302,"line_start":109,"line_end":109,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M3x6::m11","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12234},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85304,"byte_end":85307,"line_start":109,"line_end":109,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M3x6::m21","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12235},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85309,"byte_end":85312,"line_start":109,"line_end":109,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M3x6::m31","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12236},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85333,"byte_end":85336,"line_start":110,"line_end":110,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M3x6::m12","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12237},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85338,"byte_end":85341,"line_start":110,"line_end":110,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M3x6::m22","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12238},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85343,"byte_end":85346,"line_start":110,"line_end":110,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M3x6::m32","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12239},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85367,"byte_end":85370,"line_start":111,"line_end":111,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M3x6::m13","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12240},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85372,"byte_end":85375,"line_start":111,"line_end":111,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M3x6::m23","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12241},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85377,"byte_end":85380,"line_start":111,"line_end":111,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M3x6::m33","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12242},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85401,"byte_end":85404,"line_start":112,"line_end":112,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M3x6::m14","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12243},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85406,"byte_end":85409,"line_start":112,"line_end":112,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M3x6::m24","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12244},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85411,"byte_end":85414,"line_start":112,"line_end":112,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M3x6::m34","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12245},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85435,"byte_end":85438,"line_start":113,"line_end":113,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M3x6::m15","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12246},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85440,"byte_end":85443,"line_start":113,"line_end":113,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M3x6::m25","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12247},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85445,"byte_end":85448,"line_start":113,"line_end":113,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M3x6::m35","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12248},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85469,"byte_end":85472,"line_start":114,"line_end":114,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M3x6::m16","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12249},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85474,"byte_end":85477,"line_start":114,"line_end":114,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M3x6::m26","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12250},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85479,"byte_end":85482,"line_start":114,"line_end":114,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M3x6::m36","value":"N","parent":{"krate":0,"index":12231},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12274},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85543,"byte_end":85547,"line_start":119,"line_end":119,"column_start":14,"column_end":18},"name":"M4x2","qualname":"::base::coordinates::M4x2","value":"M4x2 { m11, m21, m31, m41, m12, m22, m32, m42 }","parent":null,"children":[{"krate":0,"index":12276},{"krate":0,"index":12277},{"krate":0,"index":12278},{"krate":0,"index":12279},{"krate":0,"index":12280},{"krate":0,"index":12281},{"krate":0,"index":12282},{"krate":0,"index":12283}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12276},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85549,"byte_end":85552,"line_start":119,"line_end":119,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x2::m11","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12277},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85554,"byte_end":85557,"line_start":119,"line_end":119,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x2::m21","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12278},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85559,"byte_end":85562,"line_start":119,"line_end":119,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x2::m31","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12279},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85564,"byte_end":85567,"line_start":119,"line_end":119,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x2::m41","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12280},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85588,"byte_end":85591,"line_start":120,"line_end":120,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x2::m12","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12281},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85593,"byte_end":85596,"line_start":120,"line_end":120,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x2::m22","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12282},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85598,"byte_end":85601,"line_start":120,"line_end":120,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x2::m32","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12283},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85603,"byte_end":85606,"line_start":120,"line_end":120,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x2::m42","value":"N","parent":{"krate":0,"index":12274},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12307},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85622,"byte_end":85626,"line_start":121,"line_end":121,"column_start":14,"column_end":18},"name":"M4x3","qualname":"::base::coordinates::M4x3","value":"M4x3 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43 }","parent":null,"children":[{"krate":0,"index":12309},{"krate":0,"index":12310},{"krate":0,"index":12311},{"krate":0,"index":12312},{"krate":0,"index":12313},{"krate":0,"index":12314},{"krate":0,"index":12315},{"krate":0,"index":12316},{"krate":0,"index":12317},{"krate":0,"index":12318},{"krate":0,"index":12319},{"krate":0,"index":12320}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12309},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85628,"byte_end":85631,"line_start":121,"line_end":121,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x3::m11","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12310},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85633,"byte_end":85636,"line_start":121,"line_end":121,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x3::m21","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12311},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85638,"byte_end":85641,"line_start":121,"line_end":121,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x3::m31","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12312},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85643,"byte_end":85646,"line_start":121,"line_end":121,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x3::m41","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85667,"byte_end":85670,"line_start":122,"line_end":122,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x3::m12","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12314},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85672,"byte_end":85675,"line_start":122,"line_end":122,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x3::m22","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12315},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85677,"byte_end":85680,"line_start":122,"line_end":122,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x3::m32","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12316},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85682,"byte_end":85685,"line_start":122,"line_end":122,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x3::m42","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12317},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85706,"byte_end":85709,"line_start":123,"line_end":123,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x3::m13","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12318},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85711,"byte_end":85714,"line_start":123,"line_end":123,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x3::m23","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12319},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85716,"byte_end":85719,"line_start":123,"line_end":123,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x3::m33","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12320},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85721,"byte_end":85724,"line_start":123,"line_end":123,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x3::m43","value":"N","parent":{"krate":0,"index":12307},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12344},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85740,"byte_end":85744,"line_start":124,"line_end":124,"column_start":14,"column_end":18},"name":"M4x4","qualname":"::base::coordinates::M4x4","value":"M4x4 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44 }","parent":null,"children":[{"krate":0,"index":12346},{"krate":0,"index":12347},{"krate":0,"index":12348},{"krate":0,"index":12349},{"krate":0,"index":12350},{"krate":0,"index":12351},{"krate":0,"index":12352},{"krate":0,"index":12353},{"krate":0,"index":12354},{"krate":0,"index":12355},{"krate":0,"index":12356},{"krate":0,"index":12357},{"krate":0,"index":12358},{"krate":0,"index":12359},{"krate":0,"index":12360},{"krate":0,"index":12361}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12346},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85746,"byte_end":85749,"line_start":124,"line_end":124,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x4::m11","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12347},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85751,"byte_end":85754,"line_start":124,"line_end":124,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x4::m21","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12348},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85756,"byte_end":85759,"line_start":124,"line_end":124,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x4::m31","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12349},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85761,"byte_end":85764,"line_start":124,"line_end":124,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x4::m41","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12350},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85785,"byte_end":85788,"line_start":125,"line_end":125,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x4::m12","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12351},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85790,"byte_end":85793,"line_start":125,"line_end":125,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x4::m22","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12352},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85795,"byte_end":85798,"line_start":125,"line_end":125,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x4::m32","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12353},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85800,"byte_end":85803,"line_start":125,"line_end":125,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x4::m42","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12354},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85824,"byte_end":85827,"line_start":126,"line_end":126,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x4::m13","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12355},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85829,"byte_end":85832,"line_start":126,"line_end":126,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x4::m23","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12356},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85834,"byte_end":85837,"line_start":126,"line_end":126,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x4::m33","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85839,"byte_end":85842,"line_start":126,"line_end":126,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x4::m43","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12358},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85863,"byte_end":85866,"line_start":127,"line_end":127,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x4::m14","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12359},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85868,"byte_end":85871,"line_start":127,"line_end":127,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x4::m24","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12360},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85873,"byte_end":85876,"line_start":127,"line_end":127,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x4::m34","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12361},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85878,"byte_end":85881,"line_start":127,"line_end":127,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x4::m44","value":"N","parent":{"krate":0,"index":12344},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12385},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85897,"byte_end":85901,"line_start":128,"line_end":128,"column_start":14,"column_end":18},"name":"M4x5","qualname":"::base::coordinates::M4x5","value":"M4x5 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45 }","parent":null,"children":[{"krate":0,"index":12387},{"krate":0,"index":12388},{"krate":0,"index":12389},{"krate":0,"index":12390},{"krate":0,"index":12391},{"krate":0,"index":12392},{"krate":0,"index":12393},{"krate":0,"index":12394},{"krate":0,"index":12395},{"krate":0,"index":12396},{"krate":0,"index":12397},{"krate":0,"index":12398},{"krate":0,"index":12399},{"krate":0,"index":12400},{"krate":0,"index":12401},{"krate":0,"index":12402},{"krate":0,"index":12403},{"krate":0,"index":12404},{"krate":0,"index":12405},{"krate":0,"index":12406}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12387},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85903,"byte_end":85906,"line_start":128,"line_end":128,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x5::m11","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12388},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85908,"byte_end":85911,"line_start":128,"line_end":128,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x5::m21","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12389},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85913,"byte_end":85916,"line_start":128,"line_end":128,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x5::m31","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12390},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85918,"byte_end":85921,"line_start":128,"line_end":128,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x5::m41","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12391},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85942,"byte_end":85945,"line_start":129,"line_end":129,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x5::m12","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12392},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85947,"byte_end":85950,"line_start":129,"line_end":129,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x5::m22","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12393},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85952,"byte_end":85955,"line_start":129,"line_end":129,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x5::m32","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12394},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85957,"byte_end":85960,"line_start":129,"line_end":129,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x5::m42","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12395},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85981,"byte_end":85984,"line_start":130,"line_end":130,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x5::m13","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12396},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85986,"byte_end":85989,"line_start":130,"line_end":130,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x5::m23","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12397},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85991,"byte_end":85994,"line_start":130,"line_end":130,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x5::m33","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12398},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":85996,"byte_end":85999,"line_start":130,"line_end":130,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x5::m43","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12399},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86020,"byte_end":86023,"line_start":131,"line_end":131,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x5::m14","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12400},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86025,"byte_end":86028,"line_start":131,"line_end":131,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x5::m24","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12401},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86030,"byte_end":86033,"line_start":131,"line_end":131,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x5::m34","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12402},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86035,"byte_end":86038,"line_start":131,"line_end":131,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x5::m44","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12403},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86059,"byte_end":86062,"line_start":132,"line_end":132,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x5::m15","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12404},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86064,"byte_end":86067,"line_start":132,"line_end":132,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x5::m25","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12405},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86069,"byte_end":86072,"line_start":132,"line_end":132,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x5::m35","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12406},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86074,"byte_end":86077,"line_start":132,"line_end":132,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x5::m45","value":"N","parent":{"krate":0,"index":12385},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12430},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86093,"byte_end":86097,"line_start":133,"line_end":133,"column_start":14,"column_end":18},"name":"M4x6","qualname":"::base::coordinates::M4x6","value":"M4x6 { m11, m21, m31, m41, m12, m22, m32, m42, m13, m23, m33, m43, m14, m24, m34, m44, m15, m25, m35, m45, m16, m26, m36, m46 }","parent":null,"children":[{"krate":0,"index":12432},{"krate":0,"index":12433},{"krate":0,"index":12434},{"krate":0,"index":12435},{"krate":0,"index":12436},{"krate":0,"index":12437},{"krate":0,"index":12438},{"krate":0,"index":12439},{"krate":0,"index":12440},{"krate":0,"index":12441},{"krate":0,"index":12442},{"krate":0,"index":12443},{"krate":0,"index":12444},{"krate":0,"index":12445},{"krate":0,"index":12446},{"krate":0,"index":12447},{"krate":0,"index":12448},{"krate":0,"index":12449},{"krate":0,"index":12450},{"krate":0,"index":12451},{"krate":0,"index":12452},{"krate":0,"index":12453},{"krate":0,"index":12454},{"krate":0,"index":12455}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12432},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86099,"byte_end":86102,"line_start":133,"line_end":133,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M4x6::m11","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12433},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86104,"byte_end":86107,"line_start":133,"line_end":133,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M4x6::m21","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12434},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86109,"byte_end":86112,"line_start":133,"line_end":133,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M4x6::m31","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12435},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86114,"byte_end":86117,"line_start":133,"line_end":133,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M4x6::m41","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12436},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86138,"byte_end":86141,"line_start":134,"line_end":134,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M4x6::m12","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12437},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86143,"byte_end":86146,"line_start":134,"line_end":134,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M4x6::m22","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12438},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86148,"byte_end":86151,"line_start":134,"line_end":134,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M4x6::m32","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12439},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86153,"byte_end":86156,"line_start":134,"line_end":134,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M4x6::m42","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12440},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86177,"byte_end":86180,"line_start":135,"line_end":135,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M4x6::m13","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12441},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86182,"byte_end":86185,"line_start":135,"line_end":135,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M4x6::m23","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12442},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86187,"byte_end":86190,"line_start":135,"line_end":135,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M4x6::m33","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12443},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86192,"byte_end":86195,"line_start":135,"line_end":135,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M4x6::m43","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12444},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86216,"byte_end":86219,"line_start":136,"line_end":136,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M4x6::m14","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12445},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86221,"byte_end":86224,"line_start":136,"line_end":136,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M4x6::m24","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12446},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86226,"byte_end":86229,"line_start":136,"line_end":136,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M4x6::m34","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12447},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86231,"byte_end":86234,"line_start":136,"line_end":136,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M4x6::m44","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12448},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86255,"byte_end":86258,"line_start":137,"line_end":137,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M4x6::m15","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12449},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86260,"byte_end":86263,"line_start":137,"line_end":137,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M4x6::m25","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12450},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86265,"byte_end":86268,"line_start":137,"line_end":137,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M4x6::m35","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12451},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86270,"byte_end":86273,"line_start":137,"line_end":137,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M4x6::m45","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12452},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86294,"byte_end":86297,"line_start":138,"line_end":138,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M4x6::m16","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12453},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86299,"byte_end":86302,"line_start":138,"line_end":138,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M4x6::m26","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12454},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86304,"byte_end":86307,"line_start":138,"line_end":138,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M4x6::m36","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12455},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86309,"byte_end":86312,"line_start":138,"line_end":138,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M4x6::m46","value":"N","parent":{"krate":0,"index":12430},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12479},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86373,"byte_end":86377,"line_start":143,"line_end":143,"column_start":14,"column_end":18},"name":"M5x2","qualname":"::base::coordinates::M5x2","value":"M5x2 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52 }","parent":null,"children":[{"krate":0,"index":12481},{"krate":0,"index":12482},{"krate":0,"index":12483},{"krate":0,"index":12484},{"krate":0,"index":12485},{"krate":0,"index":12486},{"krate":0,"index":12487},{"krate":0,"index":12488},{"krate":0,"index":12489},{"krate":0,"index":12490}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12481},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86379,"byte_end":86382,"line_start":143,"line_end":143,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x2::m11","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12482},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86384,"byte_end":86387,"line_start":143,"line_end":143,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x2::m21","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12483},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86389,"byte_end":86392,"line_start":143,"line_end":143,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x2::m31","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12484},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86394,"byte_end":86397,"line_start":143,"line_end":143,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x2::m41","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12485},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86399,"byte_end":86402,"line_start":143,"line_end":143,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x2::m51","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12486},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86423,"byte_end":86426,"line_start":144,"line_end":144,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x2::m12","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12487},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86428,"byte_end":86431,"line_start":144,"line_end":144,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x2::m22","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12488},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86433,"byte_end":86436,"line_start":144,"line_end":144,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x2::m32","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12489},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86438,"byte_end":86441,"line_start":144,"line_end":144,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x2::m42","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12490},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86443,"byte_end":86446,"line_start":144,"line_end":144,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x2::m52","value":"N","parent":{"krate":0,"index":12479},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12514},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86462,"byte_end":86466,"line_start":145,"line_end":145,"column_start":14,"column_end":18},"name":"M5x3","qualname":"::base::coordinates::M5x3","value":"M5x3 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53 }","parent":null,"children":[{"krate":0,"index":12516},{"krate":0,"index":12517},{"krate":0,"index":12518},{"krate":0,"index":12519},{"krate":0,"index":12520},{"krate":0,"index":12521},{"krate":0,"index":12522},{"krate":0,"index":12523},{"krate":0,"index":12524},{"krate":0,"index":12525},{"krate":0,"index":12526},{"krate":0,"index":12527},{"krate":0,"index":12528},{"krate":0,"index":12529},{"krate":0,"index":12530}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12516},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86468,"byte_end":86471,"line_start":145,"line_end":145,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x3::m11","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12517},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86473,"byte_end":86476,"line_start":145,"line_end":145,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x3::m21","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12518},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86478,"byte_end":86481,"line_start":145,"line_end":145,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x3::m31","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12519},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86483,"byte_end":86486,"line_start":145,"line_end":145,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x3::m41","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12520},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86488,"byte_end":86491,"line_start":145,"line_end":145,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x3::m51","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12521},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86512,"byte_end":86515,"line_start":146,"line_end":146,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x3::m12","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12522},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86517,"byte_end":86520,"line_start":146,"line_end":146,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x3::m22","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12523},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86522,"byte_end":86525,"line_start":146,"line_end":146,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x3::m32","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12524},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86527,"byte_end":86530,"line_start":146,"line_end":146,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x3::m42","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12525},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86532,"byte_end":86535,"line_start":146,"line_end":146,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x3::m52","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12526},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86556,"byte_end":86559,"line_start":147,"line_end":147,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x3::m13","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12527},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86561,"byte_end":86564,"line_start":147,"line_end":147,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x3::m23","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12528},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86566,"byte_end":86569,"line_start":147,"line_end":147,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x3::m33","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12529},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86571,"byte_end":86574,"line_start":147,"line_end":147,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x3::m43","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12530},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86576,"byte_end":86579,"line_start":147,"line_end":147,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x3::m53","value":"N","parent":{"krate":0,"index":12514},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12554},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86595,"byte_end":86599,"line_start":148,"line_end":148,"column_start":14,"column_end":18},"name":"M5x4","qualname":"::base::coordinates::M5x4","value":"M5x4 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54 }","parent":null,"children":[{"krate":0,"index":12556},{"krate":0,"index":12557},{"krate":0,"index":12558},{"krate":0,"index":12559},{"krate":0,"index":12560},{"krate":0,"index":12561},{"krate":0,"index":12562},{"krate":0,"index":12563},{"krate":0,"index":12564},{"krate":0,"index":12565},{"krate":0,"index":12566},{"krate":0,"index":12567},{"krate":0,"index":12568},{"krate":0,"index":12569},{"krate":0,"index":12570},{"krate":0,"index":12571},{"krate":0,"index":12572},{"krate":0,"index":12573},{"krate":0,"index":12574},{"krate":0,"index":12575}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12556},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86601,"byte_end":86604,"line_start":148,"line_end":148,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x4::m11","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12557},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86606,"byte_end":86609,"line_start":148,"line_end":148,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x4::m21","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12558},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86611,"byte_end":86614,"line_start":148,"line_end":148,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x4::m31","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12559},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86616,"byte_end":86619,"line_start":148,"line_end":148,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x4::m41","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12560},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86621,"byte_end":86624,"line_start":148,"line_end":148,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x4::m51","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12561},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86645,"byte_end":86648,"line_start":149,"line_end":149,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x4::m12","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12562},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86650,"byte_end":86653,"line_start":149,"line_end":149,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x4::m22","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12563},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86655,"byte_end":86658,"line_start":149,"line_end":149,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x4::m32","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12564},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86660,"byte_end":86663,"line_start":149,"line_end":149,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x4::m42","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12565},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86665,"byte_end":86668,"line_start":149,"line_end":149,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x4::m52","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12566},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86689,"byte_end":86692,"line_start":150,"line_end":150,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x4::m13","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12567},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86694,"byte_end":86697,"line_start":150,"line_end":150,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x4::m23","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12568},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86699,"byte_end":86702,"line_start":150,"line_end":150,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x4::m33","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12569},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86704,"byte_end":86707,"line_start":150,"line_end":150,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x4::m43","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12570},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86709,"byte_end":86712,"line_start":150,"line_end":150,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x4::m53","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12571},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86733,"byte_end":86736,"line_start":151,"line_end":151,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x4::m14","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12572},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86738,"byte_end":86741,"line_start":151,"line_end":151,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x4::m24","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12573},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86743,"byte_end":86746,"line_start":151,"line_end":151,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x4::m34","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12574},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86748,"byte_end":86751,"line_start":151,"line_end":151,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x4::m44","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12575},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86753,"byte_end":86756,"line_start":151,"line_end":151,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x4::m54","value":"N","parent":{"krate":0,"index":12554},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12599},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86772,"byte_end":86776,"line_start":152,"line_end":152,"column_start":14,"column_end":18},"name":"M5x5","qualname":"::base::coordinates::M5x5","value":"M5x5 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55 }","parent":null,"children":[{"krate":0,"index":12601},{"krate":0,"index":12602},{"krate":0,"index":12603},{"krate":0,"index":12604},{"krate":0,"index":12605},{"krate":0,"index":12606},{"krate":0,"index":12607},{"krate":0,"index":12608},{"krate":0,"index":12609},{"krate":0,"index":12610},{"krate":0,"index":12611},{"krate":0,"index":12612},{"krate":0,"index":12613},{"krate":0,"index":12614},{"krate":0,"index":12615},{"krate":0,"index":12616},{"krate":0,"index":12617},{"krate":0,"index":12618},{"krate":0,"index":12619},{"krate":0,"index":12620},{"krate":0,"index":12621},{"krate":0,"index":12622},{"krate":0,"index":12623},{"krate":0,"index":12624},{"krate":0,"index":12625}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12601},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86778,"byte_end":86781,"line_start":152,"line_end":152,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x5::m11","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12602},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86783,"byte_end":86786,"line_start":152,"line_end":152,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x5::m21","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12603},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86788,"byte_end":86791,"line_start":152,"line_end":152,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x5::m31","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12604},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86793,"byte_end":86796,"line_start":152,"line_end":152,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x5::m41","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12605},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86798,"byte_end":86801,"line_start":152,"line_end":152,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x5::m51","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12606},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86822,"byte_end":86825,"line_start":153,"line_end":153,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x5::m12","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86827,"byte_end":86830,"line_start":153,"line_end":153,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x5::m22","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12608},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86832,"byte_end":86835,"line_start":153,"line_end":153,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x5::m32","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12609},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86837,"byte_end":86840,"line_start":153,"line_end":153,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x5::m42","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12610},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86842,"byte_end":86845,"line_start":153,"line_end":153,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x5::m52","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12611},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86866,"byte_end":86869,"line_start":154,"line_end":154,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x5::m13","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12612},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86871,"byte_end":86874,"line_start":154,"line_end":154,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x5::m23","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12613},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86876,"byte_end":86879,"line_start":154,"line_end":154,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x5::m33","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12614},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86881,"byte_end":86884,"line_start":154,"line_end":154,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x5::m43","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12615},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86886,"byte_end":86889,"line_start":154,"line_end":154,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x5::m53","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12616},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86910,"byte_end":86913,"line_start":155,"line_end":155,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x5::m14","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12617},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86915,"byte_end":86918,"line_start":155,"line_end":155,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x5::m24","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12618},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86920,"byte_end":86923,"line_start":155,"line_end":155,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x5::m34","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12619},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86925,"byte_end":86928,"line_start":155,"line_end":155,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x5::m44","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12620},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86930,"byte_end":86933,"line_start":155,"line_end":155,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x5::m54","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12621},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86954,"byte_end":86957,"line_start":156,"line_end":156,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x5::m15","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12622},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86959,"byte_end":86962,"line_start":156,"line_end":156,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x5::m25","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12623},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86964,"byte_end":86967,"line_start":156,"line_end":156,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x5::m35","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12624},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86969,"byte_end":86972,"line_start":156,"line_end":156,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x5::m45","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12625},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86974,"byte_end":86977,"line_start":156,"line_end":156,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x5::m55","value":"N","parent":{"krate":0,"index":12599},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12649},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86993,"byte_end":86997,"line_start":157,"line_end":157,"column_start":14,"column_end":18},"name":"M5x6","qualname":"::base::coordinates::M5x6","value":"M5x6 { m11, m21, m31, m41, m51, m12, m22, m32, m42, m52, m13, m23, m33, m43, m53, m14, m24, m34, m44, m54, m15, m25, m35, m45, m55, m16, m26, m36, m46, m56 }","parent":null,"children":[{"krate":0,"index":12651},{"krate":0,"index":12652},{"krate":0,"index":12653},{"krate":0,"index":12654},{"krate":0,"index":12655},{"krate":0,"index":12656},{"krate":0,"index":12657},{"krate":0,"index":12658},{"krate":0,"index":12659},{"krate":0,"index":12660},{"krate":0,"index":12661},{"krate":0,"index":12662},{"krate":0,"index":12663},{"krate":0,"index":12664},{"krate":0,"index":12665},{"krate":0,"index":12666},{"krate":0,"index":12667},{"krate":0,"index":12668},{"krate":0,"index":12669},{"krate":0,"index":12670},{"krate":0,"index":12671},{"krate":0,"index":12672},{"krate":0,"index":12673},{"krate":0,"index":12674},{"krate":0,"index":12675},{"krate":0,"index":12676},{"krate":0,"index":12677},{"krate":0,"index":12678},{"krate":0,"index":12679},{"krate":0,"index":12680}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12651},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":86999,"byte_end":87002,"line_start":157,"line_end":157,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M5x6::m11","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12652},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87004,"byte_end":87007,"line_start":157,"line_end":157,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M5x6::m21","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12653},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87009,"byte_end":87012,"line_start":157,"line_end":157,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M5x6::m31","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12654},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87014,"byte_end":87017,"line_start":157,"line_end":157,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M5x6::m41","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12655},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87019,"byte_end":87022,"line_start":157,"line_end":157,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M5x6::m51","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12656},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87043,"byte_end":87046,"line_start":158,"line_end":158,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M5x6::m12","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12657},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87048,"byte_end":87051,"line_start":158,"line_end":158,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M5x6::m22","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12658},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87053,"byte_end":87056,"line_start":158,"line_end":158,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M5x6::m32","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12659},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87058,"byte_end":87061,"line_start":158,"line_end":158,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M5x6::m42","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12660},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87063,"byte_end":87066,"line_start":158,"line_end":158,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M5x6::m52","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12661},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87087,"byte_end":87090,"line_start":159,"line_end":159,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M5x6::m13","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12662},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87092,"byte_end":87095,"line_start":159,"line_end":159,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M5x6::m23","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12663},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87097,"byte_end":87100,"line_start":159,"line_end":159,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M5x6::m33","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12664},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87102,"byte_end":87105,"line_start":159,"line_end":159,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M5x6::m43","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12665},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87107,"byte_end":87110,"line_start":159,"line_end":159,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M5x6::m53","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12666},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87131,"byte_end":87134,"line_start":160,"line_end":160,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M5x6::m14","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12667},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87136,"byte_end":87139,"line_start":160,"line_end":160,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M5x6::m24","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12668},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87141,"byte_end":87144,"line_start":160,"line_end":160,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M5x6::m34","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12669},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87146,"byte_end":87149,"line_start":160,"line_end":160,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M5x6::m44","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12670},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87151,"byte_end":87154,"line_start":160,"line_end":160,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M5x6::m54","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12671},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87175,"byte_end":87178,"line_start":161,"line_end":161,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M5x6::m15","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12672},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87180,"byte_end":87183,"line_start":161,"line_end":161,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M5x6::m25","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12673},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87185,"byte_end":87188,"line_start":161,"line_end":161,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M5x6::m35","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12674},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87190,"byte_end":87193,"line_start":161,"line_end":161,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M5x6::m45","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12675},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87195,"byte_end":87198,"line_start":161,"line_end":161,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M5x6::m55","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12676},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87219,"byte_end":87222,"line_start":162,"line_end":162,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M5x6::m16","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87224,"byte_end":87227,"line_start":162,"line_end":162,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M5x6::m26","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12678},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87229,"byte_end":87232,"line_start":162,"line_end":162,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M5x6::m36","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12679},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87234,"byte_end":87237,"line_start":162,"line_end":162,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M5x6::m46","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12680},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87239,"byte_end":87242,"line_start":162,"line_end":162,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M5x6::m56","value":"N","parent":{"krate":0,"index":12649},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12704},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87304,"byte_end":87308,"line_start":168,"line_end":168,"column_start":14,"column_end":18},"name":"M6x2","qualname":"::base::coordinates::M6x2","value":"M6x2 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62 }","parent":null,"children":[{"krate":0,"index":12706},{"krate":0,"index":12707},{"krate":0,"index":12708},{"krate":0,"index":12709},{"krate":0,"index":12710},{"krate":0,"index":12711},{"krate":0,"index":12712},{"krate":0,"index":12713},{"krate":0,"index":12714},{"krate":0,"index":12715},{"krate":0,"index":12716},{"krate":0,"index":12717}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12706},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87310,"byte_end":87313,"line_start":168,"line_end":168,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x2::m11","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12707},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87315,"byte_end":87318,"line_start":168,"line_end":168,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x2::m21","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12708},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87320,"byte_end":87323,"line_start":168,"line_end":168,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x2::m31","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12709},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87325,"byte_end":87328,"line_start":168,"line_end":168,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x2::m41","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12710},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87330,"byte_end":87333,"line_start":168,"line_end":168,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x2::m51","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12711},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87335,"byte_end":87338,"line_start":168,"line_end":168,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x2::m61","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12712},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87359,"byte_end":87362,"line_start":169,"line_end":169,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x2::m12","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12713},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87364,"byte_end":87367,"line_start":169,"line_end":169,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x2::m22","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12714},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87369,"byte_end":87372,"line_start":169,"line_end":169,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x2::m32","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12715},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87374,"byte_end":87377,"line_start":169,"line_end":169,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x2::m42","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12716},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87379,"byte_end":87382,"line_start":169,"line_end":169,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x2::m52","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12717},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87384,"byte_end":87387,"line_start":169,"line_end":169,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x2::m62","value":"N","parent":{"krate":0,"index":12704},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12741},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87403,"byte_end":87407,"line_start":170,"line_end":170,"column_start":14,"column_end":18},"name":"M6x3","qualname":"::base::coordinates::M6x3","value":"M6x3 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63 }","parent":null,"children":[{"krate":0,"index":12743},{"krate":0,"index":12744},{"krate":0,"index":12745},{"krate":0,"index":12746},{"krate":0,"index":12747},{"krate":0,"index":12748},{"krate":0,"index":12749},{"krate":0,"index":12750},{"krate":0,"index":12751},{"krate":0,"index":12752},{"krate":0,"index":12753},{"krate":0,"index":12754},{"krate":0,"index":12755},{"krate":0,"index":12756},{"krate":0,"index":12757},{"krate":0,"index":12758},{"krate":0,"index":12759},{"krate":0,"index":12760}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12743},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87409,"byte_end":87412,"line_start":170,"line_end":170,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x3::m11","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12744},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87414,"byte_end":87417,"line_start":170,"line_end":170,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x3::m21","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12745},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87419,"byte_end":87422,"line_start":170,"line_end":170,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x3::m31","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12746},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87424,"byte_end":87427,"line_start":170,"line_end":170,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x3::m41","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12747},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87429,"byte_end":87432,"line_start":170,"line_end":170,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x3::m51","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12748},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87434,"byte_end":87437,"line_start":170,"line_end":170,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x3::m61","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12749},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87458,"byte_end":87461,"line_start":171,"line_end":171,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x3::m12","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12750},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87463,"byte_end":87466,"line_start":171,"line_end":171,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x3::m22","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12751},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87468,"byte_end":87471,"line_start":171,"line_end":171,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x3::m32","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12752},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87473,"byte_end":87476,"line_start":171,"line_end":171,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x3::m42","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12753},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87478,"byte_end":87481,"line_start":171,"line_end":171,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x3::m52","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12754},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87483,"byte_end":87486,"line_start":171,"line_end":171,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x3::m62","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12755},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87507,"byte_end":87510,"line_start":172,"line_end":172,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x3::m13","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12756},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87512,"byte_end":87515,"line_start":172,"line_end":172,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x3::m23","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12757},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87517,"byte_end":87520,"line_start":172,"line_end":172,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x3::m33","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12758},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87522,"byte_end":87525,"line_start":172,"line_end":172,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x3::m43","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12759},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87527,"byte_end":87530,"line_start":172,"line_end":172,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x3::m53","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12760},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87532,"byte_end":87535,"line_start":172,"line_end":172,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x3::m63","value":"N","parent":{"krate":0,"index":12741},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12784},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87551,"byte_end":87555,"line_start":173,"line_end":173,"column_start":14,"column_end":18},"name":"M6x4","qualname":"::base::coordinates::M6x4","value":"M6x4 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64 }","parent":null,"children":[{"krate":0,"index":12786},{"krate":0,"index":12787},{"krate":0,"index":12788},{"krate":0,"index":12789},{"krate":0,"index":12790},{"krate":0,"index":12791},{"krate":0,"index":12792},{"krate":0,"index":12793},{"krate":0,"index":12794},{"krate":0,"index":12795},{"krate":0,"index":12796},{"krate":0,"index":12797},{"krate":0,"index":12798},{"krate":0,"index":12799},{"krate":0,"index":12800},{"krate":0,"index":12801},{"krate":0,"index":12802},{"krate":0,"index":12803},{"krate":0,"index":12804},{"krate":0,"index":12805},{"krate":0,"index":12806},{"krate":0,"index":12807},{"krate":0,"index":12808},{"krate":0,"index":12809}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12786},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87557,"byte_end":87560,"line_start":173,"line_end":173,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x4::m11","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12787},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87562,"byte_end":87565,"line_start":173,"line_end":173,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x4::m21","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12788},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87567,"byte_end":87570,"line_start":173,"line_end":173,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x4::m31","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12789},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87572,"byte_end":87575,"line_start":173,"line_end":173,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x4::m41","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12790},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87577,"byte_end":87580,"line_start":173,"line_end":173,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x4::m51","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12791},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87582,"byte_end":87585,"line_start":173,"line_end":173,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x4::m61","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12792},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87606,"byte_end":87609,"line_start":174,"line_end":174,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x4::m12","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12793},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87611,"byte_end":87614,"line_start":174,"line_end":174,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x4::m22","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12794},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87616,"byte_end":87619,"line_start":174,"line_end":174,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x4::m32","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12795},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87621,"byte_end":87624,"line_start":174,"line_end":174,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x4::m42","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12796},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87626,"byte_end":87629,"line_start":174,"line_end":174,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x4::m52","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87631,"byte_end":87634,"line_start":174,"line_end":174,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x4::m62","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12798},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87655,"byte_end":87658,"line_start":175,"line_end":175,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x4::m13","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12799},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87660,"byte_end":87663,"line_start":175,"line_end":175,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x4::m23","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12800},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87665,"byte_end":87668,"line_start":175,"line_end":175,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x4::m33","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12801},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87670,"byte_end":87673,"line_start":175,"line_end":175,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x4::m43","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12802},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87675,"byte_end":87678,"line_start":175,"line_end":175,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x4::m53","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12803},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87680,"byte_end":87683,"line_start":175,"line_end":175,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x4::m63","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12804},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87704,"byte_end":87707,"line_start":176,"line_end":176,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x4::m14","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87709,"byte_end":87712,"line_start":176,"line_end":176,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x4::m24","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12806},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87714,"byte_end":87717,"line_start":176,"line_end":176,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x4::m34","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12807},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87719,"byte_end":87722,"line_start":176,"line_end":176,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x4::m44","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12808},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87724,"byte_end":87727,"line_start":176,"line_end":176,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x4::m54","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12809},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87729,"byte_end":87732,"line_start":176,"line_end":176,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x4::m64","value":"N","parent":{"krate":0,"index":12784},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12833},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87748,"byte_end":87752,"line_start":177,"line_end":177,"column_start":14,"column_end":18},"name":"M6x5","qualname":"::base::coordinates::M6x5","value":"M6x5 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65 }","parent":null,"children":[{"krate":0,"index":12835},{"krate":0,"index":12836},{"krate":0,"index":12837},{"krate":0,"index":12838},{"krate":0,"index":12839},{"krate":0,"index":12840},{"krate":0,"index":12841},{"krate":0,"index":12842},{"krate":0,"index":12843},{"krate":0,"index":12844},{"krate":0,"index":12845},{"krate":0,"index":12846},{"krate":0,"index":12847},{"krate":0,"index":12848},{"krate":0,"index":12849},{"krate":0,"index":12850},{"krate":0,"index":12851},{"krate":0,"index":12852},{"krate":0,"index":12853},{"krate":0,"index":12854},{"krate":0,"index":12855},{"krate":0,"index":12856},{"krate":0,"index":12857},{"krate":0,"index":12858},{"krate":0,"index":12859},{"krate":0,"index":12860},{"krate":0,"index":12861},{"krate":0,"index":12862},{"krate":0,"index":12863},{"krate":0,"index":12864}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12835},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87754,"byte_end":87757,"line_start":177,"line_end":177,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x5::m11","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12836},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87759,"byte_end":87762,"line_start":177,"line_end":177,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x5::m21","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12837},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87764,"byte_end":87767,"line_start":177,"line_end":177,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x5::m31","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12838},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87769,"byte_end":87772,"line_start":177,"line_end":177,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x5::m41","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12839},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87774,"byte_end":87777,"line_start":177,"line_end":177,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x5::m51","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12840},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87779,"byte_end":87782,"line_start":177,"line_end":177,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x5::m61","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12841},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87803,"byte_end":87806,"line_start":178,"line_end":178,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x5::m12","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12842},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87808,"byte_end":87811,"line_start":178,"line_end":178,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x5::m22","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12843},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87813,"byte_end":87816,"line_start":178,"line_end":178,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x5::m32","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12844},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87818,"byte_end":87821,"line_start":178,"line_end":178,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x5::m42","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12845},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87823,"byte_end":87826,"line_start":178,"line_end":178,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x5::m52","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12846},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87828,"byte_end":87831,"line_start":178,"line_end":178,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x5::m62","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12847},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87852,"byte_end":87855,"line_start":179,"line_end":179,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x5::m13","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12848},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87857,"byte_end":87860,"line_start":179,"line_end":179,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x5::m23","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12849},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87862,"byte_end":87865,"line_start":179,"line_end":179,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x5::m33","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12850},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87867,"byte_end":87870,"line_start":179,"line_end":179,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x5::m43","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12851},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87872,"byte_end":87875,"line_start":179,"line_end":179,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x5::m53","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12852},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87877,"byte_end":87880,"line_start":179,"line_end":179,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x5::m63","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12853},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87901,"byte_end":87904,"line_start":180,"line_end":180,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x5::m14","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12854},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87906,"byte_end":87909,"line_start":180,"line_end":180,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x5::m24","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12855},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87911,"byte_end":87914,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x5::m34","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12856},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87916,"byte_end":87919,"line_start":180,"line_end":180,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x5::m44","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12857},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87921,"byte_end":87924,"line_start":180,"line_end":180,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x5::m54","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12858},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87926,"byte_end":87929,"line_start":180,"line_end":180,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x5::m64","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12859},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87950,"byte_end":87953,"line_start":181,"line_end":181,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x5::m15","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12860},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87955,"byte_end":87958,"line_start":181,"line_end":181,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x5::m25","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12861},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87960,"byte_end":87963,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x5::m35","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12862},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87965,"byte_end":87968,"line_start":181,"line_end":181,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x5::m45","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12863},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87970,"byte_end":87973,"line_start":181,"line_end":181,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x5::m55","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12864},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87975,"byte_end":87978,"line_start":181,"line_end":181,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x5::m65","value":"N","parent":{"krate":0,"index":12833},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":12888},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":87994,"byte_end":87998,"line_start":182,"line_end":182,"column_start":14,"column_end":18},"name":"M6x6","qualname":"::base::coordinates::M6x6","value":"M6x6 { m11, m21, m31, m41, m51, m61, m12, m22, m32, m42, m52, m62, m13, m23, m33, m43, m53, m63, m14, m24, m34, m44, m54, m64, m15, m25, m35, m45, m55, m65, m16, m26, m36, m46, m56, m66 }","parent":null,"children":[{"krate":0,"index":12890},{"krate":0,"index":12891},{"krate":0,"index":12892},{"krate":0,"index":12893},{"krate":0,"index":12894},{"krate":0,"index":12895},{"krate":0,"index":12896},{"krate":0,"index":12897},{"krate":0,"index":12898},{"krate":0,"index":12899},{"krate":0,"index":12900},{"krate":0,"index":12901},{"krate":0,"index":12902},{"krate":0,"index":12903},{"krate":0,"index":12904},{"krate":0,"index":12905},{"krate":0,"index":12906},{"krate":0,"index":12907},{"krate":0,"index":12908},{"krate":0,"index":12909},{"krate":0,"index":12910},{"krate":0,"index":12911},{"krate":0,"index":12912},{"krate":0,"index":12913},{"krate":0,"index":12914},{"krate":0,"index":12915},{"krate":0,"index":12916},{"krate":0,"index":12917},{"krate":0,"index":12918},{"krate":0,"index":12919},{"krate":0,"index":12920},{"krate":0,"index":12921},{"krate":0,"index":12922},{"krate":0,"index":12923},{"krate":0,"index":12924},{"krate":0,"index":12925}],"decl_id":null,"docs":" Data structure used to provide access to matrix and vector coordinates with the dot\n notation, e.g., `v.x` is the same as `v[0]` for a vector.\n","sig":null,"attributes":[{"value":"/ Data structure used to provide access to matrix and vector coordinates with the dot","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82811,"byte_end":82898,"line_start":22,"line_end":22,"column_start":9,"column_end":96}},{"value":"/ notation, e.g., `v.x` is the same as `v[0]` for a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82907,"byte_end":82968,"line_start":23,"line_end":23,"column_start":9,"column_end":70}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":82977,"byte_end":82987,"line_start":24,"line_end":24,"column_start":9,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":12890},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88000,"byte_end":88003,"line_start":182,"line_end":182,"column_start":20,"column_end":23},"name":"m11","qualname":"::base::coordinates::M6x6::m11","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12891},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88005,"byte_end":88008,"line_start":182,"line_end":182,"column_start":25,"column_end":28},"name":"m21","qualname":"::base::coordinates::M6x6::m21","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12892},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88010,"byte_end":88013,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"m31","qualname":"::base::coordinates::M6x6::m31","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12893},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88015,"byte_end":88018,"line_start":182,"line_end":182,"column_start":35,"column_end":38},"name":"m41","qualname":"::base::coordinates::M6x6::m41","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12894},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88020,"byte_end":88023,"line_start":182,"line_end":182,"column_start":40,"column_end":43},"name":"m51","qualname":"::base::coordinates::M6x6::m51","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12895},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88025,"byte_end":88028,"line_start":182,"line_end":182,"column_start":45,"column_end":48},"name":"m61","qualname":"::base::coordinates::M6x6::m61","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12896},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88049,"byte_end":88052,"line_start":183,"line_end":183,"column_start":20,"column_end":23},"name":"m12","qualname":"::base::coordinates::M6x6::m12","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12897},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88054,"byte_end":88057,"line_start":183,"line_end":183,"column_start":25,"column_end":28},"name":"m22","qualname":"::base::coordinates::M6x6::m22","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12898},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88059,"byte_end":88062,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"m32","qualname":"::base::coordinates::M6x6::m32","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12899},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88064,"byte_end":88067,"line_start":183,"line_end":183,"column_start":35,"column_end":38},"name":"m42","qualname":"::base::coordinates::M6x6::m42","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12900},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88069,"byte_end":88072,"line_start":183,"line_end":183,"column_start":40,"column_end":43},"name":"m52","qualname":"::base::coordinates::M6x6::m52","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12901},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88074,"byte_end":88077,"line_start":183,"line_end":183,"column_start":45,"column_end":48},"name":"m62","qualname":"::base::coordinates::M6x6::m62","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12902},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88098,"byte_end":88101,"line_start":184,"line_end":184,"column_start":20,"column_end":23},"name":"m13","qualname":"::base::coordinates::M6x6::m13","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12903},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88103,"byte_end":88106,"line_start":184,"line_end":184,"column_start":25,"column_end":28},"name":"m23","qualname":"::base::coordinates::M6x6::m23","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12904},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88108,"byte_end":88111,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"m33","qualname":"::base::coordinates::M6x6::m33","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12905},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88113,"byte_end":88116,"line_start":184,"line_end":184,"column_start":35,"column_end":38},"name":"m43","qualname":"::base::coordinates::M6x6::m43","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12906},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88118,"byte_end":88121,"line_start":184,"line_end":184,"column_start":40,"column_end":43},"name":"m53","qualname":"::base::coordinates::M6x6::m53","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12907},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88123,"byte_end":88126,"line_start":184,"line_end":184,"column_start":45,"column_end":48},"name":"m63","qualname":"::base::coordinates::M6x6::m63","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12908},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88147,"byte_end":88150,"line_start":185,"line_end":185,"column_start":20,"column_end":23},"name":"m14","qualname":"::base::coordinates::M6x6::m14","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12909},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88152,"byte_end":88155,"line_start":185,"line_end":185,"column_start":25,"column_end":28},"name":"m24","qualname":"::base::coordinates::M6x6::m24","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12910},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88157,"byte_end":88160,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"m34","qualname":"::base::coordinates::M6x6::m34","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12911},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88162,"byte_end":88165,"line_start":185,"line_end":185,"column_start":35,"column_end":38},"name":"m44","qualname":"::base::coordinates::M6x6::m44","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12912},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88167,"byte_end":88170,"line_start":185,"line_end":185,"column_start":40,"column_end":43},"name":"m54","qualname":"::base::coordinates::M6x6::m54","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12913},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88172,"byte_end":88175,"line_start":185,"line_end":185,"column_start":45,"column_end":48},"name":"m64","qualname":"::base::coordinates::M6x6::m64","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12914},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88196,"byte_end":88199,"line_start":186,"line_end":186,"column_start":20,"column_end":23},"name":"m15","qualname":"::base::coordinates::M6x6::m15","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12915},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88201,"byte_end":88204,"line_start":186,"line_end":186,"column_start":25,"column_end":28},"name":"m25","qualname":"::base::coordinates::M6x6::m25","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12916},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88206,"byte_end":88209,"line_start":186,"line_end":186,"column_start":30,"column_end":33},"name":"m35","qualname":"::base::coordinates::M6x6::m35","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12917},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88211,"byte_end":88214,"line_start":186,"line_end":186,"column_start":35,"column_end":38},"name":"m45","qualname":"::base::coordinates::M6x6::m45","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12918},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88216,"byte_end":88219,"line_start":186,"line_end":186,"column_start":40,"column_end":43},"name":"m55","qualname":"::base::coordinates::M6x6::m55","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12919},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88221,"byte_end":88224,"line_start":186,"line_end":186,"column_start":45,"column_end":48},"name":"m65","qualname":"::base::coordinates::M6x6::m65","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12920},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88245,"byte_end":88248,"line_start":187,"line_end":187,"column_start":20,"column_end":23},"name":"m16","qualname":"::base::coordinates::M6x6::m16","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12921},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88250,"byte_end":88253,"line_start":187,"line_end":187,"column_start":25,"column_end":28},"name":"m26","qualname":"::base::coordinates::M6x6::m26","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12922},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88255,"byte_end":88258,"line_start":187,"line_end":187,"column_start":30,"column_end":33},"name":"m36","qualname":"::base::coordinates::M6x6::m36","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12923},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88260,"byte_end":88263,"line_start":187,"line_end":187,"column_start":35,"column_end":38},"name":"m46","qualname":"::base::coordinates::M6x6::m46","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12924},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88265,"byte_end":88268,"line_start":187,"line_end":187,"column_start":40,"column_end":43},"name":"m56","qualname":"::base::coordinates::M6x6::m56","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":12925},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/coordinates.rs","byte_start":88270,"byte_end":88273,"line_start":187,"line_end":187,"column_start":45,"column_end":48},"name":"m66","qualname":"::base::coordinates::M6x6::m66","value":"N","parent":{"krate":0,"index":12888},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":490},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"default_allocator","qualname":"::base::default_allocator","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","parent":null,"children":[{"krate":0,"index":491},{"krate":0,"index":494},{"krate":0,"index":497},{"krate":0,"index":500},{"krate":0,"index":503},{"krate":0,"index":506},{"krate":0,"index":509},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":516},{"krate":0,"index":519},{"krate":0,"index":520},{"krate":0,"index":523},{"krate":0,"index":526},{"krate":0,"index":529},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":536},{"krate":0,"index":539},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":552},{"krate":0,"index":559},{"krate":0,"index":566},{"krate":0,"index":573},{"krate":0,"index":579},{"krate":0,"index":585},{"krate":0,"index":590},{"krate":0,"index":595},{"krate":0,"index":600}],"decl_id":null,"docs":" The default matrix data storage allocator.","sig":null,"attributes":[{"value":"/ The default matrix data storage allocator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":89301,"byte_end":89347,"line_start":1,"line_end":1,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":89348,"byte_end":89351,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ This will use stack-allocated buffers for matrices with dimensions known at compile-time, and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":89352,"byte_end":89449,"line_start":3,"line_end":3,"column_start":1,"column_end":98}},{"value":"/ heap-allocated buffers for matrices with at least one dimension unknown at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":89450,"byte_end":89542,"line_start":4,"line_end":4,"column_start":1,"column_end":93}}]},{"kind":"Struct","id":{"krate":0,"index":542},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":90293,"byte_end":90309,"line_start":34,"line_end":34,"column_start":12,"column_end":28},"name":"DefaultAllocator","qualname":"::base::default_allocator::DefaultAllocator","value":"","parent":null,"children":[],"decl_id":null,"docs":" An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized\n matrices respectively.\n","sig":null,"attributes":[{"value":"/ An allocator based on `GenericArray` and `VecStorage` for statically-sized and dynamically-sized","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":90154,"byte_end":90254,"line_start":32,"line_end":32,"column_start":1,"column_end":101}},{"value":"/ matrices respectively.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":90255,"byte_end":90281,"line_start":33,"line_end":33,"column_start":1,"column_end":27}}]},{"kind":"Mod","id":{"krate":0,"index":605},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dimension","qualname":"::base::dimension","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":607},{"krate":0,"index":610},{"krate":0,"index":613},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":619},{"krate":0,"index":620},{"krate":0,"index":623},{"krate":0,"index":626},{"krate":0,"index":629},{"krate":0,"index":632},{"krate":0,"index":633},{"krate":0,"index":636},{"krate":0,"index":639},{"krate":0,"index":642},{"krate":0,"index":645},{"krate":0,"index":648},{"krate":0,"index":651},{"krate":0,"index":654},{"krate":0,"index":657},{"krate":0,"index":660},{"krate":0,"index":663},{"krate":0,"index":666},{"krate":0,"index":667},{"krate":0,"index":669},{"krate":0,"index":672},{"krate":0,"index":673},{"krate":0,"index":13273},{"krate":0,"index":13275},{"krate":0,"index":13277},{"krate":0,"index":13278},{"krate":0,"index":13279},{"krate":0,"index":13281},{"krate":0,"index":13282},{"krate":0,"index":13285},{"krate":0,"index":675},{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":687},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":13287},{"krate":0,"index":13290},{"krate":0,"index":13294},{"krate":0,"index":13299},{"krate":0,"index":13303},{"krate":0,"index":13307},{"krate":0,"index":13310},{"krate":0,"index":13314},{"krate":0,"index":13319},{"krate":0,"index":13322},{"krate":0,"index":13326},{"krate":0,"index":13331},{"krate":0,"index":13335},{"krate":0,"index":13339},{"krate":0,"index":13342},{"krate":0,"index":13346},{"krate":0,"index":13351},{"krate":0,"index":13354},{"krate":0,"index":13358},{"krate":0,"index":13363},{"krate":0,"index":13367},{"krate":0,"index":13371},{"krate":0,"index":13374},{"krate":0,"index":13378},{"krate":0,"index":13383},{"krate":0,"index":13386},{"krate":0,"index":13390},{"krate":0,"index":13395},{"krate":0,"index":13399},{"krate":0,"index":13403},{"krate":0,"index":13406},{"krate":0,"index":13410},{"krate":0,"index":13415},{"krate":0,"index":13418},{"krate":0,"index":13422},{"krate":0,"index":13427},{"krate":0,"index":13431},{"krate":0,"index":13435},{"krate":0,"index":13438},{"krate":0,"index":13442},{"krate":0,"index":13447},{"krate":0,"index":13450},{"krate":0,"index":13454},{"krate":0,"index":13459},{"krate":0,"index":13463},{"krate":0,"index":13467},{"krate":0,"index":13470},{"krate":0,"index":13474},{"krate":0,"index":698},{"krate":0,"index":702},{"krate":0,"index":13479},{"krate":0,"index":13481},{"krate":0,"index":13483},{"krate":0,"index":13484},{"krate":0,"index":13486},{"krate":0,"index":13489},{"krate":0,"index":13490},{"krate":0,"index":13492},{"krate":0,"index":13493},{"krate":0,"index":704},{"krate":0,"index":708},{"krate":0,"index":711},{"krate":0,"index":14765},{"krate":0,"index":14767},{"krate":0,"index":14769},{"krate":0,"index":14770},{"krate":0,"index":14772},{"krate":0,"index":14775},{"krate":0,"index":14776},{"krate":0,"index":14778},{"krate":0,"index":14779},{"krate":0,"index":13495},{"krate":0,"index":13499},{"krate":0,"index":13502},{"krate":0,"index":13504},{"krate":0,"index":14781},{"krate":0,"index":14783},{"krate":0,"index":14785},{"krate":0,"index":14786},{"krate":0,"index":14788},{"krate":0,"index":14791},{"krate":0,"index":14792},{"krate":0,"index":14794},{"krate":0,"index":14795},{"krate":0,"index":13505},{"krate":0,"index":13509},{"krate":0,"index":13512},{"krate":0,"index":13514},{"krate":0,"index":14797},{"krate":0,"index":14799},{"krate":0,"index":14801},{"krate":0,"index":14802},{"krate":0,"index":14804},{"krate":0,"index":14807},{"krate":0,"index":14808},{"krate":0,"index":14810},{"krate":0,"index":14811},{"krate":0,"index":13515},{"krate":0,"index":13519},{"krate":0,"index":13522},{"krate":0,"index":13524},{"krate":0,"index":14813},{"krate":0,"index":14815},{"krate":0,"index":14817},{"krate":0,"index":14818},{"krate":0,"index":14820},{"krate":0,"index":14823},{"krate":0,"index":14824},{"krate":0,"index":14826},{"krate":0,"index":14827},{"krate":0,"index":13525},{"krate":0,"index":13529},{"krate":0,"index":13532},{"krate":0,"index":13534},{"krate":0,"index":14829},{"krate":0,"index":14831},{"krate":0,"index":14833},{"krate":0,"index":14834},{"krate":0,"index":14836},{"krate":0,"index":14839},{"krate":0,"index":14840},{"krate":0,"index":14842},{"krate":0,"index":14843},{"krate":0,"index":13535},{"krate":0,"index":13539},{"krate":0,"index":13542},{"krate":0,"index":13544},{"krate":0,"index":14845},{"krate":0,"index":14847},{"krate":0,"index":14849},{"krate":0,"index":14850},{"krate":0,"index":14852},{"krate":0,"index":14855},{"krate":0,"index":14856},{"krate":0,"index":14858},{"krate":0,"index":14859},{"krate":0,"index":13545},{"krate":0,"index":13549},{"krate":0,"index":13552},{"krate":0,"index":13554},{"krate":0,"index":14861},{"krate":0,"index":14863},{"krate":0,"index":14865},{"krate":0,"index":14866},{"krate":0,"index":14868},{"krate":0,"index":14871},{"krate":0,"index":14872},{"krate":0,"index":14874},{"krate":0,"index":14875},{"krate":0,"index":13555},{"krate":0,"index":13559},{"krate":0,"index":13562},{"krate":0,"index":13564},{"krate":0,"index":14877},{"krate":0,"index":14879},{"krate":0,"index":14881},{"krate":0,"index":14882},{"krate":0,"index":14884},{"krate":0,"index":14887},{"krate":0,"index":14888},{"krate":0,"index":14890},{"krate":0,"index":14891},{"krate":0,"index":13565},{"krate":0,"index":13569},{"krate":0,"index":13572},{"krate":0,"index":13574},{"krate":0,"index":14893},{"krate":0,"index":14895},{"krate":0,"index":14897},{"krate":0,"index":14898},{"krate":0,"index":14900},{"krate":0,"index":14903},{"krate":0,"index":14904},{"krate":0,"index":14906},{"krate":0,"index":14907},{"krate":0,"index":13575},{"krate":0,"index":13579},{"krate":0,"index":13582},{"krate":0,"index":13584},{"krate":0,"index":14909},{"krate":0,"index":14911},{"krate":0,"index":14913},{"krate":0,"index":14914},{"krate":0,"index":14916},{"krate":0,"index":14919},{"krate":0,"index":14920},{"krate":0,"index":14922},{"krate":0,"index":14923},{"krate":0,"index":13585},{"krate":0,"index":13589},{"krate":0,"index":13592},{"krate":0,"index":13594},{"krate":0,"index":14925},{"krate":0,"index":14927},{"krate":0,"index":14929},{"krate":0,"index":14930},{"krate":0,"index":14932},{"krate":0,"index":14935},{"krate":0,"index":14936},{"krate":0,"index":14938},{"krate":0,"index":14939},{"krate":0,"index":13595},{"krate":0,"index":13599},{"krate":0,"index":13602},{"krate":0,"index":13604},{"krate":0,"index":14941},{"krate":0,"index":14943},{"krate":0,"index":14945},{"krate":0,"index":14946},{"krate":0,"index":14948},{"krate":0,"index":14951},{"krate":0,"index":14952},{"krate":0,"index":14954},{"krate":0,"index":14955},{"krate":0,"index":13605},{"krate":0,"index":13609},{"krate":0,"index":13612},{"krate":0,"index":13614},{"krate":0,"index":14957},{"krate":0,"index":14959},{"krate":0,"index":14961},{"krate":0,"index":14962},{"krate":0,"index":14964},{"krate":0,"index":14967},{"krate":0,"index":14968},{"krate":0,"index":14970},{"krate":0,"index":14971},{"krate":0,"index":13615},{"krate":0,"index":13619},{"krate":0,"index":13622},{"krate":0,"index":13624},{"krate":0,"index":14973},{"krate":0,"index":14975},{"krate":0,"index":14977},{"krate":0,"index":14978},{"krate":0,"index":14980},{"krate":0,"index":14983},{"krate":0,"index":14984},{"krate":0,"index":14986},{"krate":0,"index":14987},{"krate":0,"index":13625},{"krate":0,"index":13629},{"krate":0,"index":13632},{"krate":0,"index":13634},{"krate":0,"index":14989},{"krate":0,"index":14991},{"krate":0,"index":14993},{"krate":0,"index":14994},{"krate":0,"index":14996},{"krate":0,"index":14999},{"krate":0,"index":15000},{"krate":0,"index":15002},{"krate":0,"index":15003},{"krate":0,"index":13635},{"krate":0,"index":13639},{"krate":0,"index":13642},{"krate":0,"index":13644},{"krate":0,"index":15005},{"krate":0,"index":15007},{"krate":0,"index":15009},{"krate":0,"index":15010},{"krate":0,"index":15012},{"krate":0,"index":15015},{"krate":0,"index":15016},{"krate":0,"index":15018},{"krate":0,"index":15019},{"krate":0,"index":13645},{"krate":0,"index":13649},{"krate":0,"index":13652},{"krate":0,"index":13654},{"krate":0,"index":15021},{"krate":0,"index":15023},{"krate":0,"index":15025},{"krate":0,"index":15026},{"krate":0,"index":15028},{"krate":0,"index":15031},{"krate":0,"index":15032},{"krate":0,"index":15034},{"krate":0,"index":15035},{"krate":0,"index":13655},{"krate":0,"index":13659},{"krate":0,"index":13662},{"krate":0,"index":13664},{"krate":0,"index":15037},{"krate":0,"index":15039},{"krate":0,"index":15041},{"krate":0,"index":15042},{"krate":0,"index":15044},{"krate":0,"index":15047},{"krate":0,"index":15048},{"krate":0,"index":15050},{"krate":0,"index":15051},{"krate":0,"index":13665},{"krate":0,"index":13669},{"krate":0,"index":13672},{"krate":0,"index":13674},{"krate":0,"index":15053},{"krate":0,"index":15055},{"krate":0,"index":15057},{"krate":0,"index":15058},{"krate":0,"index":15060},{"krate":0,"index":15063},{"krate":0,"index":15064},{"krate":0,"index":15066},{"krate":0,"index":15067},{"krate":0,"index":13675},{"krate":0,"index":13679},{"krate":0,"index":13682},{"krate":0,"index":13684},{"krate":0,"index":15069},{"krate":0,"index":15071},{"krate":0,"index":15073},{"krate":0,"index":15074},{"krate":0,"index":15076},{"krate":0,"index":15079},{"krate":0,"index":15080},{"krate":0,"index":15082},{"krate":0,"index":15083},{"krate":0,"index":13685},{"krate":0,"index":13689},{"krate":0,"index":13692},{"krate":0,"index":13694},{"krate":0,"index":15085},{"krate":0,"index":15087},{"krate":0,"index":15089},{"krate":0,"index":15090},{"krate":0,"index":15092},{"krate":0,"index":15095},{"krate":0,"index":15096},{"krate":0,"index":15098},{"krate":0,"index":15099},{"krate":0,"index":13695},{"krate":0,"index":13699},{"krate":0,"index":13702},{"krate":0,"index":13704},{"krate":0,"index":15101},{"krate":0,"index":15103},{"krate":0,"index":15105},{"krate":0,"index":15106},{"krate":0,"index":15108},{"krate":0,"index":15111},{"krate":0,"index":15112},{"krate":0,"index":15114},{"krate":0,"index":15115},{"krate":0,"index":13705},{"krate":0,"index":13709},{"krate":0,"index":13712},{"krate":0,"index":13714},{"krate":0,"index":15117},{"krate":0,"index":15119},{"krate":0,"index":15121},{"krate":0,"index":15122},{"krate":0,"index":15124},{"krate":0,"index":15127},{"krate":0,"index":15128},{"krate":0,"index":15130},{"krate":0,"index":15131},{"krate":0,"index":13715},{"krate":0,"index":13719},{"krate":0,"index":13722},{"krate":0,"index":13724},{"krate":0,"index":15133},{"krate":0,"index":15135},{"krate":0,"index":15137},{"krate":0,"index":15138},{"krate":0,"index":15140},{"krate":0,"index":15143},{"krate":0,"index":15144},{"krate":0,"index":15146},{"krate":0,"index":15147},{"krate":0,"index":13725},{"krate":0,"index":13729},{"krate":0,"index":13732},{"krate":0,"index":13734},{"krate":0,"index":15149},{"krate":0,"index":15151},{"krate":0,"index":15153},{"krate":0,"index":15154},{"krate":0,"index":15156},{"krate":0,"index":15159},{"krate":0,"index":15160},{"krate":0,"index":15162},{"krate":0,"index":15163},{"krate":0,"index":13735},{"krate":0,"index":13739},{"krate":0,"index":13742},{"krate":0,"index":13744},{"krate":0,"index":15165},{"krate":0,"index":15167},{"krate":0,"index":15169},{"krate":0,"index":15170},{"krate":0,"index":15172},{"krate":0,"index":15175},{"krate":0,"index":15176},{"krate":0,"index":15178},{"krate":0,"index":15179},{"krate":0,"index":13745},{"krate":0,"index":13749},{"krate":0,"index":13752},{"krate":0,"index":13754},{"krate":0,"index":15181},{"krate":0,"index":15183},{"krate":0,"index":15185},{"krate":0,"index":15186},{"krate":0,"index":15188},{"krate":0,"index":15191},{"krate":0,"index":15192},{"krate":0,"index":15194},{"krate":0,"index":15195},{"krate":0,"index":13755},{"krate":0,"index":13759},{"krate":0,"index":13762},{"krate":0,"index":13764},{"krate":0,"index":15197},{"krate":0,"index":15199},{"krate":0,"index":15201},{"krate":0,"index":15202},{"krate":0,"index":15204},{"krate":0,"index":15207},{"krate":0,"index":15208},{"krate":0,"index":15210},{"krate":0,"index":15211},{"krate":0,"index":13765},{"krate":0,"index":13769},{"krate":0,"index":13772},{"krate":0,"index":13774},{"krate":0,"index":15213},{"krate":0,"index":15215},{"krate":0,"index":15217},{"krate":0,"index":15218},{"krate":0,"index":15220},{"krate":0,"index":15223},{"krate":0,"index":15224},{"krate":0,"index":15226},{"krate":0,"index":15227},{"krate":0,"index":13775},{"krate":0,"index":13779},{"krate":0,"index":13782},{"krate":0,"index":13784},{"krate":0,"index":15229},{"krate":0,"index":15231},{"krate":0,"index":15233},{"krate":0,"index":15234},{"krate":0,"index":15236},{"krate":0,"index":15239},{"krate":0,"index":15240},{"krate":0,"index":15242},{"krate":0,"index":15243},{"krate":0,"index":13785},{"krate":0,"index":13789},{"krate":0,"index":13792},{"krate":0,"index":13794},{"krate":0,"index":15245},{"krate":0,"index":15247},{"krate":0,"index":15249},{"krate":0,"index":15250},{"krate":0,"index":15252},{"krate":0,"index":15255},{"krate":0,"index":15256},{"krate":0,"index":15258},{"krate":0,"index":15259},{"krate":0,"index":13795},{"krate":0,"index":13799},{"krate":0,"index":13802},{"krate":0,"index":13804},{"krate":0,"index":15261},{"krate":0,"index":15263},{"krate":0,"index":15265},{"krate":0,"index":15266},{"krate":0,"index":15268},{"krate":0,"index":15271},{"krate":0,"index":15272},{"krate":0,"index":15274},{"krate":0,"index":15275},{"krate":0,"index":13805},{"krate":0,"index":13809},{"krate":0,"index":13812},{"krate":0,"index":13814},{"krate":0,"index":15277},{"krate":0,"index":15279},{"krate":0,"index":15281},{"krate":0,"index":15282},{"krate":0,"index":15284},{"krate":0,"index":15287},{"krate":0,"index":15288},{"krate":0,"index":15290},{"krate":0,"index":15291},{"krate":0,"index":13815},{"krate":0,"index":13819},{"krate":0,"index":13822},{"krate":0,"index":13824},{"krate":0,"index":15293},{"krate":0,"index":15295},{"krate":0,"index":15297},{"krate":0,"index":15298},{"krate":0,"index":15300},{"krate":0,"index":15303},{"krate":0,"index":15304},{"krate":0,"index":15306},{"krate":0,"index":15307},{"krate":0,"index":13825},{"krate":0,"index":13829},{"krate":0,"index":13832},{"krate":0,"index":13834},{"krate":0,"index":15309},{"krate":0,"index":15311},{"krate":0,"index":15313},{"krate":0,"index":15314},{"krate":0,"index":15316},{"krate":0,"index":15319},{"krate":0,"index":15320},{"krate":0,"index":15322},{"krate":0,"index":15323},{"krate":0,"index":13835},{"krate":0,"index":13839},{"krate":0,"index":13842},{"krate":0,"index":13844},{"krate":0,"index":15325},{"krate":0,"index":15327},{"krate":0,"index":15329},{"krate":0,"index":15330},{"krate":0,"index":15332},{"krate":0,"index":15335},{"krate":0,"index":15336},{"krate":0,"index":15338},{"krate":0,"index":15339},{"krate":0,"index":13845},{"krate":0,"index":13849},{"krate":0,"index":13852},{"krate":0,"index":13854},{"krate":0,"index":15341},{"krate":0,"index":15343},{"krate":0,"index":15345},{"krate":0,"index":15346},{"krate":0,"index":15348},{"krate":0,"index":15351},{"krate":0,"index":15352},{"krate":0,"index":15354},{"krate":0,"index":15355},{"krate":0,"index":13855},{"krate":0,"index":13859},{"krate":0,"index":13862},{"krate":0,"index":13864},{"krate":0,"index":15357},{"krate":0,"index":15359},{"krate":0,"index":15361},{"krate":0,"index":15362},{"krate":0,"index":15364},{"krate":0,"index":15367},{"krate":0,"index":15368},{"krate":0,"index":15370},{"krate":0,"index":15371},{"krate":0,"index":13865},{"krate":0,"index":13869},{"krate":0,"index":13872},{"krate":0,"index":13874},{"krate":0,"index":15373},{"krate":0,"index":15375},{"krate":0,"index":15377},{"krate":0,"index":15378},{"krate":0,"index":15380},{"krate":0,"index":15383},{"krate":0,"index":15384},{"krate":0,"index":15386},{"krate":0,"index":15387},{"krate":0,"index":13875},{"krate":0,"index":13879},{"krate":0,"index":13882},{"krate":0,"index":13884},{"krate":0,"index":15389},{"krate":0,"index":15391},{"krate":0,"index":15393},{"krate":0,"index":15394},{"krate":0,"index":15396},{"krate":0,"index":15399},{"krate":0,"index":15400},{"krate":0,"index":15402},{"krate":0,"index":15403},{"krate":0,"index":13885},{"krate":0,"index":13889},{"krate":0,"index":13892},{"krate":0,"index":13894},{"krate":0,"index":15405},{"krate":0,"index":15407},{"krate":0,"index":15409},{"krate":0,"index":15410},{"krate":0,"index":15412},{"krate":0,"index":15415},{"krate":0,"index":15416},{"krate":0,"index":15418},{"krate":0,"index":15419},{"krate":0,"index":13895},{"krate":0,"index":13899},{"krate":0,"index":13902},{"krate":0,"index":13904},{"krate":0,"index":15421},{"krate":0,"index":15423},{"krate":0,"index":15425},{"krate":0,"index":15426},{"krate":0,"index":15428},{"krate":0,"index":15431},{"krate":0,"index":15432},{"krate":0,"index":15434},{"krate":0,"index":15435},{"krate":0,"index":13905},{"krate":0,"index":13909},{"krate":0,"index":13912},{"krate":0,"index":13914},{"krate":0,"index":15437},{"krate":0,"index":15439},{"krate":0,"index":15441},{"krate":0,"index":15442},{"krate":0,"index":15444},{"krate":0,"index":15447},{"krate":0,"index":15448},{"krate":0,"index":15450},{"krate":0,"index":15451},{"krate":0,"index":13915},{"krate":0,"index":13919},{"krate":0,"index":13922},{"krate":0,"index":13924},{"krate":0,"index":15453},{"krate":0,"index":15455},{"krate":0,"index":15457},{"krate":0,"index":15458},{"krate":0,"index":15460},{"krate":0,"index":15463},{"krate":0,"index":15464},{"krate":0,"index":15466},{"krate":0,"index":15467},{"krate":0,"index":13925},{"krate":0,"index":13929},{"krate":0,"index":13932},{"krate":0,"index":13934},{"krate":0,"index":15469},{"krate":0,"index":15471},{"krate":0,"index":15473},{"krate":0,"index":15474},{"krate":0,"index":15476},{"krate":0,"index":15479},{"krate":0,"index":15480},{"krate":0,"index":15482},{"krate":0,"index":15483},{"krate":0,"index":13935},{"krate":0,"index":13939},{"krate":0,"index":13942},{"krate":0,"index":13944},{"krate":0,"index":15485},{"krate":0,"index":15487},{"krate":0,"index":15489},{"krate":0,"index":15490},{"krate":0,"index":15492},{"krate":0,"index":15495},{"krate":0,"index":15496},{"krate":0,"index":15498},{"krate":0,"index":15499},{"krate":0,"index":13945},{"krate":0,"index":13949},{"krate":0,"index":13952},{"krate":0,"index":13954},{"krate":0,"index":15501},{"krate":0,"index":15503},{"krate":0,"index":15505},{"krate":0,"index":15506},{"krate":0,"index":15508},{"krate":0,"index":15511},{"krate":0,"index":15512},{"krate":0,"index":15514},{"krate":0,"index":15515},{"krate":0,"index":13955},{"krate":0,"index":13959},{"krate":0,"index":13962},{"krate":0,"index":13964},{"krate":0,"index":15517},{"krate":0,"index":15519},{"krate":0,"index":15521},{"krate":0,"index":15522},{"krate":0,"index":15524},{"krate":0,"index":15527},{"krate":0,"index":15528},{"krate":0,"index":15530},{"krate":0,"index":15531},{"krate":0,"index":13965},{"krate":0,"index":13969},{"krate":0,"index":13972},{"krate":0,"index":13974},{"krate":0,"index":15533},{"krate":0,"index":15535},{"krate":0,"index":15537},{"krate":0,"index":15538},{"krate":0,"index":15540},{"krate":0,"index":15543},{"krate":0,"index":15544},{"krate":0,"index":15546},{"krate":0,"index":15547},{"krate":0,"index":13975},{"krate":0,"index":13979},{"krate":0,"index":13982},{"krate":0,"index":13984},{"krate":0,"index":15549},{"krate":0,"index":15551},{"krate":0,"index":15553},{"krate":0,"index":15554},{"krate":0,"index":15556},{"krate":0,"index":15559},{"krate":0,"index":15560},{"krate":0,"index":15562},{"krate":0,"index":15563},{"krate":0,"index":13985},{"krate":0,"index":13989},{"krate":0,"index":13992},{"krate":0,"index":13994},{"krate":0,"index":15565},{"krate":0,"index":15567},{"krate":0,"index":15569},{"krate":0,"index":15570},{"krate":0,"index":15572},{"krate":0,"index":15575},{"krate":0,"index":15576},{"krate":0,"index":15578},{"krate":0,"index":15579},{"krate":0,"index":13995},{"krate":0,"index":13999},{"krate":0,"index":14002},{"krate":0,"index":14004},{"krate":0,"index":15581},{"krate":0,"index":15583},{"krate":0,"index":15585},{"krate":0,"index":15586},{"krate":0,"index":15588},{"krate":0,"index":15591},{"krate":0,"index":15592},{"krate":0,"index":15594},{"krate":0,"index":15595},{"krate":0,"index":14005},{"krate":0,"index":14009},{"krate":0,"index":14012},{"krate":0,"index":14014},{"krate":0,"index":15597},{"krate":0,"index":15599},{"krate":0,"index":15601},{"krate":0,"index":15602},{"krate":0,"index":15604},{"krate":0,"index":15607},{"krate":0,"index":15608},{"krate":0,"index":15610},{"krate":0,"index":15611},{"krate":0,"index":14015},{"krate":0,"index":14019},{"krate":0,"index":14022},{"krate":0,"index":14024},{"krate":0,"index":15613},{"krate":0,"index":15615},{"krate":0,"index":15617},{"krate":0,"index":15618},{"krate":0,"index":15620},{"krate":0,"index":15623},{"krate":0,"index":15624},{"krate":0,"index":15626},{"krate":0,"index":15627},{"krate":0,"index":14025},{"krate":0,"index":14029},{"krate":0,"index":14032},{"krate":0,"index":14034},{"krate":0,"index":15629},{"krate":0,"index":15631},{"krate":0,"index":15633},{"krate":0,"index":15634},{"krate":0,"index":15636},{"krate":0,"index":15639},{"krate":0,"index":15640},{"krate":0,"index":15642},{"krate":0,"index":15643},{"krate":0,"index":14035},{"krate":0,"index":14039},{"krate":0,"index":14042},{"krate":0,"index":14044},{"krate":0,"index":15645},{"krate":0,"index":15647},{"krate":0,"index":15649},{"krate":0,"index":15650},{"krate":0,"index":15652},{"krate":0,"index":15655},{"krate":0,"index":15656},{"krate":0,"index":15658},{"krate":0,"index":15659},{"krate":0,"index":14045},{"krate":0,"index":14049},{"krate":0,"index":14052},{"krate":0,"index":14054},{"krate":0,"index":15661},{"krate":0,"index":15663},{"krate":0,"index":15665},{"krate":0,"index":15666},{"krate":0,"index":15668},{"krate":0,"index":15671},{"krate":0,"index":15672},{"krate":0,"index":15674},{"krate":0,"index":15675},{"krate":0,"index":14055},{"krate":0,"index":14059},{"krate":0,"index":14062},{"krate":0,"index":14064},{"krate":0,"index":15677},{"krate":0,"index":15679},{"krate":0,"index":15681},{"krate":0,"index":15682},{"krate":0,"index":15684},{"krate":0,"index":15687},{"krate":0,"index":15688},{"krate":0,"index":15690},{"krate":0,"index":15691},{"krate":0,"index":14065},{"krate":0,"index":14069},{"krate":0,"index":14072},{"krate":0,"index":14074},{"krate":0,"index":15693},{"krate":0,"index":15695},{"krate":0,"index":15697},{"krate":0,"index":15698},{"krate":0,"index":15700},{"krate":0,"index":15703},{"krate":0,"index":15704},{"krate":0,"index":15706},{"krate":0,"index":15707},{"krate":0,"index":14075},{"krate":0,"index":14079},{"krate":0,"index":14082},{"krate":0,"index":14084},{"krate":0,"index":15709},{"krate":0,"index":15711},{"krate":0,"index":15713},{"krate":0,"index":15714},{"krate":0,"index":15716},{"krate":0,"index":15719},{"krate":0,"index":15720},{"krate":0,"index":15722},{"krate":0,"index":15723},{"krate":0,"index":14085},{"krate":0,"index":14089},{"krate":0,"index":14092},{"krate":0,"index":14094},{"krate":0,"index":15725},{"krate":0,"index":15727},{"krate":0,"index":15729},{"krate":0,"index":15730},{"krate":0,"index":15732},{"krate":0,"index":15735},{"krate":0,"index":15736},{"krate":0,"index":15738},{"krate":0,"index":15739},{"krate":0,"index":14095},{"krate":0,"index":14099},{"krate":0,"index":14102},{"krate":0,"index":14104},{"krate":0,"index":15741},{"krate":0,"index":15743},{"krate":0,"index":15745},{"krate":0,"index":15746},{"krate":0,"index":15748},{"krate":0,"index":15751},{"krate":0,"index":15752},{"krate":0,"index":15754},{"krate":0,"index":15755},{"krate":0,"index":14105},{"krate":0,"index":14109},{"krate":0,"index":14112},{"krate":0,"index":14114},{"krate":0,"index":15757},{"krate":0,"index":15759},{"krate":0,"index":15761},{"krate":0,"index":15762},{"krate":0,"index":15764},{"krate":0,"index":15767},{"krate":0,"index":15768},{"krate":0,"index":15770},{"krate":0,"index":15771},{"krate":0,"index":14115},{"krate":0,"index":14119},{"krate":0,"index":14122},{"krate":0,"index":14124},{"krate":0,"index":15773},{"krate":0,"index":15775},{"krate":0,"index":15777},{"krate":0,"index":15778},{"krate":0,"index":15780},{"krate":0,"index":15783},{"krate":0,"index":15784},{"krate":0,"index":15786},{"krate":0,"index":15787},{"krate":0,"index":14125},{"krate":0,"index":14129},{"krate":0,"index":14132},{"krate":0,"index":14134},{"krate":0,"index":15789},{"krate":0,"index":15791},{"krate":0,"index":15793},{"krate":0,"index":15794},{"krate":0,"index":15796},{"krate":0,"index":15799},{"krate":0,"index":15800},{"krate":0,"index":15802},{"krate":0,"index":15803},{"krate":0,"index":14135},{"krate":0,"index":14139},{"krate":0,"index":14142},{"krate":0,"index":14144},{"krate":0,"index":15805},{"krate":0,"index":15807},{"krate":0,"index":15809},{"krate":0,"index":15810},{"krate":0,"index":15812},{"krate":0,"index":15815},{"krate":0,"index":15816},{"krate":0,"index":15818},{"krate":0,"index":15819},{"krate":0,"index":14145},{"krate":0,"index":14149},{"krate":0,"index":14152},{"krate":0,"index":14154},{"krate":0,"index":15821},{"krate":0,"index":15823},{"krate":0,"index":15825},{"krate":0,"index":15826},{"krate":0,"index":15828},{"krate":0,"index":15831},{"krate":0,"index":15832},{"krate":0,"index":15834},{"krate":0,"index":15835},{"krate":0,"index":14155},{"krate":0,"index":14159},{"krate":0,"index":14162},{"krate":0,"index":14164},{"krate":0,"index":15837},{"krate":0,"index":15839},{"krate":0,"index":15841},{"krate":0,"index":15842},{"krate":0,"index":15844},{"krate":0,"index":15847},{"krate":0,"index":15848},{"krate":0,"index":15850},{"krate":0,"index":15851},{"krate":0,"index":14165},{"krate":0,"index":14169},{"krate":0,"index":14172},{"krate":0,"index":14174},{"krate":0,"index":15853},{"krate":0,"index":15855},{"krate":0,"index":15857},{"krate":0,"index":15858},{"krate":0,"index":15860},{"krate":0,"index":15863},{"krate":0,"index":15864},{"krate":0,"index":15866},{"krate":0,"index":15867},{"krate":0,"index":14175},{"krate":0,"index":14179},{"krate":0,"index":14182},{"krate":0,"index":14184},{"krate":0,"index":15869},{"krate":0,"index":15871},{"krate":0,"index":15873},{"krate":0,"index":15874},{"krate":0,"index":15876},{"krate":0,"index":15879},{"krate":0,"index":15880},{"krate":0,"index":15882},{"krate":0,"index":15883},{"krate":0,"index":14185},{"krate":0,"index":14189},{"krate":0,"index":14192},{"krate":0,"index":14194},{"krate":0,"index":15885},{"krate":0,"index":15887},{"krate":0,"index":15889},{"krate":0,"index":15890},{"krate":0,"index":15892},{"krate":0,"index":15895},{"krate":0,"index":15896},{"krate":0,"index":15898},{"krate":0,"index":15899},{"krate":0,"index":14195},{"krate":0,"index":14199},{"krate":0,"index":14202},{"krate":0,"index":14204},{"krate":0,"index":15901},{"krate":0,"index":15903},{"krate":0,"index":15905},{"krate":0,"index":15906},{"krate":0,"index":15908},{"krate":0,"index":15911},{"krate":0,"index":15912},{"krate":0,"index":15914},{"krate":0,"index":15915},{"krate":0,"index":14205},{"krate":0,"index":14209},{"krate":0,"index":14212},{"krate":0,"index":14214},{"krate":0,"index":15917},{"krate":0,"index":15919},{"krate":0,"index":15921},{"krate":0,"index":15922},{"krate":0,"index":15924},{"krate":0,"index":15927},{"krate":0,"index":15928},{"krate":0,"index":15930},{"krate":0,"index":15931},{"krate":0,"index":14215},{"krate":0,"index":14219},{"krate":0,"index":14222},{"krate":0,"index":14224},{"krate":0,"index":15933},{"krate":0,"index":15935},{"krate":0,"index":15937},{"krate":0,"index":15938},{"krate":0,"index":15940},{"krate":0,"index":15943},{"krate":0,"index":15944},{"krate":0,"index":15946},{"krate":0,"index":15947},{"krate":0,"index":14225},{"krate":0,"index":14229},{"krate":0,"index":14232},{"krate":0,"index":14234},{"krate":0,"index":15949},{"krate":0,"index":15951},{"krate":0,"index":15953},{"krate":0,"index":15954},{"krate":0,"index":15956},{"krate":0,"index":15959},{"krate":0,"index":15960},{"krate":0,"index":15962},{"krate":0,"index":15963},{"krate":0,"index":14235},{"krate":0,"index":14239},{"krate":0,"index":14242},{"krate":0,"index":14244},{"krate":0,"index":15965},{"krate":0,"index":15967},{"krate":0,"index":15969},{"krate":0,"index":15970},{"krate":0,"index":15972},{"krate":0,"index":15975},{"krate":0,"index":15976},{"krate":0,"index":15978},{"krate":0,"index":15979},{"krate":0,"index":14245},{"krate":0,"index":14249},{"krate":0,"index":14252},{"krate":0,"index":14254},{"krate":0,"index":15981},{"krate":0,"index":15983},{"krate":0,"index":15985},{"krate":0,"index":15986},{"krate":0,"index":15988},{"krate":0,"index":15991},{"krate":0,"index":15992},{"krate":0,"index":15994},{"krate":0,"index":15995},{"krate":0,"index":14255},{"krate":0,"index":14259},{"krate":0,"index":14262},{"krate":0,"index":14264},{"krate":0,"index":15997},{"krate":0,"index":15999},{"krate":0,"index":16001},{"krate":0,"index":16002},{"krate":0,"index":16004},{"krate":0,"index":16007},{"krate":0,"index":16008},{"krate":0,"index":16010},{"krate":0,"index":16011},{"krate":0,"index":14265},{"krate":0,"index":14269},{"krate":0,"index":14272},{"krate":0,"index":14274},{"krate":0,"index":16013},{"krate":0,"index":16015},{"krate":0,"index":16017},{"krate":0,"index":16018},{"krate":0,"index":16020},{"krate":0,"index":16023},{"krate":0,"index":16024},{"krate":0,"index":16026},{"krate":0,"index":16027},{"krate":0,"index":14275},{"krate":0,"index":14279},{"krate":0,"index":14282},{"krate":0,"index":14284},{"krate":0,"index":16029},{"krate":0,"index":16031},{"krate":0,"index":16033},{"krate":0,"index":16034},{"krate":0,"index":16036},{"krate":0,"index":16039},{"krate":0,"index":16040},{"krate":0,"index":16042},{"krate":0,"index":16043},{"krate":0,"index":14285},{"krate":0,"index":14289},{"krate":0,"index":14292},{"krate":0,"index":14294},{"krate":0,"index":16045},{"krate":0,"index":16047},{"krate":0,"index":16049},{"krate":0,"index":16050},{"krate":0,"index":16052},{"krate":0,"index":16055},{"krate":0,"index":16056},{"krate":0,"index":16058},{"krate":0,"index":16059},{"krate":0,"index":14295},{"krate":0,"index":14299},{"krate":0,"index":14302},{"krate":0,"index":14304},{"krate":0,"index":16061},{"krate":0,"index":16063},{"krate":0,"index":16065},{"krate":0,"index":16066},{"krate":0,"index":16068},{"krate":0,"index":16071},{"krate":0,"index":16072},{"krate":0,"index":16074},{"krate":0,"index":16075},{"krate":0,"index":14305},{"krate":0,"index":14309},{"krate":0,"index":14312},{"krate":0,"index":14314},{"krate":0,"index":16077},{"krate":0,"index":16079},{"krate":0,"index":16081},{"krate":0,"index":16082},{"krate":0,"index":16084},{"krate":0,"index":16087},{"krate":0,"index":16088},{"krate":0,"index":16090},{"krate":0,"index":16091},{"krate":0,"index":14315},{"krate":0,"index":14319},{"krate":0,"index":14322},{"krate":0,"index":14324},{"krate":0,"index":16093},{"krate":0,"index":16095},{"krate":0,"index":16097},{"krate":0,"index":16098},{"krate":0,"index":16100},{"krate":0,"index":16103},{"krate":0,"index":16104},{"krate":0,"index":16106},{"krate":0,"index":16107},{"krate":0,"index":14325},{"krate":0,"index":14329},{"krate":0,"index":14332},{"krate":0,"index":14334},{"krate":0,"index":16109},{"krate":0,"index":16111},{"krate":0,"index":16113},{"krate":0,"index":16114},{"krate":0,"index":16116},{"krate":0,"index":16119},{"krate":0,"index":16120},{"krate":0,"index":16122},{"krate":0,"index":16123},{"krate":0,"index":14335},{"krate":0,"index":14339},{"krate":0,"index":14342},{"krate":0,"index":14344},{"krate":0,"index":16125},{"krate":0,"index":16127},{"krate":0,"index":16129},{"krate":0,"index":16130},{"krate":0,"index":16132},{"krate":0,"index":16135},{"krate":0,"index":16136},{"krate":0,"index":16138},{"krate":0,"index":16139},{"krate":0,"index":14345},{"krate":0,"index":14349},{"krate":0,"index":14352},{"krate":0,"index":14354},{"krate":0,"index":16141},{"krate":0,"index":16143},{"krate":0,"index":16145},{"krate":0,"index":16146},{"krate":0,"index":16148},{"krate":0,"index":16151},{"krate":0,"index":16152},{"krate":0,"index":16154},{"krate":0,"index":16155},{"krate":0,"index":14355},{"krate":0,"index":14359},{"krate":0,"index":14362},{"krate":0,"index":14364},{"krate":0,"index":16157},{"krate":0,"index":16159},{"krate":0,"index":16161},{"krate":0,"index":16162},{"krate":0,"index":16164},{"krate":0,"index":16167},{"krate":0,"index":16168},{"krate":0,"index":16170},{"krate":0,"index":16171},{"krate":0,"index":14365},{"krate":0,"index":14369},{"krate":0,"index":14372},{"krate":0,"index":14374},{"krate":0,"index":16173},{"krate":0,"index":16175},{"krate":0,"index":16177},{"krate":0,"index":16178},{"krate":0,"index":16180},{"krate":0,"index":16183},{"krate":0,"index":16184},{"krate":0,"index":16186},{"krate":0,"index":16187},{"krate":0,"index":14375},{"krate":0,"index":14379},{"krate":0,"index":14382},{"krate":0,"index":14384},{"krate":0,"index":16189},{"krate":0,"index":16191},{"krate":0,"index":16193},{"krate":0,"index":16194},{"krate":0,"index":16196},{"krate":0,"index":16199},{"krate":0,"index":16200},{"krate":0,"index":16202},{"krate":0,"index":16203},{"krate":0,"index":14385},{"krate":0,"index":14389},{"krate":0,"index":14392},{"krate":0,"index":14394},{"krate":0,"index":16205},{"krate":0,"index":16207},{"krate":0,"index":16209},{"krate":0,"index":16210},{"krate":0,"index":16212},{"krate":0,"index":16215},{"krate":0,"index":16216},{"krate":0,"index":16218},{"krate":0,"index":16219},{"krate":0,"index":14395},{"krate":0,"index":14399},{"krate":0,"index":14402},{"krate":0,"index":14404},{"krate":0,"index":16221},{"krate":0,"index":16223},{"krate":0,"index":16225},{"krate":0,"index":16226},{"krate":0,"index":16228},{"krate":0,"index":16231},{"krate":0,"index":16232},{"krate":0,"index":16234},{"krate":0,"index":16235},{"krate":0,"index":14405},{"krate":0,"index":14409},{"krate":0,"index":14412},{"krate":0,"index":14414},{"krate":0,"index":16237},{"krate":0,"index":16239},{"krate":0,"index":16241},{"krate":0,"index":16242},{"krate":0,"index":16244},{"krate":0,"index":16247},{"krate":0,"index":16248},{"krate":0,"index":16250},{"krate":0,"index":16251},{"krate":0,"index":14415},{"krate":0,"index":14419},{"krate":0,"index":14422},{"krate":0,"index":14424},{"krate":0,"index":16253},{"krate":0,"index":16255},{"krate":0,"index":16257},{"krate":0,"index":16258},{"krate":0,"index":16260},{"krate":0,"index":16263},{"krate":0,"index":16264},{"krate":0,"index":16266},{"krate":0,"index":16267},{"krate":0,"index":14425},{"krate":0,"index":14429},{"krate":0,"index":14432},{"krate":0,"index":14434},{"krate":0,"index":16269},{"krate":0,"index":16271},{"krate":0,"index":16273},{"krate":0,"index":16274},{"krate":0,"index":16276},{"krate":0,"index":16279},{"krate":0,"index":16280},{"krate":0,"index":16282},{"krate":0,"index":16283},{"krate":0,"index":14435},{"krate":0,"index":14439},{"krate":0,"index":14442},{"krate":0,"index":14444},{"krate":0,"index":16285},{"krate":0,"index":16287},{"krate":0,"index":16289},{"krate":0,"index":16290},{"krate":0,"index":16292},{"krate":0,"index":16295},{"krate":0,"index":16296},{"krate":0,"index":16298},{"krate":0,"index":16299},{"krate":0,"index":14445},{"krate":0,"index":14449},{"krate":0,"index":14452},{"krate":0,"index":14454},{"krate":0,"index":16301},{"krate":0,"index":16303},{"krate":0,"index":16305},{"krate":0,"index":16306},{"krate":0,"index":16308},{"krate":0,"index":16311},{"krate":0,"index":16312},{"krate":0,"index":16314},{"krate":0,"index":16315},{"krate":0,"index":14455},{"krate":0,"index":14459},{"krate":0,"index":14462},{"krate":0,"index":14464},{"krate":0,"index":16317},{"krate":0,"index":16319},{"krate":0,"index":16321},{"krate":0,"index":16322},{"krate":0,"index":16324},{"krate":0,"index":16327},{"krate":0,"index":16328},{"krate":0,"index":16330},{"krate":0,"index":16331},{"krate":0,"index":14465},{"krate":0,"index":14469},{"krate":0,"index":14472},{"krate":0,"index":14474},{"krate":0,"index":16333},{"krate":0,"index":16335},{"krate":0,"index":16337},{"krate":0,"index":16338},{"krate":0,"index":16340},{"krate":0,"index":16343},{"krate":0,"index":16344},{"krate":0,"index":16346},{"krate":0,"index":16347},{"krate":0,"index":14475},{"krate":0,"index":14479},{"krate":0,"index":14482},{"krate":0,"index":14484},{"krate":0,"index":16349},{"krate":0,"index":16351},{"krate":0,"index":16353},{"krate":0,"index":16354},{"krate":0,"index":16356},{"krate":0,"index":16359},{"krate":0,"index":16360},{"krate":0,"index":16362},{"krate":0,"index":16363},{"krate":0,"index":14485},{"krate":0,"index":14489},{"krate":0,"index":14492},{"krate":0,"index":14494},{"krate":0,"index":16365},{"krate":0,"index":16367},{"krate":0,"index":16369},{"krate":0,"index":16370},{"krate":0,"index":16372},{"krate":0,"index":16375},{"krate":0,"index":16376},{"krate":0,"index":16378},{"krate":0,"index":16379},{"krate":0,"index":14495},{"krate":0,"index":14499},{"krate":0,"index":14502},{"krate":0,"index":14504},{"krate":0,"index":16381},{"krate":0,"index":16383},{"krate":0,"index":16385},{"krate":0,"index":16386},{"krate":0,"index":16388},{"krate":0,"index":16391},{"krate":0,"index":16392},{"krate":0,"index":16394},{"krate":0,"index":16395},{"krate":0,"index":14505},{"krate":0,"index":14509},{"krate":0,"index":14512},{"krate":0,"index":14514},{"krate":0,"index":16397},{"krate":0,"index":16399},{"krate":0,"index":16401},{"krate":0,"index":16402},{"krate":0,"index":16404},{"krate":0,"index":16407},{"krate":0,"index":16408},{"krate":0,"index":16410},{"krate":0,"index":16411},{"krate":0,"index":14515},{"krate":0,"index":14519},{"krate":0,"index":14522},{"krate":0,"index":14524},{"krate":0,"index":16413},{"krate":0,"index":16415},{"krate":0,"index":16417},{"krate":0,"index":16418},{"krate":0,"index":16420},{"krate":0,"index":16423},{"krate":0,"index":16424},{"krate":0,"index":16426},{"krate":0,"index":16427},{"krate":0,"index":14525},{"krate":0,"index":14529},{"krate":0,"index":14532},{"krate":0,"index":14534},{"krate":0,"index":16429},{"krate":0,"index":16431},{"krate":0,"index":16433},{"krate":0,"index":16434},{"krate":0,"index":16436},{"krate":0,"index":16439},{"krate":0,"index":16440},{"krate":0,"index":16442},{"krate":0,"index":16443},{"krate":0,"index":14535},{"krate":0,"index":14539},{"krate":0,"index":14542},{"krate":0,"index":14544},{"krate":0,"index":16445},{"krate":0,"index":16447},{"krate":0,"index":16449},{"krate":0,"index":16450},{"krate":0,"index":16452},{"krate":0,"index":16455},{"krate":0,"index":16456},{"krate":0,"index":16458},{"krate":0,"index":16459},{"krate":0,"index":14545},{"krate":0,"index":14549},{"krate":0,"index":14552},{"krate":0,"index":14554},{"krate":0,"index":16461},{"krate":0,"index":16463},{"krate":0,"index":16465},{"krate":0,"index":16466},{"krate":0,"index":16468},{"krate":0,"index":16471},{"krate":0,"index":16472},{"krate":0,"index":16474},{"krate":0,"index":16475},{"krate":0,"index":14555},{"krate":0,"index":14559},{"krate":0,"index":14562},{"krate":0,"index":14564},{"krate":0,"index":16477},{"krate":0,"index":16479},{"krate":0,"index":16481},{"krate":0,"index":16482},{"krate":0,"index":16484},{"krate":0,"index":16487},{"krate":0,"index":16488},{"krate":0,"index":16490},{"krate":0,"index":16491},{"krate":0,"index":14565},{"krate":0,"index":14569},{"krate":0,"index":14572},{"krate":0,"index":14574},{"krate":0,"index":16493},{"krate":0,"index":16495},{"krate":0,"index":16497},{"krate":0,"index":16498},{"krate":0,"index":16500},{"krate":0,"index":16503},{"krate":0,"index":16504},{"krate":0,"index":16506},{"krate":0,"index":16507},{"krate":0,"index":14575},{"krate":0,"index":14579},{"krate":0,"index":14582},{"krate":0,"index":14584},{"krate":0,"index":16509},{"krate":0,"index":16511},{"krate":0,"index":16513},{"krate":0,"index":16514},{"krate":0,"index":16516},{"krate":0,"index":16519},{"krate":0,"index":16520},{"krate":0,"index":16522},{"krate":0,"index":16523},{"krate":0,"index":14585},{"krate":0,"index":14589},{"krate":0,"index":14592},{"krate":0,"index":14594},{"krate":0,"index":16525},{"krate":0,"index":16527},{"krate":0,"index":16529},{"krate":0,"index":16530},{"krate":0,"index":16532},{"krate":0,"index":16535},{"krate":0,"index":16536},{"krate":0,"index":16538},{"krate":0,"index":16539},{"krate":0,"index":14595},{"krate":0,"index":14599},{"krate":0,"index":14602},{"krate":0,"index":14604},{"krate":0,"index":16541},{"krate":0,"index":16543},{"krate":0,"index":16545},{"krate":0,"index":16546},{"krate":0,"index":16548},{"krate":0,"index":16551},{"krate":0,"index":16552},{"krate":0,"index":16554},{"krate":0,"index":16555},{"krate":0,"index":14605},{"krate":0,"index":14609},{"krate":0,"index":14612},{"krate":0,"index":14614},{"krate":0,"index":16557},{"krate":0,"index":16559},{"krate":0,"index":16561},{"krate":0,"index":16562},{"krate":0,"index":16564},{"krate":0,"index":16567},{"krate":0,"index":16568},{"krate":0,"index":16570},{"krate":0,"index":16571},{"krate":0,"index":14615},{"krate":0,"index":14619},{"krate":0,"index":14622},{"krate":0,"index":14624},{"krate":0,"index":16573},{"krate":0,"index":16575},{"krate":0,"index":16577},{"krate":0,"index":16578},{"krate":0,"index":16580},{"krate":0,"index":16583},{"krate":0,"index":16584},{"krate":0,"index":16586},{"krate":0,"index":16587},{"krate":0,"index":14625},{"krate":0,"index":14629},{"krate":0,"index":14632},{"krate":0,"index":14634},{"krate":0,"index":16589},{"krate":0,"index":16591},{"krate":0,"index":16593},{"krate":0,"index":16594},{"krate":0,"index":16596},{"krate":0,"index":16599},{"krate":0,"index":16600},{"krate":0,"index":16602},{"krate":0,"index":16603},{"krate":0,"index":14635},{"krate":0,"index":14639},{"krate":0,"index":14642},{"krate":0,"index":14644},{"krate":0,"index":16605},{"krate":0,"index":16607},{"krate":0,"index":16609},{"krate":0,"index":16610},{"krate":0,"index":16612},{"krate":0,"index":16615},{"krate":0,"index":16616},{"krate":0,"index":16618},{"krate":0,"index":16619},{"krate":0,"index":14645},{"krate":0,"index":14649},{"krate":0,"index":14652},{"krate":0,"index":14654},{"krate":0,"index":16621},{"krate":0,"index":16623},{"krate":0,"index":16625},{"krate":0,"index":16626},{"krate":0,"index":16628},{"krate":0,"index":16631},{"krate":0,"index":16632},{"krate":0,"index":16634},{"krate":0,"index":16635},{"krate":0,"index":14655},{"krate":0,"index":14659},{"krate":0,"index":14662},{"krate":0,"index":14664},{"krate":0,"index":16637},{"krate":0,"index":16639},{"krate":0,"index":16641},{"krate":0,"index":16642},{"krate":0,"index":16644},{"krate":0,"index":16647},{"krate":0,"index":16648},{"krate":0,"index":16650},{"krate":0,"index":16651},{"krate":0,"index":14665},{"krate":0,"index":14669},{"krate":0,"index":14672},{"krate":0,"index":14674},{"krate":0,"index":16653},{"krate":0,"index":16655},{"krate":0,"index":16657},{"krate":0,"index":16658},{"krate":0,"index":16660},{"krate":0,"index":16663},{"krate":0,"index":16664},{"krate":0,"index":16666},{"krate":0,"index":16667},{"krate":0,"index":14675},{"krate":0,"index":14679},{"krate":0,"index":14682},{"krate":0,"index":14684},{"krate":0,"index":16669},{"krate":0,"index":16671},{"krate":0,"index":16673},{"krate":0,"index":16674},{"krate":0,"index":16676},{"krate":0,"index":16679},{"krate":0,"index":16680},{"krate":0,"index":16682},{"krate":0,"index":16683},{"krate":0,"index":14685},{"krate":0,"index":14689},{"krate":0,"index":14692},{"krate":0,"index":14694},{"krate":0,"index":16685},{"krate":0,"index":16687},{"krate":0,"index":16689},{"krate":0,"index":16690},{"krate":0,"index":16692},{"krate":0,"index":16695},{"krate":0,"index":16696},{"krate":0,"index":16698},{"krate":0,"index":16699},{"krate":0,"index":14695},{"krate":0,"index":14699},{"krate":0,"index":14702},{"krate":0,"index":14704},{"krate":0,"index":16701},{"krate":0,"index":16703},{"krate":0,"index":16705},{"krate":0,"index":16706},{"krate":0,"index":16708},{"krate":0,"index":16711},{"krate":0,"index":16712},{"krate":0,"index":16714},{"krate":0,"index":16715},{"krate":0,"index":14705},{"krate":0,"index":14709},{"krate":0,"index":14712},{"krate":0,"index":14714},{"krate":0,"index":16717},{"krate":0,"index":16719},{"krate":0,"index":16721},{"krate":0,"index":16722},{"krate":0,"index":16724},{"krate":0,"index":16727},{"krate":0,"index":16728},{"krate":0,"index":16730},{"krate":0,"index":16731},{"krate":0,"index":14715},{"krate":0,"index":14719},{"krate":0,"index":14722},{"krate":0,"index":14724},{"krate":0,"index":16733},{"krate":0,"index":16735},{"krate":0,"index":16737},{"krate":0,"index":16738},{"krate":0,"index":16740},{"krate":0,"index":16743},{"krate":0,"index":16744},{"krate":0,"index":16746},{"krate":0,"index":16747},{"krate":0,"index":14725},{"krate":0,"index":14729},{"krate":0,"index":14732},{"krate":0,"index":14734},{"krate":0,"index":16749},{"krate":0,"index":16751},{"krate":0,"index":16753},{"krate":0,"index":16754},{"krate":0,"index":16756},{"krate":0,"index":16759},{"krate":0,"index":16760},{"krate":0,"index":16762},{"krate":0,"index":16763},{"krate":0,"index":14735},{"krate":0,"index":14739},{"krate":0,"index":14742},{"krate":0,"index":14744},{"krate":0,"index":16765},{"krate":0,"index":16767},{"krate":0,"index":16769},{"krate":0,"index":16770},{"krate":0,"index":16772},{"krate":0,"index":16775},{"krate":0,"index":16776},{"krate":0,"index":16778},{"krate":0,"index":16779},{"krate":0,"index":14745},{"krate":0,"index":14749},{"krate":0,"index":14752},{"krate":0,"index":14754},{"krate":0,"index":16781},{"krate":0,"index":16783},{"krate":0,"index":16785},{"krate":0,"index":16786},{"krate":0,"index":16788},{"krate":0,"index":16791},{"krate":0,"index":16792},{"krate":0,"index":16794},{"krate":0,"index":16795},{"krate":0,"index":14755},{"krate":0,"index":14759},{"krate":0,"index":14762},{"krate":0,"index":14764},{"krate":0,"index":714},{"krate":0,"index":723},{"krate":0,"index":734},{"krate":0,"index":744},{"krate":0,"index":752},{"krate":0,"index":756},{"krate":0,"index":762},{"krate":0,"index":767}],"decl_id":null,"docs":" Traits and tags for identifying the dimension of all algebraic entities.\n","sig":null,"attributes":[{"value":"allow(missing_docs)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":97588,"byte_end":97611,"line_start":1,"line_end":1,"column_start":1,"column_end":24}},{"value":"/ Traits and tags for identifying the dimension of all algebraic entities.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":97613,"byte_end":97689,"line_start":3,"line_end":3,"column_start":1,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":13273},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98108,"byte_end":98115,"line_start":18,"line_end":18,"column_start":12,"column_end":19},"name":"Dynamic","qualname":"::base::dimension::Dynamic","value":"Dynamic {  }","parent":null,"children":[{"krate":0,"index":13274}],"decl_id":null,"docs":" Dim of dynamically-sized algebraic entities.\n","sig":null,"attributes":[{"value":"/ Dim of dynamically-sized algebraic entities.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98003,"byte_end":98051,"line_start":16,"line_end":16,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":676},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98220,"byte_end":98223,"line_start":25,"line_end":25,"column_start":12,"column_end":15},"name":"new","qualname":"<Dynamic>::new","value":"pub fn new(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" A dynamic size equal to `value`.\n","sig":null,"attributes":[{"value":"/ A dynamic size equal to `value`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98158,"byte_end":98194,"line_start":23,"line_end":23,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98199,"byte_end":98208,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98798,"byte_end":98807,"line_start":47,"line_end":47,"column_start":11,"column_end":20},"name":"IsDynamic","qualname":"::base::dimension::IsDynamic","value":"IsDynamic","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98752,"byte_end":98787,"line_start":46,"line_end":46,"column_start":1,"column_end":36}}]},{"kind":"Trait","id":{"krate":0,"index":678},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98901,"byte_end":98915,"line_start":49,"line_end":49,"column_start":11,"column_end":25},"name":"IsNotStaticOne","qualname":"::base::dimension::IsNotStaticOne","value":"IsNotStaticOne","parent":null,"children":[],"decl_id":null,"docs":" Trait implemented by `Dynamic` and type-level integers different from `U1`.\n","sig":null,"attributes":[{"value":"/ Trait implemented by `Dynamic` and type-level integers different from `U1`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98811,"byte_end":98890,"line_start":48,"line_end":48,"column_start":1,"column_end":80}}]},{"kind":"Trait","id":{"krate":0,"index":681},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99159,"byte_end":99162,"line_start":56,"line_end":56,"column_start":11,"column_end":14},"name":"Dim","qualname":"::base::dimension::Dim","value":"Dim: Any + Debug + Copy + PartialEq + Send + Sync","parent":null,"children":[{"krate":0,"index":682},{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686}],"decl_id":null,"docs":" Trait implemented by any type that can be used as a dimension. This includes type-level\n integers and `Dynamic` (for dimensions not known at compile-time).\n","sig":null,"attributes":[{"value":"/ Trait implemented by any type that can be used as a dimension. This includes type-level","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98986,"byte_end":99077,"line_start":54,"line_end":54,"column_start":1,"column_end":92}},{"value":"/ integers and `Dynamic` (for dimensions not known at compile-time).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99078,"byte_end":99148,"line_start":55,"line_end":55,"column_start":1,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99240,"byte_end":99242,"line_start":58,"line_end":58,"column_start":8,"column_end":10},"name":"is","qualname":"::base::dimension::Dim::is","value":"pub fn is<D: Dim>() -> bool","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99215,"byte_end":99232,"line_start":57,"line_end":57,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99444,"byte_end":99456,"line_start":64,"line_end":64,"column_start":8,"column_end":20},"name":"try_to_usize","qualname":"::base::dimension::Dim::try_to_usize","value":"pub fn try_to_usize() -> Option<usize>","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =\n Dynamic`.\n","sig":null,"attributes":[{"value":"/ Gets the compile-time value of `Self`. Returns `None` if it is not known, i.e., if `Self =","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99324,"byte_end":99418,"line_start":62,"line_end":62,"column_start":5,"column_end":99}},{"value":"/ Dynamic`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99423,"byte_end":99436,"line_start":63,"line_end":63,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99614,"byte_end":99619,"line_start":68,"line_end":68,"column_start":8,"column_end":13},"name":"value","qualname":"::base::dimension::Dim::value","value":"pub fn value(&Self) -> usize","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Gets the run-time value of `self`. For type-level integers, this is the same as\n `Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Gets the run-time value of `self`. For type-level integers, this is the same as","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99482,"byte_end":99565,"line_start":66,"line_end":66,"column_start":5,"column_end":88}},{"value":"/ `Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99570,"byte_end":99606,"line_start":67,"line_end":67,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99798,"byte_end":99808,"line_start":72,"line_end":72,"column_start":8,"column_end":18},"name":"from_usize","qualname":"::base::dimension::Dim::from_usize","value":"pub fn from_usize(usize) -> Self","parent":{"krate":0,"index":681},"children":[],"decl_id":null,"docs":" Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level\n integer and `dim != Self::try_to_usize().unwrap()`.\n","sig":null,"attributes":[{"value":"/ Builds an instance of `Self` from a run-time value. Panics if `Self` is a type-level","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99642,"byte_end":99730,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/ integer and `dim != Self::try_to_usize().unwrap()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99735,"byte_end":99790,"line_start":71,"line_end":71,"column_start":5,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":13287},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102363,"byte_end":102369,"line_start":180,"line_end":180,"column_start":45,"column_end":51},"name":"DimSum","qualname":"::base::dimension::DimSum","value":"<D1 as DimAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13290},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102323,"byte_end":102329,"line_start":180,"line_end":180,"column_start":5,"column_end":11},"name":"DimAdd","qualname":"::base::dimension::DimAdd","value":"DimAdd<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13292},{"krate":0,"index":13293}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13293},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102348,"byte_end":102351,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":13290},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13307},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102375,"byte_end":102385,"line_start":180,"line_end":180,"column_start":57,"column_end":67},"name":"DimNameSum","qualname":"::base::dimension::DimNameSum","value":"<D1 as DimNameAdd<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13310},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102331,"byte_end":102341,"line_start":180,"line_end":180,"column_start":13,"column_end":23},"name":"DimNameAdd","qualname":"::base::dimension::DimNameAdd","value":"DimNameAdd<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13312},{"krate":0,"index":13313}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102348,"byte_end":102351,"line_start":180,"line_end":180,"column_start":30,"column_end":33},"name":"add","qualname":"::base::dimension::DimNameAdd::add","value":"pub fn add(Self, D) -> Self::Output","parent":{"krate":0,"index":13310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13319},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102440,"byte_end":102447,"line_start":181,"line_end":181,"column_start":45,"column_end":52},"name":"DimProd","qualname":"::base::dimension::DimProd","value":"<D1 as DimMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13322},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102400,"byte_end":102406,"line_start":181,"line_end":181,"column_start":5,"column_end":11},"name":"DimMul","qualname":"::base::dimension::DimMul","value":"DimMul<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13324},{"krate":0,"index":13325}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13325},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102425,"byte_end":102428,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":13322},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13339},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102452,"byte_end":102463,"line_start":181,"line_end":181,"column_start":57,"column_end":68},"name":"DimNameProd","qualname":"::base::dimension::DimNameProd","value":"<D1 as DimNameMul<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13342},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102408,"byte_end":102418,"line_start":181,"line_end":181,"column_start":13,"column_end":23},"name":"DimNameMul","qualname":"::base::dimension::DimNameMul","value":"DimNameMul<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13344},{"krate":0,"index":13345}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13345},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102425,"byte_end":102428,"line_start":181,"line_end":181,"column_start":30,"column_end":33},"name":"mul","qualname":"::base::dimension::DimNameMul::mul","value":"pub fn mul(Self, D) -> Self::Output","parent":{"krate":0,"index":13342},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13351},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102518,"byte_end":102525,"line_start":182,"line_end":182,"column_start":45,"column_end":52},"name":"DimDiff","qualname":"::base::dimension::DimDiff","value":"<D1 as DimSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13354},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102478,"byte_end":102484,"line_start":182,"line_end":182,"column_start":5,"column_end":11},"name":"DimSub","qualname":"::base::dimension::DimSub","value":"DimSub<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13356},{"krate":0,"index":13357}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102503,"byte_end":102506,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":13354},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13371},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102530,"byte_end":102541,"line_start":182,"line_end":182,"column_start":57,"column_end":68},"name":"DimNameDiff","qualname":"::base::dimension::DimNameDiff","value":"<D1 as DimNameSub<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13374},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102486,"byte_end":102496,"line_start":182,"line_end":182,"column_start":13,"column_end":23},"name":"DimNameSub","qualname":"::base::dimension::DimNameSub","value":"DimNameSub<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13376},{"krate":0,"index":13377}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13377},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102503,"byte_end":102506,"line_start":182,"line_end":182,"column_start":30,"column_end":33},"name":"sub","qualname":"::base::dimension::DimNameSub::sub","value":"pub fn sub(Self, D) -> Self::Output","parent":{"krate":0,"index":13374},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13383},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102596,"byte_end":102603,"line_start":183,"line_end":183,"column_start":45,"column_end":52},"name":"DimQuot","qualname":"::base::dimension::DimQuot","value":"<D1 as DimDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13386},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102556,"byte_end":102562,"line_start":183,"line_end":183,"column_start":5,"column_end":11},"name":"DimDiv","qualname":"::base::dimension::DimDiv","value":"DimDiv<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13388},{"krate":0,"index":13389}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13389},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102581,"byte_end":102584,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":13386},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13403},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102608,"byte_end":102619,"line_start":183,"line_end":183,"column_start":57,"column_end":68},"name":"DimNameQuot","qualname":"::base::dimension::DimNameQuot","value":"<D1 as DimNameDiv<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13406},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102564,"byte_end":102574,"line_start":183,"line_end":183,"column_start":13,"column_end":23},"name":"DimNameDiv","qualname":"::base::dimension::DimNameDiv","value":"DimNameDiv<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13408},{"krate":0,"index":13409}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13409},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102581,"byte_end":102584,"line_start":183,"line_end":183,"column_start":30,"column_end":33},"name":"div","qualname":"::base::dimension::DimNameDiv::div","value":"pub fn div(Self, D) -> Self::Output","parent":{"krate":0,"index":13406},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13415},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102674,"byte_end":102684,"line_start":184,"line_end":184,"column_start":45,"column_end":55},"name":"DimMinimum","qualname":"::base::dimension::DimMinimum","value":"<D1 as DimMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13418},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102634,"byte_end":102640,"line_start":184,"line_end":184,"column_start":5,"column_end":11},"name":"DimMin","qualname":"::base::dimension::DimMin","value":"DimMin<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13420},{"krate":0,"index":13421}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102659,"byte_end":102662,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":13418},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13435},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102686,"byte_end":102700,"line_start":184,"line_end":184,"column_start":57,"column_end":71},"name":"DimNameMinimum","qualname":"::base::dimension::DimNameMinimum","value":"<D1 as DimNameMin<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13438},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102642,"byte_end":102652,"line_start":184,"line_end":184,"column_start":13,"column_end":23},"name":"DimNameMin","qualname":"::base::dimension::DimNameMin","value":"DimNameMin<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13440},{"krate":0,"index":13441}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13441},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102659,"byte_end":102662,"line_start":184,"line_end":184,"column_start":30,"column_end":33},"name":"min","qualname":"::base::dimension::DimNameMin::min","value":"pub fn min(Self, D) -> Self::Output","parent":{"krate":0,"index":13438},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13447},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102755,"byte_end":102765,"line_start":185,"line_end":185,"column_start":45,"column_end":55},"name":"DimMaximum","qualname":"::base::dimension::DimMaximum","value":"<D1 as DimMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13450},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102715,"byte_end":102721,"line_start":185,"line_end":185,"column_start":5,"column_end":11},"name":"DimMax","qualname":"::base::dimension::DimMax","value":"DimMax<D: Dim>: Dim","parent":null,"children":[{"krate":0,"index":13452},{"krate":0,"index":13453}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13453},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102740,"byte_end":102743,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":13450},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":13467},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102767,"byte_end":102781,"line_start":185,"line_end":185,"column_start":57,"column_end":71},"name":"DimNameMaximum","qualname":"::base::dimension::DimNameMaximum","value":"<D1 as DimNameMax<D2>>::Output","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":13470},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102723,"byte_end":102733,"line_start":185,"line_end":185,"column_start":13,"column_end":23},"name":"DimNameMax","qualname":"::base::dimension::DimNameMax","value":"DimNameMax<D: DimName>: DimName","parent":null,"children":[{"krate":0,"index":13472},{"krate":0,"index":13473}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":13473},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102740,"byte_end":102743,"line_start":185,"line_end":185,"column_start":30,"column_end":33},"name":"max","qualname":"::base::dimension::DimNameMax::max","value":"pub fn max(Self, D) -> Self::Output","parent":{"krate":0,"index":13470},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":698},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102864,"byte_end":102871,"line_start":189,"line_end":189,"column_start":11,"column_end":18},"name":"DimName","qualname":"::base::dimension::DimName","value":"DimName: Dim","parent":null,"children":[{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"decl_id":null,"docs":" Trait implemented exclusively by type-level integers.\n","sig":null,"attributes":[{"value":"/ Trait implemented exclusively by type-level integers.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102796,"byte_end":102853,"line_start":188,"line_end":188,"column_start":1,"column_end":58}}]},{"kind":"Type","id":{"krate":0,"index":699},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102888,"byte_end":102893,"line_start":190,"line_end":190,"column_start":10,"column_end":15},"name":"Value","qualname":"::base::dimension::DimName::Value","value":"type Value: NamedDim<Name = Self>;","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103004,"byte_end":103008,"line_start":194,"line_end":194,"column_start":8,"column_end":12},"name":"name","qualname":"::base::dimension::DimName::name","value":"pub fn name() -> Self","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" The name of this dimension, i.e., the singleton `Self`.\n","sig":null,"attributes":[{"value":"/ The name of this dimension, i.e., the singleton `Self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102923,"byte_end":102982,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102987,"byte_end":102996,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103128,"byte_end":103131,"line_start":199,"line_end":199,"column_start":8,"column_end":11},"name":"dim","qualname":"::base::dimension::DimName::dim","value":"pub fn dim() -> usize","parent":{"krate":0,"index":698},"children":[],"decl_id":null,"docs":" The value of this dimension.\n","sig":null,"attributes":[{"value":"/ The value of this dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103074,"byte_end":103106,"line_start":197,"line_end":197,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103111,"byte_end":103120,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":702},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103196,"byte_end":103204,"line_start":204,"line_end":204,"column_start":11,"column_end":19},"name":"NamedDim","qualname":"::base::dimension::NamedDim","value":"NamedDim: Sized + Any + Unsigned","parent":null,"children":[{"krate":0,"index":703}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":703},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103240,"byte_end":103244,"line_start":205,"line_end":205,"column_start":10,"column_end":14},"name":"Name","qualname":"::base::dimension::NamedDim::Name","value":"type Name: DimName<Value = Self>;","parent":{"krate":0,"index":702},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":13479},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103455,"byte_end":103457,"line_start":211,"line_end":211,"column_start":12,"column_end":14},"name":"U1","qualname":"::base::dimension::U1","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension with a value of `1`.\n","sig":null,"attributes":[{"value":"/ A type level dimension with a value of `1`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103272,"byte_end":103319,"line_start":208,"line_end":208,"column_start":1,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":14765},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105017,"byte_end":105019,"line_start":288,"line_end":288,"column_start":5,"column_end":7},"name":"U0","qualname":"::base::dimension::U0","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14781},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105029,"byte_end":105031,"line_start":288,"line_end":288,"column_start":17,"column_end":19},"name":"U2","qualname":"::base::dimension::U2","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105033,"byte_end":105035,"line_start":288,"line_end":288,"column_start":21,"column_end":23},"name":"U3","qualname":"::base::dimension::U3","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14813},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105037,"byte_end":105039,"line_start":288,"line_end":288,"column_start":25,"column_end":27},"name":"U4","qualname":"::base::dimension::U4","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14829},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105041,"byte_end":105043,"line_start":288,"line_end":288,"column_start":29,"column_end":31},"name":"U5","qualname":"::base::dimension::U5","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14845},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105045,"byte_end":105047,"line_start":288,"line_end":288,"column_start":33,"column_end":35},"name":"U6","qualname":"::base::dimension::U6","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14861},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105049,"byte_end":105051,"line_start":288,"line_end":288,"column_start":37,"column_end":39},"name":"U7","qualname":"::base::dimension::U7","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14877},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105053,"byte_end":105055,"line_start":288,"line_end":288,"column_start":41,"column_end":43},"name":"U8","qualname":"::base::dimension::U8","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14893},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105057,"byte_end":105059,"line_start":288,"line_end":288,"column_start":45,"column_end":47},"name":"U9","qualname":"::base::dimension::U9","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14909},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105061,"byte_end":105064,"line_start":288,"line_end":288,"column_start":49,"column_end":52},"name":"U10","qualname":"::base::dimension::U10","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14925},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105066,"byte_end":105069,"line_start":288,"line_end":288,"column_start":54,"column_end":57},"name":"U11","qualname":"::base::dimension::U11","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14941},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105071,"byte_end":105074,"line_start":288,"line_end":288,"column_start":59,"column_end":62},"name":"U12","qualname":"::base::dimension::U12","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14957},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105076,"byte_end":105079,"line_start":288,"line_end":288,"column_start":64,"column_end":67},"name":"U13","qualname":"::base::dimension::U13","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14973},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105081,"byte_end":105084,"line_start":288,"line_end":288,"column_start":69,"column_end":72},"name":"U14","qualname":"::base::dimension::U14","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":14989},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105086,"byte_end":105089,"line_start":288,"line_end":288,"column_start":74,"column_end":77},"name":"U15","qualname":"::base::dimension::U15","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15005},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105091,"byte_end":105094,"line_start":288,"line_end":288,"column_start":79,"column_end":82},"name":"U16","qualname":"::base::dimension::U16","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15021},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105096,"byte_end":105099,"line_start":288,"line_end":288,"column_start":84,"column_end":87},"name":"U17","qualname":"::base::dimension::U17","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15037},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105101,"byte_end":105104,"line_start":288,"line_end":288,"column_start":89,"column_end":92},"name":"U18","qualname":"::base::dimension::U18","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15053},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105110,"byte_end":105113,"line_start":289,"line_end":289,"column_start":5,"column_end":8},"name":"U19","qualname":"::base::dimension::U19","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15069},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105115,"byte_end":105118,"line_start":289,"line_end":289,"column_start":10,"column_end":13},"name":"U20","qualname":"::base::dimension::U20","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15085},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105120,"byte_end":105123,"line_start":289,"line_end":289,"column_start":15,"column_end":18},"name":"U21","qualname":"::base::dimension::U21","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15101},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105125,"byte_end":105128,"line_start":289,"line_end":289,"column_start":20,"column_end":23},"name":"U22","qualname":"::base::dimension::U22","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15117},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105130,"byte_end":105133,"line_start":289,"line_end":289,"column_start":25,"column_end":28},"name":"U23","qualname":"::base::dimension::U23","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15133},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105135,"byte_end":105138,"line_start":289,"line_end":289,"column_start":30,"column_end":33},"name":"U24","qualname":"::base::dimension::U24","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15149},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105140,"byte_end":105143,"line_start":289,"line_end":289,"column_start":35,"column_end":38},"name":"U25","qualname":"::base::dimension::U25","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15165},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105145,"byte_end":105148,"line_start":289,"line_end":289,"column_start":40,"column_end":43},"name":"U26","qualname":"::base::dimension::U26","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15181},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105150,"byte_end":105153,"line_start":289,"line_end":289,"column_start":45,"column_end":48},"name":"U27","qualname":"::base::dimension::U27","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15197},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105155,"byte_end":105158,"line_start":289,"line_end":289,"column_start":50,"column_end":53},"name":"U28","qualname":"::base::dimension::U28","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15213},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105160,"byte_end":105163,"line_start":289,"line_end":289,"column_start":55,"column_end":58},"name":"U29","qualname":"::base::dimension::U29","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15229},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105165,"byte_end":105168,"line_start":289,"line_end":289,"column_start":60,"column_end":63},"name":"U30","qualname":"::base::dimension::U30","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15245},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105170,"byte_end":105173,"line_start":289,"line_end":289,"column_start":65,"column_end":68},"name":"U31","qualname":"::base::dimension::U31","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15261},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105175,"byte_end":105178,"line_start":289,"line_end":289,"column_start":70,"column_end":73},"name":"U32","qualname":"::base::dimension::U32","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15277},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105180,"byte_end":105183,"line_start":289,"line_end":289,"column_start":75,"column_end":78},"name":"U33","qualname":"::base::dimension::U33","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15293},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105185,"byte_end":105188,"line_start":289,"line_end":289,"column_start":80,"column_end":83},"name":"U34","qualname":"::base::dimension::U34","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15309},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105190,"byte_end":105193,"line_start":289,"line_end":289,"column_start":85,"column_end":88},"name":"U35","qualname":"::base::dimension::U35","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15325},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105195,"byte_end":105198,"line_start":289,"line_end":289,"column_start":90,"column_end":93},"name":"U36","qualname":"::base::dimension::U36","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15341},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105200,"byte_end":105203,"line_start":289,"line_end":289,"column_start":95,"column_end":98},"name":"U37","qualname":"::base::dimension::U37","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105209,"byte_end":105212,"line_start":290,"line_end":290,"column_start":5,"column_end":8},"name":"U38","qualname":"::base::dimension::U38","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15373},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105214,"byte_end":105217,"line_start":290,"line_end":290,"column_start":10,"column_end":13},"name":"U39","qualname":"::base::dimension::U39","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15389},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105219,"byte_end":105222,"line_start":290,"line_end":290,"column_start":15,"column_end":18},"name":"U40","qualname":"::base::dimension::U40","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15405},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105224,"byte_end":105227,"line_start":290,"line_end":290,"column_start":20,"column_end":23},"name":"U41","qualname":"::base::dimension::U41","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105229,"byte_end":105232,"line_start":290,"line_end":290,"column_start":25,"column_end":28},"name":"U42","qualname":"::base::dimension::U42","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15437},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105234,"byte_end":105237,"line_start":290,"line_end":290,"column_start":30,"column_end":33},"name":"U43","qualname":"::base::dimension::U43","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15453},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105239,"byte_end":105242,"line_start":290,"line_end":290,"column_start":35,"column_end":38},"name":"U44","qualname":"::base::dimension::U44","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15469},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105244,"byte_end":105247,"line_start":290,"line_end":290,"column_start":40,"column_end":43},"name":"U45","qualname":"::base::dimension::U45","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15485},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105249,"byte_end":105252,"line_start":290,"line_end":290,"column_start":45,"column_end":48},"name":"U46","qualname":"::base::dimension::U46","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15501},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105254,"byte_end":105257,"line_start":290,"line_end":290,"column_start":50,"column_end":53},"name":"U47","qualname":"::base::dimension::U47","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15517},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105259,"byte_end":105262,"line_start":290,"line_end":290,"column_start":55,"column_end":58},"name":"U48","qualname":"::base::dimension::U48","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15533},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105264,"byte_end":105267,"line_start":290,"line_end":290,"column_start":60,"column_end":63},"name":"U49","qualname":"::base::dimension::U49","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15549},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105269,"byte_end":105272,"line_start":290,"line_end":290,"column_start":65,"column_end":68},"name":"U50","qualname":"::base::dimension::U50","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15565},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105274,"byte_end":105277,"line_start":290,"line_end":290,"column_start":70,"column_end":73},"name":"U51","qualname":"::base::dimension::U51","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15581},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105279,"byte_end":105282,"line_start":290,"line_end":290,"column_start":75,"column_end":78},"name":"U52","qualname":"::base::dimension::U52","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15597},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105284,"byte_end":105287,"line_start":290,"line_end":290,"column_start":80,"column_end":83},"name":"U53","qualname":"::base::dimension::U53","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15613},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105289,"byte_end":105292,"line_start":290,"line_end":290,"column_start":85,"column_end":88},"name":"U54","qualname":"::base::dimension::U54","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15629},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105294,"byte_end":105297,"line_start":290,"line_end":290,"column_start":90,"column_end":93},"name":"U55","qualname":"::base::dimension::U55","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15645},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105299,"byte_end":105302,"line_start":290,"line_end":290,"column_start":95,"column_end":98},"name":"U56","qualname":"::base::dimension::U56","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15661},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105308,"byte_end":105311,"line_start":291,"line_end":291,"column_start":5,"column_end":8},"name":"U57","qualname":"::base::dimension::U57","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105313,"byte_end":105316,"line_start":291,"line_end":291,"column_start":10,"column_end":13},"name":"U58","qualname":"::base::dimension::U58","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15693},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105318,"byte_end":105321,"line_start":291,"line_end":291,"column_start":15,"column_end":18},"name":"U59","qualname":"::base::dimension::U59","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15709},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105323,"byte_end":105326,"line_start":291,"line_end":291,"column_start":20,"column_end":23},"name":"U60","qualname":"::base::dimension::U60","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15725},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105328,"byte_end":105331,"line_start":291,"line_end":291,"column_start":25,"column_end":28},"name":"U61","qualname":"::base::dimension::U61","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15741},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105333,"byte_end":105336,"line_start":291,"line_end":291,"column_start":30,"column_end":33},"name":"U62","qualname":"::base::dimension::U62","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15757},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105338,"byte_end":105341,"line_start":291,"line_end":291,"column_start":35,"column_end":38},"name":"U63","qualname":"::base::dimension::U63","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15773},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105343,"byte_end":105346,"line_start":291,"line_end":291,"column_start":40,"column_end":43},"name":"U64","qualname":"::base::dimension::U64","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15789},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105348,"byte_end":105351,"line_start":291,"line_end":291,"column_start":45,"column_end":48},"name":"U65","qualname":"::base::dimension::U65","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105353,"byte_end":105356,"line_start":291,"line_end":291,"column_start":50,"column_end":53},"name":"U66","qualname":"::base::dimension::U66","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15821},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105358,"byte_end":105361,"line_start":291,"line_end":291,"column_start":55,"column_end":58},"name":"U67","qualname":"::base::dimension::U67","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15837},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105363,"byte_end":105366,"line_start":291,"line_end":291,"column_start":60,"column_end":63},"name":"U68","qualname":"::base::dimension::U68","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15853},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105368,"byte_end":105371,"line_start":291,"line_end":291,"column_start":65,"column_end":68},"name":"U69","qualname":"::base::dimension::U69","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15869},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105373,"byte_end":105376,"line_start":291,"line_end":291,"column_start":70,"column_end":73},"name":"U70","qualname":"::base::dimension::U70","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15885},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105378,"byte_end":105381,"line_start":291,"line_end":291,"column_start":75,"column_end":78},"name":"U71","qualname":"::base::dimension::U71","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15901},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105383,"byte_end":105386,"line_start":291,"line_end":291,"column_start":80,"column_end":83},"name":"U72","qualname":"::base::dimension::U72","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15917},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105388,"byte_end":105391,"line_start":291,"line_end":291,"column_start":85,"column_end":88},"name":"U73","qualname":"::base::dimension::U73","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15933},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105393,"byte_end":105396,"line_start":291,"line_end":291,"column_start":90,"column_end":93},"name":"U74","qualname":"::base::dimension::U74","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15949},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105398,"byte_end":105401,"line_start":291,"line_end":291,"column_start":95,"column_end":98},"name":"U75","qualname":"::base::dimension::U75","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15965},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105407,"byte_end":105410,"line_start":292,"line_end":292,"column_start":5,"column_end":8},"name":"U76","qualname":"::base::dimension::U76","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15981},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105412,"byte_end":105415,"line_start":292,"line_end":292,"column_start":10,"column_end":13},"name":"U77","qualname":"::base::dimension::U77","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":15997},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105417,"byte_end":105420,"line_start":292,"line_end":292,"column_start":15,"column_end":18},"name":"U78","qualname":"::base::dimension::U78","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16013},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105422,"byte_end":105425,"line_start":292,"line_end":292,"column_start":20,"column_end":23},"name":"U79","qualname":"::base::dimension::U79","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16029},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105427,"byte_end":105430,"line_start":292,"line_end":292,"column_start":25,"column_end":28},"name":"U80","qualname":"::base::dimension::U80","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16045},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105432,"byte_end":105435,"line_start":292,"line_end":292,"column_start":30,"column_end":33},"name":"U81","qualname":"::base::dimension::U81","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16061},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105437,"byte_end":105440,"line_start":292,"line_end":292,"column_start":35,"column_end":38},"name":"U82","qualname":"::base::dimension::U82","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16077},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105442,"byte_end":105445,"line_start":292,"line_end":292,"column_start":40,"column_end":43},"name":"U83","qualname":"::base::dimension::U83","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16093},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105447,"byte_end":105450,"line_start":292,"line_end":292,"column_start":45,"column_end":48},"name":"U84","qualname":"::base::dimension::U84","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16109},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105452,"byte_end":105455,"line_start":292,"line_end":292,"column_start":50,"column_end":53},"name":"U85","qualname":"::base::dimension::U85","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16125},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105457,"byte_end":105460,"line_start":292,"line_end":292,"column_start":55,"column_end":58},"name":"U86","qualname":"::base::dimension::U86","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16141},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105462,"byte_end":105465,"line_start":292,"line_end":292,"column_start":60,"column_end":63},"name":"U87","qualname":"::base::dimension::U87","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16157},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105467,"byte_end":105470,"line_start":292,"line_end":292,"column_start":65,"column_end":68},"name":"U88","qualname":"::base::dimension::U88","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16173},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105472,"byte_end":105475,"line_start":292,"line_end":292,"column_start":70,"column_end":73},"name":"U89","qualname":"::base::dimension::U89","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16189},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105477,"byte_end":105480,"line_start":292,"line_end":292,"column_start":75,"column_end":78},"name":"U90","qualname":"::base::dimension::U90","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16205},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105482,"byte_end":105485,"line_start":292,"line_end":292,"column_start":80,"column_end":83},"name":"U91","qualname":"::base::dimension::U91","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16221},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105487,"byte_end":105490,"line_start":292,"line_end":292,"column_start":85,"column_end":88},"name":"U92","qualname":"::base::dimension::U92","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16237},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105492,"byte_end":105495,"line_start":292,"line_end":292,"column_start":90,"column_end":93},"name":"U93","qualname":"::base::dimension::U93","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16253},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105497,"byte_end":105500,"line_start":292,"line_end":292,"column_start":95,"column_end":98},"name":"U94","qualname":"::base::dimension::U94","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16269},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105506,"byte_end":105509,"line_start":293,"line_end":293,"column_start":5,"column_end":8},"name":"U95","qualname":"::base::dimension::U95","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16285},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105511,"byte_end":105514,"line_start":293,"line_end":293,"column_start":10,"column_end":13},"name":"U96","qualname":"::base::dimension::U96","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16301},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105516,"byte_end":105519,"line_start":293,"line_end":293,"column_start":15,"column_end":18},"name":"U97","qualname":"::base::dimension::U97","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16317},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105521,"byte_end":105524,"line_start":293,"line_end":293,"column_start":20,"column_end":23},"name":"U98","qualname":"::base::dimension::U98","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16333},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105526,"byte_end":105529,"line_start":293,"line_end":293,"column_start":25,"column_end":28},"name":"U99","qualname":"::base::dimension::U99","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16349},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105531,"byte_end":105535,"line_start":293,"line_end":293,"column_start":30,"column_end":34},"name":"U100","qualname":"::base::dimension::U100","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16365},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105537,"byte_end":105541,"line_start":293,"line_end":293,"column_start":36,"column_end":40},"name":"U101","qualname":"::base::dimension::U101","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16381},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105543,"byte_end":105547,"line_start":293,"line_end":293,"column_start":42,"column_end":46},"name":"U102","qualname":"::base::dimension::U102","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16397},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105549,"byte_end":105553,"line_start":293,"line_end":293,"column_start":48,"column_end":52},"name":"U103","qualname":"::base::dimension::U103","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16413},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105555,"byte_end":105559,"line_start":293,"line_end":293,"column_start":54,"column_end":58},"name":"U104","qualname":"::base::dimension::U104","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16429},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105561,"byte_end":105565,"line_start":293,"line_end":293,"column_start":60,"column_end":64},"name":"U105","qualname":"::base::dimension::U105","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16445},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105567,"byte_end":105571,"line_start":293,"line_end":293,"column_start":66,"column_end":70},"name":"U106","qualname":"::base::dimension::U106","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16461},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105573,"byte_end":105577,"line_start":293,"line_end":293,"column_start":72,"column_end":76},"name":"U107","qualname":"::base::dimension::U107","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16477},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105579,"byte_end":105583,"line_start":293,"line_end":293,"column_start":78,"column_end":82},"name":"U108","qualname":"::base::dimension::U108","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16493},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105585,"byte_end":105589,"line_start":293,"line_end":293,"column_start":84,"column_end":88},"name":"U109","qualname":"::base::dimension::U109","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16509},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105591,"byte_end":105595,"line_start":293,"line_end":293,"column_start":90,"column_end":94},"name":"U110","qualname":"::base::dimension::U110","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16525},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105601,"byte_end":105605,"line_start":294,"line_end":294,"column_start":5,"column_end":9},"name":"U111","qualname":"::base::dimension::U111","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16541},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105607,"byte_end":105611,"line_start":294,"line_end":294,"column_start":11,"column_end":15},"name":"U112","qualname":"::base::dimension::U112","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16557},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105613,"byte_end":105617,"line_start":294,"line_end":294,"column_start":17,"column_end":21},"name":"U113","qualname":"::base::dimension::U113","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16573},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105619,"byte_end":105623,"line_start":294,"line_end":294,"column_start":23,"column_end":27},"name":"U114","qualname":"::base::dimension::U114","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16589},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105625,"byte_end":105629,"line_start":294,"line_end":294,"column_start":29,"column_end":33},"name":"U115","qualname":"::base::dimension::U115","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16605},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105631,"byte_end":105635,"line_start":294,"line_end":294,"column_start":35,"column_end":39},"name":"U116","qualname":"::base::dimension::U116","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16621},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105637,"byte_end":105641,"line_start":294,"line_end":294,"column_start":41,"column_end":45},"name":"U117","qualname":"::base::dimension::U117","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16637},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105643,"byte_end":105647,"line_start":294,"line_end":294,"column_start":47,"column_end":51},"name":"U118","qualname":"::base::dimension::U118","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16653},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105649,"byte_end":105653,"line_start":294,"line_end":294,"column_start":53,"column_end":57},"name":"U119","qualname":"::base::dimension::U119","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16669},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105655,"byte_end":105659,"line_start":294,"line_end":294,"column_start":59,"column_end":63},"name":"U120","qualname":"::base::dimension::U120","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16685},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105661,"byte_end":105665,"line_start":294,"line_end":294,"column_start":65,"column_end":69},"name":"U121","qualname":"::base::dimension::U121","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16701},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105667,"byte_end":105671,"line_start":294,"line_end":294,"column_start":71,"column_end":75},"name":"U122","qualname":"::base::dimension::U122","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16717},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105673,"byte_end":105677,"line_start":294,"line_end":294,"column_start":77,"column_end":81},"name":"U123","qualname":"::base::dimension::U123","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16733},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105679,"byte_end":105683,"line_start":294,"line_end":294,"column_start":83,"column_end":87},"name":"U124","qualname":"::base::dimension::U124","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16749},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105685,"byte_end":105689,"line_start":294,"line_end":294,"column_start":89,"column_end":93},"name":"U125","qualname":"::base::dimension::U125","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16765},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105691,"byte_end":105695,"line_start":294,"line_end":294,"column_start":95,"column_end":99},"name":"U126","qualname":"::base::dimension::U126","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":16781},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":105701,"byte_end":105705,"line_start":295,"line_end":295,"column_start":5,"column_end":9},"name":"U127","qualname":"::base::dimension::U127","value":"","parent":null,"children":[],"decl_id":null,"docs":" A type level dimension.\n","sig":null,"attributes":[{"value":"/ A type level dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103982,"byte_end":104009,"line_start":246,"line_end":246,"column_start":9,"column_end":36}}]},{"kind":"Mod","id":{"krate":0,"index":770},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::base::iter","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","parent":null,"children":[{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":774},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":16797},{"krate":0,"index":16809},{"krate":0,"index":16816},{"krate":0,"index":16826},{"krate":0,"index":16833},{"krate":0,"index":16845},{"krate":0,"index":16852},{"krate":0,"index":16862},{"krate":0,"index":16869},{"krate":0,"index":16877},{"krate":0,"index":805},{"krate":0,"index":812},{"krate":0,"index":822},{"krate":0,"index":829},{"krate":0,"index":838},{"krate":0,"index":846},{"krate":0,"index":856},{"krate":0,"index":16884},{"krate":0,"index":16892},{"krate":0,"index":863},{"krate":0,"index":870},{"krate":0,"index":880},{"krate":0,"index":887},{"krate":0,"index":896},{"krate":0,"index":904},{"krate":0,"index":914}],"decl_id":null,"docs":" Matrix iterators.\n","sig":null,"attributes":[{"value":"/ Matrix iterators.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":109331,"byte_end":109352,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":16797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":112767,"byte_end":112777,"line_start":97,"line_end":97,"column_start":18,"column_end":28},"name":"MatrixIter","qualname":"::base::iter::MatrixIter","value":"MatrixIter {  }","parent":null,"children":[{"krate":0,"index":16803},{"krate":0,"index":16804},{"krate":0,"index":16805},{"krate":0,"index":16806},{"krate":0,"index":16807},{"krate":0,"index":16808}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":109676,"byte_end":109745,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":16833},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":112839,"byte_end":112852,"line_start":98,"line_end":98,"column_start":18,"column_end":31},"name":"MatrixIterMut","qualname":"::base::iter::MatrixIterMut","value":"MatrixIterMut {  }","parent":null,"children":[{"krate":0,"index":16839},{"krate":0,"index":16840},{"krate":0,"index":16841},{"krate":0,"index":16842},{"krate":0,"index":16843},{"krate":0,"index":16844}],"decl_id":null,"docs":" An iterator through a dense matrix with arbitrary strides matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through a dense matrix with arbitrary strides matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":109676,"byte_end":109745,"line_start":12,"line_end":12,"column_start":9,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":16869},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":113017,"byte_end":113024,"line_start":108,"line_end":108,"column_start":12,"column_end":19},"name":"RowIter","qualname":"::base::iter::RowIter","value":"RowIter {  }","parent":null,"children":[{"krate":0,"index":16875},{"krate":0,"index":16876}],"decl_id":null,"docs":" An iterator through the rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the rows of a matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":112960,"byte_end":113005,"line_start":107,"line_end":107,"column_start":1,"column_end":46}}]},{"kind":"Struct","id":{"krate":0,"index":829},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114266,"byte_end":114276,"line_start":156,"line_end":156,"column_start":12,"column_end":22},"name":"RowIterMut","qualname":"::base::iter::RowIterMut","value":"RowIterMut {  }","parent":null,"children":[{"krate":0,"index":835},{"krate":0,"index":836},{"krate":0,"index":837}],"decl_id":null,"docs":" An iterator through the mutable rows of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable rows of a matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114201,"byte_end":114254,"line_start":155,"line_end":155,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":16884},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115791,"byte_end":115801,"line_start":219,"line_end":219,"column_start":12,"column_end":22},"name":"ColumnIter","qualname":"::base::iter::ColumnIter","value":"ColumnIter {  }","parent":null,"children":[{"krate":0,"index":16890},{"krate":0,"index":16891}],"decl_id":null,"docs":" An iterator through the columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the columns of a matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115731,"byte_end":115779,"line_start":218,"line_end":218,"column_start":1,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":887},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":117061,"byte_end":117074,"line_start":267,"line_end":267,"column_start":12,"column_end":25},"name":"ColumnIterMut","qualname":"::base::iter::ColumnIterMut","value":"ColumnIterMut {  }","parent":null,"children":[{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"decl_id":null,"docs":" An iterator through the mutable columns of a matrix.\n","sig":null,"attributes":[{"value":"/ An iterator through the mutable columns of a matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":116993,"byte_end":117049,"line_start":266,"line_end":266,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1118},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":121405,"byte_end":121412,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"name":"neg_mut","qualname":"<Matrix<N, R, C, S>>::neg_mut","value":"pub fn neg_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negates `self` in-place.\n","sig":null,"attributes":[{"value":"/ Negates `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":121351,"byte_end":121379,"line_start":118,"line_end":118,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":121384,"byte_end":121393,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":16919},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":132584,"byte_end":132590,"line_start":372,"line_end":372,"column_start":27,"column_end":33},"name":"add_to","qualname":"<Matrix<N, R1, C1, SA>>::add_to","value":"pub fn add_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":127038,"byte_end":127123,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":127136,"byte_end":127145,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17009},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":132814,"byte_end":132820,"line_start":375,"line_end":375,"column_start":27,"column_end":33},"name":"sub_to","qualname":"<Matrix<N, R1, C1, SA>>::sub_to","value":"pub fn sub_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2> +\nSameNumberOfRows<R1, R3> + SameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self + rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":127038,"byte_end":127123,"line_start":254,"line_end":254,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":127136,"byte_end":127145,"line_start":255,"line_end":255,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1216},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142395,"byte_end":142401,"line_start":679,"line_end":679,"column_start":12,"column_end":18},"name":"tr_mul","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul","value":"pub fn tr_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142326,"byte_end":142369,"line_start":677,"line_end":677,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142374,"byte_end":142383,"line_start":678,"line_end":678,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1220},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142881,"byte_end":142887,"line_start":694,"line_end":694,"column_start":12,"column_end":18},"name":"ad_mul","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul","value":"pub fn ad_mul<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, C1, C2> where N: ComplexField, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C1, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs`.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142814,"byte_end":142855,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142860,"byte_end":142869,"line_start":693,"line_end":693,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":144558,"byte_end":144567,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"tr_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::tr_mul_to","value":"pub fn tr_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where SB: Storage<N, R2, C2>,\nSC: StorageMut<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nDimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.transpose() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":144427,"byte_end":144511,"line_start":740,"line_end":740,"column_start":5,"column_end":89}},{"value":"/ allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":144516,"byte_end":144532,"line_start":741,"line_end":741,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":144537,"byte_end":144546,"line_start":742,"line_end":742,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1240},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145064,"byte_end":145073,"line_start":758,"line_end":758,"column_start":12,"column_end":21},"name":"ad_mul_to","qualname":"<Matrix<N, R1, C1, SA>>::ad_mul_to","value":"pub fn ad_mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n                 SC>(&Self, &Matrix<N, R2, C2, SB>,\n                     &mut Matrix<N, R3, C3, SC>) where N: ComplexField,\nSB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R1, R2> + DimEq<C1, R3> + DimEq<C2, C3>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid\n allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self.adjoint() * rhs` but stores the result into `out` to avoid","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":144935,"byte_end":145017,"line_start":755,"line_end":755,"column_start":5,"column_end":87}},{"value":"/ allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145022,"byte_end":145038,"line_start":756,"line_end":756,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145043,"byte_end":145052,"line_start":757,"line_end":757,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145578,"byte_end":145584,"line_start":773,"line_end":773,"column_start":12,"column_end":18},"name":"mul_to","qualname":"<Matrix<N, R1, C1, SA>>::mul_to","value":"pub fn mul_to<R2: Dim, C2: Dim, SB, R3: Dim, C3: Dim,\n              SC>(&Self, &Matrix<N, R2, C2, SB>, &mut Matrix<N, R3, C3, SC>)\nwhere SB: Storage<N, R2, C2>, SC: StorageMut<N, R3, C3>,\nShapeConstraint: SameNumberOfRows<R3, R1> + SameNumberOfColumns<C3, C2> +\nAreMultipliable<R1, C1, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.\n","sig":null,"attributes":[{"value":"/ Equivalent to `self * rhs` but stores the result into `out` to avoid allocations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145467,"byte_end":145552,"line_start":771,"line_end":771,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":145557,"byte_end":145566,"line_start":772,"line_end":772,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1255},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":146125,"byte_end":146134,"line_start":789,"line_end":789,"column_start":12,"column_end":21},"name":"kronecker","qualname":"<Matrix<N, R1, C1, SA>>::kronecker","value":"pub fn kronecker<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixMN<N, DimProd<R1, R2>, DimProd<C1, C2>> where N: ClosedMul,\nR1: DimMul<R2>, C1: DimMul<C2>, SB: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, DimProd<R1, R2>, DimProd<C1, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The kronecker product of two matrices (aka. tensor product of the corresponding linear\n maps).\n","sig":null,"attributes":[{"value":"/ The kronecker product of two matrices (aka. tensor product of the corresponding linear","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":146008,"byte_end":146098,"line_start":787,"line_end":787,"column_start":5,"column_end":95}},{"value":"/ maps).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":146103,"byte_end":146113,"line_start":788,"line_end":788,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1264},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147472,"byte_end":147482,"line_start":832,"line_end":832,"column_start":12,"column_end":22},"name":"add_scalar","qualname":"<Matrix<N, R, C, S>>::add_scalar","value":"pub fn add_scalar(&Self, N) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self`.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147418,"byte_end":147446,"line_start":830,"line_end":830,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147451,"byte_end":147460,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1265},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147729,"byte_end":147743,"line_start":841,"line_end":841,"column_start":12,"column_end":26},"name":"add_scalar_mut","qualname":"<Matrix<N, R, C, S>>::add_scalar_mut","value":"pub fn add_scalar_mut(&mut Self, N) where S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Adds a scalar to `self` in-place.\n","sig":null,"attributes":[{"value":"/ Adds a scalar to `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147666,"byte_end":147703,"line_start":839,"line_end":839,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147708,"byte_end":147717,"line_start":840,"line_end":840,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149302,"byte_end":149306,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"amax","qualname":"<Matrix<N, R, C, S>>::amax","value":"pub fn amax(&Self) -> N where N: PartialOrd + Signed","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the largest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the largest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":148995,"byte_end":149075,"line_start":887,"line_end":887,"column_start":5,"column_end":85}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149080,"byte_end":149093,"line_start":888,"line_end":888,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149098,"byte_end":149105,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149110,"byte_end":149138,"line_start":890,"line_end":890,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).amax(), 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149143,"byte_end":149200,"line_start":891,"line_end":891,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).amax(), 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149205,"byte_end":149264,"line_start":892,"line_end":892,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149269,"byte_end":149276,"line_start":893,"line_end":893,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149281,"byte_end":149290,"line_start":894,"line_end":894,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149765,"byte_end":149770,"line_start":910,"line_end":910,"column_start":12,"column_end":17},"name":"camax","qualname":"<Matrix<N, R, C, S>>::camax","value":"pub fn camax(&Self) -> N::RealField where N: ComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the largest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camax(), 5.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the largest 1-norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149419,"byte_end":149495,"line_start":900,"line_end":900,"column_start":5,"column_end":81}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149500,"byte_end":149513,"line_start":901,"line_end":901,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149518,"byte_end":149525,"line_start":902,"line_end":902,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149530,"byte_end":149569,"line_start":903,"line_end":903,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149574,"byte_end":149602,"line_start":904,"line_end":904,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149607,"byte_end":149640,"line_start":905,"line_end":905,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149645,"byte_end":149676,"line_start":906,"line_end":906,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camax(), 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149681,"byte_end":149727,"line_start":907,"line_end":907,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149732,"byte_end":149739,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149744,"byte_end":149753,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150219,"byte_end":150222,"line_start":924,"line_end":924,"column_start":12,"column_end":15},"name":"max","qualname":"<Matrix<N, R, C, S>>::max","value":"pub fn max(&Self) -> N where N: PartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the largest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);\n assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the largest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149889,"byte_end":149938,"line_start":915,"line_end":915,"column_start":5,"column_end":54}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149943,"byte_end":149956,"line_start":916,"line_end":916,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149961,"byte_end":149968,"line_start":917,"line_end":917,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":149973,"byte_end":150001,"line_start":918,"line_end":918,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).max(), 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150006,"byte_end":150062,"line_start":919,"line_end":919,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(Vector3::new(-1.0, -2.0, -3.0).max(), -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150067,"byte_end":150126,"line_start":920,"line_end":920,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).max(), 5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150131,"byte_end":150181,"line_start":921,"line_end":921,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150186,"byte_end":150193,"line_start":922,"line_end":922,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150198,"byte_end":150207,"line_start":923,"line_end":923,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150635,"byte_end":150639,"line_start":937,"line_end":937,"column_start":12,"column_end":16},"name":"amin","qualname":"<Matrix<N, R, C, S>>::amin","value":"pub fn amin(&Self) -> N where N: PartialOrd + Signed","parent":null,"children":[],"decl_id":null,"docs":" Returns the absolute value of the component with the smallest absolute value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);\n assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the absolute value of the component with the smallest absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150327,"byte_end":150408,"line_start":929,"line_end":929,"column_start":5,"column_end":86}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150413,"byte_end":150426,"line_start":930,"line_end":930,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150431,"byte_end":150438,"line_start":931,"line_end":931,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150443,"byte_end":150471,"line_start":932,"line_end":932,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, -3.0).amin(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150476,"byte_end":150534,"line_start":933,"line_end":933,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(Vector3::new(10.0, 2.0, 30.0).amin(), 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150539,"byte_end":150597,"line_start":934,"line_end":934,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150602,"byte_end":150609,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150614,"byte_end":150623,"line_start":936,"line_end":936,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151096,"byte_end":151101,"line_start":952,"line_end":952,"column_start":12,"column_end":17},"name":"camin","qualname":"<Matrix<N, R, C, S>>::camin","value":"pub fn camin(&Self) -> N::RealField where N: ComplexField","parent":null,"children":[],"decl_id":null,"docs":" Returns the the 1-norm of the complex component with the smallest 1-norm.\n # Example\n ```\n # use nalgebra::{Vector3, Complex};\n assert_eq!(Vector3::new(\n     Complex::new(-3.0, -2.0),\n     Complex::new(1.0, 2.0),\n     Complex::new(1.0, 3.0)).camin(), 3.0);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the the 1-norm of the complex component with the smallest 1-norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150749,"byte_end":150826,"line_start":942,"line_end":942,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150831,"byte_end":150844,"line_start":943,"line_end":943,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150849,"byte_end":150856,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Complex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150861,"byte_end":150900,"line_start":945,"line_end":945,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(Vector3::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150905,"byte_end":150933,"line_start":946,"line_end":946,"column_start":5,"column_end":33}},{"value":"/     Complex::new(-3.0, -2.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150938,"byte_end":150971,"line_start":947,"line_end":947,"column_start":5,"column_end":38}},{"value":"/     Complex::new(1.0, 2.0),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":150976,"byte_end":151007,"line_start":948,"line_end":948,"column_start":5,"column_end":36}},{"value":"/     Complex::new(1.0, 3.0)).camin(), 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151012,"byte_end":151058,"line_start":949,"line_end":949,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151063,"byte_end":151070,"line_start":950,"line_end":950,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151075,"byte_end":151084,"line_start":951,"line_end":951,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151545,"byte_end":151548,"line_start":966,"line_end":966,"column_start":12,"column_end":15},"name":"min","qualname":"<Matrix<N, R, C, S>>::min","value":"pub fn min(&Self) -> N where N: PartialOrd + Zero","parent":null,"children":[],"decl_id":null,"docs":" Returns the component with the smallest value.\n # Example\n ```\n # use nalgebra::Vector3;\n assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);\n assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);\n assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);\n ```\n","sig":null,"attributes":[{"value":"/ Returns the component with the smallest value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151217,"byte_end":151267,"line_start":957,"line_end":957,"column_start":5,"column_end":55}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151272,"byte_end":151285,"line_start":958,"line_end":958,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151290,"byte_end":151297,"line_start":959,"line_end":959,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151302,"byte_end":151330,"line_start":960,"line_end":960,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(Vector3::new(-1.0, 2.0, 3.0).min(), -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151335,"byte_end":151392,"line_start":961,"line_end":961,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(Vector3::new(1.0, 2.0, 3.0).min(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151397,"byte_end":151452,"line_start":962,"line_end":962,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(Vector3::new(5u32, 2, 3).min(), 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151457,"byte_end":151507,"line_start":963,"line_end":963,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151512,"byte_end":151519,"line_start":964,"line_end":964,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":151524,"byte_end":151533,"line_start":965,"line_end":965,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":1299},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"storage","qualname":"::base::storage","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","parent":null,"children":[{"krate":0,"index":1300},{"krate":0,"index":1301},{"krate":0,"index":1303},{"krate":0,"index":1306},{"krate":0,"index":1307},{"krate":0,"index":1310},{"krate":0,"index":1313},{"krate":0,"index":1316},{"krate":0,"index":1317},{"krate":0,"index":1319},{"krate":0,"index":1320},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1326},{"krate":0,"index":1329},{"krate":0,"index":1335},{"krate":0,"index":1339},{"krate":0,"index":1343},{"krate":0,"index":1347},{"krate":0,"index":1365},{"krate":0,"index":1377},{"krate":0,"index":1381}],"decl_id":null,"docs":" Abstract definition of a matrix data storage.\n","sig":null,"attributes":[{"value":"/ Abstract definition of a matrix data storage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":151647,"byte_end":151696,"line_start":1,"line_end":1,"column_start":1,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1329},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152061,"byte_end":152077,"line_start":15,"line_end":15,"column_start":10,"column_end":26},"name":"SameShapeStorage","qualname":"::base::storage::SameShapeStorage","value":"<DefaultAllocator as\nAllocator<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.\n","sig":null,"attributes":[{"value":"/ The data storage for the sum of two matrices with dimensions `(R1, C1)` and `(R2, C2)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":151960,"byte_end":152051,"line_start":14,"line_end":14,"column_start":1,"column_end":92}}]},{"kind":"Type","id":{"krate":0,"index":1335},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152291,"byte_end":152296,"line_start":20,"line_end":20,"column_start":10,"column_end":15},"name":"Owned","qualname":"::base::storage::Owned","value":"<DefaultAllocator as Allocator<N, R, C>>::Buffer","parent":null,"children":[],"decl_id":null,"docs":" The owned data storage that can be allocated from `S`.\n","sig":null,"attributes":[{"value":"/ The owned data storage that can be allocated from `S`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152223,"byte_end":152281,"line_start":19,"line_end":19,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1339},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152454,"byte_end":152461,"line_start":23,"line_end":23,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::RStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::RStride","parent":null,"children":[],"decl_id":null,"docs":" The row-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The row-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152364,"byte_end":152444,"line_start":22,"line_end":22,"column_start":1,"column_end":81}}]},{"kind":"Type","id":{"krate":0,"index":1343},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152657,"byte_end":152664,"line_start":27,"line_end":27,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::CStride","value":"<<DefaultAllocator as Allocator<N, R, C>>::Buffer as\nStorage<N, R, C>>::CStride","parent":null,"children":[],"decl_id":null,"docs":" The column-stride of the owned data storage for a buffer of dimension `(R, C)`.\n","sig":null,"attributes":[{"value":"/ The column-stride of the owned data storage for a buffer of dimension `(R, C)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152564,"byte_end":152647,"line_start":26,"line_end":26,"column_start":1,"column_end":84}}]},{"kind":"Trait","id":{"krate":0,"index":1347},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153329,"byte_end":153336,"line_start":39,"line_end":39,"column_start":18,"column_end":25},"name":"Storage","qualname":"::base::storage::Storage","value":"Storage<N: Scalar, R: Dim, C: Dim = U1>: Debug + Sized","parent":null,"children":[{"krate":0,"index":1351},{"krate":0,"index":1352},{"krate":0,"index":1353},{"krate":0,"index":1354},{"krate":0,"index":1355},{"krate":0,"index":1356},{"krate":0,"index":1357},{"krate":0,"index":1358},{"krate":0,"index":1359},{"krate":0,"index":1360},{"krate":0,"index":1361},{"krate":0,"index":1362},{"krate":0,"index":1363},{"krate":0,"index":1364}],"decl_id":null,"docs":" The trait shared by all matrix data storage.","sig":null,"attributes":[{"value":"/ The trait shared by all matrix data storage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152767,"byte_end":152815,"line_start":30,"line_end":30,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152816,"byte_end":152819,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ FIXME: doc","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152820,"byte_end":152834,"line_start":32,"line_end":32,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152835,"byte_end":152838,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ Note that `Self` must always have a number of elements compatible with the matrix length (given","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152839,"byte_end":152938,"line_start":34,"line_end":34,"column_start":1,"column_end":100}},{"value":"/ by `R` and `C` if they are known at compile-time). For example, implementors of this trait","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":152939,"byte_end":153033,"line_start":35,"line_end":35,"column_start":1,"column_end":95}},{"value":"/ should **not** allow the user to modify the size of the underlying buffer with safe methods","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153034,"byte_end":153129,"line_start":36,"line_end":36,"column_start":1,"column_end":96}},{"value":"/ (for example the `VecStorage::data_mut` method is unsafe because the user could change the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153130,"byte_end":153224,"line_start":37,"line_end":37,"column_start":1,"column_end":95}},{"value":"/ vector's size so that it no longer contains enough elements: this will lead to UB.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153225,"byte_end":153311,"line_start":38,"line_end":38,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1351},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153445,"byte_end":153452,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"RStride","qualname":"::base::storage::Storage::RStride","value":"type RStride: Dim;","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The static stride of this storage's rows.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153390,"byte_end":153435,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Type","id":{"krate":0,"index":1352},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153522,"byte_end":153529,"line_start":44,"line_end":44,"column_start":10,"column_end":17},"name":"CStride","qualname":"::base::storage::Storage::CStride","value":"type CStride: Dim;","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The static stride of this storage's columns.\n","sig":null,"attributes":[{"value":"/ The static stride of this storage's columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153464,"byte_end":153512,"line_start":43,"line_end":43,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1353},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153577,"byte_end":153580,"line_start":47,"line_end":47,"column_start":8,"column_end":11},"name":"ptr","qualname":"::base::storage::Storage::ptr","value":"pub fn ptr(&Self) -> *const N","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The matrix data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix data pointer.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153541,"byte_end":153569,"line_start":46,"line_end":46,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":1354},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153801,"byte_end":153806,"line_start":51,"line_end":51,"column_start":8,"column_end":13},"name":"shape","qualname":"::base::storage::Storage::shape","value":"pub fn shape(&Self) -> (R, C)","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The dimension of the matrix at run-time. Arr length of zero indicates the additive identity\n element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.\n","sig":null,"attributes":[{"value":"/ The dimension of the matrix at run-time. Arr length of zero indicates the additive identity","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153606,"byte_end":153701,"line_start":49,"line_end":49,"column_start":5,"column_end":100}},{"value":"/ element of any dimension. Must be equal to `Self::dimension()` if it is not `None`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153706,"byte_end":153793,"line_start":50,"line_end":50,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":1355},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154008,"byte_end":154015,"line_start":56,"line_end":56,"column_start":8,"column_end":15},"name":"strides","qualname":"::base::storage::Storage::strides","value":"pub fn strides(&Self) -> (Self::RStride, Self::CStride)","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" The spacing between consecutive row elements and consecutive column elements.","sig":null,"attributes":[{"value":"/ The spacing between consecutive row elements and consecutive column elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153830,"byte_end":153911,"line_start":53,"line_end":53,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153916,"byte_end":153919,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ For example this returns `(1, 5)` for a row-major matrix with 5 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153924,"byte_end":154000,"line_start":55,"line_end":55,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1356},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154408,"byte_end":154420,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"linear_index","qualname":"::base::storage::Storage::linear_index","value":"pub fn linear_index(&Self, usize, usize) -> usize","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Compute the index corresponding to the irow-th row and icol-th column of this matrix. The\n index must be such that the following holds:","sig":null,"attributes":[{"value":"/ Compute the index corresponding to the irow-th row and icol-th column of this matrix. The","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154063,"byte_end":154156,"line_start":58,"line_end":58,"column_start":5,"column_end":98}},{"value":"/ index must be such that the following holds:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154161,"byte_end":154209,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154214,"byte_end":154217,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ ```.ignore","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154222,"byte_end":154236,"line_start":61,"line_end":61,"column_start":5,"column_end":19}},{"value":"/ let lindex = self.linear_index(irow, icol);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154241,"byte_end":154288,"line_start":62,"line_end":62,"column_start":5,"column_end":52}},{"value":"/ assert!(*self.get_unchecked(irow, icol) == *self.get_unchecked_linear(lindex)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154293,"byte_end":154374,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154379,"byte_end":154386,"line_start":64,"line_end":64,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154391,"byte_end":154400,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154695,"byte_end":154723,"line_start":74,"line_end":74,"column_start":15,"column_end":43},"name":"get_address_unchecked_linear","qualname":"::base::storage::Storage::get_address_unchecked_linear","value":"pub unsafe fn get_address_unchecked_linear(&Self, usize) -> *const N","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154582,"byte_end":154666,"line_start":72,"line_end":72,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154671,"byte_end":154680,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1358},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154917,"byte_end":154938,"line_start":80,"line_end":80,"column_start":15,"column_end":36},"name":"get_address_unchecked","qualname":"::base::storage::Storage::get_address_unchecked","value":"pub unsafe fn get_address_unchecked(&Self, usize, usize) -> *const N","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Gets the address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154804,"byte_end":154888,"line_start":78,"line_end":78,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":154893,"byte_end":154902,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1359},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155168,"byte_end":155188,"line_start":86,"line_end":86,"column_start":15,"column_end":35},"name":"get_unchecked_linear","qualname":"::base::storage::Storage::get_unchecked_linear","value":"pub unsafe fn get_unchecked_linear(&Self, usize) -> &N","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155070,"byte_end":155139,"line_start":84,"line_end":84,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155144,"byte_end":155153,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1360},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155370,"byte_end":155383,"line_start":92,"line_end":92,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::storage::Storage::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize, usize) -> &N","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Retrieves a reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a reference to the i-th element without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155272,"byte_end":155341,"line_start":90,"line_end":90,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155346,"byte_end":155355,"line_start":91,"line_end":91,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1361},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155595,"byte_end":155608,"line_start":98,"line_end":98,"column_start":8,"column_end":21},"name":"is_contiguous","qualname":"::base::storage::Storage::is_contiguous","value":"pub fn is_contiguous(&Self) -> bool","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Indicates whether this data buffer stores its elements contiguously.\n","sig":null,"attributes":[{"value":"/ Indicates whether this data buffer stores its elements contiguously.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155501,"byte_end":155573,"line_start":96,"line_end":96,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155578,"byte_end":155587,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1362},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155807,"byte_end":155815,"line_start":104,"line_end":104,"column_start":8,"column_end":16},"name":"as_slice","qualname":"::base::storage::Storage::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Retrieves the data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the data buffer as a contiguous slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155630,"byte_end":155682,"line_start":100,"line_end":100,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155687,"byte_end":155690,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The matrix components may not be stored in a contiguous way, depending on the strides.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155695,"byte_end":155785,"line_start":102,"line_end":102,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155790,"byte_end":155799,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1363},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155914,"byte_end":155924,"line_start":107,"line_end":107,"column_start":8,"column_end":18},"name":"into_owned","qualname":"::base::storage::Storage::into_owned","value":"pub fn into_owned(Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Builds a matrix data storage that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Builds a matrix data storage that does not contain any reference.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":155837,"byte_end":155906,"line_start":106,"line_end":106,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":1364},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156082,"byte_end":156093,"line_start":111,"line_end":111,"column_start":8,"column_end":19},"name":"clone_owned","qualname":"::base::storage::Storage::clone_owned","value":"pub fn clone_owned(&Self) -> Owned<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":{"krate":0,"index":1347},"children":[],"decl_id":null,"docs":" Clones this data storage to one that does not contain any reference.\n","sig":null,"attributes":[{"value":"/ Clones this data storage to one that does not contain any reference.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156002,"byte_end":156074,"line_start":110,"line_end":110,"column_start":5,"column_end":77}}]},{"kind":"Trait","id":{"krate":0,"index":1365},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156533,"byte_end":156543,"line_start":120,"line_end":120,"column_start":18,"column_end":28},"name":"StorageMut","qualname":"::base::storage::StorageMut","value":"StorageMut<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[{"krate":0,"index":1369},{"krate":0,"index":1370},{"krate":0,"index":1371},{"krate":0,"index":1372},{"krate":0,"index":1373},{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376}],"decl_id":null,"docs":" Trait implemented by matrix data storage that can provide a mutable access to its elements.","sig":null,"attributes":[{"value":"/ Trait implemented by matrix data storage that can provide a mutable access to its elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156170,"byte_end":156265,"line_start":115,"line_end":115,"column_start":1,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156266,"byte_end":156269,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ Note that a mutable access does not mean that the matrix owns its data. For example, a mutable","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156270,"byte_end":156368,"line_start":117,"line_end":117,"column_start":1,"column_end":99}},{"value":"/ matrix slice can provide mutable access to its elements even if it does not own its data (it","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156369,"byte_end":156465,"line_start":118,"line_end":118,"column_start":1,"column_end":97}},{"value":"/ contains only an internal reference to them).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156466,"byte_end":156515,"line_start":119,"line_end":119,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1369},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156644,"byte_end":156651,"line_start":122,"line_end":122,"column_start":8,"column_end":15},"name":"ptr_mut","qualname":"::base::storage::StorageMut::ptr_mut","value":"pub fn ptr_mut(&mut Self) -> *mut N","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" The matrix mutable data pointer.\n","sig":null,"attributes":[{"value":"/ The matrix mutable data pointer.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156600,"byte_end":156636,"line_start":121,"line_end":121,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":1370},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156800,"byte_end":156832,"line_start":126,"line_end":126,"column_start":15,"column_end":47},"name":"get_address_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_linear_mut","value":"pub unsafe fn get_address_unchecked_linear_mut(&mut Self, usize) -> *mut N","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156679,"byte_end":156771,"line_start":124,"line_end":124,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156776,"byte_end":156785,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1371},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157040,"byte_end":157065,"line_start":132,"line_end":132,"column_start":15,"column_end":40},"name":"get_address_unchecked_mut","qualname":"::base::storage::StorageMut::get_address_unchecked_mut","value":"pub unsafe fn get_address_unchecked_mut(&mut Self, usize, usize) -> *mut N","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Gets the mutable address of the i-th matrix component without performing bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets the mutable address of the i-th matrix component without performing bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156919,"byte_end":157011,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157016,"byte_end":157025,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1372},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157318,"byte_end":157342,"line_start":138,"line_end":138,"column_start":15,"column_end":39},"name":"get_unchecked_linear_mut","qualname":"::base::storage::StorageMut::get_unchecked_linear_mut","value":"pub unsafe fn get_unchecked_linear_mut(&mut Self, usize) -> &mut N","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the i-th element without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the i-th element without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157226,"byte_end":157303,"line_start":137,"line_end":137,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":1373},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157561,"byte_end":157578,"line_start":144,"line_end":144,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::storage::StorageMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize, usize) -> &mut N","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.\n","sig":null,"attributes":[{"value":"/ Retrieves a mutable reference to the element at `(irow, icol)` without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157442,"byte_end":157532,"line_start":142,"line_end":142,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157537,"byte_end":157546,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1374},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157796,"byte_end":157817,"line_start":150,"line_end":150,"column_start":15,"column_end":36},"name":"swap_unchecked_linear","qualname":"::base::storage::StorageMut::swap_unchecked_linear","value":"pub unsafe fn swap_unchecked_linear(&mut Self, usize, usize)","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Swaps two elements using their linear index without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements using their linear index without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157696,"byte_end":157767,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":157772,"byte_end":157781,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1375},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158095,"byte_end":158109,"line_start":159,"line_end":159,"column_start":15,"column_end":29},"name":"swap_unchecked","qualname":"::base::storage::StorageMut::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Swaps two elements without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two elements without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158020,"byte_end":158066,"line_start":157,"line_end":157,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158071,"byte_end":158080,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1376},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158523,"byte_end":158535,"line_start":170,"line_end":170,"column_start":8,"column_end":20},"name":"as_mut_slice","qualname":"::base::storage::StorageMut::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":{"krate":0,"index":1365},"children":[],"decl_id":null,"docs":" Retrieves the mutable data buffer as a contiguous slice.","sig":null,"attributes":[{"value":"/ Retrieves the mutable data buffer as a contiguous slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158358,"byte_end":158418,"line_start":166,"line_end":166,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158423,"byte_end":158426,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ Matrix components may not be contiguous, depending on its strides.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158431,"byte_end":158501,"line_start":168,"line_end":168,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158506,"byte_end":158515,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":1377},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158894,"byte_end":158911,"line_start":178,"line_end":178,"column_start":18,"column_end":35},"name":"ContiguousStorage","qualname":"::base::storage::ContiguousStorage","value":"ContiguousStorage<N: Scalar, R: Dim, C: Dim = U1>: Storage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158563,"byte_end":158622,"line_start":173,"line_end":173,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158623,"byte_end":158626,"line_start":174,"line_end":174,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158627,"byte_end":158721,"line_start":175,"line_end":175,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158722,"byte_end":158815,"line_start":176,"line_end":176,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158816,"byte_end":158876,"line_start":177,"line_end":177,"column_start":1,"column_end":61}}]},{"kind":"Trait","id":{"krate":0,"index":1381},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159310,"byte_end":159330,"line_start":188,"line_end":188,"column_start":18,"column_end":38},"name":"ContiguousStorageMut","qualname":"::base::storage::ContiguousStorageMut","value":"ContiguousStorageMut<N: Scalar, R: Dim, C: Dim = U1>: ContiguousStorage<N, R, C> + StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" A mutable matrix storage that is stored contiguously in memory.","sig":null,"attributes":[{"value":"/ A mutable matrix storage that is stored contiguously in memory.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158971,"byte_end":159038,"line_start":183,"line_end":183,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159039,"byte_end":159042,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ The storage requirement means that for any value of `i` in `[0, nrows * ncols[`, the value","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159043,"byte_end":159137,"line_start":185,"line_end":185,"column_start":1,"column_end":95}},{"value":"/ `.get_unchecked_linear` returns one of the matrix component. This trait is unsafe because","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159138,"byte_end":159231,"line_start":186,"line_end":186,"column_start":1,"column_end":94}},{"value":"/ failing to comply to this may cause Undefined Behaviors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159232,"byte_end":159292,"line_start":187,"line_end":187,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":1417},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":159918,"byte_end":159926,"line_start":18,"line_end":18,"column_start":10,"column_end":18},"name":"MatrixNM","qualname":"::base::alias::MatrixNM","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":159755,"byte_end":159828,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"deprecated(note =\n             \"This matrix name contains a typo. Use MatrixMN instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":159829,"byte_end":159908,"line_start":17,"line_end":17,"column_start":1,"column_end":80}}]},{"kind":"Type","id":{"krate":0,"index":1421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160055,"byte_end":160063,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"MatrixMN","qualname":"::base::alias::MatrixMN","value":"Matrix<N, R, C, Owned<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major matrix with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major matrix with `R` rows and `C` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":159972,"byte_end":160045,"line_start":20,"line_end":20,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":1425},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160195,"byte_end":160202,"line_start":24,"line_end":24,"column_start":10,"column_end":17},"name":"MatrixN","qualname":"::base::alias::MatrixN","value":"MatrixMN<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized column-major square matrix with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A statically sized column-major square matrix with `D` rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160109,"byte_end":160185,"line_start":23,"line_end":23,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1428},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160333,"byte_end":160340,"line_start":28,"line_end":28,"column_start":10,"column_end":17},"name":"DMatrix","qualname":"::base::alias::DMatrix","value":"MatrixN<N, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column-major matrix.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column-major matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160231,"byte_end":160275,"line_start":26,"line_end":26,"column_start":1,"column_end":45}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160276,"byte_end":160323,"line_start":27,"line_end":27,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1430},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160433,"byte_end":160440,"line_start":31,"line_end":31,"column_start":10,"column_end":17},"name":"Matrix1","qualname":"::base::alias::Matrix1","value":"MatrixN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x1 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x1 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160368,"byte_end":160423,"line_start":30,"line_end":30,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1432},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160527,"byte_end":160534,"line_start":33,"line_end":33,"column_start":10,"column_end":17},"name":"Matrix2","qualname":"::base::alias::Matrix2","value":"MatrixN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x2 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x2 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160462,"byte_end":160517,"line_start":32,"line_end":32,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1434},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160621,"byte_end":160628,"line_start":35,"line_end":35,"column_start":10,"column_end":17},"name":"Matrix3","qualname":"::base::alias::Matrix3","value":"MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x3 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x3 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160556,"byte_end":160611,"line_start":34,"line_end":34,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1436},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160715,"byte_end":160722,"line_start":37,"line_end":37,"column_start":10,"column_end":17},"name":"Matrix4","qualname":"::base::alias::Matrix4","value":"MatrixN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x4 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x4 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160650,"byte_end":160705,"line_start":36,"line_end":36,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1438},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160809,"byte_end":160816,"line_start":39,"line_end":39,"column_start":10,"column_end":17},"name":"Matrix5","qualname":"::base::alias::Matrix5","value":"MatrixN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x5 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x5 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160744,"byte_end":160799,"line_start":38,"line_end":38,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1440},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160903,"byte_end":160910,"line_start":41,"line_end":41,"column_start":10,"column_end":17},"name":"Matrix6","qualname":"::base::alias::Matrix6","value":"MatrixN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x6 square matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x6 square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160838,"byte_end":160893,"line_start":40,"line_end":40,"column_start":1,"column_end":56}}]},{"kind":"Type","id":{"krate":0,"index":1442},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160991,"byte_end":161000,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"Matrix1x2","qualname":"::base::alias::Matrix1x2","value":"MatrixMN<N, U1, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x2 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":160933,"byte_end":160981,"line_start":43,"line_end":43,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1444},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161085,"byte_end":161094,"line_start":46,"line_end":46,"column_start":10,"column_end":19},"name":"Matrix1x3","qualname":"::base::alias::Matrix1x3","value":"MatrixMN<N, U1, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161027,"byte_end":161075,"line_start":45,"line_end":45,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1446},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161179,"byte_end":161188,"line_start":48,"line_end":48,"column_start":10,"column_end":19},"name":"Matrix1x4","qualname":"::base::alias::Matrix1x4","value":"MatrixMN<N, U1, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161121,"byte_end":161169,"line_start":47,"line_end":47,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1448},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161273,"byte_end":161282,"line_start":50,"line_end":50,"column_start":10,"column_end":19},"name":"Matrix1x5","qualname":"::base::alias::Matrix1x5","value":"MatrixMN<N, U1, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x5 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161215,"byte_end":161263,"line_start":49,"line_end":49,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1450},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161367,"byte_end":161376,"line_start":52,"line_end":52,"column_start":10,"column_end":19},"name":"Matrix1x6","qualname":"::base::alias::Matrix1x6","value":"MatrixMN<N, U1, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 1x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 1x6 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161309,"byte_end":161357,"line_start":51,"line_end":51,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1452},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161462,"byte_end":161471,"line_start":55,"line_end":55,"column_start":10,"column_end":19},"name":"Matrix2x3","qualname":"::base::alias::Matrix2x3","value":"MatrixMN<N, U2, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161404,"byte_end":161452,"line_start":54,"line_end":54,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1454},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161556,"byte_end":161565,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"Matrix2x4","qualname":"::base::alias::Matrix2x4","value":"MatrixMN<N, U2, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161498,"byte_end":161546,"line_start":56,"line_end":56,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1456},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161650,"byte_end":161659,"line_start":59,"line_end":59,"column_start":10,"column_end":19},"name":"Matrix2x5","qualname":"::base::alias::Matrix2x5","value":"MatrixMN<N, U2, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x5 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161592,"byte_end":161640,"line_start":58,"line_end":58,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1458},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161744,"byte_end":161753,"line_start":61,"line_end":61,"column_start":10,"column_end":19},"name":"Matrix2x6","qualname":"::base::alias::Matrix2x6","value":"MatrixMN<N, U2, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x6 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161686,"byte_end":161734,"line_start":60,"line_end":60,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1460},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161839,"byte_end":161848,"line_start":64,"line_end":64,"column_start":10,"column_end":19},"name":"Matrix3x4","qualname":"::base::alias::Matrix3x4","value":"MatrixMN<N, U3, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161781,"byte_end":161829,"line_start":63,"line_end":63,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1462},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161933,"byte_end":161942,"line_start":66,"line_end":66,"column_start":10,"column_end":19},"name":"Matrix3x5","qualname":"::base::alias::Matrix3x5","value":"MatrixMN<N, U3, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x5 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161875,"byte_end":161923,"line_start":65,"line_end":65,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1464},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162027,"byte_end":162036,"line_start":68,"line_end":68,"column_start":10,"column_end":19},"name":"Matrix3x6","qualname":"::base::alias::Matrix3x6","value":"MatrixMN<N, U3, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x6 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":161969,"byte_end":162017,"line_start":67,"line_end":67,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1466},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162122,"byte_end":162131,"line_start":71,"line_end":71,"column_start":10,"column_end":19},"name":"Matrix4x5","qualname":"::base::alias::Matrix4x5","value":"MatrixMN<N, U4, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x5 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162064,"byte_end":162112,"line_start":70,"line_end":70,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1468},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162216,"byte_end":162225,"line_start":73,"line_end":73,"column_start":10,"column_end":19},"name":"Matrix4x6","qualname":"::base::alias::Matrix4x6","value":"MatrixMN<N, U4, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x6 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162158,"byte_end":162206,"line_start":72,"line_end":72,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1470},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162311,"byte_end":162320,"line_start":76,"line_end":76,"column_start":10,"column_end":19},"name":"Matrix5x6","qualname":"::base::alias::Matrix5x6","value":"MatrixMN<N, U5, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x6 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x6 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162253,"byte_end":162301,"line_start":75,"line_end":75,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1472},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162406,"byte_end":162415,"line_start":79,"line_end":79,"column_start":10,"column_end":19},"name":"Matrix2x1","qualname":"::base::alias::Matrix2x1","value":"MatrixMN<N, U2, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 2x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 2x1 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162348,"byte_end":162396,"line_start":78,"line_end":78,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1474},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162500,"byte_end":162509,"line_start":81,"line_end":81,"column_start":10,"column_end":19},"name":"Matrix3x1","qualname":"::base::alias::Matrix3x1","value":"MatrixMN<N, U3, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x1 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162442,"byte_end":162490,"line_start":80,"line_end":80,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1476},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162594,"byte_end":162603,"line_start":83,"line_end":83,"column_start":10,"column_end":19},"name":"Matrix4x1","qualname":"::base::alias::Matrix4x1","value":"MatrixMN<N, U4, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x1 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162536,"byte_end":162584,"line_start":82,"line_end":82,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1478},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162688,"byte_end":162697,"line_start":85,"line_end":85,"column_start":10,"column_end":19},"name":"Matrix5x1","qualname":"::base::alias::Matrix5x1","value":"MatrixMN<N, U5, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x1 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162630,"byte_end":162678,"line_start":84,"line_end":84,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1480},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162782,"byte_end":162791,"line_start":87,"line_end":87,"column_start":10,"column_end":19},"name":"Matrix6x1","qualname":"::base::alias::Matrix6x1","value":"MatrixMN<N, U6, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x1 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x1 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162724,"byte_end":162772,"line_start":86,"line_end":86,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1482},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162877,"byte_end":162886,"line_start":90,"line_end":90,"column_start":10,"column_end":19},"name":"Matrix3x2","qualname":"::base::alias::Matrix3x2","value":"MatrixMN<N, U3, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 3x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 3x2 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162819,"byte_end":162867,"line_start":89,"line_end":89,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1484},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162971,"byte_end":162980,"line_start":92,"line_end":92,"column_start":10,"column_end":19},"name":"Matrix4x2","qualname":"::base::alias::Matrix4x2","value":"MatrixMN<N, U4, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x2 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":162913,"byte_end":162961,"line_start":91,"line_end":91,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1486},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163065,"byte_end":163074,"line_start":94,"line_end":94,"column_start":10,"column_end":19},"name":"Matrix5x2","qualname":"::base::alias::Matrix5x2","value":"MatrixMN<N, U5, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x2 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163007,"byte_end":163055,"line_start":93,"line_end":93,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1488},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163159,"byte_end":163168,"line_start":96,"line_end":96,"column_start":10,"column_end":19},"name":"Matrix6x2","qualname":"::base::alias::Matrix6x2","value":"MatrixMN<N, U6, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x2 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x2 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163101,"byte_end":163149,"line_start":95,"line_end":95,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1490},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163254,"byte_end":163263,"line_start":99,"line_end":99,"column_start":10,"column_end":19},"name":"Matrix4x3","qualname":"::base::alias::Matrix4x3","value":"MatrixMN<N, U4, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 4x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 4x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163196,"byte_end":163244,"line_start":98,"line_end":98,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1492},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163348,"byte_end":163357,"line_start":101,"line_end":101,"column_start":10,"column_end":19},"name":"Matrix5x3","qualname":"::base::alias::Matrix5x3","value":"MatrixMN<N, U5, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163290,"byte_end":163338,"line_start":100,"line_end":100,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1494},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163442,"byte_end":163451,"line_start":103,"line_end":103,"column_start":10,"column_end":19},"name":"Matrix6x3","qualname":"::base::alias::Matrix6x3","value":"MatrixMN<N, U6, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x3 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163384,"byte_end":163432,"line_start":102,"line_end":102,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1496},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163537,"byte_end":163546,"line_start":106,"line_end":106,"column_start":10,"column_end":19},"name":"Matrix5x4","qualname":"::base::alias::Matrix5x4","value":"MatrixMN<N, U5, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 5x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 5x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163479,"byte_end":163527,"line_start":105,"line_end":105,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1498},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163631,"byte_end":163640,"line_start":108,"line_end":108,"column_start":10,"column_end":19},"name":"Matrix6x4","qualname":"::base::alias::Matrix6x4","value":"MatrixMN<N, U6, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x4 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163573,"byte_end":163621,"line_start":107,"line_end":107,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1500},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163726,"byte_end":163735,"line_start":111,"line_end":111,"column_start":10,"column_end":19},"name":"Matrix6x5","qualname":"::base::alias::Matrix6x5","value":"MatrixMN<N, U6, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, column-major, 6x5 matrix.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, column-major, 6x5 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163668,"byte_end":163716,"line_start":110,"line_end":110,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1502},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163897,"byte_end":163904,"line_start":122,"line_end":122,"column_start":10,"column_end":17},"name":"DVector","qualname":"::base::alias::DVector","value":"Matrix<N, Dynamic, U1, VecStorage<N, Dynamic, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized column vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163801,"byte_end":163839,"line_start":120,"line_end":120,"column_start":1,"column_end":39}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163840,"byte_end":163887,"line_start":121,"line_end":121,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1504},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164024,"byte_end":164031,"line_start":125,"line_end":125,"column_start":10,"column_end":17},"name":"VectorN","qualname":"::base::alias::VectorN","value":"MatrixMN<N, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":163963,"byte_end":164014,"line_start":124,"line_end":124,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1507},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164122,"byte_end":164129,"line_start":128,"line_end":128,"column_start":10,"column_end":17},"name":"Vector1","qualname":"::base::alias::Vector1","value":"VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164061,"byte_end":164112,"line_start":127,"line_end":127,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1509},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164212,"byte_end":164219,"line_start":130,"line_end":130,"column_start":10,"column_end":17},"name":"Vector2","qualname":"::base::alias::Vector2","value":"VectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164151,"byte_end":164202,"line_start":129,"line_end":129,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1511},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164302,"byte_end":164309,"line_start":132,"line_end":132,"column_start":10,"column_end":17},"name":"Vector3","qualname":"::base::alias::Vector3","value":"VectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164241,"byte_end":164292,"line_start":131,"line_end":131,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1513},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164392,"byte_end":164399,"line_start":134,"line_end":134,"column_start":10,"column_end":17},"name":"Vector4","qualname":"::base::alias::Vector4","value":"VectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164331,"byte_end":164382,"line_start":133,"line_end":133,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1515},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164482,"byte_end":164489,"line_start":136,"line_end":136,"column_start":10,"column_end":17},"name":"Vector5","qualname":"::base::alias::Vector5","value":"VectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164421,"byte_end":164472,"line_start":135,"line_end":135,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1517},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164572,"byte_end":164579,"line_start":138,"line_end":138,"column_start":10,"column_end":17},"name":"Vector6","qualname":"::base::alias::Vector6","value":"VectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional column vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164511,"byte_end":164562,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Type","id":{"krate":0,"index":1519},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164730,"byte_end":164740,"line_start":149,"line_end":149,"column_start":10,"column_end":20},"name":"RowDVector","qualname":"::base::alias::RowDVector","value":"Matrix<N, U1, Dynamic, VecStorage<N, U1, Dynamic>>","parent":null,"children":[],"decl_id":null,"docs":" A dynamically sized row vector.\n","sig":null,"attributes":[{"value":"/ A dynamically sized row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164637,"byte_end":164672,"line_start":147,"line_end":147,"column_start":1,"column_end":36}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164673,"byte_end":164720,"line_start":148,"line_end":148,"column_start":1,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":1521},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164857,"byte_end":164867,"line_start":152,"line_end":152,"column_start":10,"column_end":20},"name":"RowVectorN","qualname":"::base::alias::RowVectorN","value":"MatrixMN<N, U1, D>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized D-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A statically sized D-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164799,"byte_end":164847,"line_start":151,"line_end":151,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1524},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164955,"byte_end":164965,"line_start":155,"line_end":155,"column_start":10,"column_end":20},"name":"RowVector1","qualname":"::base::alias::RowVector1","value":"RowVectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 1-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 1-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164897,"byte_end":164945,"line_start":154,"line_end":154,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1526},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165048,"byte_end":165058,"line_start":157,"line_end":157,"column_start":10,"column_end":20},"name":"RowVector2","qualname":"::base::alias::RowVector2","value":"RowVectorN<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 2-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 2-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":164990,"byte_end":165038,"line_start":156,"line_end":156,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1528},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165141,"byte_end":165151,"line_start":159,"line_end":159,"column_start":10,"column_end":20},"name":"RowVector3","qualname":"::base::alias::RowVector3","value":"RowVectorN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 3-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 3-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165083,"byte_end":165131,"line_start":158,"line_end":158,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1530},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165234,"byte_end":165244,"line_start":161,"line_end":161,"column_start":10,"column_end":20},"name":"RowVector4","qualname":"::base::alias::RowVector4","value":"RowVectorN<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 4-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 4-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165176,"byte_end":165224,"line_start":160,"line_end":160,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1532},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165327,"byte_end":165337,"line_start":163,"line_end":163,"column_start":10,"column_end":20},"name":"RowVector5","qualname":"::base::alias::RowVector5","value":"RowVectorN<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 5-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 5-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165269,"byte_end":165317,"line_start":162,"line_end":162,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1534},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165420,"byte_end":165430,"line_start":165,"line_end":165,"column_start":10,"column_end":20},"name":"RowVector6","qualname":"::base::alias::RowVector6","value":"RowVectorN<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A stack-allocated, 6-dimensional row vector.\n","sig":null,"attributes":[{"value":"/ A stack-allocated, 6-dimensional row vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias.rs","byte_start":165362,"byte_end":165410,"line_start":164,"line_end":164,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":1569},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":165725,"byte_end":165738,"line_start":13,"line_end":13,"column_start":10,"column_end":23},"name":"MatrixSliceMN","qualname":"::base::alias_slice::MatrixSliceMN","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":165653,"byte_end":165715,"line_start":12,"line_end":12,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1576},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":165916,"byte_end":165928,"line_start":17,"line_end":17,"column_start":10,"column_end":22},"name":"MatrixSliceN","qualname":"::base::alias_slice::MatrixSliceN","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with `D` rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":165848,"byte_end":165906,"line_start":16,"line_end":16,"column_start":1,"column_end":59}}]},{"kind":"Type","id":{"krate":0,"index":1582},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166097,"byte_end":166109,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"DMatrixSlice","qualname":"::base::alias_slice::DMatrixSlice","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166019,"byte_end":166087,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":1587},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166251,"byte_end":166263,"line_start":25,"line_end":25,"column_start":10,"column_end":22},"name":"MatrixSlice1","qualname":"::base::alias_slice::MatrixSlice1","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166205,"byte_end":166241,"line_start":24,"line_end":24,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1592},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166394,"byte_end":166406,"line_start":28,"line_end":28,"column_start":10,"column_end":22},"name":"MatrixSlice2","qualname":"::base::alias_slice::MatrixSlice2","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166348,"byte_end":166384,"line_start":27,"line_end":27,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1597},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166537,"byte_end":166549,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"MatrixSlice3","qualname":"::base::alias_slice::MatrixSlice3","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166491,"byte_end":166527,"line_start":30,"line_end":30,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1602},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166680,"byte_end":166692,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"MatrixSlice4","qualname":"::base::alias_slice::MatrixSlice4","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166634,"byte_end":166670,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166823,"byte_end":166835,"line_start":37,"line_end":37,"column_start":10,"column_end":22},"name":"MatrixSlice5","qualname":"::base::alias_slice::MatrixSlice5","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166777,"byte_end":166813,"line_start":36,"line_end":36,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1612},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166966,"byte_end":166978,"line_start":40,"line_end":40,"column_start":10,"column_end":22},"name":"MatrixSlice6","qualname":"::base::alias_slice::MatrixSlice6","value":"MatrixSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":166920,"byte_end":166956,"line_start":39,"line_end":39,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1617},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167110,"byte_end":167124,"line_start":44,"line_end":44,"column_start":10,"column_end":24},"name":"MatrixSlice1x2","qualname":"::base::alias_slice::MatrixSlice1x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167064,"byte_end":167100,"line_start":43,"line_end":43,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1622},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167260,"byte_end":167274,"line_start":47,"line_end":47,"column_start":10,"column_end":24},"name":"MatrixSlice1x3","qualname":"::base::alias_slice::MatrixSlice1x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167214,"byte_end":167250,"line_start":46,"line_end":46,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1627},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167410,"byte_end":167424,"line_start":50,"line_end":50,"column_start":10,"column_end":24},"name":"MatrixSlice1x4","qualname":"::base::alias_slice::MatrixSlice1x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167364,"byte_end":167400,"line_start":49,"line_end":49,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1632},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167560,"byte_end":167574,"line_start":53,"line_end":53,"column_start":10,"column_end":24},"name":"MatrixSlice1x5","qualname":"::base::alias_slice::MatrixSlice1x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167514,"byte_end":167550,"line_start":52,"line_end":52,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1637},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167710,"byte_end":167724,"line_start":56,"line_end":56,"column_start":10,"column_end":24},"name":"MatrixSlice1x6","qualname":"::base::alias_slice::MatrixSlice1x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167664,"byte_end":167700,"line_start":55,"line_end":55,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1642},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167861,"byte_end":167875,"line_start":60,"line_end":60,"column_start":10,"column_end":24},"name":"MatrixSlice2x1","qualname":"::base::alias_slice::MatrixSlice2x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167815,"byte_end":167851,"line_start":59,"line_end":59,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1647},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168011,"byte_end":168025,"line_start":63,"line_end":63,"column_start":10,"column_end":24},"name":"MatrixSlice2x3","qualname":"::base::alias_slice::MatrixSlice2x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":167965,"byte_end":168001,"line_start":62,"line_end":62,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1652},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168161,"byte_end":168175,"line_start":66,"line_end":66,"column_start":10,"column_end":24},"name":"MatrixSlice2x4","qualname":"::base::alias_slice::MatrixSlice2x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168115,"byte_end":168151,"line_start":65,"line_end":65,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1657},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168311,"byte_end":168325,"line_start":69,"line_end":69,"column_start":10,"column_end":24},"name":"MatrixSlice2x5","qualname":"::base::alias_slice::MatrixSlice2x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168265,"byte_end":168301,"line_start":68,"line_end":68,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1662},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168461,"byte_end":168475,"line_start":72,"line_end":72,"column_start":10,"column_end":24},"name":"MatrixSlice2x6","qualname":"::base::alias_slice::MatrixSlice2x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168415,"byte_end":168451,"line_start":71,"line_end":71,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1667},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168612,"byte_end":168626,"line_start":76,"line_end":76,"column_start":10,"column_end":24},"name":"MatrixSlice3x1","qualname":"::base::alias_slice::MatrixSlice3x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168566,"byte_end":168602,"line_start":75,"line_end":75,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1672},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168762,"byte_end":168776,"line_start":79,"line_end":79,"column_start":10,"column_end":24},"name":"MatrixSlice3x2","qualname":"::base::alias_slice::MatrixSlice3x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168716,"byte_end":168752,"line_start":78,"line_end":78,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168912,"byte_end":168926,"line_start":82,"line_end":82,"column_start":10,"column_end":24},"name":"MatrixSlice3x4","qualname":"::base::alias_slice::MatrixSlice3x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":168866,"byte_end":168902,"line_start":81,"line_end":81,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1682},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169062,"byte_end":169076,"line_start":85,"line_end":85,"column_start":10,"column_end":24},"name":"MatrixSlice3x5","qualname":"::base::alias_slice::MatrixSlice3x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169016,"byte_end":169052,"line_start":84,"line_end":84,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1687},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169212,"byte_end":169226,"line_start":88,"line_end":88,"column_start":10,"column_end":24},"name":"MatrixSlice3x6","qualname":"::base::alias_slice::MatrixSlice3x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169166,"byte_end":169202,"line_start":87,"line_end":87,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1692},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169363,"byte_end":169377,"line_start":92,"line_end":92,"column_start":10,"column_end":24},"name":"MatrixSlice4x1","qualname":"::base::alias_slice::MatrixSlice4x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169317,"byte_end":169353,"line_start":91,"line_end":91,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1697},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169513,"byte_end":169527,"line_start":95,"line_end":95,"column_start":10,"column_end":24},"name":"MatrixSlice4x2","qualname":"::base::alias_slice::MatrixSlice4x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169467,"byte_end":169503,"line_start":94,"line_end":94,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1702},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169663,"byte_end":169677,"line_start":98,"line_end":98,"column_start":10,"column_end":24},"name":"MatrixSlice4x3","qualname":"::base::alias_slice::MatrixSlice4x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169617,"byte_end":169653,"line_start":97,"line_end":97,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1707},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169813,"byte_end":169827,"line_start":101,"line_end":101,"column_start":10,"column_end":24},"name":"MatrixSlice4x5","qualname":"::base::alias_slice::MatrixSlice4x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169767,"byte_end":169803,"line_start":100,"line_end":100,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1712},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169963,"byte_end":169977,"line_start":104,"line_end":104,"column_start":10,"column_end":24},"name":"MatrixSlice4x6","qualname":"::base::alias_slice::MatrixSlice4x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":169917,"byte_end":169953,"line_start":103,"line_end":103,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1717},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170114,"byte_end":170128,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"MatrixSlice5x1","qualname":"::base::alias_slice::MatrixSlice5x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170068,"byte_end":170104,"line_start":107,"line_end":107,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1722},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170264,"byte_end":170278,"line_start":111,"line_end":111,"column_start":10,"column_end":24},"name":"MatrixSlice5x2","qualname":"::base::alias_slice::MatrixSlice5x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170218,"byte_end":170254,"line_start":110,"line_end":110,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1727},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170414,"byte_end":170428,"line_start":114,"line_end":114,"column_start":10,"column_end":24},"name":"MatrixSlice5x3","qualname":"::base::alias_slice::MatrixSlice5x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170368,"byte_end":170404,"line_start":113,"line_end":113,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1732},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170564,"byte_end":170578,"line_start":117,"line_end":117,"column_start":10,"column_end":24},"name":"MatrixSlice5x4","qualname":"::base::alias_slice::MatrixSlice5x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170518,"byte_end":170554,"line_start":116,"line_end":116,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1737},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170714,"byte_end":170728,"line_start":120,"line_end":120,"column_start":10,"column_end":24},"name":"MatrixSlice5x6","qualname":"::base::alias_slice::MatrixSlice5x6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170668,"byte_end":170704,"line_start":119,"line_end":119,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1742},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170865,"byte_end":170879,"line_start":124,"line_end":124,"column_start":10,"column_end":24},"name":"MatrixSlice6x1","qualname":"::base::alias_slice::MatrixSlice6x1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170819,"byte_end":170855,"line_start":123,"line_end":123,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1747},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171015,"byte_end":171029,"line_start":127,"line_end":127,"column_start":10,"column_end":24},"name":"MatrixSlice6x2","qualname":"::base::alias_slice::MatrixSlice6x2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":170969,"byte_end":171005,"line_start":126,"line_end":126,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1752},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171165,"byte_end":171179,"line_start":130,"line_end":130,"column_start":10,"column_end":24},"name":"MatrixSlice6x3","qualname":"::base::alias_slice::MatrixSlice6x3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171119,"byte_end":171155,"line_start":129,"line_end":129,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1757},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171315,"byte_end":171329,"line_start":133,"line_end":133,"column_start":10,"column_end":24},"name":"MatrixSlice6x4","qualname":"::base::alias_slice::MatrixSlice6x4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171269,"byte_end":171305,"line_start":132,"line_end":132,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1762},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171465,"byte_end":171479,"line_start":136,"line_end":136,"column_start":10,"column_end":24},"name":"MatrixSlice6x5","qualname":"::base::alias_slice::MatrixSlice6x5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171419,"byte_end":171455,"line_start":135,"line_end":135,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":1767},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171665,"byte_end":171679,"line_start":140,"line_end":140,"column_start":10,"column_end":24},"name":"MatrixSlice1xX","qualname":"::base::alias_slice::MatrixSlice1xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171570,"byte_end":171655,"line_start":139,"line_end":139,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1772},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171870,"byte_end":171884,"line_start":143,"line_end":143,"column_start":10,"column_end":24},"name":"MatrixSlice2xX","qualname":"::base::alias_slice::MatrixSlice2xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171774,"byte_end":171860,"line_start":142,"line_end":142,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1777},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172075,"byte_end":172089,"line_start":146,"line_end":146,"column_start":10,"column_end":24},"name":"MatrixSlice3xX","qualname":"::base::alias_slice::MatrixSlice3xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":171979,"byte_end":172065,"line_start":145,"line_end":145,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1782},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172280,"byte_end":172294,"line_start":149,"line_end":149,"column_start":10,"column_end":24},"name":"MatrixSlice4xX","qualname":"::base::alias_slice::MatrixSlice4xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172184,"byte_end":172270,"line_start":148,"line_end":148,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1787},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172485,"byte_end":172499,"line_start":152,"line_end":152,"column_start":10,"column_end":24},"name":"MatrixSlice5xX","qualname":"::base::alias_slice::MatrixSlice5xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172389,"byte_end":172475,"line_start":151,"line_end":151,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1792},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172690,"byte_end":172704,"line_start":155,"line_end":155,"column_start":10,"column_end":24},"name":"MatrixSlice6xX","qualname":"::base::alias_slice::MatrixSlice6xX","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172594,"byte_end":172680,"line_start":154,"line_end":154,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172895,"byte_end":172909,"line_start":159,"line_end":159,"column_start":10,"column_end":24},"name":"MatrixSliceXx1","qualname":"::base::alias_slice::MatrixSliceXx1","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":172800,"byte_end":172885,"line_start":158,"line_end":158,"column_start":1,"column_end":86}}]},{"kind":"Type","id":{"krate":0,"index":1802},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173105,"byte_end":173119,"line_start":162,"line_end":162,"column_start":10,"column_end":24},"name":"MatrixSliceXx2","qualname":"::base::alias_slice::MatrixSliceXx2","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173009,"byte_end":173095,"line_start":161,"line_end":161,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1807},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173315,"byte_end":173329,"line_start":165,"line_end":165,"column_start":10,"column_end":24},"name":"MatrixSliceXx3","qualname":"::base::alias_slice::MatrixSliceXx3","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173219,"byte_end":173305,"line_start":164,"line_end":164,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1812},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173525,"byte_end":173539,"line_start":168,"line_end":168,"column_start":10,"column_end":24},"name":"MatrixSliceXx4","qualname":"::base::alias_slice::MatrixSliceXx4","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173429,"byte_end":173515,"line_start":167,"line_end":167,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1817},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173735,"byte_end":173749,"line_start":171,"line_end":171,"column_start":10,"column_end":24},"name":"MatrixSliceXx5","qualname":"::base::alias_slice::MatrixSliceXx5","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173639,"byte_end":173725,"line_start":170,"line_end":170,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1822},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173945,"byte_end":173959,"line_start":174,"line_end":174,"column_start":10,"column_end":24},"name":"MatrixSliceXx6","qualname":"::base::alias_slice::MatrixSliceXx6","value":"MatrixSliceMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":173849,"byte_end":173935,"line_start":173,"line_end":173,"column_start":1,"column_end":87}}]},{"kind":"Type","id":{"krate":0,"index":1827},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174110,"byte_end":174122,"line_start":178,"line_end":178,"column_start":10,"column_end":22},"name":"VectorSliceN","qualname":"::base::alias_slice::VectorSliceN","value":"Matrix<N, D, U1, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A column vector slice with `D` rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174060,"byte_end":174100,"line_start":177,"line_end":177,"column_start":1,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":1833},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174303,"byte_end":174315,"line_start":182,"line_end":182,"column_start":10,"column_end":22},"name":"DVectorSlice","qualname":"::base::alias_slice::DVectorSlice","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174231,"byte_end":174293,"line_start":181,"line_end":181,"column_start":1,"column_end":63}}]},{"kind":"Type","id":{"krate":0,"index":1838},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174446,"byte_end":174458,"line_start":185,"line_end":185,"column_start":10,"column_end":22},"name":"VectorSlice1","qualname":"::base::alias_slice::VectorSlice1","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 1D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174407,"byte_end":174436,"line_start":184,"line_end":184,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1843},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174578,"byte_end":174590,"line_start":187,"line_end":187,"column_start":10,"column_end":22},"name":"VectorSlice2","qualname":"::base::alias_slice::VectorSlice2","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 2D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174539,"byte_end":174568,"line_start":186,"line_end":186,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1848},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174710,"byte_end":174722,"line_start":189,"line_end":189,"column_start":10,"column_end":22},"name":"VectorSlice3","qualname":"::base::alias_slice::VectorSlice3","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 3D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174671,"byte_end":174700,"line_start":188,"line_end":188,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1853},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174842,"byte_end":174854,"line_start":191,"line_end":191,"column_start":10,"column_end":22},"name":"VectorSlice4","qualname":"::base::alias_slice::VectorSlice4","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 4D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174803,"byte_end":174832,"line_start":190,"line_end":190,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1858},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174974,"byte_end":174986,"line_start":193,"line_end":193,"column_start":10,"column_end":22},"name":"VectorSlice5","qualname":"::base::alias_slice::VectorSlice5","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 5D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":174935,"byte_end":174964,"line_start":192,"line_end":192,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1863},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175106,"byte_end":175118,"line_start":195,"line_end":195,"column_start":10,"column_end":22},"name":"VectorSlice6","qualname":"::base::alias_slice::VectorSlice6","value":"VectorSliceN","parent":null,"children":[],"decl_id":null,"docs":" A 6D column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175067,"byte_end":175096,"line_start":194,"line_end":194,"column_start":1,"column_end":30}}]},{"kind":"Type","id":{"krate":0,"index":1868},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175338,"byte_end":175354,"line_start":205,"line_end":205,"column_start":10,"column_end":26},"name":"MatrixSliceMutMN","qualname":"::base::alias_slice::MatrixSliceMutMN","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `R` rows and `C` columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `R` rows and `C` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175258,"byte_end":175328,"line_start":204,"line_end":204,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":1875},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175543,"byte_end":175558,"line_start":209,"line_end":209,"column_start":10,"column_end":25},"name":"MatrixSliceMutN","qualname":"::base::alias_slice::MatrixSliceMutN","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with `D` rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with `D` rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175467,"byte_end":175533,"line_start":208,"line_end":208,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":1881},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175738,"byte_end":175753,"line_start":213,"line_end":213,"column_start":10,"column_end":25},"name":"DMatrixSliceMut","qualname":"::base::alias_slice::DMatrixSliceMut","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice dynamic numbers of rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175652,"byte_end":175728,"line_start":212,"line_end":212,"column_start":1,"column_end":77}}]},{"kind":"Type","id":{"krate":0,"index":1886},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175906,"byte_end":175921,"line_start":217,"line_end":217,"column_start":10,"column_end":25},"name":"MatrixSliceMut1","qualname":"::base::alias_slice::MatrixSliceMut1","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":175852,"byte_end":175896,"line_start":216,"line_end":216,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1891},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176063,"byte_end":176078,"line_start":220,"line_end":220,"column_start":10,"column_end":25},"name":"MatrixSliceMut2","qualname":"::base::alias_slice::MatrixSliceMut2","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176009,"byte_end":176053,"line_start":219,"line_end":219,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1896},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176220,"byte_end":176235,"line_start":223,"line_end":223,"column_start":10,"column_end":25},"name":"MatrixSliceMut3","qualname":"::base::alias_slice::MatrixSliceMut3","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176166,"byte_end":176210,"line_start":222,"line_end":222,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1901},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176377,"byte_end":176392,"line_start":226,"line_end":226,"column_start":10,"column_end":25},"name":"MatrixSliceMut4","qualname":"::base::alias_slice::MatrixSliceMut4","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176323,"byte_end":176367,"line_start":225,"line_end":225,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1906},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176534,"byte_end":176549,"line_start":229,"line_end":229,"column_start":10,"column_end":25},"name":"MatrixSliceMut5","qualname":"::base::alias_slice::MatrixSliceMut5","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176480,"byte_end":176524,"line_start":228,"line_end":228,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1911},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176691,"byte_end":176706,"line_start":232,"line_end":232,"column_start":10,"column_end":25},"name":"MatrixSliceMut6","qualname":"::base::alias_slice::MatrixSliceMut6","value":"MatrixSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176637,"byte_end":176681,"line_start":231,"line_end":231,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1916},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176849,"byte_end":176866,"line_start":236,"line_end":236,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x2","qualname":"::base::alias_slice::MatrixSliceMut1x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176795,"byte_end":176839,"line_start":235,"line_end":235,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1921},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177013,"byte_end":177030,"line_start":239,"line_end":239,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x3","qualname":"::base::alias_slice::MatrixSliceMut1x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":176959,"byte_end":177003,"line_start":238,"line_end":238,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1926},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177177,"byte_end":177194,"line_start":242,"line_end":242,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x4","qualname":"::base::alias_slice::MatrixSliceMut1x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177123,"byte_end":177167,"line_start":241,"line_end":241,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1931},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177341,"byte_end":177358,"line_start":245,"line_end":245,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x5","qualname":"::base::alias_slice::MatrixSliceMut1x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177287,"byte_end":177331,"line_start":244,"line_end":244,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1936},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177505,"byte_end":177522,"line_start":248,"line_end":248,"column_start":10,"column_end":27},"name":"MatrixSliceMut1x6","qualname":"::base::alias_slice::MatrixSliceMut1x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 1x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 1x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177451,"byte_end":177495,"line_start":247,"line_end":247,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1941},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177670,"byte_end":177687,"line_start":252,"line_end":252,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x1","qualname":"::base::alias_slice::MatrixSliceMut2x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177616,"byte_end":177660,"line_start":251,"line_end":251,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1946},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177834,"byte_end":177851,"line_start":255,"line_end":255,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x3","qualname":"::base::alias_slice::MatrixSliceMut2x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177780,"byte_end":177824,"line_start":254,"line_end":254,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1951},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177998,"byte_end":178015,"line_start":258,"line_end":258,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x4","qualname":"::base::alias_slice::MatrixSliceMut2x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":177944,"byte_end":177988,"line_start":257,"line_end":257,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1956},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178162,"byte_end":178179,"line_start":261,"line_end":261,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x5","qualname":"::base::alias_slice::MatrixSliceMut2x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178108,"byte_end":178152,"line_start":260,"line_end":260,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1961},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178326,"byte_end":178343,"line_start":264,"line_end":264,"column_start":10,"column_end":27},"name":"MatrixSliceMut2x6","qualname":"::base::alias_slice::MatrixSliceMut2x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 2x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 2x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178272,"byte_end":178316,"line_start":263,"line_end":263,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1966},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178491,"byte_end":178508,"line_start":268,"line_end":268,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x1","qualname":"::base::alias_slice::MatrixSliceMut3x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178437,"byte_end":178481,"line_start":267,"line_end":267,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1971},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178655,"byte_end":178672,"line_start":271,"line_end":271,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x2","qualname":"::base::alias_slice::MatrixSliceMut3x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178601,"byte_end":178645,"line_start":270,"line_end":270,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1976},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178819,"byte_end":178836,"line_start":274,"line_end":274,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x4","qualname":"::base::alias_slice::MatrixSliceMut3x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178765,"byte_end":178809,"line_start":273,"line_end":273,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1981},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178983,"byte_end":179000,"line_start":277,"line_end":277,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x5","qualname":"::base::alias_slice::MatrixSliceMut3x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":178929,"byte_end":178973,"line_start":276,"line_end":276,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1986},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179147,"byte_end":179164,"line_start":280,"line_end":280,"column_start":10,"column_end":27},"name":"MatrixSliceMut3x6","qualname":"::base::alias_slice::MatrixSliceMut3x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 3x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 3x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179093,"byte_end":179137,"line_start":279,"line_end":279,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1991},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179312,"byte_end":179329,"line_start":284,"line_end":284,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x1","qualname":"::base::alias_slice::MatrixSliceMut4x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179258,"byte_end":179302,"line_start":283,"line_end":283,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":1996},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179476,"byte_end":179493,"line_start":287,"line_end":287,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x2","qualname":"::base::alias_slice::MatrixSliceMut4x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179422,"byte_end":179466,"line_start":286,"line_end":286,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2001},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179640,"byte_end":179657,"line_start":290,"line_end":290,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x3","qualname":"::base::alias_slice::MatrixSliceMut4x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179586,"byte_end":179630,"line_start":289,"line_end":289,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2006},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179804,"byte_end":179821,"line_start":293,"line_end":293,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x5","qualname":"::base::alias_slice::MatrixSliceMut4x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179750,"byte_end":179794,"line_start":292,"line_end":292,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2011},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179968,"byte_end":179985,"line_start":296,"line_end":296,"column_start":10,"column_end":27},"name":"MatrixSliceMut4x6","qualname":"::base::alias_slice::MatrixSliceMut4x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 4x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 4x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":179914,"byte_end":179958,"line_start":295,"line_end":295,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2016},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180133,"byte_end":180150,"line_start":300,"line_end":300,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x1","qualname":"::base::alias_slice::MatrixSliceMut5x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180079,"byte_end":180123,"line_start":299,"line_end":299,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2021},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180297,"byte_end":180314,"line_start":303,"line_end":303,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x2","qualname":"::base::alias_slice::MatrixSliceMut5x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180243,"byte_end":180287,"line_start":302,"line_end":302,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2026},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180461,"byte_end":180478,"line_start":306,"line_end":306,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x3","qualname":"::base::alias_slice::MatrixSliceMut5x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180407,"byte_end":180451,"line_start":305,"line_end":305,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2031},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180625,"byte_end":180642,"line_start":309,"line_end":309,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x4","qualname":"::base::alias_slice::MatrixSliceMut5x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180571,"byte_end":180615,"line_start":308,"line_end":308,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2036},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180789,"byte_end":180806,"line_start":312,"line_end":312,"column_start":10,"column_end":27},"name":"MatrixSliceMut5x6","qualname":"::base::alias_slice::MatrixSliceMut5x6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 5x6 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 5x6 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180735,"byte_end":180779,"line_start":311,"line_end":311,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2041},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180954,"byte_end":180971,"line_start":316,"line_end":316,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x1","qualname":"::base::alias_slice::MatrixSliceMut6x1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x1 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x1 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":180900,"byte_end":180944,"line_start":315,"line_end":315,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2046},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181118,"byte_end":181135,"line_start":319,"line_end":319,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x2","qualname":"::base::alias_slice::MatrixSliceMut6x2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x2 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x2 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181064,"byte_end":181108,"line_start":318,"line_end":318,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2051},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181282,"byte_end":181299,"line_start":322,"line_end":322,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x3","qualname":"::base::alias_slice::MatrixSliceMut6x3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x3 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x3 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181228,"byte_end":181272,"line_start":321,"line_end":321,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2056},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181446,"byte_end":181463,"line_start":325,"line_end":325,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x4","qualname":"::base::alias_slice::MatrixSliceMut6x4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x4 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x4 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181392,"byte_end":181436,"line_start":324,"line_end":324,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2061},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181610,"byte_end":181627,"line_start":328,"line_end":328,"column_start":10,"column_end":27},"name":"MatrixSliceMut6x5","qualname":"::base::alias_slice::MatrixSliceMut6x5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major 6x5 mutable matrix slice.\n","sig":null,"attributes":[{"value":"/ A column-major 6x5 mutable matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181556,"byte_end":181600,"line_start":327,"line_end":327,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":2066},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181824,"byte_end":181841,"line_start":332,"line_end":332,"column_start":10,"column_end":27},"name":"MatrixSliceMut1xX","qualname":"::base::alias_slice::MatrixSliceMut1xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 1 row and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181721,"byte_end":181814,"line_start":331,"line_end":331,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":2071},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182043,"byte_end":182060,"line_start":335,"line_end":335,"column_start":10,"column_end":27},"name":"MatrixSliceMut2xX","qualname":"::base::alias_slice::MatrixSliceMut2xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 2 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":181939,"byte_end":182033,"line_start":334,"line_end":334,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2076},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182262,"byte_end":182279,"line_start":338,"line_end":338,"column_start":10,"column_end":27},"name":"MatrixSliceMut3xX","qualname":"::base::alias_slice::MatrixSliceMut3xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 3 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182158,"byte_end":182252,"line_start":337,"line_end":337,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2081},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182481,"byte_end":182498,"line_start":341,"line_end":341,"column_start":10,"column_end":27},"name":"MatrixSliceMut4xX","qualname":"::base::alias_slice::MatrixSliceMut4xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 4 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182377,"byte_end":182471,"line_start":340,"line_end":340,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2086},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182700,"byte_end":182717,"line_start":344,"line_end":344,"column_start":10,"column_end":27},"name":"MatrixSliceMut5xX","qualname":"::base::alias_slice::MatrixSliceMut5xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 5 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182596,"byte_end":182690,"line_start":343,"line_end":343,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2091},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182919,"byte_end":182936,"line_start":347,"line_end":347,"column_start":10,"column_end":27},"name":"MatrixSliceMut6xX","qualname":"::base::alias_slice::MatrixSliceMut6xX","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with 6 rows and a number of columns chosen at runtime.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":182815,"byte_end":182909,"line_start":346,"line_end":346,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2096},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183138,"byte_end":183155,"line_start":351,"line_end":351,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx1","qualname":"::base::alias_slice::MatrixSliceMutXx1","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 1 column.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183035,"byte_end":183128,"line_start":350,"line_end":350,"column_start":1,"column_end":94}}]},{"kind":"Type","id":{"krate":0,"index":2101},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183362,"byte_end":183379,"line_start":354,"line_end":354,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx2","qualname":"::base::alias_slice::MatrixSliceMutXx2","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 2 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183258,"byte_end":183352,"line_start":353,"line_end":353,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2106},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183586,"byte_end":183603,"line_start":357,"line_end":357,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx3","qualname":"::base::alias_slice::MatrixSliceMutXx3","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 3 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183482,"byte_end":183576,"line_start":356,"line_end":356,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2111},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183810,"byte_end":183827,"line_start":360,"line_end":360,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx4","qualname":"::base::alias_slice::MatrixSliceMutXx4","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 4 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183706,"byte_end":183800,"line_start":359,"line_end":359,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2116},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184034,"byte_end":184051,"line_start":363,"line_end":363,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx5","qualname":"::base::alias_slice::MatrixSliceMutXx5","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 5 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":183930,"byte_end":184024,"line_start":362,"line_end":362,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2121},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184258,"byte_end":184275,"line_start":366,"line_end":366,"column_start":10,"column_end":27},"name":"MatrixSliceMutXx6","qualname":"::base::alias_slice::MatrixSliceMutXx6","value":"MatrixSliceMutMN","parent":null,"children":[],"decl_id":null,"docs":" A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.\n","sig":null,"attributes":[{"value":"/ A column-major mutable matrix slice with a number of rows chosen at runtime and 6 columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184154,"byte_end":184248,"line_start":365,"line_end":365,"column_start":1,"column_end":95}}]},{"kind":"Type","id":{"krate":0,"index":2126},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184437,"byte_end":184452,"line_start":370,"line_end":370,"column_start":10,"column_end":25},"name":"VectorSliceMutN","qualname":"::base::alias_slice::VectorSliceMutN","value":"Matrix<N, D, U1, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice with `D` rows.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice with `D` rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184379,"byte_end":184427,"line_start":369,"line_end":369,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":2132},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184644,"byte_end":184659,"line_start":374,"line_end":374,"column_start":10,"column_end":25},"name":"DVectorSliceMut","qualname":"::base::alias_slice::DVectorSliceMut","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A mutable column vector slice dynamic numbers of rows and columns.\n","sig":null,"attributes":[{"value":"/ A mutable column vector slice dynamic numbers of rows and columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184564,"byte_end":184634,"line_start":373,"line_end":373,"column_start":1,"column_end":71}}]},{"kind":"Type","id":{"krate":0,"index":2137},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184801,"byte_end":184816,"line_start":377,"line_end":377,"column_start":10,"column_end":25},"name":"VectorSliceMut1","qualname":"::base::alias_slice::VectorSliceMut1","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 1D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 1D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184754,"byte_end":184791,"line_start":376,"line_end":376,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2142},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184947,"byte_end":184962,"line_start":379,"line_end":379,"column_start":10,"column_end":25},"name":"VectorSliceMut2","qualname":"::base::alias_slice::VectorSliceMut2","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 2D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 2D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":184900,"byte_end":184937,"line_start":378,"line_end":378,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2147},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185093,"byte_end":185108,"line_start":381,"line_end":381,"column_start":10,"column_end":25},"name":"VectorSliceMut3","qualname":"::base::alias_slice::VectorSliceMut3","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 3D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 3D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185046,"byte_end":185083,"line_start":380,"line_end":380,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2152},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185239,"byte_end":185254,"line_start":383,"line_end":383,"column_start":10,"column_end":25},"name":"VectorSliceMut4","qualname":"::base::alias_slice::VectorSliceMut4","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 4D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 4D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185192,"byte_end":185229,"line_start":382,"line_end":382,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2157},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185385,"byte_end":185400,"line_start":385,"line_end":385,"column_start":10,"column_end":25},"name":"VectorSliceMut5","qualname":"::base::alias_slice::VectorSliceMut5","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 5D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 5D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185338,"byte_end":185375,"line_start":384,"line_end":384,"column_start":1,"column_end":38}}]},{"kind":"Type","id":{"krate":0,"index":2162},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185531,"byte_end":185546,"line_start":387,"line_end":387,"column_start":10,"column_end":25},"name":"VectorSliceMut6","qualname":"::base::alias_slice::VectorSliceMut6","value":"VectorSliceMutN","parent":null,"children":[],"decl_id":null,"docs":" A 6D mutable column vector slice.\n","sig":null,"attributes":[{"value":"/ A 6D mutable column vector slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/alias_slice.rs","byte_start":185484,"byte_end":185521,"line_start":386,"line_end":386,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186500,"byte_end":186511,"line_start":31,"line_end":31,"column_start":12,"column_end":23},"name":"new_scaling","qualname":"<MatrixN<N, D>>::new_scaling","value":"pub fn new_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies the same scaling factor on each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies the same scaling factor on each dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186382,"byte_end":186474,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186479,"byte_end":186488,"line_start":30,"line_end":30,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2264},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186793,"byte_end":186815,"line_start":40,"line_end":40,"column_start":12,"column_end":34},"name":"new_nonuniform_scaling","qualname":"<MatrixN<N, D>>::new_nonuniform_scaling","value":"pub fn new_nonuniform_scaling<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a distinct scaling factor for each dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186672,"byte_end":186767,"line_start":38,"line_end":38,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186772,"byte_end":186781,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2266},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187198,"byte_end":187213,"line_start":55,"line_end":55,"column_start":12,"column_end":27},"name":"new_translation","qualname":"<MatrixN<N, D>>::new_translation","value":"pub fn new_translation<SB>(&Vector<N, DimNameDiff<D, U1>, SB>) -> Self where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix that applies a pure translation.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix that applies a pure translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187103,"byte_end":187172,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187177,"byte_end":187186,"line_start":54,"line_end":54,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2270},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187668,"byte_end":187680,"line_start":71,"line_end":71,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix3<N>>::new_rotation","value":"pub fn new_rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.\n","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional homogeneous rotation matrix from an angle in radian.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187563,"byte_end":187642,"line_start":69,"line_end":69,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187647,"byte_end":187656,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187986,"byte_end":187998,"line_start":81,"line_end":81,"column_start":12,"column_end":24},"name":"new_rotation","qualname":"<Matrix4<N>>::new_rotation","value":"pub fn new_rotation(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187793,"byte_end":187885,"line_start":77,"line_end":77,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187890,"byte_end":187893,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187898,"byte_end":187960,"line_start":79,"line_end":79,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187965,"byte_end":187974,"line_start":80,"line_end":80,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2274},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188287,"byte_end":188309,"line_start":89,"line_end":89,"column_start":12,"column_end":34},"name":"new_rotation_wrt_point","qualname":"<Matrix4<N>>::new_rotation_wrt_point","value":"pub fn new_rotation_wrt_point(Vector3<N>, Point3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188094,"byte_end":188186,"line_start":85,"line_end":85,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188191,"byte_end":188194,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188199,"byte_end":188261,"line_start":87,"line_end":87,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188266,"byte_end":188275,"line_start":88,"line_end":88,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2275},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188734,"byte_end":188750,"line_start":99,"line_end":99,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Matrix4<N>>::from_scaled_axis","value":"pub fn from_scaled_axis(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and an angle (multiplied together).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188490,"byte_end":188582,"line_start":94,"line_end":94,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188587,"byte_end":188590,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Returns the identity matrix if the given argument is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188595,"byte_end":188657,"line_start":96,"line_end":96,"column_start":5,"column_end":67}},{"value":"/ This is identical to `Self::new_rotation`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188662,"byte_end":188708,"line_start":97,"line_end":97,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188713,"byte_end":188722,"line_start":98,"line_end":98,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2276},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189008,"byte_end":189025,"line_start":106,"line_end":106,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Matrix4<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188859,"byte_end":188904,"line_start":103,"line_end":103,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188909,"byte_end":188912,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":188917,"byte_end":188996,"line_start":105,"line_end":105,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":2277},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189236,"byte_end":189251,"line_start":111,"line_end":111,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Matrix4<N>>::from_axis_angle","value":"pub fn from_axis_angle(&Unit<Vector3<N>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.\n","sig":null,"attributes":[{"value":"/ Builds a 3D homogeneous rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189146,"byte_end":189224,"line_start":110,"line_end":110,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189467,"byte_end":189483,"line_start":117,"line_end":117,"column_start":12,"column_end":28},"name":"new_orthographic","qualname":"<Matrix4<N>>::new_orthographic","value":"pub fn new_orthographic(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for an orthographic projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for an orthographic projection.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189373,"byte_end":189441,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189446,"byte_end":189455,"line_start":116,"line_end":116,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2279},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189733,"byte_end":189748,"line_start":123,"line_end":123,"column_start":12,"column_end":27},"name":"new_perspective","qualname":"<Matrix4<N>>::new_perspective","value":"pub fn new_perspective(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new homogeneous matrix for a perspective projection.\n","sig":null,"attributes":[{"value":"/ Creates a new homogeneous matrix for a perspective projection.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189641,"byte_end":189707,"line_start":121,"line_end":121,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189712,"byte_end":189721,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2280},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190160,"byte_end":190172,"line_start":133,"line_end":133,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Matrix4<N>>::face_towards","value":"pub fn face_towards(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates an isometry that corresponds to the local frame of an observer standing at the\n point `eye` and looking toward `target`.","sig":null,"attributes":[{"value":"/ Creates an isometry that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189875,"byte_end":189965,"line_start":127,"line_end":127,"column_start":5,"column_end":95}},{"value":"/ point `eye` and looking toward `target`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":189970,"byte_end":190014,"line_start":128,"line_end":128,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190019,"byte_end":190022,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `target - eye` to the positive `z` axis and the origin to the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190027,"byte_end":190119,"line_start":130,"line_end":130,"column_start":5,"column_end":97}},{"value":"/ `eye`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190124,"byte_end":190134,"line_start":131,"line_end":131,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190139,"byte_end":190148,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2281},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190436,"byte_end":190454,"line_start":139,"line_end":139,"column_start":12,"column_end":30},"name":"new_observer_frame","qualname":"<Matrix4<N>>::new_observer_frame","value":"pub fn new_observer_frame(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Matrix4::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Matrix4::face_towards] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190320,"byte_end":190372,"line_start":137,"line_end":137,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190377,"byte_end":190424,"line_start":138,"line_end":138,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2282},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190649,"byte_end":190659,"line_start":145,"line_end":145,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Matrix4<N>>::look_at_rh","value":"pub fn look_at_rh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190577,"byte_end":190623,"line_start":143,"line_end":143,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190628,"byte_end":190637,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2283},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190876,"byte_end":190886,"line_start":151,"line_end":151,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Matrix4<N>>::look_at_lh","value":"pub fn look_at_lh(&Point3<N>, &Point3<N>, &Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix.\n","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190805,"byte_end":190850,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":190855,"byte_end":190864,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2288},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191226,"byte_end":191240,"line_start":159,"line_end":159,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<SquareMatrix<N, D, S>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191114,"byte_end":191200,"line_start":157,"line_end":157,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191205,"byte_end":191214,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2289},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191584,"byte_end":191599,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> MatrixN<N, D> where D: DimNameSub<U1>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191472,"byte_end":191558,"line_start":169,"line_end":169,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191563,"byte_end":191572,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2290},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191947,"byte_end":191972,"line_start":183,"line_end":183,"column_start":12,"column_end":37},"name":"append_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling","value":"pub fn append_nonuniform_scaling<SB>(&Self,\n                                     &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191832,"byte_end":191921,"line_start":181,"line_end":181,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191926,"byte_end":191935,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2292},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192434,"byte_end":192460,"line_start":199,"line_end":199,"column_start":12,"column_end":38},"name":"prepend_nonuniform_scaling","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling","value":"pub fn prepend_nonuniform_scaling<SB>(&Self,\n                                      &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192319,"byte_end":192408,"line_start":197,"line_end":197,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192413,"byte_end":192422,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2294},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192908,"byte_end":192926,"line_start":215,"line_end":215,"column_start":12,"column_end":30},"name":"append_translation","qualname":"<SquareMatrix<N, D, S>>::append_translation","value":"pub fn append_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192808,"byte_end":192882,"line_start":213,"line_end":213,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":192887,"byte_end":192896,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2296},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193339,"byte_end":193358,"line_start":228,"line_end":228,"column_start":12,"column_end":31},"name":"prepend_translation","qualname":"<SquareMatrix<N, D, S>>::prepend_translation","value":"pub fn prepend_translation<SB>(&Self, &Vector<N, DimNameDiff<D, U1>, SB>)\n-> MatrixN<N, D> where D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, D, D> + Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193239,"byte_end":193313,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193318,"byte_end":193327,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2302},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193936,"byte_end":193954,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N) where D: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by an uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by an uniform scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193815,"byte_end":193910,"line_start":244,"line_end":244,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193915,"byte_end":193924,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2303},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194242,"byte_end":194261,"line_start":254,"line_end":254,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N) where D: DimNameSub<U1>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to an uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to an uniform scaling factor followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194121,"byte_end":194216,"line_start":252,"line_end":252,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194221,"byte_end":194230,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2304},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194555,"byte_end":194584,"line_start":262,"line_end":262,"column_start":12,"column_end":41},"name":"append_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::append_nonuniform_scaling_mut","value":"pub fn append_nonuniform_scaling_mut<SB>(&mut Self,\n                                         &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to `self` followed by a non-uniform scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194431,"byte_end":194529,"line_start":260,"line_end":260,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194534,"byte_end":194543,"line_start":261,"line_end":261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2306},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195010,"byte_end":195040,"line_start":275,"line_end":275,"column_start":12,"column_end":42},"name":"prepend_nonuniform_scaling_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_nonuniform_scaling_mut","value":"pub fn prepend_nonuniform_scaling_mut<SB>(&mut Self,\n                                          &Vector<N, DimNameDiff<D, U1>, SB>)\nwhere D: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes in-place the transformation equal to a non-uniform scaling factor followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194886,"byte_end":194984,"line_start":273,"line_end":273,"column_start":5,"column_end":103}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":194989,"byte_end":194998,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2308},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195464,"byte_end":195486,"line_start":290,"line_end":290,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<SquareMatrix<N, D, S>>::append_translation_mut","value":"pub fn append_translation_mut<SB>(&mut Self,\n                                  &Vector<N, DimNameDiff<D, U1>, SB>) where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to `self` followed by a translation.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to `self` followed by a translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195364,"byte_end":195438,"line_start":288,"line_end":288,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195443,"byte_end":195452,"line_start":289,"line_end":289,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2310},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195936,"byte_end":195959,"line_start":305,"line_end":305,"column_start":12,"column_end":35},"name":"prepend_translation_mut","qualname":"<SquareMatrix<N, D, S>>::prepend_translation_mut","value":"pub fn prepend_translation_mut<SB>(&mut Self,\n                                   &Vector<N, DimNameDiff<D, U1>, SB>) where\nD: DimNameSub<U1>, SB: Storage<N, DimNameDiff<D, U1>>,\nDefaultAllocator: Allocator<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the transformation equal to a translation followed by `self`.\n","sig":null,"attributes":[{"value":"/ Computes the transformation equal to a translation followed by `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195836,"byte_end":195910,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":195915,"byte_end":195924,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2316},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":196955,"byte_end":196971,"line_start":331,"line_end":331,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<SquareMatrix<N, D, S>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, DimNameDiff<D, U1>>)\n-> VectorN<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given vector, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":196840,"byte_end":196929,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":196934,"byte_end":196943,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2317},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":197518,"byte_end":197533,"line_start":349,"line_end":349,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<SquareMatrix<N, D, S>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, DimNameDiff<D, U1>>)\n-> Point<N, DimNameDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.\n","sig":null,"attributes":[{"value":"/ Transforms the given point, assuming the matrix `self` uses homogeneous coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":197404,"byte_end":197492,"line_start":347,"line_end":347,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":197497,"byte_end":197506,"line_start":348,"line_end":348,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199741,"byte_end":199744,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"abs","qualname":"<Matrix<N, R, C, S>>::abs","value":"pub fn abs(&Self) -> MatrixMN<N, R, C> where N: Signed,\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the component-wise absolute value.","sig":null,"attributes":[{"value":"/ Computes the component-wise absolute value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199434,"byte_end":199481,"line_start":18,"line_end":18,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199486,"byte_end":199489,"line_start":19,"line_end":19,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199494,"byte_end":199507,"line_start":20,"line_end":20,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199512,"byte_end":199515,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199520,"byte_end":199527,"line_start":22,"line_end":22,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199532,"byte_end":199560,"line_start":23,"line_end":23,"column_start":5,"column_end":33}},{"value":"/ let a = Matrix2::new(0.0, 1.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199565,"byte_end":199599,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/                      -2.0, -3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199604,"byte_end":199641,"line_start":25,"line_end":25,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(a.abs(), Matrix2::new(0.0, 1.0, 2.0, 3.0))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199646,"byte_end":199703,"line_start":26,"line_end":26,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199708,"byte_end":199715,"line_start":27,"line_end":27,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199720,"byte_end":199729,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":17282},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204636,"byte_end":204649,"line_start":146,"line_end":146,"column_start":5,"column_end":18},"name":"component_mul","qualname":"<Matrix<N, R1, C1, SA>>::component_mul","value":"pub fn component_mul<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedMul, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":200415,"byte_end":200424,"line_start":50,"line_end":50,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17291},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204692,"byte_end":204696,"line_start":146,"line_end":146,"column_start":61,"column_end":65},"name":"cmpy","qualname":"<Matrix<N, R1, C1, SA>>::cmpy","value":"pub fn cmpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedMul + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2> + SameNumberOfRows<R1, R3> +\nSameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"    Computes componentwise `self[i] = alpha * a[i] * b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":201516,"byte_end":201525,"line_start":76,"line_end":76,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17298},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204670,"byte_end":204690,"line_start":146,"line_end":146,"column_start":39,"column_end":59},"name":"component_mul_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_assign","value":"pub fn component_mul_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedMul, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":203300,"byte_end":203309,"line_start":111,"line_end":111,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17302},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204651,"byte_end":204668,"line_start":146,"line_end":146,"column_start":20,"column_end":37},"name":"component_mul_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_mul_mut","value":"pub fn component_mul_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedMul, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector multiplication.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204095,"byte_end":204104,"line_start":131,"line_end":131,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204117,"byte_end":204213,"line_start":132,"line_end":132,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":17311},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":205809,"byte_end":205822,"line_start":191,"line_end":191,"column_start":5,"column_end":18},"name":"component_div","qualname":"<Matrix<N, R1, C1, SA>>::component_div","value":"pub fn component_div<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixComponentOp<N, R1, C1, R2, C2> where N: ClosedDiv, R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>,\nDefaultAllocator: SameShapeAllocator<N, R1, C1, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":200415,"byte_end":200424,"line_start":50,"line_end":50,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17320},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":205865,"byte_end":205869,"line_start":191,"line_end":191,"column_start":61,"column_end":65},"name":"cdpy","qualname":"<Matrix<N, R1, C1, SA>>::cdpy","value":"pub fn cdpy<R2, C2, SB, R3, C3,\n            SC>(&mut Self, N, &Matrix<N, R2, C2, SB>, &Matrix<N, R3, C3, SC>,\n                N) where N: ClosedDiv + Zero + Mul<N, Output = N> + Add<N,\nOutput = N>, R2: Dim, C2: Dim, R3: Dim, C3: Dim, SB: Storage<N, R2, C2>,\nSC: Storage<N, R3, C3>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2> + SameNumberOfRows<R1, R3> +\nSameNumberOfColumns<C1, C3>","parent":null,"children":[],"decl_id":null,"docs":"    Computes componentwise `self[i] = alpha * a[i] / b[i] + beta * self[i]`.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":201516,"byte_end":201525,"line_start":76,"line_end":76,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17327},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":205843,"byte_end":205863,"line_start":191,"line_end":191,"column_start":39,"column_end":59},"name":"component_div_assign","qualname":"<Matrix<N, R1, C1, SA>>::component_div_assign","value":"pub fn component_div_assign<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>)\nwhere N: ClosedDiv, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":203300,"byte_end":203309,"line_start":111,"line_end":111,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":17331},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":205824,"byte_end":205841,"line_start":191,"line_end":191,"column_start":20,"column_end":37},"name":"component_div_mut","qualname":"<Matrix<N, R1, C1, SA>>::component_div_mut","value":"pub fn component_div_mut<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nN: ClosedDiv, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R1, R2> + SameNumberOfColumns<C1, C2>","parent":null,"children":[],"decl_id":null,"docs":"    Inplace componentwise matrix or vector division.","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204095,"byte_end":204104,"line_start":131,"line_end":131,"column_start":13,"column_end":22}},{"value":"deprecated(note =\n             \"This is renamed using the `_assign` suffix instead of the `_mut` suffix.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":204117,"byte_end":204213,"line_start":132,"line_end":132,"column_start":13,"column_end":109}}]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208099,"byte_end":208124,"line_start":36,"line_end":36,"column_start":19,"column_end":44},"name":"new_uninitialized_generic","qualname":"<MatrixMN<N, R, C>>::new_uninitialized_generic","value":"pub unsafe fn new_uninitialized_generic(R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics\n if `nrows != R::to_usize()` or `ncols != C::to_usize()`.\n","sig":null,"attributes":[{"value":"/ Creates a new uninitialized matrix. If the matrix has a compile-time dimension, this panics","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":207906,"byte_end":208001,"line_start":33,"line_end":33,"column_start":5,"column_end":100}},{"value":"/ if `nrows != R::to_usize()` or `ncols != C::to_usize()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208006,"byte_end":208066,"line_start":34,"line_end":34,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208071,"byte_end":208080,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208329,"byte_end":208349,"line_start":42,"line_end":42,"column_start":12,"column_end":32},"name":"from_element_generic","qualname":"<MatrixMN<N, R, C>>::from_element_generic","value":"pub fn from_element_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208246,"byte_end":208303,"line_start":40,"line_end":40,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208308,"byte_end":208317,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2516},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208660,"byte_end":208674,"line_start":51,"line_end":51,"column_start":12,"column_end":26},"name":"repeat_generic","qualname":"<MatrixMN<N, R, C>>::repeat_generic","value":"pub fn repeat_generic(R, C, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to `elem`.","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to `elem`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208529,"byte_end":208586,"line_start":47,"line_end":47,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208591,"byte_end":208594,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Same as `from_element_generic`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208599,"byte_end":208634,"line_start":49,"line_end":49,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208639,"byte_end":208648,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208932,"byte_end":208945,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"zeros_generic","qualname":"<MatrixMN<N, R, C>>::zeros_generic","value":"pub fn zeros_generic(R, C) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements set to 0.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements set to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208854,"byte_end":208906,"line_start":56,"line_end":56,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":208911,"byte_end":208920,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209156,"byte_end":209177,"line_start":65,"line_end":65,"column_start":12,"column_end":33},"name":"from_iterator_generic","qualname":"<MatrixMN<N, R, C>>::from_iterator_generic","value":"pub fn from_iterator_generic<I>(R, C, I) -> Self where I: IntoIterator<Item =\nN>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with all its elements filled by an iterator.\n","sig":null,"attributes":[{"value":"/ Creates a matrix with all its elements filled by an iterator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209065,"byte_end":209130,"line_start":63,"line_end":63,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209135,"byte_end":209144,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209611,"byte_end":209633,"line_start":76,"line_end":76,"column_start":12,"column_end":34},"name":"from_row_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_row_slice_generic","value":"pub fn from_row_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice in\n row-major order.","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice in","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209353,"byte_end":209441,"line_start":70,"line_end":70,"column_start":5,"column_end":93}},{"value":"/ row-major order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209446,"byte_end":209466,"line_start":71,"line_end":71,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209471,"byte_end":209474,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ The order of elements in the slice must follow the usual mathematic writing, i.e.,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209479,"byte_end":209565,"line_start":73,"line_end":73,"column_start":5,"column_end":91}},{"value":"/ row-by-row.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209570,"byte_end":209585,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":209590,"byte_end":209599,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2521},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210387,"byte_end":210412,"line_start":97,"line_end":97,"column_start":12,"column_end":37},"name":"from_column_slice_generic","qualname":"<MatrixMN<N, R, C>>::from_column_slice_generic","value":"pub fn from_column_slice_generic(R, C, &[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix with its elements filled with the components provided by a slice. The\n components must have the same layout as the matrix data storage (i.e. column-major).\n","sig":null,"attributes":[{"value":"/ Creates a matrix with its elements filled with the components provided by a slice. The","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210178,"byte_end":210268,"line_start":94,"line_end":94,"column_start":5,"column_end":95}},{"value":"/ components must have the same layout as the matrix data storage (i.e. column-major).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210273,"byte_end":210361,"line_start":95,"line_end":95,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210366,"byte_end":210375,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2522},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210678,"byte_end":210693,"line_start":104,"line_end":104,"column_start":12,"column_end":27},"name":"from_fn_generic","qualname":"<MatrixMN<N, R, C>>::from_fn_generic","value":"pub fn from_fn_generic<F>(R, C, F) -> Self where F: FnMut(usize, usize) -> N","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with the results of a function applied to each of its component\n coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with the results of a function applied to each of its component","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210540,"byte_end":210631,"line_start":101,"line_end":101,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210636,"byte_end":210652,"line_start":102,"line_end":102,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":210657,"byte_end":210666,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2524},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211283,"byte_end":211299,"line_start":122,"line_end":122,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<MatrixMN<N, R, C>>::identity_generic","value":"pub fn identity_generic(R, C) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity matrix.","sig":null,"attributes":[{"value":"/ Creates a new identity matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211048,"byte_end":211082,"line_start":117,"line_end":117,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211087,"byte_end":211090,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211095,"byte_end":211190,"line_start":119,"line_end":119,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211195,"byte_end":211257,"line_start":120,"line_end":120,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211262,"byte_end":211271,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2525},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211705,"byte_end":211734,"line_start":132,"line_end":132,"column_start":12,"column_end":41},"name":"from_diagonal_element_generic","qualname":"<MatrixMN<N, R, C>>::from_diagonal_element_generic","value":"pub fn from_diagonal_element_generic(R, C, N) -> Self where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with its diagonal filled with copies of `elt`.","sig":null,"attributes":[{"value":"/ Creates a new matrix with its diagonal filled with copies of `elt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211433,"byte_end":211504,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211509,"byte_end":211512,"line_start":128,"line_end":128,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not square, the largest square submatrix starting at index `(0, 0)` is set","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211517,"byte_end":211612,"line_start":129,"line_end":129,"column_start":5,"column_end":100}},{"value":"/ to the identity matrix. All other entries are set to zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211617,"byte_end":211679,"line_start":130,"line_end":130,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":211684,"byte_end":211693,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2526},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212289,"byte_end":212318,"line_start":148,"line_end":148,"column_start":12,"column_end":41},"name":"from_partial_diagonal_generic","qualname":"<MatrixMN<N, R, C>>::from_partial_diagonal_generic","value":"pub fn from_partial_diagonal_generic(R, C, &[N]) -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are\n filled with the content of `elts`. Others are set to 0.","sig":null,"attributes":[{"value":"/ Creates a new matrix that may be rectangular. The first `elts.len()` diagonal elements are","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212012,"byte_end":212106,"line_start":143,"line_end":143,"column_start":5,"column_end":99}},{"value":"/ filled with the content of `elts`. Others are set to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212111,"byte_end":212170,"line_start":144,"line_end":144,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212175,"byte_end":212178,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ Panics if `elts.len()` is larger than the minimum among `nrows` and `ncols`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212183,"byte_end":212263,"line_start":146,"line_end":146,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212268,"byte_end":212277,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2527},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213405,"byte_end":213414,"line_start":180,"line_end":180,"column_start":12,"column_end":21},"name":"from_rows","qualname":"<MatrixMN<N, R, C>>::from_rows","value":"pub fn from_rows<SB>(&[Matrix<N, U1, C, SB>]) -> Self where\nSB: Storage<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its rows.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212729,"byte_end":212767,"line_start":163,"line_end":163,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212772,"byte_end":212775,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough rows are provided (for statically-sized matrices), or if all rows do","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212780,"byte_end":212873,"line_start":165,"line_end":165,"column_start":5,"column_end":98}},{"value":"/ not have the same dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212878,"byte_end":212911,"line_start":166,"line_end":166,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212916,"byte_end":212919,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212924,"byte_end":212937,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212942,"byte_end":212949,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{RowVector3, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":212954,"byte_end":212996,"line_start":170,"line_end":170,"column_start":5,"column_end":47}},{"value":"/ # use std::iter;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213001,"byte_end":213021,"line_start":171,"line_end":171,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213026,"byte_end":213029,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_rows(&[ RowVector3::new(1.0, 2.0, 3.0),  RowVector3::new(4.0, 5.0, 6.0),  RowVector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213034,"byte_end":213168,"line_start":173,"line_end":173,"column_start":5,"column_end":139}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213173,"byte_end":213176,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 2.0 && m.m13 == 3.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213181,"byte_end":213240,"line_start":175,"line_end":175,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 4.0 && m.m22 == 5.0 && m.m23 == 6.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213245,"byte_end":213304,"line_start":176,"line_end":176,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 7.0 && m.m32 == 8.0 && m.m33 == 9.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213309,"byte_end":213367,"line_start":177,"line_end":177,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213372,"byte_end":213379,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":213384,"byte_end":213393,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2530},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214841,"byte_end":214853,"line_start":220,"line_end":220,"column_start":12,"column_end":24},"name":"from_columns","qualname":"<MatrixMN<N, R, C>>::from_columns","value":"pub fn from_columns<SB>(&[Vector<N, R, SB>]) -> Self where SB: Storage<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new matrix from its columns.","sig":null,"attributes":[{"value":"/ Builds a new matrix from its columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214165,"byte_end":214206,"line_start":203,"line_end":203,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214211,"byte_end":214214,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Panics if not enough columns are provided (for statically-sized matrices), or if all","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214219,"byte_end":214307,"line_start":205,"line_end":205,"column_start":5,"column_end":93}},{"value":"/ columns do not have the same dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214312,"byte_end":214356,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214361,"byte_end":214364,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214369,"byte_end":214382,"line_start":208,"line_end":208,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214387,"byte_end":214394,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214399,"byte_end":214438,"line_start":210,"line_end":210,"column_start":5,"column_end":44}},{"value":"/ # use std::iter;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214443,"byte_end":214463,"line_start":211,"line_end":211,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214468,"byte_end":214471,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_columns(&[ Vector3::new(1.0, 2.0, 3.0),  Vector3::new(4.0, 5.0, 6.0),  Vector3::new(7.0, 8.0, 9.0) ]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214476,"byte_end":214604,"line_start":213,"line_end":213,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214609,"byte_end":214612,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 4.0 && m.m13 == 7.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214617,"byte_end":214676,"line_start":215,"line_end":215,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 2.0 && m.m22 == 5.0 && m.m23 == 8.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214681,"byte_end":214740,"line_start":216,"line_end":216,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 3.0 && m.m32 == 6.0 && m.m33 == 9.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214745,"byte_end":214803,"line_start":217,"line_end":217,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214808,"byte_end":214815,"line_start":218,"line_end":218,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":214820,"byte_end":214829,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2533},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215722,"byte_end":215740,"line_start":246,"line_end":246,"column_start":12,"column_end":30},"name":"new_random_generic","qualname":"<MatrixMN<N, R, C>>::new_random_generic","value":"pub fn new_random_generic(R, C) -> Self where Standard: Distribution<N>","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215621,"byte_end":215668,"line_start":243,"line_end":243,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215673,"byte_end":215682,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215687,"byte_end":215710,"line_start":245,"line_end":245,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2535},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215986,"byte_end":216011,"line_start":253,"line_end":253,"column_start":12,"column_end":37},"name":"from_distribution_generic","qualname":"<MatrixMN<N, R, C>>::from_distribution_generic","value":"pub fn from_distribution_generic<Distr: Distribution<N> + ?Sized, G: Rng +\n                                 ?Sized>(R, C, &Distr, &mut G) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix filled with random values from the given distribution.\n","sig":null,"attributes":[{"value":"/ Creates a matrix filled with random values from the given distribution.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215885,"byte_end":215960,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":215965,"byte_end":215974,"line_start":252,"line_end":252,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2539},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216905,"byte_end":216921,"line_start":282,"line_end":282,"column_start":12,"column_end":28},"name":"from_vec_generic","qualname":"<MatrixMN<N, R, C>>::from_vec_generic","value":"pub fn from_vec_generic(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix backed by a given `Vec`.","sig":null,"attributes":[{"value":"/ Creates a matrix backed by a given `Vec`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216258,"byte_end":216303,"line_start":263,"line_end":263,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216308,"byte_end":216311,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ The output matrix is filled column-by-column.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216316,"byte_end":216365,"line_start":265,"line_end":265,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216370,"byte_end":216373,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216378,"byte_end":216391,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216396,"byte_end":216403,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Dynamic, DMatrix, Matrix, U1};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216408,"byte_end":216459,"line_start":269,"line_end":269,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216464,"byte_end":216467,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ let vec = vec![0, 1, 2, 3, 4, 5];","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216472,"byte_end":216509,"line_start":271,"line_end":271,"column_start":5,"column_end":42}},{"value":"/ let vec_ptr = vec.as_ptr();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216514,"byte_end":216545,"line_start":272,"line_end":272,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216550,"byte_end":216553,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let matrix = Matrix::from_vec_generic(Dynamic::new(vec.len()), U1, vec);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216558,"byte_end":216634,"line_start":274,"line_end":274,"column_start":5,"column_end":81}},{"value":"/ let matrix_storage_ptr = matrix.data.as_vec().as_ptr();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216639,"byte_end":216698,"line_start":275,"line_end":275,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216703,"byte_end":216706,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ // `matrix` is backed by exactly the same `Vec` as it was constructed from.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216711,"byte_end":216790,"line_start":277,"line_end":277,"column_start":5,"column_end":84}},{"value":"/ assert_eq!(matrix_storage_ptr, vec_ptr);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216795,"byte_end":216839,"line_start":278,"line_end":278,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216844,"byte_end":216851,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216856,"byte_end":216865,"line_start":280,"line_end":280,"column_start":5,"column_end":14}},{"value":"cfg(feature = \"std\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":216870,"byte_end":216893,"line_start":281,"line_end":281,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":218055,"byte_end":218068,"line_start":311,"line_end":311,"column_start":12,"column_end":25},"name":"from_diagonal","qualname":"<MatrixN<N, D>>::from_diagonal","value":"pub fn from_diagonal<SB: Storage<N, D>>(&Vector<N, D, SB>) -> Self where\nN: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","sig":null,"attributes":[{"value":"/ Creates a square matrix with its diagonal set to `diag` and all other entries set to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217130,"byte_end":217221,"line_start":292,"line_end":292,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217226,"byte_end":217229,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217234,"byte_end":217247,"line_start":294,"line_end":294,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217252,"byte_end":217259,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, DVector, Matrix3, DMatrix};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217264,"byte_end":217321,"line_start":296,"line_end":296,"column_start":5,"column_end":62}},{"value":"/ # use std::iter;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217326,"byte_end":217346,"line_start":297,"line_end":297,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217351,"byte_end":217354,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::from_diagonal(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217359,"byte_end":217424,"line_start":299,"line_end":299,"column_start":5,"column_end":70}},{"value":"/ // The two additional arguments represent the matrix dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217429,"byte_end":217497,"line_start":300,"line_end":300,"column_start":5,"column_end":73}},{"value":"/ let dm = DMatrix::from_diagonal(&DVector::from_row_slice(&[1.0, 2.0, 3.0]));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217502,"byte_end":217582,"line_start":301,"line_end":301,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217587,"byte_end":217590,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ assert!(m.m11 == 1.0 && m.m12 == 0.0 && m.m13 == 0.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217595,"byte_end":217654,"line_start":303,"line_end":303,"column_start":5,"column_end":64}},{"value":"/         m.m21 == 0.0 && m.m22 == 2.0 && m.m23 == 0.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217659,"byte_end":217718,"line_start":304,"line_end":304,"column_start":5,"column_end":64}},{"value":"/         m.m31 == 0.0 && m.m32 == 0.0 && m.m33 == 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217723,"byte_end":217781,"line_start":305,"line_end":305,"column_start":5,"column_end":63}},{"value":"/ assert!(dm[(0, 0)] == 1.0 && dm[(0, 1)] == 0.0 && dm[(0, 2)] == 0.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217786,"byte_end":217860,"line_start":306,"line_end":306,"column_start":5,"column_end":79}},{"value":"/         dm[(1, 0)] == 0.0 && dm[(1, 1)] == 2.0 && dm[(1, 2)] == 0.0 &&","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217865,"byte_end":217939,"line_start":307,"line_end":307,"column_start":5,"column_end":79}},{"value":"/         dm[(2, 0)] == 0.0 && dm[(2, 1)] == 0.0 && dm[(2, 2)] == 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217944,"byte_end":218017,"line_start":308,"line_end":308,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":218022,"byte_end":218029,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":218034,"byte_end":218043,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246415,"byte_end":246416,"line_start":998,"line_end":998,"column_start":12,"column_end":13},"name":"x","qualname":"<VectorN<N, R>>::x","value":"pub fn x() -> Self where R::Value: Cmp<typenum::U0, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246315,"byte_end":246389,"line_start":996,"line_end":996,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246394,"byte_end":246403,"line_start":997,"line_end":997,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246724,"byte_end":246725,"line_start":1010,"line_end":1010,"column_start":12,"column_end":13},"name":"y","qualname":"<VectorN<N, R>>::y","value":"pub fn y() -> Self where R::Value: Cmp<typenum::U1, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246623,"byte_end":246698,"line_start":1008,"line_end":1008,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246703,"byte_end":246712,"line_start":1009,"line_end":1009,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247032,"byte_end":247033,"line_start":1022,"line_end":1022,"column_start":12,"column_end":13},"name":"z","qualname":"<VectorN<N, R>>::z","value":"pub fn z() -> Self where R::Value: Cmp<typenum::U2, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246932,"byte_end":247006,"line_start":1020,"line_end":1020,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247011,"byte_end":247020,"line_start":1021,"line_end":1021,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247341,"byte_end":247342,"line_start":1034,"line_end":1034,"column_start":12,"column_end":13},"name":"w","qualname":"<VectorN<N, R>>::w","value":"pub fn w() -> Self where R::Value: Cmp<typenum::U3, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247240,"byte_end":247315,"line_start":1032,"line_end":1032,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247320,"byte_end":247329,"line_start":1033,"line_end":1033,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247649,"byte_end":247650,"line_start":1046,"line_end":1046,"column_start":12,"column_end":13},"name":"a","qualname":"<VectorN<N, R>>::a","value":"pub fn a() -> Self where R::Value: Cmp<typenum::U4, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247549,"byte_end":247623,"line_start":1044,"line_end":1044,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247628,"byte_end":247637,"line_start":1045,"line_end":1045,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247957,"byte_end":247958,"line_start":1058,"line_end":1058,"column_start":12,"column_end":13},"name":"b","qualname":"<VectorN<N, R>>::b","value":"pub fn b() -> Self where R::Value: Cmp<typenum::U5, Output = Greater>","parent":null,"children":[],"decl_id":null,"docs":" The column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247857,"byte_end":247931,"line_start":1056,"line_end":1056,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":247936,"byte_end":247945,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248270,"byte_end":248276,"line_start":1070,"line_end":1070,"column_start":12,"column_end":18},"name":"x_axis","qualname":"<VectorN<N, R>>::x_axis","value":"pub fn x_axis() -> Unit<Self> where R::Value: Cmp<typenum::U0, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its first component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its first component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248165,"byte_end":248244,"line_start":1068,"line_end":1068,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248249,"byte_end":248258,"line_start":1069,"line_end":1069,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248506,"byte_end":248512,"line_start":1077,"line_end":1077,"column_start":12,"column_end":18},"name":"y_axis","qualname":"<VectorN<N, R>>::y_axis","value":"pub fn y_axis() -> Unit<Self> where R::Value: Cmp<typenum::U1, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its second component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its second component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248400,"byte_end":248480,"line_start":1075,"line_end":1075,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248485,"byte_end":248494,"line_start":1076,"line_end":1076,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2590},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248741,"byte_end":248747,"line_start":1084,"line_end":1084,"column_start":12,"column_end":18},"name":"z_axis","qualname":"<VectorN<N, R>>::z_axis","value":"pub fn z_axis() -> Unit<Self> where R::Value: Cmp<typenum::U2, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its third component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its third component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248636,"byte_end":248715,"line_start":1082,"line_end":1082,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248720,"byte_end":248729,"line_start":1083,"line_end":1083,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248977,"byte_end":248983,"line_start":1091,"line_end":1091,"column_start":12,"column_end":18},"name":"w_axis","qualname":"<VectorN<N, R>>::w_axis","value":"pub fn w_axis() -> Unit<Self> where R::Value: Cmp<typenum::U3, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fourth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fourth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248871,"byte_end":248951,"line_start":1089,"line_end":1089,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":248956,"byte_end":248965,"line_start":1090,"line_end":1090,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2592},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249212,"byte_end":249218,"line_start":1098,"line_end":1098,"column_start":12,"column_end":18},"name":"a_axis","qualname":"<VectorN<N, R>>::a_axis","value":"pub fn a_axis() -> Unit<Self> where R::Value: Cmp<typenum::U4, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its fifth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its fifth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249107,"byte_end":249186,"line_start":1096,"line_end":1096,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249191,"byte_end":249200,"line_start":1097,"line_end":1097,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249447,"byte_end":249453,"line_start":1105,"line_end":1105,"column_start":12,"column_end":18},"name":"b_axis","qualname":"<VectorN<N, R>>::b_axis","value":"pub fn b_axis() -> Unit<Self> where R::Value: Cmp<typenum::U5, Output =\nGreater>","parent":null,"children":[],"decl_id":null,"docs":" The unit column vector with a 1 as its sixth component, and zero elsewhere.\n","sig":null,"attributes":[{"value":"/ The unit column vector with a 1 as its sixth component, and zero elsewhere.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249342,"byte_end":249421,"line_start":1103,"line_end":1103,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":249426,"byte_end":249435,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2635},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250349,"byte_end":250390,"line_start":19,"line_end":19,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a [N], usize, R, C,\n                                                        RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":249937,"byte_end":250072,"line_start":14,"line_end":14,"column_start":5,"column_end":140}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250077,"byte_end":250080,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250085,"byte_end":250182,"line_start":16,"line_end":16,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250187,"byte_end":250316,"line_start":17,"line_end":17,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250321,"byte_end":250330,"line_start":18,"line_end":18,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2636},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":251107,"byte_end":251138,"line_start":41,"line_end":41,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250756,"byte_end":250866,"line_start":36,"line_end":36,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250871,"byte_end":250874,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250879,"byte_end":250947,"line_start":38,"line_end":38,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":250952,"byte_end":251081,"line_start":39,"line_end":39,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":251086,"byte_end":251095,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2644},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252385,"byte_end":252426,"line_start":72,"line_end":72,"column_start":19,"column_end":60},"name":"from_slice_with_strides_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic_unchecked","value":"pub unsafe fn from_slice_with_strides_generic_unchecked(&'a mut [N], usize, R,\n                                                        C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":251965,"byte_end":252108,"line_start":67,"line_end":67,"column_start":5,"column_end":148}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252113,"byte_end":252116,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252121,"byte_end":252218,"line_start":69,"line_end":69,"column_start":5,"column_end":102}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252223,"byte_end":252352,"line_start":70,"line_end":70,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252357,"byte_end":252366,"line_start":71,"line_end":71,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2645},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":253162,"byte_end":253193,"line_start":94,"line_end":94,"column_start":12,"column_end":43},"name":"from_slice_with_strides_generic","qualname":"<MatrixSliceMutMN>::from_slice_with_strides_generic","value":"pub fn from_slice_with_strides_generic(&'a mut [N], R, C, RStride, CStride)\n-> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252803,"byte_end":252921,"line_start":89,"line_end":89,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252926,"byte_end":252929,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":252934,"byte_end":253002,"line_start":91,"line_end":91,"column_start":5,"column_end":73}},{"value":"/ The generic types `R`, `C`, `RStride`, `CStride` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":253007,"byte_end":253136,"line_start":92,"line_end":92,"column_start":5,"column_end":134}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":253141,"byte_end":253150,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2651},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255284,"byte_end":255312,"line_start":142,"line_end":142,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":254903,"byte_end":255026,"line_start":137,"line_end":137,"column_start":5,"column_end":128}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255031,"byte_end":255034,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255039,"byte_end":255136,"line_start":139,"line_end":139,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255141,"byte_end":255251,"line_start":140,"line_end":140,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255256,"byte_end":255265,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2652},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255852,"byte_end":255870,"line_start":157,"line_end":157,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255520,"byte_end":255630,"line_start":152,"line_end":152,"column_start":5,"column_end":115}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255635,"byte_end":255638,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255643,"byte_end":255711,"line_start":154,"line_end":154,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255716,"byte_end":255826,"line_start":155,"line_end":155,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":255831,"byte_end":255840,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2658},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256463,"byte_end":256491,"line_start":168,"line_end":168,"column_start":19,"column_end":47},"name":"from_slice_generic_unchecked","qualname":"<MatrixSliceMutMN>::from_slice_generic_unchecked","value":"pub unsafe fn from_slice_generic_unchecked(&'a mut [N], usize, R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates, without bound-checking, a mutable matrix slice from an array and with dimensions specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256074,"byte_end":256205,"line_start":163,"line_end":163,"column_start":5,"column_end":136}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256210,"byte_end":256213,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This method is unsafe because the input data array is not checked to contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256218,"byte_end":256315,"line_start":165,"line_end":165,"column_start":5,"column_end":102}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256320,"byte_end":256430,"line_start":166,"line_end":166,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256435,"byte_end":256444,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2659},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":257043,"byte_end":257061,"line_start":183,"line_end":183,"column_start":12,"column_end":30},"name":"from_slice_generic","qualname":"<MatrixSliceMutMN>::from_slice_generic","value":"pub fn from_slice_generic(&'a mut [N], R, C) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","sig":null,"attributes":[{"value":"/ Creates a mutable matrix slice from an array and with dimensions and strides specified by generic types instances.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256703,"byte_end":256821,"line_start":178,"line_end":178,"column_start":5,"column_end":123}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256826,"byte_end":256829,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Panics if the input data array dose not contain enough elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256834,"byte_end":256902,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/ The generic types `R` and `C` can either be type-level integers or integers wrapped with `Dynamic::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256907,"byte_end":257017,"line_start":181,"line_end":181,"column_start":5,"column_end":115}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":257022,"byte_end":257031,"line_start":182,"line_end":182,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2998},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277727,"byte_end":277741,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"upper_triangle","qualname":"<Matrix<N, R, C, S>>::upper_triangle","value":"pub fn upper_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the upper triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the upper triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277622,"byte_end":277701,"line_start":22,"line_end":22,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277706,"byte_end":277715,"line_start":23,"line_end":23,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2999},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":278037,"byte_end":278051,"line_start":34,"line_end":34,"column_start":12,"column_end":26},"name":"lower_triangle","qualname":"<Matrix<N, R, C, S>>::lower_triangle","value":"pub fn lower_triangle(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Extracts the lower triangular part of this matrix (including the diagonal).\n","sig":null,"attributes":[{"value":"/ Extracts the lower triangular part of this matrix (including the diagonal).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277932,"byte_end":278011,"line_start":32,"line_end":32,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":278016,"byte_end":278025,"line_start":33,"line_end":33,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3000},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":278379,"byte_end":278390,"line_start":44,"line_end":44,"column_start":12,"column_end":23},"name":"select_rows","qualname":"<Matrix<N, R, C, S>>::select_rows","value":"pub fn select_rows<'a, I>(&Self, I) -> MatrixMN<N, Dynamic, C> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator + Clone,\nDefaultAllocator: Allocator<N, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of rows from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of rows from `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":278242,"byte_end":278315,"line_start":42,"line_end":42,"column_start":5,"column_end":78}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":278320,"byte_end":278367,"line_start":43,"line_end":43,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3003},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":279573,"byte_end":279587,"line_start":76,"line_end":76,"column_start":12,"column_end":26},"name":"select_columns","qualname":"<Matrix<N, R, C, S>>::select_columns","value":"pub fn select_columns<'a, I>(&Self, I) -> MatrixMN<N, R, Dynamic> where\nI: IntoIterator<Item = &'a usize>, I::IntoIter: ExactSizeIterator,\nDefaultAllocator: Allocator<N, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix by extracting the given set of columns from `self`.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix by extracting the given set of columns from `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":279433,"byte_end":279509,"line_start":74,"line_end":74,"column_start":5,"column_end":81}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":279514,"byte_end":279561,"line_start":75,"line_end":75,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3011},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280306,"byte_end":280310,"line_start":98,"line_end":98,"column_start":12,"column_end":16},"name":"fill","qualname":"<Matrix<N, R, C, S>>::fill","value":"pub fn fill(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of this matrix to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280230,"byte_end":280280,"line_start":96,"line_end":96,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280285,"byte_end":280294,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3012},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280477,"byte_end":280495,"line_start":106,"line_end":106,"column_start":12,"column_end":30},"name":"fill_with_identity","qualname":"<Matrix<N, R, C, S>>::fill_with_identity","value":"pub fn fill_with_identity(&mut Self) where N: Zero + One","parent":null,"children":[],"decl_id":null,"docs":" Fills `self` with the identity matrix.\n","sig":null,"attributes":[{"value":"/ Fills `self` with the identity matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280409,"byte_end":280451,"line_start":104,"line_end":104,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280456,"byte_end":280465,"line_start":105,"line_end":105,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3013},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280697,"byte_end":280710,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"fill_diagonal","qualname":"<Matrix<N, R, C, S>>::fill_diagonal","value":"pub fn fill_diagonal(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the diagonal elements of this matrix to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the diagonal elements of this matrix to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280612,"byte_end":280671,"line_start":112,"line_end":112,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280676,"byte_end":280685,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3014},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281003,"byte_end":281011,"line_start":125,"line_end":125,"column_start":12,"column_end":20},"name":"fill_row","qualname":"<Matrix<N, R, C, S>>::fill_row","value":"pub fn fill_row(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected row to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected row to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280922,"byte_end":280977,"line_start":123,"line_end":123,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280982,"byte_end":280991,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3015},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281307,"byte_end":281318,"line_start":134,"line_end":134,"column_start":12,"column_end":23},"name":"fill_column","qualname":"<Matrix<N, R, C, S>>::fill_column","value":"pub fn fill_column(&mut Self, usize, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the selected column to `val`.\n","sig":null,"attributes":[{"value":"/ Sets all the elements of the selected column to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281223,"byte_end":281281,"line_start":132,"line_end":132,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281286,"byte_end":281295,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3016},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281631,"byte_end":281643,"line_start":143,"line_end":143,"column_start":12,"column_end":24},"name":"set_diagonal","qualname":"<Matrix<N, R, C, S>>::set_diagonal","value":"pub fn set_diagonal<R2: Dim, S2>(&mut Self, &Vector<N, R2, S2>) where\nR: DimMin<C>, S2: Storage<N, R2>, ShapeConstraint: DimEq<DimMinimum<R, C>, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281530,"byte_end":281605,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":281610,"byte_end":281619,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3019},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282446,"byte_end":282466,"line_start":164,"line_end":164,"column_start":12,"column_end":32},"name":"set_partial_diagonal","qualname":"<Matrix<N, R, C, S>>::set_partial_diagonal","value":"pub fn set_partial_diagonal<impl Iterator<Item = N>: Iterator<Item =\n                            N>>(&mut Self, impl Iterator<Item = N>)","parent":null,"children":[],"decl_id":null,"docs":" Fills the diagonal of this matrix with the content of the given iterator.","sig":null,"attributes":[{"value":"/ Fills the diagonal of this matrix with the content of the given iterator.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282127,"byte_end":282204,"line_start":158,"line_end":158,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282209,"byte_end":282212,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ This will fill as many diagonal elements as the iterator yields, up to the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282217,"byte_end":282295,"line_start":160,"line_end":160,"column_start":5,"column_end":83}},{"value":"/ minimum of the number of rows and columns of `self`, and starting with the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282300,"byte_end":282378,"line_start":161,"line_end":161,"column_start":5,"column_end":83}},{"value":"/ diagonal element at index (0, 0).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282383,"byte_end":282420,"line_start":162,"line_end":162,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282425,"byte_end":282434,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3021},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282861,"byte_end":282868,"line_start":175,"line_end":175,"column_start":12,"column_end":19},"name":"set_row","qualname":"<Matrix<N, R, C, S>>::set_row","value":"pub fn set_row<C2: Dim, S2>(&mut Self, usize, &RowVector<N, C2, S2>) where\nS2: Storage<N, U1, C2>, ShapeConstraint: SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected row of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected row of this matrix with the content of the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282756,"byte_end":282835,"line_start":173,"line_end":173,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":282840,"byte_end":282849,"line_start":174,"line_end":174,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3024},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283191,"byte_end":283201,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"set_column","qualname":"<Matrix<N, R, C, S>>::set_column","value":"pub fn set_column<R2: Dim, S2>(&mut Self, usize, &Vector<N, R2, S2>) where\nS2: Storage<N, R2, U1>, ShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills the selected column of this matrix with the content of the given vector.\n","sig":null,"attributes":[{"value":"/ Fills the selected column of this matrix with the content of the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283083,"byte_end":283165,"line_start":183,"line_end":183,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283170,"byte_end":283179,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3027},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283849,"byte_end":283868,"line_start":201,"line_end":201,"column_start":12,"column_end":31},"name":"fill_lower_triangle","qualname":"<Matrix<N, R, C, S>>::fill_lower_triangle","value":"pub fn fill_lower_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283419,"byte_end":283498,"line_start":193,"line_end":193,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283503,"byte_end":283506,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some subdiagonals to be left untouched:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283511,"byte_end":283583,"line_start":195,"line_end":195,"column_start":5,"column_end":77}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283588,"byte_end":283650,"line_start":196,"line_end":196,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283655,"byte_end":283712,"line_start":197,"line_end":197,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` subdiagonals are left","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283717,"byte_end":283804,"line_start":198,"line_end":198,"column_start":5,"column_end":92}},{"value":"/ untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283809,"byte_end":283823,"line_start":199,"line_end":199,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":283828,"byte_end":283837,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3028},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284522,"byte_end":284541,"line_start":217,"line_end":217,"column_start":12,"column_end":31},"name":"fill_upper_triangle","qualname":"<Matrix<N, R, C, S>>::fill_upper_triangle","value":"pub fn fill_upper_triangle(&mut Self, N, usize)","parent":null,"children":[],"decl_id":null,"docs":" Sets all the elements of the lower-triangular part of this matrix to `val`.","sig":null,"attributes":[{"value":"/ Sets all the elements of the lower-triangular part of this matrix to `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284088,"byte_end":284167,"line_start":209,"line_end":209,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284172,"byte_end":284175,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ The parameter `shift` allows some superdiagonals to be left untouched:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284180,"byte_end":284254,"line_start":211,"line_end":211,"column_start":5,"column_end":79}},{"value":"/ * If `shift = 0` then the diagonal is overwritten as well.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284259,"byte_end":284321,"line_start":212,"line_end":212,"column_start":5,"column_end":67}},{"value":"/ * If `shift = 1` then the diagonal is left untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284326,"byte_end":284383,"line_start":213,"line_end":213,"column_start":5,"column_end":62}},{"value":"/ * If `shift > 1`, then the diagonal and the first `shift - 1` superdiagonals are left","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284388,"byte_end":284477,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ untouched.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284482,"byte_end":284496,"line_start":215,"line_end":215,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284501,"byte_end":284510,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3029},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284957,"byte_end":284966,"line_start":229,"line_end":229,"column_start":12,"column_end":21},"name":"swap_rows","qualname":"<Matrix<N, R, C, S>>::swap_rows","value":"pub fn swap_rows(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two rows in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two rows in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284903,"byte_end":284931,"line_start":227,"line_end":227,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":284936,"byte_end":284945,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3030},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285372,"byte_end":285384,"line_start":243,"line_end":243,"column_start":12,"column_end":24},"name":"swap_columns","qualname":"<Matrix<N, R, C, S>>::swap_columns","value":"pub fn swap_columns(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two columns in-place.\n","sig":null,"attributes":[{"value":"/ Swaps two columns in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285315,"byte_end":285346,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285351,"byte_end":285360,"line_start":242,"line_end":242,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3035},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285975,"byte_end":286014,"line_start":260,"line_end":260,"column_start":12,"column_end":51},"name":"fill_lower_triangle_with_upper_triangle","qualname":"<Matrix<N, D, D, S>>::fill_lower_triangle_with_upper_triangle","value":"pub fn fill_lower_triangle_with_upper_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its lower-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its lower-triangular part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285804,"byte_end":285878,"line_start":257,"line_end":257,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285883,"byte_end":285886,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285891,"byte_end":285963,"line_start":259,"line_end":259,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3036},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286526,"byte_end":286565,"line_start":276,"line_end":276,"column_start":12,"column_end":51},"name":"fill_upper_triangle_with_lower_triangle","qualname":"<Matrix<N, D, D, S>>::fill_upper_triangle_with_lower_triangle","value":"pub fn fill_upper_triangle_with_lower_triangle(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Copies the upper-triangle of this matrix to its upper-triangular part.","sig":null,"attributes":[{"value":"/ Copies the upper-triangle of this matrix to its upper-triangular part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286355,"byte_end":286429,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286434,"byte_end":286437,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This makes the matrix symmetric. Panics if the matrix is not square.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286442,"byte_end":286514,"line_start":275,"line_end":275,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":3042},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287142,"byte_end":287155,"line_start":302,"line_end":302,"column_start":12,"column_end":25},"name":"remove_column","qualname":"<Matrix<N, R, C, S>>::remove_column","value":"pub fn remove_column(Self, usize) -> MatrixMN<N, R, DimDiff<C, U1>> where\nC: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th column from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th column from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287069,"byte_end":287116,"line_start":300,"line_end":300,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287121,"byte_end":287130,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3043},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287469,"byte_end":287486,"line_start":312,"line_end":312,"column_start":12,"column_end":29},"name":"remove_columns_at","qualname":"<Matrix<N, R, C, S>>::remove_columns_at","value":"pub fn remove_columns_at(Self, &[usize]) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes all columns in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all columns in `indices`   ","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287366,"byte_end":287405,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":287410,"byte_end":287457,"line_start":311,"line_end":311,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3044},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":288736,"byte_end":288750,"line_start":349,"line_end":349,"column_start":12,"column_end":26},"name":"remove_rows_at","qualname":"<Matrix<N, R, C, S>>::remove_rows_at","value":"pub fn remove_rows_at(Self, &[usize]) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes all rows in `indices`   \n","sig":null,"attributes":[{"value":"/ Removes all rows in `indices`   ","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":288636,"byte_end":288672,"line_start":347,"line_end":347,"column_start":5,"column_end":41}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":288677,"byte_end":288724,"line_start":348,"line_end":348,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3045},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":289967,"byte_end":289987,"line_start":384,"line_end":384,"column_start":12,"column_end":32},"name":"remove_fixed_columns","qualname":"<Matrix<N, R, C, S>>::remove_fixed_columns","value":"pub fn remove_fixed_columns<D>(Self, usize) -> MatrixMN<N, R, DimDiff<C, D>>\nwhere D: DimName, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th\n (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive columns from this matrix, starting with the `i`-th","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":289836,"byte_end":289921,"line_start":381,"line_end":381,"column_start":5,"column_end":90}},{"value":"/ (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":289926,"byte_end":289941,"line_start":382,"line_end":382,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":289946,"byte_end":289955,"line_start":383,"line_end":383,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3047},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290393,"byte_end":290407,"line_start":396,"line_end":396,"column_start":12,"column_end":26},"name":"remove_columns","qualname":"<Matrix<N, R, C, S>>::remove_columns","value":"pub fn remove_columns(Self, usize, usize) -> MatrixMN<N, R, Dynamic> where\nC: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290225,"byte_end":290315,"line_start":393,"line_end":393,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290320,"byte_end":290329,"line_start":394,"line_end":394,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290334,"byte_end":290381,"line_start":395,"line_end":395,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3048},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290919,"byte_end":290941,"line_start":409,"line_end":409,"column_start":12,"column_end":34},"name":"remove_columns_generic","qualname":"<Matrix<N, R, C, S>>::remove_columns_generic","value":"pub fn remove_columns_generic<D>(Self, usize, D)\n-> MatrixMN<N, R, DimDiff<C, D>> where D: Dim, C: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimDiff<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` columns from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290650,"byte_end":290742,"line_start":404,"line_end":404,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290747,"byte_end":290750,"line_start":405,"line_end":405,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_columns(...)` and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290755,"byte_end":290823,"line_start":406,"line_end":406,"column_start":5,"column_end":73}},{"value":"/ `.remove_fixed_columns(...)` which have nicer API interfaces.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290828,"byte_end":290893,"line_start":407,"line_end":407,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":290898,"byte_end":290907,"line_start":408,"line_end":408,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3050},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292316,"byte_end":292326,"line_start":457,"line_end":457,"column_start":12,"column_end":22},"name":"remove_row","qualname":"<Matrix<N, R, C, S>>::remove_row","value":"pub fn remove_row(Self, usize) -> MatrixMN<N, DimDiff<R, U1>, C> where\nR: DimSub<U1>, DefaultAllocator: Reallocator<N, R, C, DimDiff<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes the `i`-th row from this matrix.\n","sig":null,"attributes":[{"value":"/ Removes the `i`-th row from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292246,"byte_end":292290,"line_start":455,"line_end":455,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292295,"byte_end":292304,"line_start":456,"line_end":456,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3051},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292654,"byte_end":292671,"line_start":467,"line_end":467,"column_start":12,"column_end":29},"name":"remove_fixed_rows","qualname":"<Matrix<N, R, C, S>>::remove_fixed_rows","value":"pub fn remove_fixed_rows<D>(Self, usize) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: DimName, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `D::dim()` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292534,"byte_end":292628,"line_start":465,"line_end":465,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292633,"byte_end":292642,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3053},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293071,"byte_end":293082,"line_start":479,"line_end":479,"column_start":12,"column_end":23},"name":"remove_rows","qualname":"<Matrix<N, R, C, S>>::remove_rows","value":"pub fn remove_rows(Self, usize, usize) -> MatrixMN<N, Dynamic, C> where\nR: DimSub<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).\n","sig":null,"attributes":[{"value":"/ Removes `n` consecutive rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292906,"byte_end":292993,"line_start":476,"line_end":476,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":292998,"byte_end":293007,"line_start":477,"line_end":477,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293012,"byte_end":293059,"line_start":478,"line_end":478,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3054},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293582,"byte_end":293601,"line_start":492,"line_end":492,"column_start":12,"column_end":31},"name":"remove_rows_generic","qualname":"<Matrix<N, R, C, S>>::remove_rows_generic","value":"pub fn remove_rows_generic<D>(Self, usize, D) -> MatrixMN<N, DimDiff<R, D>, C>\nwhere D: Dim, R: DimSub<D>,\nDefaultAllocator: Reallocator<N, R, C, DimDiff<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","sig":null,"attributes":[{"value":"/ Removes `nremove.value()` rows from this matrix, starting with the `i`-th (included).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293322,"byte_end":293411,"line_start":487,"line_end":487,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293416,"byte_end":293419,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ This is the generic implementation of `.remove_rows(...)` and `.remove_fixed_rows(...)`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293424,"byte_end":293515,"line_start":489,"line_end":489,"column_start":5,"column_end":96}},{"value":"/ which have nicer API interfaces.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293520,"byte_end":293556,"line_start":490,"line_end":490,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":293561,"byte_end":293570,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3056},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294639,"byte_end":294652,"line_start":533,"line_end":533,"column_start":12,"column_end":25},"name":"insert_column","qualname":"<Matrix<N, R, C, S>>::insert_column","value":"pub fn insert_column(Self, usize, N) -> MatrixMN<N, R, DimSum<C, U1>> where\nC: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, R, DimSum<C, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a column filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a column filled with `val` at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294551,"byte_end":294613,"line_start":531,"line_end":531,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294618,"byte_end":294627,"line_start":532,"line_end":532,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3057},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294981,"byte_end":295001,"line_start":543,"line_end":543,"column_start":12,"column_end":32},"name":"insert_fixed_columns","qualname":"<Matrix<N, R, C, S>>::insert_fixed_columns","value":"pub fn insert_fixed_columns<D>(Self, usize, N) -> MatrixMN<N, R, DimSum<C, D>>\nwhere D: DimName, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294874,"byte_end":294955,"line_start":541,"line_end":541,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":294960,"byte_end":294969,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3059},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295498,"byte_end":295512,"line_start":557,"line_end":557,"column_start":12,"column_end":26},"name":"insert_columns","qualname":"<Matrix<N, R, C, S>>::insert_columns","value":"pub fn insert_columns(Self, usize, usize, N) -> MatrixMN<N, R, Dynamic> where\nC: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` columns filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` columns filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295346,"byte_end":295420,"line_start":554,"line_end":554,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295425,"byte_end":295434,"line_start":555,"line_end":555,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295439,"byte_end":295486,"line_start":556,"line_end":556,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3060},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":296032,"byte_end":296068,"line_start":571,"line_end":571,"column_start":19,"column_end":55},"name":"insert_columns_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_columns_generic_uninitialized","value":"pub unsafe fn insert_columns_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, R, DimSum<C, D>> where D: Dim, C: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, R, DimSum<C, D>>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` columns starting at the `i-th` place of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295856,"byte_end":295938,"line_start":567,"line_end":567,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295943,"byte_end":295946,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ The added column values are not initialized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":295951,"byte_end":295999,"line_start":569,"line_end":569,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":296004,"byte_end":296013,"line_start":570,"line_end":570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297135,"byte_end":297145,"line_start":611,"line_end":611,"column_start":12,"column_end":22},"name":"insert_row","qualname":"<Matrix<N, R, C, S>>::insert_row","value":"pub fn insert_row(Self, usize, N) -> MatrixMN<N, DimSum<R, U1>, C> where\nR: DimAdd<U1>, DefaultAllocator: Reallocator<N, R, C, DimSum<R, U1>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts a row filled with `val` at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts a row filled with `val` at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297050,"byte_end":297109,"line_start":609,"line_end":609,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297114,"byte_end":297123,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297468,"byte_end":297485,"line_start":621,"line_end":621,"column_start":12,"column_end":29},"name":"insert_fixed_rows","qualname":"<Matrix<N, R, C, S>>::insert_fixed_rows","value":"pub fn insert_fixed_rows<D>(Self, usize, N) -> MatrixMN<N, DimSum<R, D>, C>\nwhere D: DimName, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `D::dim()` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297364,"byte_end":297442,"line_start":619,"line_end":619,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297447,"byte_end":297456,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297973,"byte_end":297984,"line_start":635,"line_end":635,"column_start":12,"column_end":23},"name":"insert_rows","qualname":"<Matrix<N, R, C, S>>::insert_rows","value":"pub fn insert_rows(Self, usize, usize, N) -> MatrixMN<N, Dynamic, C> where\nR: DimAdd<Dynamic, Output = Dynamic>,\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `n` rows filled with `val` starting at the `i-th` position.\n","sig":null,"attributes":[{"value":"/ Inserts `n` rows filled with `val` starting at the `i-th` position.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297824,"byte_end":297895,"line_start":632,"line_end":632,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297900,"byte_end":297909,"line_start":633,"line_end":633,"column_start":5,"column_end":14}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":297914,"byte_end":297961,"line_start":634,"line_end":634,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298621,"byte_end":298654,"line_start":651,"line_end":651,"column_start":19,"column_end":52},"name":"insert_rows_generic_uninitialized","qualname":"<Matrix<N, R, C, S>>::insert_rows_generic_uninitialized","value":"pub unsafe fn insert_rows_generic_uninitialized<D>(Self, usize, D)\n-> MatrixMN<N, DimSum<R, D>, C> where D: Dim, R: DimAdd<D>,\nDefaultAllocator: Reallocator<N, R, C, DimSum<R, D>, C>","parent":null,"children":[],"decl_id":null,"docs":" Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","sig":null,"attributes":[{"value":"/ Inserts `ninsert.value()` rows at the `i-th` place of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298322,"byte_end":298392,"line_start":645,"line_end":645,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298397,"byte_end":298400,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ The added rows values are not initialized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298405,"byte_end":298451,"line_start":647,"line_end":647,"column_start":5,"column_end":51}},{"value":"/ This is the generic implementation of `.insert_rows(...)` and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298456,"byte_end":298521,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/ `.insert_fixed_rows(...)` which have nicer API interfaces.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298526,"byte_end":298588,"line_start":649,"line_end":649,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":298593,"byte_end":298602,"line_start":650,"line_end":650,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3068},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299846,"byte_end":299852,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"resize","qualname":"<Matrix<N, R, C, S>>::resize","value":"pub fn resize(Self, usize, usize, N) -> DMatrix<N> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `new_nrows` rows and `new_ncols` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299497,"byte_end":299582,"line_start":690,"line_end":690,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299587,"byte_end":299590,"line_start":691,"line_end":691,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299595,"byte_end":299687,"line_start":692,"line_end":692,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299692,"byte_end":299782,"line_start":693,"line_end":693,"column_start":5,"column_end":95}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":299787,"byte_end":299834,"line_start":694,"line_end":694,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3069},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300438,"byte_end":300455,"line_start":705,"line_end":705,"column_start":12,"column_end":29},"name":"resize_vertically","qualname":"<Matrix<N, R, C, S>>::resize_vertically","value":"pub fn resize_vertically(Self, usize, N) -> MatrixMN<N, Dynamic, C> where\nDefaultAllocator: Reallocator<N, R, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix vertically, i.e., so that it contains `new_nrows` rows while keeping the same number of columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300080,"byte_end":300200,"line_start":700,"line_end":700,"column_start":5,"column_end":125}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300205,"byte_end":300208,"line_start":701,"line_end":701,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300213,"byte_end":300305,"line_start":702,"line_end":702,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300310,"byte_end":300374,"line_start":703,"line_end":703,"column_start":5,"column_end":69}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300379,"byte_end":300426,"line_start":704,"line_end":704,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3070},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301067,"byte_end":301086,"line_start":716,"line_end":716,"column_start":12,"column_end":31},"name":"resize_horizontally","qualname":"<Matrix<N, R, C, S>>::resize_horizontally","value":"pub fn resize_horizontally(Self, usize, N) -> MatrixMN<N, R, Dynamic> where\nDefaultAllocator: Reallocator<N, R, C, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix horizontally, i.e., so that it contains `new_ncolumns` columns while keeping the same number of columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300695,"byte_end":300823,"line_start":711,"line_end":711,"column_start":5,"column_end":133}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300828,"byte_end":300831,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300836,"byte_end":300928,"line_start":713,"line_end":713,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":300933,"byte_end":301003,"line_start":714,"line_end":714,"column_start":5,"column_end":75}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301008,"byte_end":301055,"line_start":715,"line_end":715,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301627,"byte_end":301639,"line_start":726,"line_end":726,"column_start":12,"column_end":24},"name":"fixed_resize","qualname":"<Matrix<N, R, C, S>>::fixed_resize","value":"pub fn fixed_resize<R2: DimName, C2: DimName>(Self, N) -> MatrixMN<N, R2, C2>\nwhere DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","sig":null,"attributes":[{"value":"/ Resizes this matrix so that it contains `R2::value()` rows and `C2::value()` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301326,"byte_end":301415,"line_start":722,"line_end":722,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301420,"byte_end":301423,"line_start":723,"line_end":723,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301428,"byte_end":301520,"line_start":724,"line_end":724,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301525,"byte_end":301615,"line_start":725,"line_end":725,"column_start":5,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":302128,"byte_end":302142,"line_start":736,"line_end":736,"column_start":12,"column_end":26},"name":"resize_generic","qualname":"<Matrix<N, R, C, S>>::resize_generic","value":"pub fn resize_generic<R2: Dim, C2: Dim>(Self, R2, C2, N)\n-> MatrixMN<N, R2, C2> where DefaultAllocator: Reallocator<N, R, C, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","sig":null,"attributes":[{"value":"/ Resizes `self` such that it has dimensions `new_nrows × now_ncols`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301830,"byte_end":301902,"line_start":731,"line_end":731,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301907,"byte_end":301910,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":301915,"byte_end":302007,"line_start":733,"line_end":733,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":302012,"byte_end":302102,"line_start":734,"line_end":734,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":302107,"byte_end":302116,"line_start":735,"line_end":735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3079},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304487,"byte_end":304497,"line_start":807,"line_end":807,"column_start":12,"column_end":22},"name":"resize_mut","qualname":"<DMatrix<N>>::resize_mut","value":"pub fn resize_mut(&mut Self, usize, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Resizes this matrix in-place.","sig":null,"attributes":[{"value":"/ Resizes this matrix in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304162,"byte_end":304195,"line_start":801,"line_end":801,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304200,"byte_end":304203,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304208,"byte_end":304300,"line_start":803,"line_end":803,"column_start":5,"column_end":97}},{"value":"/ rows and/or columns than `self`, then the extra rows or columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304305,"byte_end":304395,"line_start":804,"line_end":804,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304400,"byte_end":304403,"line_start":805,"line_end":805,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned fully-dynamic matrices, i.e., `DMatrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304408,"byte_end":304475,"line_start":806,"line_end":806,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305408,"byte_end":305429,"line_start":827,"line_end":827,"column_start":12,"column_end":33},"name":"resize_vertically_mut","qualname":"<MatrixMN<N, Dynamic, C>>::resize_vertically_mut","value":"pub fn resize_vertically_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, Dynamic, C, Dynamic, C>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of rows of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of rows of this matrix in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305011,"byte_end":305066,"line_start":820,"line_end":820,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305071,"byte_end":305074,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305079,"byte_end":305171,"line_start":822,"line_end":822,"column_start":5,"column_end":97}},{"value":"/ rows than `self`, then the extra rows are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305176,"byte_end":305240,"line_start":823,"line_end":823,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305245,"byte_end":305248,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of rows (for example, `DVector`).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305253,"byte_end":305344,"line_start":825,"line_end":825,"column_start":5,"column_end":96}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305349,"byte_end":305396,"line_start":826,"line_end":826,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306373,"byte_end":306396,"line_start":848,"line_end":848,"column_start":12,"column_end":35},"name":"resize_horizontally_mut","qualname":"<MatrixMN<N, R, Dynamic>>::resize_horizontally_mut","value":"pub fn resize_horizontally_mut(&mut Self, usize, N) where\nDefaultAllocator: Reallocator<N, R, Dynamic, R, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Changes the number of column of this matrix in-place.","sig":null,"attributes":[{"value":"/ Changes the number of column of this matrix in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305965,"byte_end":306022,"line_start":841,"line_end":841,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306027,"byte_end":306030,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ The values are copied such that `self[(i, j)] == result[(i, j)]`. If the result has more","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306035,"byte_end":306127,"line_start":843,"line_end":843,"column_start":5,"column_end":97}},{"value":"/ columns than `self`, then the extra columns are filled with `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306132,"byte_end":306202,"line_start":844,"line_end":844,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306207,"byte_end":306210,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Defined only for owned matrices with a dynamic number of columns (for example, `DVector`).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306215,"byte_end":306309,"line_start":846,"line_end":846,"column_start":5,"column_end":99}},{"value":"cfg(any(feature = \"std\", feature = \"alloc\"))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":306314,"byte_end":306361,"line_start":847,"line_end":847,"column_start":5,"column_end":52}}]},{"kind":"Mod","id":{"krate":0,"index":3111},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"indexing","qualname":"::base::indexing","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","parent":null,"children":[{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3122},{"krate":0,"index":3125},{"krate":0,"index":3128},{"krate":0,"index":3131},{"krate":0,"index":3134},{"krate":0,"index":3137},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3147},{"krate":0,"index":3150},{"krate":0,"index":3153},{"krate":0,"index":3159},{"krate":0,"index":3165},{"krate":0,"index":3171},{"krate":0,"index":3177},{"krate":0,"index":3184},{"krate":0,"index":3190},{"krate":0,"index":3196},{"krate":0,"index":3202},{"krate":0,"index":3208},{"krate":0,"index":3219},{"krate":0,"index":3229},{"krate":0,"index":3252},{"krate":0,"index":3261},{"krate":0,"index":3269},{"krate":0,"index":3278},{"krate":0,"index":19218},{"krate":0,"index":19230},{"krate":0,"index":19241},{"krate":0,"index":19253},{"krate":0,"index":19264},{"krate":0,"index":19276},{"krate":0,"index":19287},{"krate":0,"index":19299},{"krate":0,"index":19310},{"krate":0,"index":19322},{"krate":0,"index":19333},{"krate":0,"index":19345},{"krate":0,"index":19356},{"krate":0,"index":19369},{"krate":0,"index":19381},{"krate":0,"index":19393},{"krate":0,"index":19404},{"krate":0,"index":19416},{"krate":0,"index":19427},{"krate":0,"index":19439},{"krate":0,"index":19450},{"krate":0,"index":19462},{"krate":0,"index":19473},{"krate":0,"index":19485},{"krate":0,"index":19496},{"krate":0,"index":19508},{"krate":0,"index":19519},{"krate":0,"index":19531},{"krate":0,"index":19542},{"krate":0,"index":19555},{"krate":0,"index":19567},{"krate":0,"index":19579},{"krate":0,"index":19590},{"krate":0,"index":19602},{"krate":0,"index":19613},{"krate":0,"index":19625},{"krate":0,"index":19636},{"krate":0,"index":19648},{"krate":0,"index":19659},{"krate":0,"index":19671},{"krate":0,"index":19682},{"krate":0,"index":19694},{"krate":0,"index":19705},{"krate":0,"index":19717},{"krate":0,"index":19728},{"krate":0,"index":19741},{"krate":0,"index":19753},{"krate":0,"index":19765},{"krate":0,"index":19776},{"krate":0,"index":19788},{"krate":0,"index":19799},{"krate":0,"index":19811},{"krate":0,"index":19822},{"krate":0,"index":19834},{"krate":0,"index":19845},{"krate":0,"index":19857},{"krate":0,"index":19868},{"krate":0,"index":19880},{"krate":0,"index":19891},{"krate":0,"index":19903},{"krate":0,"index":19914},{"krate":0,"index":19927},{"krate":0,"index":19939},{"krate":0,"index":19951},{"krate":0,"index":19962},{"krate":0,"index":19974},{"krate":0,"index":19985},{"krate":0,"index":19997},{"krate":0,"index":20008},{"krate":0,"index":20020},{"krate":0,"index":20031},{"krate":0,"index":20043},{"krate":0,"index":20054},{"krate":0,"index":20066},{"krate":0,"index":20077},{"krate":0,"index":20089},{"krate":0,"index":20100},{"krate":0,"index":20113},{"krate":0,"index":20125},{"krate":0,"index":20137},{"krate":0,"index":20148},{"krate":0,"index":20160},{"krate":0,"index":20171},{"krate":0,"index":20183},{"krate":0,"index":20194},{"krate":0,"index":20206},{"krate":0,"index":20217},{"krate":0,"index":20229},{"krate":0,"index":20240},{"krate":0,"index":20252},{"krate":0,"index":20263},{"krate":0,"index":20275},{"krate":0,"index":20286},{"krate":0,"index":20299},{"krate":0,"index":20311},{"krate":0,"index":20323},{"krate":0,"index":20334},{"krate":0,"index":20346},{"krate":0,"index":20357},{"krate":0,"index":20369},{"krate":0,"index":20380},{"krate":0,"index":20392},{"krate":0,"index":20403},{"krate":0,"index":20415},{"krate":0,"index":20426},{"krate":0,"index":20438},{"krate":0,"index":20449},{"krate":0,"index":20461},{"krate":0,"index":20472},{"krate":0,"index":20485},{"krate":0,"index":20497},{"krate":0,"index":20510},{"krate":0,"index":20522},{"krate":0,"index":20535},{"krate":0,"index":20547},{"krate":0,"index":20560},{"krate":0,"index":20572},{"krate":0,"index":20585},{"krate":0,"index":20597},{"krate":0,"index":20610},{"krate":0,"index":20622},{"krate":0,"index":20635},{"krate":0,"index":20647},{"krate":0,"index":20660},{"krate":0,"index":20672},{"krate":0,"index":20686}],"decl_id":null,"docs":" Indexing\n","sig":null,"attributes":[{"value":"/ Indexing","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":313157,"byte_end":313169,"line_start":1,"line_end":1,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":3155},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":313461,"byte_end":313467,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Length","qualname":"::base::indexing::DimRange::Length","value":"type Length: Dim;","parent":{"krate":0,"index":3153},"children":[],"decl_id":null,"docs":" The number of elements indexed by this range.\n","sig":null,"attributes":[{"value":"/ The number of elements indexed by this range.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":313402,"byte_end":313451,"line_start":11,"line_end":11,"column_start":5,"column_end":54}}]},{"kind":"Trait","id":{"krate":0,"index":3208},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320710,"byte_end":320721,"line_start":270,"line_end":270,"column_start":11,"column_end":22},"name":"MatrixIndex","qualname":"::base::indexing::MatrixIndex","value":"MatrixIndex<'a, N: Scalar, R: Dim, C: Dim, S: Storage<N, R, C>>: Sized","parent":null,"children":[{"krate":0,"index":3214},{"krate":0,"index":3215},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":3218}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320651,"byte_end":320699,"line_start":269,"line_end":269,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3214},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320838,"byte_end":320844,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Output","qualname":"::base::indexing::MatrixIndex::Output","value":"type Output : 'a;","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320788,"byte_end":320828,"line_start":272,"line_end":272,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3215},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320948,"byte_end":320960,"line_start":277,"line_end":277,"column_start":8,"column_end":20},"name":"contained_by","qualname":"::base::indexing::MatrixIndex::contained_by","value":"pub fn contained_by(&Self, &Matrix<N, R, C, S>) -> bool","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" Produces true if the given matrix is contained by this index.\n","sig":null,"attributes":[{"value":"/ Produces true if the given matrix is contained by this index.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320856,"byte_end":320921,"line_start":275,"line_end":275,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":3216},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321159,"byte_end":321162,"line_start":283,"line_end":283,"column_start":8,"column_end":11},"name":"get","qualname":"::base::indexing::MatrixIndex::get","value":"pub fn get(Self, &'a Matrix<N, R, C, S>) -> Option<Self::Output>","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds,\n or `None`, otherwise.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321011,"byte_end":321080,"line_start":279,"line_end":279,"column_start":5,"column_end":74}},{"value":"/ or `None`, otherwise.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321085,"byte_end":321110,"line_start":280,"line_end":280,"column_start":5,"column_end":30}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321134,"byte_end":321151,"line_start":282,"line_end":282,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3217},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321513,"byte_end":321526,"line_start":294,"line_end":294,"column_start":15,"column_end":28},"name":"get_unchecked","qualname":"::base::indexing::MatrixIndex::get_unchecked","value":"pub unsafe fn get_unchecked(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" Produces a shared view of the data at this location if in bounds\n without any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a shared view of the data at this location if in bounds","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321374,"byte_end":321442,"line_start":291,"line_end":291,"column_start":5,"column_end":73}},{"value":"/ without any bounds checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321447,"byte_end":321479,"line_start":292,"line_end":292,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":3218},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321728,"byte_end":321733,"line_start":300,"line_end":300,"column_start":8,"column_end":13},"name":"index","qualname":"::base::indexing::MatrixIndex::index","value":"pub fn index(Self, &'a Matrix<N, R, C, S>) -> Self::Output","parent":{"krate":0,"index":3208},"children":[],"decl_id":null,"docs":" Produces a shared view to the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a shared view to the data at this location, or panics","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321587,"byte_end":321653,"line_start":296,"line_end":296,"column_start":5,"column_end":71}},{"value":"/ if out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321658,"byte_end":321679,"line_start":297,"line_end":297,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321703,"byte_end":321720,"line_start":299,"line_end":299,"column_start":5,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":3219},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321914,"byte_end":321928,"line_start":306,"line_end":306,"column_start":11,"column_end":25},"name":"MatrixIndexMut","qualname":"::base::indexing::MatrixIndexMut","value":"MatrixIndexMut<'a, N: Scalar, R: Dim, C: Dim, S: StorageMut<N, R, C>>: MatrixIndex","parent":null,"children":[{"krate":0,"index":3225},{"krate":0,"index":3226},{"krate":0,"index":3227},{"krate":0,"index":3228}],"decl_id":null,"docs":" A helper trait used for indexing operations.\n","sig":null,"attributes":[{"value":"/ A helper trait used for indexing operations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321855,"byte_end":321903,"line_start":305,"line_end":305,"column_start":1,"column_end":49}}]},{"kind":"Type","id":{"krate":0,"index":3225},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322069,"byte_end":322078,"line_start":308,"line_end":308,"column_start":10,"column_end":19},"name":"OutputMut","qualname":"::base::indexing::MatrixIndexMut::OutputMut","value":"type OutputMut : 'a;","parent":{"krate":0,"index":3219},"children":[],"decl_id":null,"docs":" The output type returned by methods.\n","sig":null,"attributes":[{"value":"/ The output type returned by methods.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322019,"byte_end":322059,"line_start":307,"line_end":307,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":3226},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322229,"byte_end":322246,"line_start":313,"line_end":313,"column_start":15,"column_end":32},"name":"get_unchecked_mut","qualname":"::base::indexing::MatrixIndexMut::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(Self, &'a mut Matrix<N, R, C, S>)\n-> Self::OutputMut","parent":{"krate":0,"index":3219},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, without\n performing any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, without","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322090,"byte_end":322155,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ performing any bounds checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322160,"byte_end":322195,"line_start":311,"line_end":311,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3227},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322442,"byte_end":322449,"line_start":319,"line_end":319,"column_start":8,"column_end":15},"name":"get_mut","qualname":"::base::indexing::MatrixIndexMut::get_mut","value":"pub fn get_mut(Self, &'a mut Matrix<N, R, C, S>) -> Option<Self::OutputMut>","parent":{"krate":0,"index":3219},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, if in\n bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, if in","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322314,"byte_end":322377,"line_start":315,"line_end":315,"column_start":5,"column_end":68}},{"value":"/ bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322382,"byte_end":322393,"line_start":316,"line_end":316,"column_start":5,"column_end":16}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322417,"byte_end":322434,"line_start":318,"line_end":318,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3228},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322814,"byte_end":322823,"line_start":331,"line_end":331,"column_start":8,"column_end":17},"name":"index_mut","qualname":"::base::indexing::MatrixIndexMut::index_mut","value":"pub fn index_mut(Self, &'a mut Matrix<N, R, C, S>) -> Self::OutputMut","parent":{"krate":0,"index":3219},"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at this location, or panics\n if out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at this location, or panics","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322672,"byte_end":322739,"line_start":327,"line_end":327,"column_start":5,"column_end":72}},{"value":"/ if out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322744,"byte_end":322765,"line_start":328,"line_end":328,"column_start":5,"column_end":26}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":322789,"byte_end":322806,"line_start":330,"line_end":330,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":3234},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325780,"byte_end":325783,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"get","qualname":"<Matrix<N, R, C, S>>::get","value":"pub fn get<'a, I>(&'a Self, I) -> Option<I::Output> where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325654,"byte_end":325708,"line_start":437,"line_end":437,"column_start":5,"column_end":59}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325713,"byte_end":325754,"line_start":438,"line_end":438,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325759,"byte_end":325768,"line_start":439,"line_end":439,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3237},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326056,"byte_end":326063,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Matrix<N, R, C, S>>::get_mut","value":"pub fn get_mut<'a, I>(&'a mut Self, I) -> Option<I::OutputMut> where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n `None` if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325922,"byte_end":325984,"line_start":447,"line_end":447,"column_start":5,"column_end":67}},{"value":"/ `None` if the index is out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325989,"byte_end":326030,"line_start":448,"line_end":448,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326035,"byte_end":326044,"line_start":449,"line_end":449,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326374,"byte_end":326379,"line_start":461,"line_end":461,"column_start":12,"column_end":17},"name":"index","qualname":"<Matrix<N, R, C, S>>::index","value":"pub fn index<'a, I>(&'a Self, I) -> I::Output where I: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326248,"byte_end":326302,"line_start":458,"line_end":458,"column_start":5,"column_end":59}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326307,"byte_end":326348,"line_start":459,"line_end":459,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326353,"byte_end":326362,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326646,"byte_end":326655,"line_start":471,"line_end":471,"column_start":12,"column_end":21},"name":"index_mut","qualname":"<Matrix<N, R, C, S>>::index_mut","value":"pub fn index_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Produces a mutable view of the data at the given index, or\n panics if the index is out of bounds.\n","sig":null,"attributes":[{"value":"/ Produces a mutable view of the data at the given index, or","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326512,"byte_end":326574,"line_start":468,"line_end":468,"column_start":5,"column_end":67}},{"value":"/ panics if the index is out of bounds.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326579,"byte_end":326620,"line_start":469,"line_end":469,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326625,"byte_end":326634,"line_start":470,"line_end":470,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3246},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326961,"byte_end":326974,"line_start":482,"line_end":482,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Matrix<N, R, C, S>>::get_unchecked","value":"pub unsafe fn get_unchecked<'a, I>(&'a Self, I) -> I::Output where\nI: MatrixIndex","parent":null,"children":[],"decl_id":null,"docs":" Produces a view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Produces a view of the data at the given index, without doing","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326834,"byte_end":326899,"line_start":479,"line_end":479,"column_start":5,"column_end":70}},{"value":"/ any bounds checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326904,"byte_end":326928,"line_start":480,"line_end":480,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":326933,"byte_end":326942,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3249},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":327249,"byte_end":327266,"line_start":492,"line_end":492,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Matrix<N, R, C, S>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut<'a, I>(&'a mut Self, I) -> I::OutputMut where\nS: StorageMut<N, R, C>, I: MatrixIndexMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable view of the data at the given index, without doing\n any bounds checking.\n","sig":null,"attributes":[{"value":"/ Returns a mutable view of the data at the given index, without doing","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":327115,"byte_end":327187,"line_start":489,"line_end":489,"column_start":5,"column_end":77}},{"value":"/ any bounds checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":327192,"byte_end":327216,"line_start":490,"line_end":490,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":327221,"byte_end":327230,"line_start":491,"line_end":491,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":3455},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335631,"byte_end":335643,"line_start":31,"line_end":31,"column_start":10,"column_end":22},"name":"SquareMatrix","qualname":"::base::matrix::SquareMatrix","value":"Matrix<N, D, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A square matrix.\n","sig":null,"attributes":[{"value":"/ A square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335601,"byte_end":335621,"line_start":30,"line_end":30,"column_start":1,"column_end":21}}]},{"kind":"Type","id":{"krate":0,"index":3459},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335728,"byte_end":335734,"line_start":34,"line_end":34,"column_start":10,"column_end":16},"name":"Vector","qualname":"::base::matrix::Vector","value":"Matrix<N, D, U1, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one column and `D` rows.\n","sig":null,"attributes":[{"value":"/ A matrix with one column and `D` rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335676,"byte_end":335718,"line_start":33,"line_end":33,"column_start":1,"column_end":43}}]},{"kind":"Type","id":{"krate":0,"index":3463},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335821,"byte_end":335830,"line_start":37,"line_end":37,"column_start":10,"column_end":19},"name":"RowVector","qualname":"::base::matrix::RowVector","value":"Matrix<N, U1, D, S>","parent":null,"children":[],"decl_id":null,"docs":" A matrix with one row and `D` columns .\n","sig":null,"attributes":[{"value":"/ A matrix with one row and `D` columns .","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335768,"byte_end":335811,"line_start":36,"line_end":36,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3467},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335917,"byte_end":335926,"line_start":40,"line_end":40,"column_start":10,"column_end":19},"name":"MatrixSum","qualname":"::base::matrix::MatrixSum","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":335864,"byte_end":335907,"line_start":39,"line_end":39,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3473},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336094,"byte_end":336103,"line_start":44,"line_end":44,"column_start":10,"column_end":19},"name":"VectorSum","qualname":"::base::matrix::VectorSum","value":"Matrix<N, SameShapeR<R1, R2>, U1, SameShapeStorage<N, R1, U1, R2, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix sum.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix sum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336041,"byte_end":336084,"line_start":43,"line_end":43,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":3477},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336257,"byte_end":336268,"line_start":48,"line_end":48,"column_start":10,"column_end":21},"name":"MatrixCross","qualname":"::base::matrix::MatrixCross","value":"Matrix<N, SameShapeR<R1, R2>, SameShapeC<C1, C2>,\n       SameShapeStorage<N, R1, C1, R2, C2>>","parent":null,"children":[],"decl_id":null,"docs":" The type of the result of a matrix cross product.\n","sig":null,"attributes":[{"value":"/ The type of the result of a matrix cross product.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336194,"byte_end":336247,"line_start":47,"line_end":47,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":20699},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337788,"byte_end":337794,"line_start":76,"line_end":76,"column_start":12,"column_end":18},"name":"Matrix","qualname":"::base::matrix::Matrix","value":"Matrix { data }","parent":null,"children":[{"krate":0,"index":20704},{"krate":0,"index":20705}],"decl_id":null,"docs":" The most generic column-major matrix (and vector) type.","sig":null,"attributes":[{"value":"/ The most generic column-major matrix (and vector) type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336383,"byte_end":336442,"line_start":51,"line_end":51,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336443,"byte_end":336446,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ It combines four type parameters:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336447,"byte_end":336484,"line_start":53,"line_end":53,"column_start":1,"column_end":38}},{"value":"/ - `N`: for the matrix components scalar type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336485,"byte_end":336534,"line_start":54,"line_end":54,"column_start":1,"column_end":50}},{"value":"/ - `R`: for the matrix number of rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336535,"byte_end":336576,"line_start":55,"line_end":55,"column_start":1,"column_end":42}},{"value":"/ - `C`: for the matrix number of columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336577,"byte_end":336621,"line_start":56,"line_end":56,"column_start":1,"column_end":45}},{"value":"/ - `S`: for the matrix data storage, i.e., the buffer that actually contains the matrix","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336622,"byte_end":336712,"line_start":57,"line_end":57,"column_start":1,"column_end":91}},{"value":"/ components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336713,"byte_end":336728,"line_start":58,"line_end":58,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336729,"byte_end":336732,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"/ The matrix dimensions parameters `R` and `C` can either be:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336733,"byte_end":336796,"line_start":60,"line_end":60,"column_start":1,"column_end":64}},{"value":"/ - type-level unsigned integer constants (e.g. `U1`, `U124`) from the `nalgebra::` root module.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336797,"byte_end":336895,"line_start":61,"line_end":61,"column_start":1,"column_end":99}},{"value":"/ All numbers from 0 to 127 are defined that way.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336896,"byte_end":336948,"line_start":62,"line_end":62,"column_start":1,"column_end":52}},{"value":"/ - type-level unsigned integer constants (e.g. `U1024`, `U10000`) from the `typenum::` crate.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":336949,"byte_end":337045,"line_start":63,"line_end":63,"column_start":1,"column_end":97}},{"value":"/ Using those, you will not get error messages as nice as for numbers smaller than 128 defined on","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337046,"byte_end":337145,"line_start":64,"line_end":64,"column_start":1,"column_end":100}},{"value":"/ the `nalgebra::` module.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337146,"byte_end":337174,"line_start":65,"line_end":65,"column_start":1,"column_end":29}},{"value":"/ - the special value `Dynamic` from the `nalgebra::` root module. This indicates that the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337175,"byte_end":337267,"line_start":66,"line_end":66,"column_start":1,"column_end":93}},{"value":"/ specified dimension is not known at compile-time. Note that this will generally imply that the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337268,"byte_end":337366,"line_start":67,"line_end":67,"column_start":1,"column_end":99}},{"value":"/ matrix data storage `S` performs a dynamic allocation and contains extra metadata for the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337367,"byte_end":337460,"line_start":68,"line_end":68,"column_start":1,"column_end":94}},{"value":"/ matrix shape.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337461,"byte_end":337478,"line_start":69,"line_end":69,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337479,"byte_end":337482,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ Note that mixing `Dynamic` with type-level unsigned integers is allowed. Actually, a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337483,"byte_end":337571,"line_start":71,"line_end":71,"column_start":1,"column_end":89}},{"value":"/ dynamically-sized column vector should be represented as a `Matrix<N, Dynamic, U1, S>` (given","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337572,"byte_end":337669,"line_start":72,"line_end":72,"column_start":1,"column_end":98}},{"value":"/ some concrete types for `N` and a compatible data storage type `S`).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337670,"byte_end":337742,"line_start":73,"line_end":73,"column_start":1,"column_end":73}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337743,"byte_end":337753,"line_start":74,"line_end":74,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":20704},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337974,"byte_end":337978,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"name":"data","qualname":"::base::matrix::Matrix::data","value":"S","parent":{"krate":0,"index":20699},"children":[],"decl_id":null,"docs":" The data storage that contains all the matrix components and informations about its number\n of rows and column (if needed).\n","sig":null,"attributes":[{"value":"/ The data storage that contains all the matrix components and informations about its number","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337831,"byte_end":337925,"line_start":77,"line_end":77,"column_start":5,"column_end":99}},{"value":"/ of rows and column (if needed).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":337930,"byte_end":337965,"line_start":78,"line_end":78,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":3494},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339671,"byte_end":339701,"line_start":143,"line_end":143,"column_start":19,"column_end":49},"name":"from_data_statically_unchecked","qualname":"<Matrix<N, R, C, S>>::from_data_statically_unchecked","value":"pub unsafe fn from_data_statically_unchecked(S) -> Matrix<N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data without statically checking that the matrix\n dimension matches the storage dimension.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data without statically checking that the matrix","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339501,"byte_end":339589,"line_start":140,"line_end":140,"column_start":5,"column_end":93}},{"value":"/ dimension matches the storage dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339594,"byte_end":339638,"line_start":141,"line_end":141,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339643,"byte_end":339652,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3500},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339980,"byte_end":339989,"line_start":154,"line_end":154,"column_start":12,"column_end":21},"name":"from_data","qualname":"<Matrix<N, R, C, S>>::from_data","value":"pub fn from_data(S) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new matrix with the given data.\n","sig":null,"attributes":[{"value":"/ Creates a new matrix with the given data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339909,"byte_end":339954,"line_start":152,"line_end":152,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339959,"byte_end":339968,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340319,"byte_end":340322,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"len","qualname":"<Matrix<N, R, C, S>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The total number of elements of this matrix.","sig":null,"attributes":[{"value":"/ The total number of elements of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340082,"byte_end":340130,"line_start":158,"line_end":158,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340135,"byte_end":340138,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340143,"byte_end":340158,"line_start":160,"line_end":160,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340163,"byte_end":340166,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340171,"byte_end":340178,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340183,"byte_end":340213,"line_start":163,"line_end":163,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340218,"byte_end":340258,"line_start":164,"line_end":164,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.len(), 12);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340263,"byte_end":340293,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340298,"byte_end":340307,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340699,"byte_end":340704,"line_start":181,"line_end":181,"column_start":12,"column_end":17},"name":"shape","qualname":"<Matrix<N, R, C, S>>::shape","value":"pub fn shape(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The shape of this matrix returned as the tuple (number of rows, number of columns).","sig":null,"attributes":[{"value":"/ The shape of this matrix returned as the tuple (number of rows, number of columns).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340417,"byte_end":340504,"line_start":172,"line_end":172,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340509,"byte_end":340512,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340517,"byte_end":340532,"line_start":174,"line_end":174,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340537,"byte_end":340540,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340545,"byte_end":340552,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340557,"byte_end":340587,"line_start":177,"line_end":177,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340592,"byte_end":340632,"line_start":178,"line_end":178,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.shape(), (3, 4));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340637,"byte_end":340673,"line_start":179,"line_end":179,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340678,"byte_end":340687,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341058,"byte_end":341063,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"nrows","qualname":"<Matrix<N, R, C, S>>::nrows","value":"pub fn nrows(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of rows of this matrix.","sig":null,"attributes":[{"value":"/ The number of rows of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340830,"byte_end":340868,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340873,"byte_end":340876,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340881,"byte_end":340896,"line_start":188,"line_end":188,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340901,"byte_end":340904,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340909,"byte_end":340916,"line_start":190,"line_end":190,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340921,"byte_end":340951,"line_start":191,"line_end":191,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":340956,"byte_end":340996,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.nrows(), 3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341001,"byte_end":341032,"line_start":193,"line_end":193,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341037,"byte_end":341046,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3504},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341347,"byte_end":341352,"line_start":208,"line_end":208,"column_start":12,"column_end":17},"name":"ncols","qualname":"<Matrix<N, R, C, S>>::ncols","value":"pub fn ncols(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of columns of this matrix.","sig":null,"attributes":[{"value":"/ The number of columns of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341116,"byte_end":341157,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341162,"byte_end":341165,"line_start":200,"line_end":200,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341170,"byte_end":341185,"line_start":201,"line_end":201,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341190,"byte_end":341193,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341198,"byte_end":341205,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix3x4;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341210,"byte_end":341240,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix3x4::<f32>::zeros();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341245,"byte_end":341285,"line_start":205,"line_end":205,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(mat.ncols(), 4);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341290,"byte_end":341321,"line_start":206,"line_end":206,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341326,"byte_end":341335,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3505},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341835,"byte_end":341842,"line_start":223,"line_end":223,"column_start":12,"column_end":19},"name":"strides","qualname":"<Matrix<N, R, C, S>>::strides","value":"pub fn strides(&Self) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" The strides (row stride, column stride) of this matrix.","sig":null,"attributes":[{"value":"/ The strides (row stride, column stride) of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341405,"byte_end":341464,"line_start":212,"line_end":212,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341469,"byte_end":341472,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341477,"byte_end":341492,"line_start":214,"line_end":214,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341497,"byte_end":341500,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341505,"byte_end":341512,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::DMatrix;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341517,"byte_end":341545,"line_start":217,"line_end":217,"column_start":5,"column_end":33}},{"value":"/ let mat = DMatrix::<f32>::zeros(10, 10);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341550,"byte_end":341594,"line_start":218,"line_end":218,"column_start":5,"column_end":49}},{"value":"/ let slice = mat.slice_with_steps((0, 0), (5, 3), (1, 2));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341599,"byte_end":341660,"line_start":219,"line_end":219,"column_start":5,"column_end":66}},{"value":"/ // The column strides is the number of steps (here 2) multiplied by the corresponding dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341665,"byte_end":341765,"line_start":220,"line_end":220,"column_start":5,"column_end":105}},{"value":"/ assert_eq!(mat.strides(), (1, 10));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341770,"byte_end":341809,"line_start":221,"line_end":221,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341814,"byte_end":341823,"line_start":222,"line_end":222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3506},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342578,"byte_end":342582,"line_start":245,"line_end":245,"column_start":12,"column_end":16},"name":"iter","qualname":"<Matrix<N, R, C, S>>::iter","value":"pub fn iter(&Self) -> MatrixIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this matrix coordinates in column-major order.","sig":null,"attributes":[{"value":"/ Iterates through this matrix coordinates in column-major order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":341970,"byte_end":342037,"line_start":228,"line_end":228,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342042,"byte_end":342045,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342050,"byte_end":342065,"line_start":230,"line_end":230,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342070,"byte_end":342073,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342078,"byte_end":342085,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342090,"byte_end":342120,"line_start":233,"line_end":233,"column_start":5,"column_end":35}},{"value":"/ let mat = Matrix2x3::new(11, 12, 13,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342125,"byte_end":342165,"line_start":234,"line_end":234,"column_start":5,"column_end":45}},{"value":"/                          21, 22, 23);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342170,"byte_end":342211,"line_start":235,"line_end":235,"column_start":5,"column_end":46}},{"value":"/ let mut it = mat.iter();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342216,"byte_end":342244,"line_start":236,"line_end":236,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(*it.next().unwrap(), 11);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342249,"byte_end":342289,"line_start":237,"line_end":237,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 21);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342294,"byte_end":342334,"line_start":238,"line_end":238,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 12);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342339,"byte_end":342379,"line_start":239,"line_end":239,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 22);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342384,"byte_end":342424,"line_start":240,"line_end":240,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 13);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342429,"byte_end":342469,"line_start":241,"line_end":241,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(*it.next().unwrap(), 23);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342474,"byte_end":342514,"line_start":242,"line_end":242,"column_start":5,"column_end":45}},{"value":"/ assert!(it.next().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342519,"byte_end":342552,"line_start":243,"line_end":243,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342557,"byte_end":342566,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343008,"byte_end":343016,"line_start":261,"line_end":261,"column_start":12,"column_end":20},"name":"row_iter","qualname":"<Matrix<N, R, C, S>>::row_iter","value":"pub fn row_iter(&Self) -> RowIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the rows of this matrix.","sig":null,"attributes":[{"value":"/ Iterate through the rows of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342665,"byte_end":342709,"line_start":249,"line_end":249,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342714,"byte_end":342717,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342722,"byte_end":342735,"line_start":251,"line_end":251,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342740,"byte_end":342747,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342752,"byte_end":342782,"line_start":253,"line_end":253,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342787,"byte_end":342826,"line_start":254,"line_end":254,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342831,"byte_end":342871,"line_start":255,"line_end":255,"column_start":5,"column_end":45}},{"value":"/ for (i, row) in a.row_iter().enumerate() {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342876,"byte_end":342922,"line_start":256,"line_end":256,"column_start":5,"column_end":51}},{"value":"/     assert_eq!(row, a.row(i))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342927,"byte_end":342960,"line_start":257,"line_end":257,"column_start":5,"column_end":38}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342965,"byte_end":342970,"line_start":258,"line_end":258,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342975,"byte_end":342982,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":342987,"byte_end":342996,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343437,"byte_end":343448,"line_start":276,"line_end":276,"column_start":12,"column_end":23},"name":"column_iter","qualname":"<Matrix<N, R, C, S>>::column_iter","value":"pub fn column_iter(&Self) -> ColumnIter<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Iterate through the columns of this matrix.\n # Example\n ```\n # use nalgebra::Matrix2x3;\n let mut a = Matrix2x3::new(1, 2, 3,\n                            4, 5, 6);\n for (i, column) in a.column_iter().enumerate() {\n     assert_eq!(column, a.column(i))\n }\n ```\n","sig":null,"attributes":[{"value":"/ Iterate through the columns of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343087,"byte_end":343134,"line_start":265,"line_end":265,"column_start":5,"column_end":52}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343139,"byte_end":343152,"line_start":266,"line_end":266,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343157,"byte_end":343164,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343169,"byte_end":343199,"line_start":268,"line_end":268,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343204,"byte_end":343243,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343248,"byte_end":343288,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/ for (i, column) in a.column_iter().enumerate() {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343293,"byte_end":343345,"line_start":271,"line_end":271,"column_start":5,"column_end":57}},{"value":"/     assert_eq!(column, a.column(i))","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343350,"byte_end":343389,"line_start":272,"line_end":272,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343394,"byte_end":343399,"line_start":273,"line_end":273,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343404,"byte_end":343411,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343416,"byte_end":343425,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3509},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343655,"byte_end":343677,"line_start":283,"line_end":283,"column_start":12,"column_end":34},"name":"vector_to_matrix_index","qualname":"<Matrix<N, R, C, S>>::vector_to_matrix_index","value":"pub fn vector_to_matrix_index(&Self, usize) -> (usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Computes the row and column coordinates of the i-th element of this matrix seen as a\n vector.\n","sig":null,"attributes":[{"value":"/ Computes the row and column coordinates of the i-th element of this matrix seen as a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343525,"byte_end":343613,"line_start":280,"line_end":280,"column_start":5,"column_end":93}},{"value":"/ vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343618,"byte_end":343629,"line_start":281,"line_end":281,"column_start":5,"column_end":16}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":343634,"byte_end":343643,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3510},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344222,"byte_end":344228,"line_start":302,"line_end":302,"column_start":12,"column_end":18},"name":"as_ptr","qualname":"<Matrix<N, R, C, S>>::as_ptr","value":"pub fn as_ptr(&Self) -> *const N","parent":null,"children":[],"decl_id":null,"docs":" Returns a pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a pointer to the start of the matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344040,"byte_end":344089,"line_start":297,"line_end":297,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344094,"byte_end":344097,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344102,"byte_end":344174,"line_start":299,"line_end":299,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344179,"byte_end":344196,"line_start":300,"line_end":300,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344201,"byte_end":344210,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3511},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344458,"byte_end":344469,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"relative_eq","qualname":"<Matrix<N, R, C, S>>::relative_eq","value":"pub fn relative_eq<R2, C2,\n                   SB>(&Self, &Matrix<N, R2, C2, SB>, N::Epsilon, N::Epsilon)\n-> bool where N: RelativeEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nN::Epsilon: Copy, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are equal up to a given epsilon.","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are equal up to a given epsilon.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344285,"byte_end":344352,"line_start":306,"line_end":306,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344357,"byte_end":344360,"line_start":307,"line_end":307,"column_start":5,"column_end":8}},{"value":"/ See `relative_eq` from the `RelativeEq` trait for more details.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344365,"byte_end":344432,"line_start":308,"line_end":308,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344437,"byte_end":344446,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345072,"byte_end":345074,"line_start":332,"line_end":332,"column_start":12,"column_end":14},"name":"eq","qualname":"<Matrix<N, R, C, S>>::eq","value":"pub fn eq<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> bool where\nN: PartialEq, R2: Dim, C2: Dim, SB: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Tests whether `self` and `rhs` are exactly equal.\n","sig":null,"attributes":[{"value":"/ Tests whether `self` and `rhs` are exactly equal.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":344993,"byte_end":345046,"line_start":330,"line_end":330,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345051,"byte_end":345060,"line_start":331,"line_end":331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345512,"byte_end":345522,"line_start":346,"line_end":346,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Matrix<N, R, C, S>>::into_owned","value":"pub fn into_owned(Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345436,"byte_end":345486,"line_start":344,"line_end":344,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345491,"byte_end":345500,"line_start":345,"line_end":345,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3522},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345917,"byte_end":345931,"line_start":356,"line_end":356,"column_start":12,"column_end":26},"name":"into_owned_sum","qualname":"<Matrix<N, R, C, S>>::into_owned_sum","value":"pub fn into_owned_sum<R2, C2>(Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Moves this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Moves this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345745,"byte_end":345836,"line_start":353,"line_end":353,"column_start":5,"column_end":96}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345841,"byte_end":345891,"line_start":354,"line_end":354,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":345896,"byte_end":345905,"line_start":355,"line_end":355,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3525},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":346748,"byte_end":346759,"line_start":380,"line_end":380,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Matrix<N, R, C, S>>::clone_owned","value":"pub fn clone_owned(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix to one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this matrix to one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":346673,"byte_end":346722,"line_start":378,"line_end":378,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":346727,"byte_end":346736,"line_start":379,"line_end":379,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3526},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":347072,"byte_end":347087,"line_start":388,"line_end":388,"column_start":12,"column_end":27},"name":"clone_owned_sum","qualname":"<Matrix<N, R, C, S>>::clone_owned_sum","value":"pub fn clone_owned_sum<R2, C2>(&Self) -> MatrixSum<N, R, C, R2, C2> where\nR2: Dim, C2: Dim, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Clones this matrix into one that owns its data. The actual type of the result depends on\n matrix storage combination rules for addition.\n","sig":null,"attributes":[{"value":"/ Clones this matrix into one that owns its data. The actual type of the result depends on","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":346899,"byte_end":346991,"line_start":385,"line_end":385,"column_start":5,"column_end":97}},{"value":"/ matrix storage combination rules for addition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":346996,"byte_end":347046,"line_start":386,"line_end":386,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":347051,"byte_end":347060,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3529},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":348002,"byte_end":348005,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"map","qualname":"<Matrix<N, R, C, S>>::map","value":"pub fn map<N2: Scalar, F: FnMut(N) -> N2>(&Self, F) -> MatrixMN<N2, R, C>\nwhere DefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":347895,"byte_end":347976,"line_start":414,"line_end":414,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":347981,"byte_end":347990,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3532},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":348751,"byte_end":348768,"line_start":437,"line_end":437,"column_start":12,"column_end":29},"name":"map_with_location","qualname":"<Matrix<N, R, C, S>>::map_with_location","value":"pub fn map_with_location<N2: Scalar, F: FnMut(usize, usize, N) ->\n                         N2>(&Self, F) -> MatrixMN<N2, R, C> where\nDefaultAllocator: Allocator<N2, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,\n `f` also gets passed the row and column index, i.e. `f(row, col, value)`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each of its entries. Unlike `map`,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":348548,"byte_end":348643,"line_start":434,"line_end":434,"column_start":5,"column_end":100}},{"value":"/ `f` also gets passed the row and column index, i.e. `f(row, col, value)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":348648,"byte_end":348725,"line_start":435,"line_end":435,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":348730,"byte_end":348739,"line_start":436,"line_end":436,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3535},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":349495,"byte_end":349502,"line_start":463,"line_end":463,"column_start":12,"column_end":19},"name":"zip_map","qualname":"<Matrix<N, R, C, S>>::zip_map","value":"pub fn zip_map<N2, N3, S2, F>(&Self, &Matrix<N2, R, C, S2>, F)\n-> MatrixMN<N3, R, C> where N2: Scalar, N3: Scalar, S2: Storage<N2, R, C>,\nF: FnMut(N, N2) -> N3, DefaultAllocator: Allocator<N3, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `rhs`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":349367,"byte_end":349454,"line_start":460,"line_end":460,"column_start":5,"column_end":92}},{"value":"/ `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":349459,"byte_end":349469,"line_start":461,"line_end":461,"column_start":5,"column_end":15}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":349474,"byte_end":349483,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3540},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":350528,"byte_end":350539,"line_start":496,"line_end":496,"column_start":12,"column_end":23},"name":"zip_zip_map","qualname":"<Matrix<N, R, C, S>>::zip_zip_map","value":"pub fn zip_zip_map<N2, N3, N4, S2, S3,\n                   F>(&Self, &Matrix<N2, R, C, S2>, &Matrix<N3, R, C, S3>, F)\n-> MatrixMN<N4, R, C> where N2: Scalar, N3: Scalar, N4: Scalar,\nS2: Storage<N2, R, C>, S3: Storage<N3, R, C>, F: FnMut(N, N2, N3) -> N4,\nDefaultAllocator: Allocator<N4, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a matrix containing the result of `f` applied to each entries of `self` and\n `b`, and `c`.\n","sig":null,"attributes":[{"value":"/ Returns a matrix containing the result of `f` applied to each entries of `self` and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":350393,"byte_end":350480,"line_start":493,"line_end":493,"column_start":5,"column_end":92}},{"value":"/ `b`, and `c`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":350485,"byte_end":350502,"line_start":494,"line_end":494,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":350507,"byte_end":350516,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3547},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":351750,"byte_end":351754,"line_start":537,"line_end":537,"column_start":12,"column_end":16},"name":"fold","qualname":"<Matrix<N, R, C, S>>::fold","value":"pub fn fold<Acc, impl FnMut(Acc, N) -> Acc: FnMut(Acc, N) ->\n            Acc>(&Self, Acc, impl FnMut(Acc, N) -> Acc) -> Acc","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each entry of `self`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each entry of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":351675,"byte_end":351724,"line_start":535,"line_end":535,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":351729,"byte_end":351738,"line_start":536,"line_end":536,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3550},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":352260,"byte_end":352268,"line_start":556,"line_end":556,"column_start":12,"column_end":20},"name":"zip_fold","qualname":"<Matrix<N, R, C, S>>::zip_fold","value":"pub fn zip_fold<N2, R2, C2, S2, Acc,\n                impl FnMut(Acc, N, N2) -> Acc: FnMut(Acc, N, N2) ->\n                Acc>(&Self, &Matrix<N2, R2, C2, S2>, Acc,\n                     impl FnMut(Acc, N, N2) -> Acc) -> Acc where N2: Scalar,\nR2: Dim, C2: Dim, S2: Storage<N2, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Folds a function `f` on each pairs of entries from `self` and `rhs`.\n","sig":null,"attributes":[{"value":"/ Folds a function `f` on each pairs of entries from `self` and `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":352162,"byte_end":352234,"line_start":554,"line_end":554,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":352239,"byte_end":352248,"line_start":555,"line_end":555,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3557},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353230,"byte_end":353242,"line_start":588,"line_end":588,"column_start":12,"column_end":24},"name":"transpose_to","qualname":"<Matrix<N, R, C, S>>::transpose_to","value":"pub fn transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Transposes `self` and store the result into `out`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353150,"byte_end":353204,"line_start":586,"line_end":586,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353209,"byte_end":353218,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3561},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353928,"byte_end":353937,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Matrix<N, R, C, S>>::transpose","value":"pub fn transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.\n","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353880,"byte_end":353902,"line_start":611,"line_end":611,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":353907,"byte_end":353916,"line_start":612,"line_end":612,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3567},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354393,"byte_end":354401,"line_start":629,"line_end":629,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Matrix<N, R, C, S>>::iter_mut","value":"pub fn iter_mut(&mut Self) -> MatrixIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix coordinates.\n","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354314,"byte_end":354367,"line_start":627,"line_end":627,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354372,"byte_end":354381,"line_start":628,"line_end":628,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3568},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354688,"byte_end":354698,"line_start":638,"line_end":638,"column_start":12,"column_end":22},"name":"as_mut_ptr","qualname":"<Matrix<N, R, C, S>>::as_mut_ptr","value":"pub fn as_mut_ptr(&mut Self) -> *mut N","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable pointer to the start of the matrix.","sig":null,"attributes":[{"value":"/ Returns a mutable pointer to the start of the matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354498,"byte_end":354555,"line_start":633,"line_end":633,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354560,"byte_end":354563,"line_start":634,"line_end":634,"column_start":5,"column_end":8}},{"value":"/ If the matrix is not empty, this pointer is guaranteed to be aligned","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354568,"byte_end":354640,"line_start":635,"line_end":635,"column_start":5,"column_end":77}},{"value":"/ and non-null.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354645,"byte_end":354662,"line_start":636,"line_end":636,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354667,"byte_end":354676,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3569},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355253,"byte_end":355265,"line_start":658,"line_end":658,"column_start":12,"column_end":24},"name":"row_iter_mut","qualname":"<Matrix<N, R, C, S>>::row_iter_mut","value":"pub fn row_iter_mut(&mut Self) -> RowIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix rows.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354761,"byte_end":354807,"line_start":642,"line_end":642,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354812,"byte_end":354815,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354820,"byte_end":354833,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354838,"byte_end":354845,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354850,"byte_end":354880,"line_start":646,"line_end":646,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354885,"byte_end":354924,"line_start":647,"line_end":647,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354929,"byte_end":354969,"line_start":648,"line_end":648,"column_start":5,"column_end":45}},{"value":"/ for (i, mut row) in a.row_iter_mut().enumerate() {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354974,"byte_end":355028,"line_start":649,"line_end":649,"column_start":5,"column_end":59}},{"value":"/     row *= (i + 1) * 10;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355033,"byte_end":355061,"line_start":650,"line_end":650,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355066,"byte_end":355071,"line_start":651,"line_end":651,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355076,"byte_end":355079,"line_start":652,"line_end":652,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 20, 30,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355084,"byte_end":355129,"line_start":653,"line_end":653,"column_start":5,"column_end":50}},{"value":"/                               80, 100, 120);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355134,"byte_end":355182,"line_start":654,"line_end":654,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355187,"byte_end":355215,"line_start":655,"line_end":655,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355220,"byte_end":355227,"line_start":656,"line_end":656,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355232,"byte_end":355241,"line_start":657,"line_end":657,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3570},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355844,"byte_end":355859,"line_start":678,"line_end":678,"column_start":12,"column_end":27},"name":"column_iter_mut","qualname":"<Matrix<N, R, C, S>>::column_iter_mut","value":"pub fn column_iter_mut(&mut Self) -> ColumnIterMut<, N, R, C, S>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this matrix columns.","sig":null,"attributes":[{"value":"/ Mutably iterates through this matrix columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355346,"byte_end":355395,"line_start":662,"line_end":662,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355400,"byte_end":355403,"line_start":663,"line_end":663,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355408,"byte_end":355421,"line_start":664,"line_end":664,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355426,"byte_end":355433,"line_start":665,"line_end":665,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355438,"byte_end":355468,"line_start":666,"line_end":666,"column_start":5,"column_end":35}},{"value":"/ let mut a = Matrix2x3::new(1, 2, 3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355473,"byte_end":355512,"line_start":667,"line_end":667,"column_start":5,"column_end":44}},{"value":"/                            4, 5, 6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355517,"byte_end":355557,"line_start":668,"line_end":668,"column_start":5,"column_end":45}},{"value":"/ for (i, mut col) in a.column_iter_mut().enumerate() {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355562,"byte_end":355619,"line_start":669,"line_end":669,"column_start":5,"column_end":62}},{"value":"/     col *= (i + 1) * 10;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355624,"byte_end":355652,"line_start":670,"line_end":670,"column_start":5,"column_end":33}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355657,"byte_end":355662,"line_start":671,"line_end":671,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355667,"byte_end":355670,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix2x3::new(10, 40, 90,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355675,"byte_end":355720,"line_start":673,"line_end":673,"column_start":5,"column_end":50}},{"value":"/                               40, 100, 180);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355725,"byte_end":355773,"line_start":674,"line_end":674,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(a, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355778,"byte_end":355806,"line_start":675,"line_end":675,"column_start":5,"column_end":33}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355811,"byte_end":355818,"line_start":676,"line_end":676,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355823,"byte_end":355832,"line_start":677,"line_end":677,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3571},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356024,"byte_end":356038,"line_start":684,"line_end":684,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Matrix<N, R, C, S>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355946,"byte_end":355991,"line_start":682,"line_end":682,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":355996,"byte_end":356005,"line_start":683,"line_end":683,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3572},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356382,"byte_end":356386,"line_start":692,"line_end":692,"column_start":12,"column_end":16},"name":"swap","qualname":"<Matrix<N, R, C, S>>::swap","value":"pub fn swap(&mut Self, (usize, usize), (usize, usize))","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries.\n","sig":null,"attributes":[{"value":"/ Swaps two entries.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356334,"byte_end":356356,"line_start":690,"line_end":690,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356361,"byte_end":356370,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3573},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":357062,"byte_end":357077,"line_start":709,"line_end":709,"column_start":12,"column_end":27},"name":"copy_from_slice","qualname":"<Matrix<N, R, C, S>>::copy_from_slice","value":"pub fn copy_from_slice(&mut Self, &[N])","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of a slice. Both must hold the same number of elements.","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of a slice. Both must hold the same number of elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356849,"byte_end":356943,"line_start":705,"line_end":705,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356948,"byte_end":356951,"line_start":706,"line_end":706,"column_start":5,"column_end":8}},{"value":"/ The components of the slice are assumed to be ordered in column-major order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":356956,"byte_end":357036,"line_start":707,"line_end":707,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":357041,"byte_end":357050,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3574},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":357639,"byte_end":357648,"line_start":728,"line_end":728,"column_start":12,"column_end":21},"name":"copy_from","qualname":"<Matrix<N, R, C, S>>::copy_from","value":"pub fn copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of another one. Both must have the same shape.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of another one. Both must have the same shape.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":357528,"byte_end":357613,"line_start":726,"line_end":726,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":357618,"byte_end":357627,"line_start":727,"line_end":727,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3578},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":358333,"byte_end":358345,"line_start":751,"line_end":751,"column_start":12,"column_end":24},"name":"tr_copy_from","qualname":"<Matrix<N, R, C, S>>::tr_copy_from","value":"pub fn tr_copy_from<R2, C2, SB>(&mut Self, &Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, C2> +\nSameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Fills this matrix with the content of the transpose another one.\n","sig":null,"attributes":[{"value":"/ Fills this matrix with the content of the transpose another one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":358239,"byte_end":358307,"line_start":749,"line_end":749,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":358312,"byte_end":358321,"line_start":750,"line_end":750,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3582},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359157,"byte_end":359167,"line_start":776,"line_end":776,"column_start":12,"column_end":22},"name":"apply_into","qualname":"<Matrix<N, R, C, S>>::apply_into","value":"pub fn apply_into<F: FnMut(N) -> N>(Self, F) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns `self` with each of its components replaced by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Returns `self` with each of its components replaced by the result of a closure `f` applied on it.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359030,"byte_end":359131,"line_start":774,"line_end":774,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359136,"byte_end":359145,"line_start":775,"line_end":775,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3584},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359367,"byte_end":359372,"line_start":783,"line_end":783,"column_start":12,"column_end":17},"name":"apply","qualname":"<Matrix<N, R, C, S>>::apply","value":"pub fn apply<F: FnMut(N) -> N>(&mut Self, F)","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on it.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on it.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359258,"byte_end":359341,"line_start":781,"line_end":781,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359346,"byte_end":359355,"line_start":782,"line_end":782,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3586},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359857,"byte_end":359866,"line_start":799,"line_end":799,"column_start":12,"column_end":21},"name":"zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_apply","value":"pub fn zip_apply<N2, R2, C2, S2, impl FnMut(N, N2) -> N: FnMut(N, N2) ->\n                 N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                    impl FnMut(N, N2) -> N) where N2: Scalar, R2: Dim,\nC2: Dim, S2: Storage<N2, R2, C2>, ShapeConstraint: SameNumberOfRows<R, R2> +\nSameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `rhs`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359690,"byte_end":359784,"line_start":796,"line_end":796,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359789,"byte_end":359831,"line_start":797,"line_end":797,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":359836,"byte_end":359845,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3592},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":360808,"byte_end":360821,"line_start":827,"line_end":827,"column_start":12,"column_end":25},"name":"zip_zip_apply","qualname":"<Matrix<N, R, C, S>>::zip_zip_apply","value":"pub fn zip_zip_apply<N2, R2, C2, S2, N3, R3, C3, S3,\n                     impl FnMut(N, N2, N3) -> N: FnMut(N, N2, N3) ->\n                     N>(&mut Self, &Matrix<N2, R2, C2, S2>,\n                        &Matrix<N3, R3, C3, S3>, impl FnMut(N, N2, N3) -> N)\nwhere N2: Scalar, R2: Dim, C2: Dim, S2: Storage<N2, R2, C2>, N3: Scalar,\nR3: Dim, C3: Dim, S3: Storage<N3, R3, C3>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Replaces each component of `self` by the result of a closure `f` applied on its components\n joined with the components from `b` and `c`.\n","sig":null,"attributes":[{"value":"/ Replaces each component of `self` by the result of a closure `f` applied on its components","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":360635,"byte_end":360729,"line_start":824,"line_end":824,"column_start":5,"column_end":99}},{"value":"/ joined with the components from `b` and `c`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":360734,"byte_end":360782,"line_start":825,"line_end":825,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":360787,"byte_end":360796,"line_start":826,"line_end":826,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3606},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362201,"byte_end":362215,"line_start":865,"line_end":865,"column_start":19,"column_end":33},"name":"vget_unchecked","qualname":"<Vector<N, D, S>>::vget_unchecked","value":"pub unsafe fn vget_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362082,"byte_end":362168,"line_start":863,"line_end":863,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362173,"byte_end":362182,"line_start":864,"line_end":864,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3611},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362596,"byte_end":362614,"line_start":875,"line_end":875,"column_start":19,"column_end":37},"name":"vget_unchecked_mut","qualname":"<Vector<N, D, S>>::vget_unchecked_mut","value":"pub unsafe fn vget_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to the i-th element of this column vector without bound checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to the i-th element of this column vector without bound checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362469,"byte_end":362563,"line_start":873,"line_end":873,"column_start":5,"column_end":99}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362568,"byte_end":362577,"line_start":874,"line_end":874,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3617},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363011,"byte_end":363019,"line_start":885,"line_end":885,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Matrix<N, R, C, S>>::as_slice","value":"pub fn as_slice(&Self) -> &[N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362901,"byte_end":362985,"line_start":883,"line_end":883,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362990,"byte_end":362999,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3623},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363284,"byte_end":363296,"line_start":893,"line_end":893,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<Matrix<N, R, C, S>>::as_mut_slice","value":"pub fn as_mut_slice(&mut Self) -> &mut [N]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire matrix entries ordered column-by-columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363166,"byte_end":363258,"line_start":891,"line_end":891,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363263,"byte_end":363272,"line_start":892,"line_end":892,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3628},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363498,"byte_end":363511,"line_start":900,"line_end":900,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Matrix<N, D, D, S>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes the square matrix `self` in-place.\n","sig":null,"attributes":[{"value":"/ Transposes the square matrix `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363437,"byte_end":363486,"line_start":899,"line_end":899,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":3634},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":364034,"byte_end":364044,"line_start":919,"line_end":919,"column_start":12,"column_end":22},"name":"adjoint_to","qualname":"<Matrix<N, R, C, S>>::adjoint_to","value":"pub fn adjoint_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>) where\nR2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the adjoint (aka. conjugate-transpose) of `self` and store the result into `out`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363917,"byte_end":364008,"line_start":917,"line_end":917,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":364013,"byte_end":364022,"line_start":918,"line_end":918,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3638},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":364772,"byte_end":364779,"line_start":944,"line_end":944,"column_start":12,"column_end":19},"name":"adjoint","qualname":"<Matrix<N, R, C, S>>::adjoint","value":"pub fn adjoint(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The adjoint (aka. conjugate-transpose) of `self`.\n","sig":null,"attributes":[{"value":"/ The adjoint (aka. conjugate-transpose) of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":364693,"byte_end":364746,"line_start":942,"line_end":942,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":364751,"byte_end":364760,"line_start":943,"line_end":943,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3639},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365258,"byte_end":365280,"line_start":959,"line_end":959,"column_start":12,"column_end":34},"name":"conjugate_transpose_to","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose_to","value":"pub fn conjugate_transpose_to<R2, C2, SB>(&Self, &mut Matrix<N, R2, C2, SB>)\nwhere R2: Dim, C2: Dim, SB: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, C2> + SameNumberOfColumns<C, R2>","parent":null,"children":[],"decl_id":null,"docs":" Takes the conjugate and transposes `self` and store the result into `out`.\n","sig":null,"attributes":[{"value":"/ Takes the conjugate and transposes `self` and store the result into `out`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365094,"byte_end":365172,"line_start":956,"line_end":956,"column_start":5,"column_end":83}},{"value":"deprecated(note = \"Renamed `self.adjoint_to(out)`.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365177,"byte_end":365232,"line_start":957,"line_end":957,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365237,"byte_end":365246,"line_start":958,"line_end":958,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3643},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365679,"byte_end":365698,"line_start":972,"line_end":972,"column_start":12,"column_end":31},"name":"conjugate_transpose","qualname":"<Matrix<N, R, C, S>>::conjugate_transpose","value":"pub fn conjugate_transpose(&Self) -> MatrixMN<N, C, R> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate transposition of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate transposition of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365557,"byte_end":365599,"line_start":969,"line_end":969,"column_start":5,"column_end":47}},{"value":"deprecated(note = \"Renamed `self.adjoint()`.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365604,"byte_end":365653,"line_start":970,"line_end":970,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365658,"byte_end":365667,"line_start":971,"line_end":971,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3644},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365868,"byte_end":365877,"line_start":979,"line_end":979,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Matrix<N, R, C, S>>::conjugate","value":"pub fn conjugate(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of `self`.\n","sig":null,"attributes":[{"value":"/ The conjugate of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365814,"byte_end":365842,"line_start":977,"line_end":977,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":365847,"byte_end":365856,"line_start":978,"line_end":978,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3646},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366106,"byte_end":366113,"line_start":986,"line_end":986,"column_start":12,"column_end":19},"name":"unscale","qualname":"<Matrix<N, R, C, S>>::unscale","value":"pub fn unscale(&Self, N::RealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366006,"byte_end":366080,"line_start":984,"line_end":984,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366085,"byte_end":366094,"line_start":985,"line_end":985,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3648},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366367,"byte_end":366372,"line_start":993,"line_end":993,"column_start":12,"column_end":17},"name":"scale","qualname":"<Matrix<N, R, C, S>>::scale","value":"pub fn scale(&Self, N::RealField) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366264,"byte_end":366341,"line_start":991,"line_end":991,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366346,"byte_end":366355,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3655},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366697,"byte_end":366710,"line_start":1002,"line_end":1002,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Matrix<N, R, C, S>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of the complex matrix `self` computed in-place.\n","sig":null,"attributes":[{"value":"/ The conjugate of the complex matrix `self` computed in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366606,"byte_end":366671,"line_start":1000,"line_end":1000,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366676,"byte_end":366685,"line_start":1001,"line_end":1001,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3657},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366873,"byte_end":366884,"line_start":1008,"line_end":1008,"column_start":12,"column_end":23},"name":"unscale_mut","qualname":"<Matrix<N, R, C, S>>::unscale_mut","value":"pub fn unscale_mut(&mut Self, N::RealField)","parent":null,"children":[],"decl_id":null,"docs":" Divides each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Divides each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366773,"byte_end":366847,"line_start":1006,"line_end":1006,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366852,"byte_end":366861,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3659},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367072,"byte_end":367081,"line_start":1014,"line_end":1014,"column_start":12,"column_end":21},"name":"scale_mut","qualname":"<Matrix<N, R, C, S>>::scale_mut","value":"pub fn scale_mut(&mut Self, N::RealField)","parent":null,"children":[],"decl_id":null,"docs":" Multiplies each component of the complex matrix `self` by the given real.\n","sig":null,"attributes":[{"value":"/ Multiplies each component of the complex matrix `self` by the given real.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366969,"byte_end":367046,"line_start":1012,"line_end":1012,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367051,"byte_end":367060,"line_start":1013,"line_end":1013,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3665},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367345,"byte_end":367368,"line_start":1022,"line_end":1022,"column_start":12,"column_end":35},"name":"conjugate_transform_mut","qualname":"<Matrix<N, D, D, S>>::conjugate_transform_mut","value":"pub fn conjugate_transform_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint.\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367241,"byte_end":367272,"line_start":1020,"line_end":1020,"column_start":5,"column_end":36}},{"value":"deprecated(note = \"Renamed to `self.adjoint_mut()`.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367277,"byte_end":367333,"line_start":1021,"line_end":1021,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":3666},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367490,"byte_end":367501,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"adjoint_mut","qualname":"<Matrix<N, D, D, S>>::adjoint_mut","value":"pub fn adjoint_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to its adjoint (aka. conjugate-transpose).\n","sig":null,"attributes":[{"value":"/ Sets `self` to its adjoint (aka. conjugate-transpose).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367420,"byte_end":367478,"line_start":1026,"line_end":1026,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":3671},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368417,"byte_end":368425,"line_start":1058,"line_end":1058,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SquareMatrix<N, D, S>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N, D> where\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal of this matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368359,"byte_end":368391,"line_start":1056,"line_end":1056,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368396,"byte_end":368405,"line_start":1057,"line_end":1057,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3673},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368743,"byte_end":368755,"line_start":1067,"line_end":1067,"column_start":12,"column_end":24},"name":"map_diagonal","qualname":"<SquareMatrix<N, D, S>>::map_diagonal","value":"pub fn map_diagonal<N2: Scalar, impl FnMut(N) -> N2: FnMut(N) ->\n                    N2>(&Self, impl FnMut(N) -> N2) -> VectorN<N2, D> where\nDefaultAllocator: Allocator<N2, D>","parent":null,"children":[],"decl_id":null,"docs":" Apply the given function to this matrix's diagonal and returns it.","sig":null,"attributes":[{"value":"/ Apply the given function to this matrix's diagonal and returns it.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368544,"byte_end":368614,"line_start":1063,"line_end":1063,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368619,"byte_end":368622,"line_start":1064,"line_end":1064,"column_start":5,"column_end":8}},{"value":"/ This is a more efficient version of `self.diagonal().map(f)` since this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368627,"byte_end":368702,"line_start":1065,"line_end":1065,"column_start":5,"column_end":80}},{"value":"/ allocates only once.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368707,"byte_end":368731,"line_start":1066,"line_end":1066,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":3676},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369400,"byte_end":369405,"line_start":1088,"line_end":1088,"column_start":12,"column_end":17},"name":"trace","qualname":"<SquareMatrix<N, D, S>>::trace","value":"pub fn trace(&Self) -> N where N: Ring","parent":null,"children":[],"decl_id":null,"docs":" Computes a trace of a square matrix, i.e., the sum of its diagonal elements.\n","sig":null,"attributes":[{"value":"/ Computes a trace of a square matrix, i.e., the sum of its diagonal elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369294,"byte_end":369374,"line_start":1086,"line_end":1086,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369379,"byte_end":369388,"line_start":1087,"line_end":1087,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3681},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369939,"byte_end":369953,"line_start":1109,"line_end":1109,"column_start":12,"column_end":26},"name":"symmetric_part","qualname":"<SquareMatrix<N, D, S>>::symmetric_part","value":"pub fn symmetric_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.\n","sig":null,"attributes":[{"value":"/ The symmetric part of `self`, i.e., `0.5 * (self + self.transpose())`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369839,"byte_end":369913,"line_start":1107,"line_end":1107,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369918,"byte_end":369927,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3682},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370353,"byte_end":370367,"line_start":1120,"line_end":1120,"column_start":12,"column_end":26},"name":"hermitian_part","qualname":"<SquareMatrix<N, D, S>>::hermitian_part","value":"pub fn hermitian_part(&Self) -> MatrixMN<N, D, D> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.\n","sig":null,"attributes":[{"value":"/ The hermitian part of `self`, i.e., `0.5 * (self + self.adjoint())`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370255,"byte_end":370327,"line_start":1118,"line_end":1118,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370332,"byte_end":370341,"line_start":1119,"line_end":1119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3687},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370943,"byte_end":370957,"line_start":1136,"line_end":1136,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Matrix<N, D, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and\n and setting the diagonal element to `1`.\n","sig":null,"attributes":[{"value":"/ Yields the homogeneous matrix for this matrix, i.e., appending an additional dimension and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370774,"byte_end":370868,"line_start":1133,"line_end":1133,"column_start":5,"column_end":99}},{"value":"/ and setting the diagonal element to `1`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370873,"byte_end":370917,"line_start":1134,"line_end":1134,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370922,"byte_end":370931,"line_start":1135,"line_end":1135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3692},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371629,"byte_end":371643,"line_start":1151,"line_end":1151,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Vector<N, D, S>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the coordinates in projective space of this vector, i.e., appends a `0` to its\n coordinates.\n","sig":null,"attributes":[{"value":"/ Computes the coordinates in projective space of this vector, i.e., appends a `0` to its","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371491,"byte_end":371582,"line_start":1148,"line_end":1148,"column_start":5,"column_end":96}},{"value":"/ coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371587,"byte_end":371603,"line_start":1149,"line_end":1149,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371608,"byte_end":371617,"line_start":1150,"line_end":1150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3693},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371966,"byte_end":371982,"line_start":1159,"line_end":1159,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Vector<N, D, S>>::from_homogeneous","value":"pub fn from_homogeneous<SB>(Vector<N, DimSum<D, U1>, SB>)\n-> Option<VectorN<N, D>> where SB: Storage<N, DimSum<D, U1>>,\nDefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of\n `self`. Returns `None` if this last component is not zero.\n","sig":null,"attributes":[{"value":"/ Constructs a vector from coordinates in projective space, i.e., removes a `0` at the end of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371778,"byte_end":371873,"line_start":1156,"line_end":1156,"column_start":5,"column_end":100}},{"value":"/ `self`. Returns `None` if this last component is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371878,"byte_end":371940,"line_start":1157,"line_end":1157,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371945,"byte_end":371954,"line_start":1158,"line_end":1158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3699},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":372550,"byte_end":372554,"line_start":1176,"line_end":1176,"column_start":12,"column_end":16},"name":"push","qualname":"<Vector<N, D, S>>::push","value":"pub fn push(&Self, N) -> VectorN<N, DimSum<D, U1>> where\nDefaultAllocator: Allocator<N, DimSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new vector of higher dimension by appending `element` to the end of `self`.\n","sig":null,"attributes":[{"value":"/ Constructs a new vector of higher dimension by appending `element` to the end of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":372432,"byte_end":372524,"line_start":1174,"line_end":1174,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":372529,"byte_end":372538,"line_start":1175,"line_end":1175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3756},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381129,"byte_end":381133,"line_start":1460,"line_end":1460,"column_start":12,"column_end":16},"name":"perp","qualname":"<Matrix<N, R, C, S>>::perp","value":"pub fn perp<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>) -> N where R2: Dim,\nC2: Dim, SB: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R, U2> +\nSameNumberOfColumns<C, U1> + SameNumberOfRows<R2, U2> +\nSameNumberOfColumns<C2, U1>","parent":null,"children":[],"decl_id":null,"docs":" The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.\n","sig":null,"attributes":[{"value":"/ The perpendicular product between two 2D column vectors, i.e. `a.x * b.y - a.y * b.x`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381013,"byte_end":381103,"line_start":1458,"line_end":1458,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381108,"byte_end":381117,"line_start":1459,"line_end":1459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3760},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381989,"byte_end":381994,"line_start":1484,"line_end":1484,"column_start":12,"column_end":17},"name":"cross","qualname":"<Matrix<N, R, C, S>>::cross","value":"pub fn cross<R2, C2, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> MatrixCross<N, R, C, R2, C2> where R2: Dim, C2: Dim,\nSB: Storage<N, R2, C2>, DefaultAllocator: SameShapeAllocator<N, R, C, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The 3D cross product between two vectors.","sig":null,"attributes":[{"value":"/ The 3D cross product between two vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381746,"byte_end":381791,"line_start":1479,"line_end":1479,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381796,"byte_end":381799,"line_start":1480,"line_end":1480,"column_start":5,"column_end":8}},{"value":"/ Panics if the shape is not 3D vector. In the future, this will be implemented only for","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381804,"byte_end":381894,"line_start":1481,"line_end":1481,"column_start":5,"column_end":95}},{"value":"/ dynamically-sized matrices and statically-sized 3D matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381899,"byte_end":381963,"line_start":1482,"line_end":1482,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":381968,"byte_end":381977,"line_start":1483,"line_end":1483,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3767},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384534,"byte_end":384546,"line_start":1553,"line_end":1553,"column_start":12,"column_end":24},"name":"cross_matrix","qualname":"<Vector<N, U3, S>>::cross_matrix","value":"pub fn cross_matrix(&Self) -> MatrixN<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.\n","sig":null,"attributes":[{"value":"/ Computes the matrix `M` such that for all vector `v` we have `M * v == self.cross(&v)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384417,"byte_end":384508,"line_start":1551,"line_end":1551,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384513,"byte_end":384522,"line_start":1552,"line_end":1552,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3773},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384975,"byte_end":384980,"line_start":1571,"line_end":1571,"column_start":12,"column_end":17},"name":"angle","qualname":"<Matrix<N, R, C, S>>::angle","value":"pub fn angle<R2: Dim, C2: Dim, SB>(&Self, &Matrix<N, R2, C2, SB>)\n-> N::RealField where SB: Storage<N, R2, C2>, ShapeConstraint: DimEq<R, R2> +\nDimEq<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest angle between two vectors.\n","sig":null,"attributes":[{"value":"/ The smallest angle between two vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384906,"byte_end":384949,"line_start":1569,"line_end":1569,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384954,"byte_end":384963,"line_start":1570,"line_end":1570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3781},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386216,"byte_end":386220,"line_start":1611,"line_end":1611,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector<N, D, S>>::lerp","value":"pub fn lerp<S2: Storage<N, D>>(&Self, &Vector<N, D, S2>, N) -> VectorN<N, D>\nwhere DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","sig":null,"attributes":[{"value":"/ Returns `self * (1.0 - t) + rhs * t`, i.e., the linear blend of the vectors x and y using the scalar value a.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385766,"byte_end":385879,"line_start":1599,"line_end":1599,"column_start":5,"column_end":118}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385884,"byte_end":385887,"line_start":1600,"line_end":1600,"column_start":5,"column_end":8}},{"value":"/ The value for a is not restricted to the range `[0, 1]`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385892,"byte_end":385952,"line_start":1601,"line_end":1601,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385957,"byte_end":385960,"line_start":1602,"line_end":1602,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385965,"byte_end":385980,"line_start":1603,"line_end":1603,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385985,"byte_end":385988,"line_start":1604,"line_end":1604,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385993,"byte_end":386000,"line_start":1605,"line_end":1605,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Vector3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386005,"byte_end":386033,"line_start":1606,"line_end":1606,"column_start":5,"column_end":33}},{"value":"/ let x = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386038,"byte_end":386078,"line_start":1607,"line_end":1607,"column_start":5,"column_end":45}},{"value":"/ let y = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386083,"byte_end":386126,"line_start":1608,"line_end":1608,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(x.lerp(&y, 0.1), Vector3::new(1.9, 3.8, 5.7));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386131,"byte_end":386192,"line_start":1609,"line_end":1609,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386197,"byte_end":386204,"line_start":1610,"line_end":1610,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3787},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387035,"byte_end":387040,"line_start":1634,"line_end":1634,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Unit<Vector<N, D, S>>>::slerp","value":"pub fn slerp<S2: Storage<N, D>>(&Self, &Unit<Vector<N, D, S2>>, N::RealField)\n-> Unit<VectorN<N, D>> where DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386519,"byte_end":386592,"line_start":1620,"line_end":1620,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386597,"byte_end":386600,"line_start":1621,"line_end":1621,"column_start":5,"column_end":8}},{"value":"/ # Examples:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386605,"byte_end":386620,"line_start":1622,"line_end":1622,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386625,"byte_end":386628,"line_start":1623,"line_end":1623,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386633,"byte_end":386640,"line_start":1624,"line_end":1624,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::geometry::UnitQuaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386645,"byte_end":386690,"line_start":1625,"line_end":1625,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386695,"byte_end":386698,"line_start":1626,"line_end":1626,"column_start":5,"column_end":8}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(std::f32::consts::FRAC_PI_4, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386703,"byte_end":386789,"line_start":1627,"line_end":1627,"column_start":5,"column_end":91}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-std::f32::consts::PI, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386794,"byte_end":386874,"line_start":1628,"line_end":1628,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386879,"byte_end":386882,"line_start":1629,"line_end":1629,"column_start":5,"column_end":8}},{"value":"/ let q = q1.slerp(&q2, 1.0 / 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386887,"byte_end":386924,"line_start":1630,"line_end":1630,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386929,"byte_end":386932,"line_start":1631,"line_end":1631,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.euler_angles(), (std::f32::consts::FRAC_PI_2, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386937,"byte_end":387011,"line_start":1632,"line_end":1632,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387016,"byte_end":387023,"line_start":1633,"line_end":1633,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":3789},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387711,"byte_end":387720,"line_start":1651,"line_end":1651,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<Unit<Vector<N, D, S>>>::try_slerp","value":"pub fn try_slerp<S2: Storage<N,\n                             D>>(&Self, &Unit<Vector<N, D, S2>>, N::RealField,\n                                 N::RealField) -> Option<Unit<VectorN<N, D>>>\nwhere DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit vectors.","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387461,"byte_end":387534,"line_start":1647,"line_end":1647,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387539,"byte_end":387542,"line_start":1648,"line_end":1648,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the two vectors are almost collinear and with opposite direction","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387547,"byte_end":387633,"line_start":1649,"line_end":1649,"column_start":5,"column_end":91}},{"value":"/ (in this case, there is an infinity of possible results).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":387638,"byte_end":387699,"line_start":1650,"line_end":1650,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":4104},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403383,"byte_end":403395,"line_start":37,"line_end":37,"column_start":12,"column_end":24},"name":"ArrayStorage","qualname":"::base::array_storage::ArrayStorage","value":"ArrayStorage {  }","parent":null,"children":[{"krate":0,"index":4108}],"decl_id":null,"docs":" A array-based statically sized matrix data storage.\n","sig":null,"attributes":[{"value":"/ A array-based statically sized matrix data storage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403305,"byte_end":403360,"line_start":35,"line_end":35,"column_start":1,"column_end":56}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403361,"byte_end":403371,"line_start":36,"line_end":36,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":4109},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403664,"byte_end":403675,"line_start":49,"line_end":49,"column_start":10,"column_end":21},"name":"MatrixArray","qualname":"::base::array_storage::MatrixArray","value":"ArrayStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [ArrayStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `ArrayStorage`\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403576,"byte_end":403623,"line_start":47,"line_end":47,"column_start":1,"column_end":48}},{"value":"/ Renamed to [ArrayStorage].","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403624,"byte_end":403654,"line_start":48,"line_end":48,"column_start":1,"column_end":31}}]},{"kind":"Struct","id":{"krate":0,"index":20848},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415034,"byte_end":415046,"line_start":85,"line_end":85,"column_start":23,"column_end":35},"name":"SliceStorage","qualname":"::base::matrix_slice::SliceStorage","value":"SliceStorage {  }","parent":null,"children":[{"krate":0,"index":20855},{"krate":0,"index":20856},{"krate":0,"index":20857},{"krate":0,"index":20858}],"decl_id":null,"docs":"A matrix data storage for a matrix slice. Only contains an internal reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20904},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415298,"byte_end":415313,"line_start":89,"line_end":89,"column_start":30,"column_end":45},"name":"SliceStorageMut","qualname":"::base::matrix_slice::SliceStorageMut","value":"SliceStorageMut {  }","parent":null,"children":[{"krate":0,"index":20911},{"krate":0,"index":20912},{"krate":0,"index":20913},{"krate":0,"index":20914}],"decl_id":null,"docs":"A mutable matrix data storage for mutable matrix slice. Only contains an internal mutable reference to another matrix data storage.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":20955},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437267,"byte_end":437278,"line_start":621,"line_end":621,"column_start":19,"column_end":30},"name":"MatrixSlice","qualname":"::base::matrix_slice::MatrixSlice","value":"Matrix<N, R, C, SliceStorage>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421189,"byte_end":421208,"line_start":260,"line_end":260,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":20967},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437344,"byte_end":437347,"line_start":622,"line_end":622,"column_start":6,"column_end":9},"name":"row","qualname":"<Matrix<N, R, C, S>>::row","value":"pub fn row(&Self, usize) -> MatrixSlice<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421528,"byte_end":421587,"line_start":270,"line_end":270,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421600,"byte_end":421609,"line_start":271,"line_end":271,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20968},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437354,"byte_end":437362,"line_start":623,"line_end":623,"column_start":6,"column_end":14},"name":"row_part","qualname":"<Matrix<N, R, C, S>>::row_part","value":"pub fn row_part(&Self, usize, usize)\n-> MatrixSlice<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421774,"byte_end":421859,"line_start":276,"line_end":276,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421872,"byte_end":421881,"line_start":277,"line_end":277,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20969},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437369,"byte_end":437373,"line_start":624,"line_end":624,"column_start":6,"column_end":10},"name":"rows","qualname":"<Matrix<N, R, C, S>>::rows","value":"pub fn rows(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422092,"byte_end":422148,"line_start":282,"line_end":282,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422161,"byte_end":422170,"line_start":283,"line_end":283,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20970},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437380,"byte_end":437394,"line_start":625,"line_end":625,"column_start":6,"column_end":20},"name":"rows_with_step","qualname":"<Matrix<N, R, C, S>>::rows_with_step","value":"pub fn rows_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422405,"byte_end":422492,"line_start":290,"line_end":290,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422505,"byte_end":422514,"line_start":291,"line_end":291,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20971},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437401,"byte_end":437411,"line_start":626,"line_end":626,"column_start":6,"column_end":16},"name":"fixed_rows","qualname":"<Matrix<N, R, C, S>>::fixed_rows","value":"pub fn fixed_rows<RSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422785,"byte_end":422857,"line_start":298,"line_end":298,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422870,"byte_end":422879,"line_start":299,"line_end":299,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20973},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437418,"byte_end":437438,"line_start":627,"line_end":627,"column_start":6,"column_end":26},"name":"fixed_rows_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step","value":"pub fn fixed_rows_with_step<RSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423117,"byte_end":423202,"line_start":306,"line_end":306,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423215,"byte_end":423224,"line_start":307,"line_end":307,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423237,"byte_end":423246,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20975},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437445,"byte_end":437457,"line_start":628,"line_end":628,"column_start":6,"column_end":18},"name":"rows_generic","qualname":"<Matrix<N, R, C, S>>::rows_generic","value":"pub fn rows_generic<RSlice: Dim>(&Self, usize, RSlice)\n-> MatrixSlice<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423520,"byte_end":423599,"line_start":315,"line_end":315,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423612,"byte_end":423672,"line_start":316,"line_end":316,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423685,"byte_end":423694,"line_start":317,"line_end":317,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20977},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437464,"byte_end":437486,"line_start":629,"line_end":629,"column_start":6,"column_end":28},"name":"rows_generic_with_step","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step","value":"pub fn rows_generic_with_step<RSlice>(&Self, usize, RSlice, usize)\n-> MatrixSlice<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424286,"byte_end":424365,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424378,"byte_end":424438,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424451,"byte_end":424460,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20979},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437493,"byte_end":437499,"line_start":630,"line_end":630,"column_start":6,"column_end":12},"name":"column","qualname":"<Matrix<N, R, C, S>>::column","value":"pub fn column(&Self, usize) -> MatrixSlice<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425368,"byte_end":425430,"line_start":357,"line_end":357,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425443,"byte_end":425452,"line_start":358,"line_end":358,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20980},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437506,"byte_end":437517,"line_start":631,"line_end":631,"column_start":6,"column_end":17},"name":"column_part","qualname":"<Matrix<N, R, C, S>>::column_part","value":"pub fn column_part(&Self, usize, usize)\n-> MatrixSlice<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425623,"byte_end":425711,"line_start":363,"line_end":363,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425724,"byte_end":425733,"line_start":364,"line_end":364,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20981},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437524,"byte_end":437531,"line_start":632,"line_end":632,"column_start":6,"column_end":13},"name":"columns","qualname":"<Matrix<N, R, C, S>>::columns","value":"pub fn columns(&Self, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425947,"byte_end":426006,"line_start":369,"line_end":369,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426019,"byte_end":426028,"line_start":370,"line_end":370,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20982},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437538,"byte_end":437555,"line_start":633,"line_end":633,"column_start":6,"column_end":23},"name":"columns_with_step","qualname":"<Matrix<N, R, C, S>>::columns_with_step","value":"pub fn columns_with_step(&Self, usize, usize, usize)\n-> MatrixSlice<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426269,"byte_end":426353,"line_start":377,"line_end":377,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426366,"byte_end":426378,"line_start":378,"line_end":378,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426391,"byte_end":426400,"line_start":379,"line_end":379,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20983},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437562,"byte_end":437575,"line_start":634,"line_end":634,"column_start":6,"column_end":19},"name":"fixed_columns","qualname":"<Matrix<N, R, C, S>>::fixed_columns","value":"pub fn fixed_columns<CSlice: DimName>(&Self, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426677,"byte_end":426752,"line_start":386,"line_end":386,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426765,"byte_end":426774,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20985},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437582,"byte_end":437605,"line_start":635,"line_end":635,"column_start":6,"column_end":29},"name":"fixed_columns_with_step","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step","value":"pub fn fixed_columns_with_step<CSlice: DimName>(&Self, usize, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427018,"byte_end":427099,"line_start":394,"line_end":394,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427112,"byte_end":427131,"line_start":395,"line_end":395,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427144,"byte_end":427153,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20987},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437612,"byte_end":437627,"line_start":636,"line_end":636,"column_start":6,"column_end":21},"name":"columns_generic","qualname":"<Matrix<N, R, C, S>>::columns_generic","value":"pub fn columns_generic<CSlice: Dim>(&Self, usize, CSlice)\n-> MatrixSlice<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427433,"byte_end":427519,"line_start":403,"line_end":403,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427532,"byte_end":427558,"line_start":404,"line_end":404,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427571,"byte_end":427580,"line_start":405,"line_end":405,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20989},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437634,"byte_end":437659,"line_start":637,"line_end":637,"column_start":6,"column_end":31},"name":"columns_generic_with_step","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step","value":"pub fn columns_generic_with_step<CSlice: Dim>(&Self, usize, CSlice, usize)\n-> MatrixSlice<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428173,"byte_end":428261,"line_start":420,"line_end":420,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428274,"byte_end":428321,"line_start":421,"line_end":421,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428334,"byte_end":428343,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20991},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437666,"byte_end":437671,"line_start":638,"line_end":638,"column_start":6,"column_end":11},"name":"slice","qualname":"<Matrix<N, R, C, S>>::slice","value":"pub fn slice(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429227,"byte_end":429316,"line_start":445,"line_end":445,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429329,"byte_end":429354,"line_start":446,"line_end":446,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429367,"byte_end":429376,"line_start":447,"line_end":447,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20992},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437678,"byte_end":437694,"line_start":639,"line_end":639,"column_start":6,"column_end":22},"name":"slice_with_steps","qualname":"<Matrix<N, R, C, S>>::slice_with_steps","value":"pub fn slice_with_steps(&Self, (usize, usize), (usize, usize), (usize, usize))\n-> MatrixSlice<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429896,"byte_end":429974,"line_start":461,"line_end":461,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429987,"byte_end":430071,"line_start":462,"line_end":462,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430084,"byte_end":430164,"line_start":463,"line_end":463,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430177,"byte_end":430197,"line_start":464,"line_end":464,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430210,"byte_end":430219,"line_start":465,"line_end":465,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20993},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437701,"byte_end":437712,"line_start":640,"line_end":640,"column_start":6,"column_end":17},"name":"fixed_slice","qualname":"<Matrix<N, R, C, S>>::fixed_slice","value":"pub fn fixed_slice<RSlice, CSlice>(&Self, usize, usize)\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430580,"byte_end":430664,"line_start":473,"line_end":473,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430677,"byte_end":430720,"line_start":474,"line_end":474,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430733,"byte_end":430742,"line_start":475,"line_end":475,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20996},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437719,"byte_end":437741,"line_start":641,"line_end":641,"column_start":6,"column_end":28},"name":"fixed_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps","value":"pub fn fixed_slice_with_steps<RSlice,\n                              CSlice>(&Self, (usize, usize), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: DimName,\nCSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431363,"byte_end":431441,"line_start":490,"line_end":490,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431454,"byte_end":431535,"line_start":491,"line_end":491,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431548,"byte_end":431634,"line_start":492,"line_end":492,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431647,"byte_end":431671,"line_start":493,"line_end":493,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431684,"byte_end":431693,"line_start":494,"line_end":494,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":20999},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437748,"byte_end":437761,"line_start":642,"line_end":642,"column_start":6,"column_end":19},"name":"generic_slice","qualname":"<Matrix<N, R, C, S>>::generic_slice","value":"pub fn generic_slice<RSlice, CSlice>(&Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSlice<, N, RSlice, CSlice, S::RStride, S::CStride> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432113,"byte_end":432182,"line_start":503,"line_end":503,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432195,"byte_end":432204,"line_start":504,"line_end":504,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21002},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437768,"byte_end":437792,"line_start":643,"line_end":643,"column_start":6,"column_end":30},"name":"generic_slice_with_steps","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps","value":"pub fn generic_slice_with_steps<RSlice,\n                                CSlice>(&Self, (usize, usize),\n                                        (RSlice, CSlice), (usize, usize))\n-> MatrixSlice<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432769,"byte_end":432838,"line_start":518,"line_end":518,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432851,"byte_end":432860,"line_start":519,"line_end":519,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21005},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437799,"byte_end":437814,"line_start":644,"line_end":644,"column_start":6,"column_end":21},"name":"rows_range_pair","qualname":"<Matrix<N, R, C, S>>::rows_range_pair","value":"pub fn rows_range_pair<Range1: SliceRange<R>,\n                       Range2: SliceRange<R>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSlice<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":433971,"byte_end":434037,"line_start":545,"line_end":545,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434050,"byte_end":434053,"line_start":546,"line_end":546,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434066,"byte_end":434130,"line_start":547,"line_end":547,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434143,"byte_end":434152,"line_start":548,"line_end":548,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21008},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437821,"byte_end":437839,"line_start":645,"line_end":645,"column_start":6,"column_end":24},"name":"columns_range_pair","qualname":"<Matrix<N, R, C, S>>::columns_range_pair","value":"pub fn columns_range_pair<Range1: SliceRange<C>,\n                          Range2: SliceRange<C>>(&Self, Range1, Range2)\n->\n    (MatrixSlice<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSlice<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435592,"byte_end":435658,"line_start":581,"line_end":581,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435671,"byte_end":435674,"line_start":582,"line_end":582,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435687,"byte_end":435751,"line_start":583,"line_end":583,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435764,"byte_end":435773,"line_start":584,"line_end":584,"column_start":13,"column_end":22}}]},{"kind":"Type","id":{"krate":0,"index":21011},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437885,"byte_end":437899,"line_start":648,"line_end":648,"column_start":23,"column_end":37},"name":"MatrixSliceMut","qualname":"::base::matrix_slice::MatrixSliceMut","value":"Matrix<N, R, C, SliceStorageMut>","parent":null,"children":[],"decl_id":null,"docs":" A matrix slice.\n","sig":null,"attributes":[{"value":"/ A matrix slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421189,"byte_end":421208,"line_start":260,"line_end":260,"column_start":9,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":21023},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437979,"byte_end":437986,"line_start":649,"line_end":649,"column_start":6,"column_end":13},"name":"row_mut","qualname":"<Matrix<N, R, C, S>>::row_mut","value":"pub fn row_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, U1, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th row of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421528,"byte_end":421587,"line_start":270,"line_end":270,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421600,"byte_end":421609,"line_start":271,"line_end":271,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21024},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":437993,"byte_end":438005,"line_start":650,"line_end":650,"column_start":6,"column_end":18},"name":"row_part_mut","qualname":"<Matrix<N, R, C, S>>::row_part_mut","value":"pub fn row_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, U1, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th row of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th row of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421774,"byte_end":421859,"line_start":276,"line_end":276,"column_start":13,"column_end":98}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":421872,"byte_end":421881,"line_start":277,"line_end":277,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21025},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438012,"byte_end":438020,"line_start":651,"line_end":651,"column_start":6,"column_end":14},"name":"rows_mut","qualname":"<Matrix<N, R, C, S>>::rows_mut","value":"pub fn rows_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422092,"byte_end":422148,"line_start":282,"line_end":282,"column_start":13,"column_end":69}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422161,"byte_end":422170,"line_start":283,"line_end":283,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21026},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438027,"byte_end":438045,"line_start":652,"line_end":652,"column_start":6,"column_end":24},"name":"rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_with_step_mut","value":"pub fn rows_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive rows regularly skipping `step` rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422405,"byte_end":422492,"line_start":290,"line_end":290,"column_start":13,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422505,"byte_end":422514,"line_start":291,"line_end":291,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21027},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438052,"byte_end":438066,"line_start":653,"line_end":653,"column_start":6,"column_end":20},"name":"fixed_rows_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_mut","value":"pub fn fixed_rows_mut<RSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive rows from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive rows from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422785,"byte_end":422857,"line_start":298,"line_end":298,"column_start":13,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":422870,"byte_end":422879,"line_start":299,"line_end":299,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21029},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438073,"byte_end":438097,"line_start":654,"line_end":654,"column_start":6,"column_end":30},"name":"fixed_rows_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_rows_with_step_mut","value":"pub fn fixed_rows_with_step_mut<RSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of rows regularly skipping `step`\n rows.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of rows regularly skipping `step`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423117,"byte_end":423202,"line_start":306,"line_end":306,"column_start":13,"column_end":98}},{"value":"/ rows.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423215,"byte_end":423224,"line_start":307,"line_end":307,"column_start":13,"column_end":22}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423237,"byte_end":423246,"line_start":308,"line_end":308,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21031},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438104,"byte_end":438120,"line_start":655,"line_end":655,"column_start":6,"column_end":22},"name":"rows_generic_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_mut","value":"pub fn rows_generic_mut<RSlice: Dim>(&mut Self, usize, RSlice)\n-> MatrixSliceMut<, N, RSlice, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423520,"byte_end":423599,"line_start":315,"line_end":315,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423612,"byte_end":423672,"line_start":316,"line_end":316,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":423685,"byte_end":423694,"line_start":317,"line_end":317,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21033},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438127,"byte_end":438153,"line_start":656,"line_end":656,"column_start":6,"column_end":32},"name":"rows_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::rows_generic_with_step_mut","value":"pub fn rows_generic_with_step_mut<RSlice>(&mut Self, usize, RSlice, usize)\n-> MatrixSliceMut<, N, RSlice, C, Dynamic, S::CStride> where RSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both\n argument may or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `nrows` rows regularly skipping `step` rows. Both","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424286,"byte_end":424365,"line_start":332,"line_end":332,"column_start":13,"column_end":92}},{"value":"/ argument may or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424378,"byte_end":424438,"line_start":333,"line_end":333,"column_start":13,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":424451,"byte_end":424460,"line_start":334,"line_end":334,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21035},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438160,"byte_end":438170,"line_start":657,"line_end":657,"column_start":6,"column_end":16},"name":"column_mut","qualname":"<Matrix<N, R, C, S>>::column_mut","value":"pub fn column_mut(&mut Self, usize)\n-> MatrixSliceMut<, N, R, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the i-th column of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425368,"byte_end":425430,"line_start":357,"line_end":357,"column_start":13,"column_end":75}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425443,"byte_end":425452,"line_start":358,"line_end":358,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21036},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438177,"byte_end":438192,"line_start":658,"line_end":658,"column_start":6,"column_end":21},"name":"column_part_mut","qualname":"<Matrix<N, R, C, S>>::column_part_mut","value":"pub fn column_part_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, Dynamic, U1, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Returns a slice containing the `n` first elements of the i-th column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a slice containing the `n` first elements of the i-th column of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425623,"byte_end":425711,"line_start":363,"line_end":363,"column_start":13,"column_end":101}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425724,"byte_end":425733,"line_start":364,"line_end":364,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21037},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438199,"byte_end":438210,"line_start":659,"line_end":659,"column_start":6,"column_end":17},"name":"columns_mut","qualname":"<Matrix<N, R, C, S>>::columns_mut","value":"pub fn columns_mut(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":425947,"byte_end":426006,"line_start":369,"line_end":369,"column_start":13,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426019,"byte_end":426028,"line_start":370,"line_end":370,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21038},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438217,"byte_end":438238,"line_start":660,"line_end":660,"column_start":6,"column_end":27},"name":"columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_with_step_mut","value":"pub fn columns_with_step_mut(&mut Self, usize, usize, usize)\n-> MatrixSliceMut<, N, R, Dynamic, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a set of consecutive columns regularly skipping `step`\n columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a set of consecutive columns regularly skipping `step`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426269,"byte_end":426353,"line_start":377,"line_end":377,"column_start":13,"column_end":97}},{"value":"/ columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426366,"byte_end":426378,"line_start":378,"line_end":378,"column_start":13,"column_end":25}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426391,"byte_end":426400,"line_start":379,"line_end":379,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21039},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438245,"byte_end":438262,"line_start":661,"line_end":661,"column_start":6,"column_end":23},"name":"fixed_columns_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_mut","value":"pub fn fixed_columns_mut<CSlice: DimName>(&mut Self, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts a compile-time number of consecutive columns from this matrix.\n","sig":null,"attributes":[{"value":"/ Extracts a compile-time number of consecutive columns from this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426677,"byte_end":426752,"line_start":386,"line_end":386,"column_start":13,"column_end":88}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":426765,"byte_end":426774,"line_start":387,"line_end":387,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21041},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438269,"byte_end":438296,"line_start":662,"line_end":662,"column_start":6,"column_end":33},"name":"fixed_columns_with_step_mut","qualname":"<Matrix<N, R, C, S>>::fixed_columns_with_step_mut","value":"pub fn fixed_columns_with_step_mut<CSlice: DimName>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix a compile-time number of columns regularly skipping\n `step` columns.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix a compile-time number of columns regularly skipping","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427018,"byte_end":427099,"line_start":394,"line_end":394,"column_start":13,"column_end":94}},{"value":"/ `step` columns.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427112,"byte_end":427131,"line_start":395,"line_end":395,"column_start":13,"column_end":32}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427144,"byte_end":427153,"line_start":396,"line_end":396,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21043},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438303,"byte_end":438322,"line_start":663,"line_end":663,"column_start":6,"column_end":25},"name":"columns_generic_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_mut","value":"pub fn columns_generic_mut<CSlice: Dim>(&mut Self, usize, CSlice)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns. The number of columns may or may not be\n known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns. The number of columns may or may not be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427433,"byte_end":427519,"line_start":403,"line_end":403,"column_start":13,"column_end":99}},{"value":"/ known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427532,"byte_end":427558,"line_start":404,"line_end":404,"column_start":13,"column_end":39}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":427571,"byte_end":427580,"line_start":405,"line_end":405,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21045},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438329,"byte_end":438358,"line_start":664,"line_end":664,"column_start":6,"column_end":35},"name":"columns_generic_with_step_mut","qualname":"<Matrix<N, R, C, S>>::columns_generic_with_step_mut","value":"pub fn columns_generic_with_step_mut<CSlice: Dim>(&mut Self, usize, CSlice,\n                                                  usize)\n-> MatrixSliceMut<, N, R, CSlice, S::RStride, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may\n or may not be values known at compile-time.\n","sig":null,"attributes":[{"value":"/ Extracts from this matrix `ncols` columns skipping `step` columns. Both argument may","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428173,"byte_end":428261,"line_start":420,"line_end":420,"column_start":13,"column_end":101}},{"value":"/ or may not be values known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428274,"byte_end":428321,"line_start":421,"line_end":421,"column_start":13,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":428334,"byte_end":428343,"line_start":422,"line_end":422,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21047},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438365,"byte_end":438374,"line_start":665,"line_end":665,"column_start":6,"column_end":15},"name":"slice_mut","qualname":"<Matrix<N, R, C, S>>::slice_mut","value":"pub fn slice_mut(&mut Self, (usize, usize), (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`\n consecutive elements.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(nrows, ncols)`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429227,"byte_end":429316,"line_start":445,"line_end":445,"column_start":13,"column_end":102}},{"value":"/ consecutive elements.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429329,"byte_end":429354,"line_start":446,"line_end":446,"column_start":13,"column_end":38}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429367,"byte_end":429376,"line_start":447,"line_end":447,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21048},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438381,"byte_end":438401,"line_start":666,"line_end":666,"column_start":6,"column_end":26},"name":"slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::slice_with_steps_mut","value":"pub fn slice_with_steps_mut(&mut Self, (usize, usize), (usize, usize),\n                            (usize, usize))\n-> MatrixSliceMut<, N, Dynamic, Dynamic, Dynamic, Dynamic>","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is\n separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the\n original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429896,"byte_end":429974,"line_start":461,"line_end":461,"column_start":13,"column_end":91}},{"value":"/ `(shape.0, shape.1)` components. Each row (resp. column) of the sliced matrix is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":429987,"byte_end":430071,"line_start":462,"line_end":462,"column_start":13,"column_end":97}},{"value":"/ separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430084,"byte_end":430164,"line_start":463,"line_end":463,"column_start":13,"column_end":93}},{"value":"/ original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430177,"byte_end":430197,"line_start":464,"line_end":464,"column_start":13,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430210,"byte_end":430219,"line_start":465,"line_end":465,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21049},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438408,"byte_end":438423,"line_start":667,"line_end":667,"column_start":6,"column_end":21},"name":"fixed_slice_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_mut","value":"pub fn fixed_slice_mut<RSlice, CSlice>(&mut Self, usize, usize)\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),\n CSlice::dim())` consecutive components.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(irow, icol)` and with `(R::dim(),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430580,"byte_end":430664,"line_start":473,"line_end":473,"column_start":13,"column_end":97}},{"value":"/ CSlice::dim())` consecutive components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430677,"byte_end":430720,"line_start":474,"line_end":474,"column_start":13,"column_end":56}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":430733,"byte_end":430742,"line_start":475,"line_end":475,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21052},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438430,"byte_end":438456,"line_start":668,"line_end":668,"column_start":6,"column_end":32},"name":"fixed_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::fixed_slice_with_steps_mut","value":"pub fn fixed_slice_with_steps_mut<RSlice,\n                                  CSlice>(&mut Self, (usize, usize),\n                                          (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where\nRSlice: DimName, CSlice: DimName","parent":null,"children":[],"decl_id":null,"docs":" Slices this matrix starting at its component `(start.0, start.1)` and with\n `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced\n matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of\n the original matrix.\n","sig":null,"attributes":[{"value":"/ Slices this matrix starting at its component `(start.0, start.1)` and with","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431363,"byte_end":431441,"line_start":490,"line_end":490,"column_start":13,"column_end":91}},{"value":"/ `(R::dim(), CSlice::dim())` components. Each row (resp. column) of the sliced","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431454,"byte_end":431535,"line_start":491,"line_end":491,"column_start":13,"column_end":94}},{"value":"/ matrix is separated by `steps.0` (resp. `steps.1`) ignored rows (resp. columns) of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431548,"byte_end":431634,"line_start":492,"line_end":492,"column_start":13,"column_end":99}},{"value":"/ the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431647,"byte_end":431671,"line_start":493,"line_end":493,"column_start":13,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":431684,"byte_end":431693,"line_start":494,"line_end":494,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21055},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438463,"byte_end":438480,"line_start":669,"line_end":669,"column_start":6,"column_end":23},"name":"generic_slice_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_mut","value":"pub fn generic_slice_mut<RSlice,\n                         CSlice>(&mut Self, (usize, usize), (RSlice, CSlice))\n-> MatrixSliceMut<, N, RSlice, CSlice, S::RStride, S::CStride> where\nRSlice: Dim, CSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432113,"byte_end":432182,"line_start":503,"line_end":503,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432195,"byte_end":432204,"line_start":504,"line_end":504,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21058},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438487,"byte_end":438515,"line_start":670,"line_end":670,"column_start":6,"column_end":34},"name":"generic_slice_with_steps_mut","qualname":"<Matrix<N, R, C, S>>::generic_slice_with_steps_mut","value":"pub fn generic_slice_with_steps_mut<RSlice,\n                                    CSlice>(&mut Self, (usize, usize),\n                                            (RSlice, CSlice), (usize, usize))\n-> MatrixSliceMut<, N, RSlice, CSlice, Dynamic, Dynamic> where RSlice: Dim,\nCSlice: Dim","parent":null,"children":[],"decl_id":null,"docs":" Creates a slice that may or may not have a fixed size and stride.\n","sig":null,"attributes":[{"value":"/ Creates a slice that may or may not have a fixed size and stride.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432769,"byte_end":432838,"line_start":518,"line_end":518,"column_start":13,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":432851,"byte_end":432860,"line_start":519,"line_end":519,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21061},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438522,"byte_end":438541,"line_start":671,"line_end":671,"column_start":6,"column_end":25},"name":"rows_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_pair_mut","value":"pub fn rows_range_pair_mut<Range1: SliceRange<R>,\n                           Range2: SliceRange<R>>(&mut Self, Range1, Range2)\n->\n    (MatrixSliceMut<, N, Range1::Size, C, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, Range2::Size, C, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":433971,"byte_end":434037,"line_start":545,"line_end":545,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434050,"byte_end":434053,"line_start":546,"line_end":546,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434066,"byte_end":434130,"line_start":547,"line_end":547,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":434143,"byte_end":434152,"line_start":548,"line_end":548,"column_start":13,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":21064},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438548,"byte_end":438570,"line_start":672,"line_end":672,"column_start":6,"column_end":28},"name":"columns_range_pair_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_pair_mut","value":"pub fn columns_range_pair_mut<Range1: SliceRange<C>,\n                              Range2: SliceRange<C>>(&mut Self, Range1,\n                                                     Range2)\n->\n    (MatrixSliceMut<, N, R, Range1::Size, S::RStride, S::CStride>,\n     MatrixSliceMut<, N, R, Range2::Size, S::RStride, S::CStride>)","parent":null,"children":[],"decl_id":null,"docs":" Splits this NxM matrix into two parts delimited by two ranges.","sig":null,"attributes":[{"value":"/ Splits this NxM matrix into two parts delimited by two ranges.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435592,"byte_end":435658,"line_start":581,"line_end":581,"column_start":13,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435671,"byte_end":435674,"line_start":582,"line_end":582,"column_start":13,"column_end":16}},{"value":"/ Panics if the ranges overlap or if the first range is empty.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435687,"byte_end":435751,"line_start":583,"line_end":583,"column_start":13,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":435764,"byte_end":435773,"line_start":584,"line_end":584,"column_start":13,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":4311},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438876,"byte_end":438886,"line_start":681,"line_end":681,"column_start":11,"column_end":21},"name":"SliceRange","qualname":"::base::matrix_slice::SliceRange","value":"SliceRange<D: Dim>","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4314},{"krate":0,"index":4315},{"krate":0,"index":4316}],"decl_id":null,"docs":" A range with a size that may be known at compile-time.","sig":null,"attributes":[{"value":"/ A range with a size that may be known at compile-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438574,"byte_end":438632,"line_start":674,"line_end":674,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438633,"byte_end":438636,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ This may be:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438637,"byte_end":438653,"line_start":676,"line_end":676,"column_start":1,"column_end":17}},{"value":"/ * A single `usize` index, e.g., `4`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438654,"byte_end":438693,"line_start":677,"line_end":677,"column_start":1,"column_end":40}},{"value":"/ * A left-open range `std::ops::RangeTo`, e.g., `.. 4`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438694,"byte_end":438751,"line_start":678,"line_end":678,"column_start":1,"column_end":58}},{"value":"/ * A right-open range `std::ops::RangeFrom`, e.g., `4 ..`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438752,"byte_end":438812,"line_start":679,"line_end":679,"column_start":1,"column_end":61}},{"value":"/ * A full range `std::ops::RangeFull`, e.g., `..`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438813,"byte_end":438865,"line_start":680,"line_end":680,"column_start":1,"column_end":53}}]},{"kind":"Type","id":{"krate":0,"index":4313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438967,"byte_end":438971,"line_start":683,"line_end":683,"column_start":10,"column_end":14},"name":"Size","qualname":"::base::matrix_slice::SliceRange::Size","value":"type Size: Dim;","parent":{"krate":0,"index":4311},"children":[],"decl_id":null,"docs":" Type of the range size. May be a type-level integer.\n","sig":null,"attributes":[{"value":"/ Type of the range size. May be a type-level integer.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438901,"byte_end":438957,"line_start":682,"line_end":682,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":4314},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439024,"byte_end":439029,"line_start":686,"line_end":686,"column_start":8,"column_end":13},"name":"begin","qualname":"::base::matrix_slice::SliceRange::begin","value":"pub fn begin(&Self, D) -> usize","parent":{"krate":0,"index":4311},"children":[],"decl_id":null,"docs":" The start index of the range.\n","sig":null,"attributes":[{"value":"/ The start index of the range.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":438983,"byte_end":439016,"line_start":685,"line_end":685,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":4315},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439201,"byte_end":439204,"line_start":689,"line_end":689,"column_start":8,"column_end":11},"name":"end","qualname":"::base::matrix_slice::SliceRange::end","value":"pub fn end(&Self, D) -> usize","parent":{"krate":0,"index":4311},"children":[],"decl_id":null,"docs":" The index immediately after the last index inside of the range.\n","sig":null,"attributes":[{"value":"/ The index immediately after the last index inside of the range.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439126,"byte_end":439193,"line_start":688,"line_end":688,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":4316},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439315,"byte_end":439319,"line_start":691,"line_end":691,"column_start":8,"column_end":12},"name":"size","qualname":"::base::matrix_slice::SliceRange::size","value":"pub fn size(&Self, D) -> Self::Size","parent":{"krate":0,"index":4311},"children":[],"decl_id":null,"docs":" The number of elements of the range, i.e., `self.end - self.begin`.\n","sig":null,"attributes":[{"value":"/ The number of elements of the range, i.e., `self.end - self.begin`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439236,"byte_end":439307,"line_start":690,"line_end":690,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":4352},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441255,"byte_end":441266,"line_start":793,"line_end":793,"column_start":12,"column_end":23},"name":"slice_range","qualname":"<Matrix<N, R, C, S>>::slice_range","value":"pub fn slice_range<RowRange, ColRange>(&Self, RowRange, ColRange)\n-> MatrixSlice<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed\n by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a sub-matrix containing the rows indexed by the range `rows` and the columns indexed","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441105,"byte_end":441200,"line_start":790,"line_end":790,"column_start":5,"column_end":100}},{"value":"/ by the range `cols`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441205,"byte_end":441229,"line_start":791,"line_end":791,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441234,"byte_end":441243,"line_start":792,"line_end":792,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4355},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441800,"byte_end":441810,"line_start":811,"line_end":811,"column_start":12,"column_end":22},"name":"rows_range","qualname":"<Matrix<N, R, C, S>>::rows_range","value":"pub fn rows_range<RowRange: SliceRange<R>>(&Self, RowRange)\n-> MatrixSlice<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441712,"byte_end":441774,"line_start":809,"line_end":809,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441779,"byte_end":441788,"line_start":810,"line_end":810,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442086,"byte_end":442099,"line_start":821,"line_end":821,"column_start":12,"column_end":25},"name":"columns_range","qualname":"<Matrix<N, R, C, S>>::columns_range","value":"pub fn columns_range<ColRange: SliceRange<C>>(&Self, ColRange)\n-> MatrixSlice<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `rows`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441995,"byte_end":442060,"line_start":819,"line_end":819,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442065,"byte_end":442074,"line_start":820,"line_end":820,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4364},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442507,"byte_end":442522,"line_start":833,"line_end":833,"column_start":12,"column_end":27},"name":"slice_range_mut","qualname":"<Matrix<N, R, C, S>>::slice_range_mut","value":"pub fn slice_range_mut<RowRange, ColRange>(&mut Self, RowRange, ColRange)\n-> MatrixSliceMut<, N, RowRange::Size, ColRange::Size, S::RStride, S::CStride>\nwhere RowRange: SliceRange<R>, ColRange: SliceRange<C>","parent":null,"children":[],"decl_id":null,"docs":" Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns\n indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slices a mutable sub-matrix containing the rows indexed by the range `rows` and the columns","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442363,"byte_end":442458,"line_start":831,"line_end":831,"column_start":5,"column_end":100}},{"value":"/ indexed by the range `cols`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442463,"byte_end":442495,"line_start":832,"line_end":832,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":4367},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443067,"byte_end":443081,"line_start":851,"line_end":851,"column_start":12,"column_end":26},"name":"rows_range_mut","qualname":"<Matrix<N, R, C, S>>::rows_range_mut","value":"pub fn rows_range_mut<RowRange: SliceRange<R>>(&mut Self, RowRange)\n-> MatrixSliceMut<, N, RowRange::Size, C, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the rows indexed by the range `rows`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the rows indexed by the range `rows`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442979,"byte_end":443041,"line_start":849,"line_end":849,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443046,"byte_end":443055,"line_start":850,"line_end":850,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4369},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443368,"byte_end":443385,"line_start":861,"line_end":861,"column_start":12,"column_end":29},"name":"columns_range_mut","qualname":"<Matrix<N, R, C, S>>::columns_range_mut","value":"pub fn columns_range_mut<ColRange: SliceRange<C>>(&mut Self, ColRange)\n-> MatrixSliceMut<, N, R, ColRange::Size, S::RStride, S::CStride>","parent":null,"children":[],"decl_id":null,"docs":" Slice containing all the columns indexed by the range `cols`.\n","sig":null,"attributes":[{"value":"/ Slice containing all the columns indexed by the range `cols`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443277,"byte_end":443342,"line_start":859,"line_end":859,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443347,"byte_end":443356,"line_start":860,"line_end":860,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21067},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":444998,"byte_end":445008,"line_start":26,"line_end":26,"column_start":12,"column_end":22},"name":"VecStorage","qualname":"::base::vec_storage::VecStorage","value":"VecStorage {  }","parent":null,"children":[{"krate":0,"index":21071},{"krate":0,"index":21072},{"krate":0,"index":21073}],"decl_id":null,"docs":" A Vec-based matrix data storage. It may be dynamically-sized.\n","sig":null,"attributes":[{"value":"/ A Vec-based matrix data storage. It may be dynamically-sized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":444798,"byte_end":444863,"line_start":22,"line_end":22,"column_start":1,"column_end":66}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":444864,"byte_end":444874,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Type","id":{"krate":0,"index":4429},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445163,"byte_end":445172,"line_start":34,"line_end":34,"column_start":10,"column_end":19},"name":"MatrixVec","qualname":"::base::vec_storage::MatrixVec","value":"VecStorage<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Renamed to [VecStorage].\n","sig":null,"attributes":[{"value":"deprecated(note = \"renamed to `VecStorage`\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445079,"byte_end":445124,"line_start":32,"line_end":32,"column_start":1,"column_end":46}},{"value":"/ Renamed to [VecStorage].","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445125,"byte_end":445153,"line_start":33,"line_end":33,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":4437},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445360,"byte_end":445363,"line_start":39,"line_end":39,"column_start":12,"column_end":15},"name":"new","qualname":"<VecStorage<N, R, C>>::new","value":"pub fn new(R, C, Vec<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamic matrix data storage from the given vector and shape.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamic matrix data storage from the given vector and shape.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445256,"byte_end":445334,"line_start":37,"line_end":37,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445339,"byte_end":445348,"line_start":38,"line_end":38,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4438},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445717,"byte_end":445723,"line_start":53,"line_end":53,"column_start":12,"column_end":18},"name":"as_vec","qualname":"<VecStorage<N, R, C>>::as_vec","value":"pub fn as_vec(&Self) -> &Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying data storage.\n","sig":null,"attributes":[{"value":"/ The underlying data storage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445659,"byte_end":445691,"line_start":51,"line_end":51,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445696,"byte_end":445705,"line_start":52,"line_end":52,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4439},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445962,"byte_end":445972,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"name":"as_vec_mut","qualname":"<VecStorage<N, R, C>>::as_vec_mut","value":"pub unsafe fn as_vec_mut(&mut Self) -> &mut Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying mutable data storage.","sig":null,"attributes":[{"value":"/ The underlying mutable data storage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445774,"byte_end":445814,"line_start":57,"line_end":57,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445819,"byte_end":445822,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ This is unsafe because this may cause UB if the size of the vector is changed","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445827,"byte_end":445908,"line_start":59,"line_end":59,"column_start":5,"column_end":86}},{"value":"/ by the user.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445913,"byte_end":445929,"line_start":60,"line_end":60,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445934,"byte_end":445943,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4440},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446312,"byte_end":446318,"line_start":71,"line_end":71,"column_start":19,"column_end":25},"name":"resize","qualname":"<VecStorage<N, R, C>>::resize","value":"pub unsafe fn resize(Self, usize) -> Vec<N>","parent":null,"children":[],"decl_id":null,"docs":" Resizes the underlying mutable data storage and unwraps it.","sig":null,"attributes":[{"value":"/ Resizes the underlying mutable data storage and unwraps it.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446035,"byte_end":446098,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446103,"byte_end":446106,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ If `sz` is larger than the current size, additional elements are uninitialized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446111,"byte_end":446194,"line_start":68,"line_end":68,"column_start":5,"column_end":88}},{"value":"/ If `sz` is smaller than the current size, additional elements are truncated.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446199,"byte_end":446279,"line_start":69,"line_end":69,"column_start":5,"column_end":85}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446284,"byte_end":446293,"line_start":70,"line_end":70,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4441},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446696,"byte_end":446699,"line_start":87,"line_end":87,"column_start":12,"column_end":15},"name":"len","qualname":"<VecStorage<N, R, C>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of elements on the underlying vector.\n","sig":null,"attributes":[{"value":"/ The number of elements on the underlying vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446618,"byte_end":446670,"line_start":85,"line_end":85,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446675,"byte_end":446684,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4564},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453019,"byte_end":453027,"line_start":15,"line_end":15,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Matrix<N, R, C, S>>::is_empty","value":"pub fn is_empty(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is an empty matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is an empty matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":452952,"byte_end":452993,"line_start":13,"line_end":13,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":452998,"byte_end":453007,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4565},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453199,"byte_end":453208,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"is_square","qualname":"<Matrix<N, R, C, S>>::is_square","value":"pub fn is_square(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if this is a square matrix.\n","sig":null,"attributes":[{"value":"/ Indicates if this is a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453132,"byte_end":453173,"line_start":20,"line_end":20,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453178,"byte_end":453187,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4566},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453692,"byte_end":453703,"line_start":33,"line_end":33,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Matrix<N, R, C, S>>::is_identity","value":"pub fn is_identity(&Self, N::Epsilon) -> bool where N: Zero + One +\nRelativeEq, N::Epsilon: Copy","parent":null,"children":[],"decl_id":null,"docs":" Indicated if this is the identity matrix within a relative error of `eps`.","sig":null,"attributes":[{"value":"/ Indicated if this is the identity matrix within a relative error of `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453388,"byte_end":453466,"line_start":28,"line_end":28,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453471,"byte_end":453474,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ If the matrix is diagonal, this checks that diagonal elements (i.e. at coordinates `(i, i)`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453479,"byte_end":453574,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ for i from `0` to `min(R, C)`) are equal one; and that all other elements are zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453579,"byte_end":453666,"line_start":31,"line_end":31,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":453671,"byte_end":453680,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4572},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455388,"byte_end":455401,"line_start":93,"line_end":93,"column_start":12,"column_end":25},"name":"is_orthogonal","qualname":"<Matrix<N, R, C, S>>::is_orthogonal","value":"pub fn is_orthogonal(&Self, N::Epsilon) -> bool where N: Zero + One +\nClosedAdd + ClosedMul + RelativeEq, S: Storage<N, R, C>, N::Epsilon: Copy,\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, C, C>","parent":null,"children":[],"decl_id":null,"docs":" Checks that `Mᵀ × M = Id`.","sig":null,"attributes":[{"value":"/ Checks that `Mᵀ × M = Id`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455197,"byte_end":455230,"line_start":88,"line_end":88,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455235,"byte_end":455238,"line_start":89,"line_end":89,"column_start":5,"column_end":8}},{"value":"/ In this definition `Id` is approximately equal to the identity matrix with a relative error","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455243,"byte_end":455338,"line_start":90,"line_end":90,"column_start":5,"column_end":100}},{"value":"/ equal to `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455343,"byte_end":455362,"line_start":91,"line_end":91,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455367,"byte_end":455376,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4577},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455926,"byte_end":455947,"line_start":109,"line_end":109,"column_start":12,"column_end":33},"name":"is_special_orthogonal","qualname":"<SquareMatrix<N, D, S>>::is_special_orthogonal","value":"pub fn is_special_orthogonal(&Self, N) -> bool where D: DimMin<D, Output = D>,\nDefaultAllocator: Allocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Checks that this matrix is orthogonal and has a determinant equal to 1.\n","sig":null,"attributes":[{"value":"/ Checks that this matrix is orthogonal and has a determinant equal to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455825,"byte_end":455900,"line_start":107,"line_end":107,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455905,"byte_end":455914,"line_start":108,"line_end":108,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4578},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":456248,"byte_end":456261,"line_start":119,"line_end":119,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<SquareMatrix<N, D, S>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this matrix is invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":456174,"byte_end":456222,"line_start":117,"line_end":117,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":456227,"byte_end":456236,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4589},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456585,"byte_end":456591,"line_start":8,"line_end":8,"column_start":11,"column_end":17},"name":"Scalar","qualname":"::base::scalar::Scalar","value":"Scalar: Copy + PartialEq + Debug + Any","parent":null,"children":[{"krate":0,"index":4590}],"decl_id":null,"docs":" The basic scalar type for all structures of `nalgebra`.","sig":null,"attributes":[{"value":"/ The basic scalar type for all structures of `nalgebra`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456434,"byte_end":456493,"line_start":5,"line_end":5,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456494,"byte_end":456497,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ This does not make any assumption on the algebraic properties of `Self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456498,"byte_end":456574,"line_start":7,"line_end":7,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":4590},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456786,"byte_end":456788,"line_start":13,"line_end":13,"column_start":8,"column_end":10},"name":"is","qualname":"::base::scalar::Scalar::is","value":"pub fn is<T: Scalar>() -> bool","parent":{"krate":0,"index":4589},"children":[],"decl_id":null,"docs":" Tests if `Self` the same as the type `T`","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456630,"byte_end":456639,"line_start":9,"line_end":9,"column_start":5,"column_end":14}},{"value":"/ Tests if `Self` the same as the type `T`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456644,"byte_end":456688,"line_start":10,"line_end":10,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456693,"byte_end":456696,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ Typically used to test of `Self` is a f32 or a f64 with `N::is::<f32>()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456701,"byte_end":456778,"line_start":12,"line_end":12,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":21107},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457677,"byte_end":457679,"line_start":24,"line_end":24,"column_start":15,"column_end":17},"name":"xx","qualname":"<Vector<N, D, S>>::xx","value":"pub fn xx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21108},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457715,"byte_end":457718,"line_start":25,"line_end":25,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Vector<N, D, S>>::xxx","value":"pub fn xxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21113},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457757,"byte_end":457759,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xy","qualname":"<Vector<N, D, S>>::xy","value":"pub fn xy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21114},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457795,"byte_end":457797,"line_start":28,"line_end":28,"column_start":15,"column_end":17},"name":"yx","qualname":"<Vector<N, D, S>>::yx","value":"pub fn yx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21115},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457833,"byte_end":457835,"line_start":29,"line_end":29,"column_start":15,"column_end":17},"name":"yy","qualname":"<Vector<N, D, S>>::yy","value":"pub fn yy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21116},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457871,"byte_end":457874,"line_start":30,"line_end":30,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Vector<N, D, S>>::xxy","value":"pub fn xxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21117},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457912,"byte_end":457915,"line_start":31,"line_end":31,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Vector<N, D, S>>::xyx","value":"pub fn xyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21118},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457953,"byte_end":457956,"line_start":32,"line_end":32,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Vector<N, D, S>>::xyy","value":"pub fn xyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21119},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457994,"byte_end":457997,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Vector<N, D, S>>::yxx","value":"pub fn yxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21120},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458035,"byte_end":458038,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Vector<N, D, S>>::yxy","value":"pub fn yxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21121},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458076,"byte_end":458079,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Vector<N, D, S>>::yyx","value":"pub fn yyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21122},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458117,"byte_end":458120,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Vector<N, D, S>>::yyy","value":"pub fn yyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21127},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458159,"byte_end":458161,"line_start":38,"line_end":38,"column_start":15,"column_end":17},"name":"xz","qualname":"<Vector<N, D, S>>::xz","value":"pub fn xz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21128},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458197,"byte_end":458199,"line_start":39,"line_end":39,"column_start":15,"column_end":17},"name":"yz","qualname":"<Vector<N, D, S>>::yz","value":"pub fn yz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21129},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458235,"byte_end":458237,"line_start":40,"line_end":40,"column_start":15,"column_end":17},"name":"zx","qualname":"<Vector<N, D, S>>::zx","value":"pub fn zx(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21130},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458273,"byte_end":458275,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"zy","qualname":"<Vector<N, D, S>>::zy","value":"pub fn zy(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21131},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458311,"byte_end":458313,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"zz","qualname":"<Vector<N, D, S>>::zz","value":"pub fn zz(&Self) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21132},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458349,"byte_end":458352,"line_start":43,"line_end":43,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Vector<N, D, S>>::xxz","value":"pub fn xxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21133},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458390,"byte_end":458393,"line_start":44,"line_end":44,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Vector<N, D, S>>::xyz","value":"pub fn xyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21134},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458431,"byte_end":458434,"line_start":45,"line_end":45,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Vector<N, D, S>>::xzx","value":"pub fn xzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21135},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458472,"byte_end":458475,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Vector<N, D, S>>::xzy","value":"pub fn xzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21136},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458513,"byte_end":458516,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Vector<N, D, S>>::xzz","value":"pub fn xzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21137},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458554,"byte_end":458557,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Vector<N, D, S>>::yxz","value":"pub fn yxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21138},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458595,"byte_end":458598,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Vector<N, D, S>>::yyz","value":"pub fn yyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21139},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458636,"byte_end":458639,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Vector<N, D, S>>::yzx","value":"pub fn yzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21140},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458677,"byte_end":458680,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Vector<N, D, S>>::yzy","value":"pub fn yzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21141},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458718,"byte_end":458721,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Vector<N, D, S>>::yzz","value":"pub fn yzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21142},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458759,"byte_end":458762,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Vector<N, D, S>>::zxx","value":"pub fn zxx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21143},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458800,"byte_end":458803,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Vector<N, D, S>>::zxy","value":"pub fn zxy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21144},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458841,"byte_end":458844,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Vector<N, D, S>>::zxz","value":"pub fn zxz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21145},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458882,"byte_end":458885,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Vector<N, D, S>>::zyx","value":"pub fn zyx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21146},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458923,"byte_end":458926,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Vector<N, D, S>>::zyy","value":"pub fn zyy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21147},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":458964,"byte_end":458967,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Vector<N, D, S>>::zyz","value":"pub fn zyz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21148},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":459005,"byte_end":459008,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Vector<N, D, S>>::zzx","value":"pub fn zzx(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21149},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":459046,"byte_end":459049,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Vector<N, D, S>>::zzy","value":"pub fn zzy(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":21150},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":459087,"byte_end":459090,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Vector<N, D, S>>::zzz","value":"pub fn zzz(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new vector from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new vector from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457384,"byte_end":457434,"line_start":12,"line_end":12,"column_start":21,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/swizzle.rs","byte_start":457455,"byte_end":457464,"line_start":13,"line_end":13,"column_start":21,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":21151},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":459777,"byte_end":459781,"line_start":21,"line_end":21,"column_start":12,"column_end":16},"name":"Unit","qualname":"::base::unit::Unit","value":"Unit {  }","parent":null,"children":[{"krate":0,"index":21153}],"decl_id":null,"docs":" A wrapper that ensures the underlying algebraic entity has a unit norm.","sig":null,"attributes":[{"value":"/ A wrapper that ensures the underlying algebraic entity has a unit norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":459519,"byte_end":459594,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":459595,"byte_end":459598,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Use `.as_ref()` or `.into_inner()` to obtain the underlying value by-reference or by-move.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":459599,"byte_end":459693,"line_start":18,"line_end":18,"column_start":1,"column_end":95}},{"value":"repr(transparent)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":459694,"byte_end":459714,"line_start":19,"line_end":19,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":4651},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460833,"byte_end":460846,"line_start":59,"line_end":59,"column_start":12,"column_end":25},"name":"new_normalize","qualname":"<Unit<T>>::new_normalize","value":"pub fn new_normalize(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure.\n","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460733,"byte_end":460807,"line_start":57,"line_end":57,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460812,"byte_end":460821,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4652},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461104,"byte_end":461111,"line_start":67,"line_end":67,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Unit<T>>::try_new","value":"pub fn try_new(T, T::RealField) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to normalize the given value and return it wrapped on a `Unit` structure.","sig":null,"attributes":[{"value":"/ Attempts to normalize the given value and return it wrapped on a `Unit` structure.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460913,"byte_end":460999,"line_start":63,"line_end":63,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461004,"byte_end":461007,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461012,"byte_end":461078,"line_start":65,"line_end":65,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461083,"byte_end":461092,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4654},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461352,"byte_end":461363,"line_start":73,"line_end":73,"column_start":12,"column_end":23},"name":"new_and_get","qualname":"<Unit<T>>::new_and_get","value":"pub fn new_and_get(T) -> (Self, T::RealField)","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure and its norm.\n","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461239,"byte_end":461326,"line_start":71,"line_end":71,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461331,"byte_end":461340,"line_start":72,"line_end":72,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4655},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461682,"byte_end":461697,"line_start":83,"line_end":83,"column_start":12,"column_end":27},"name":"try_new_and_get","qualname":"<Unit<T>>::try_new_and_get","value":"pub fn try_new_and_get(T, T::RealField) -> Option<(Self, T::RealField)>","parent":null,"children":[],"decl_id":null,"docs":" Normalize the given value and return it wrapped on a `Unit` structure and its norm.","sig":null,"attributes":[{"value":"/ Normalize the given value and return it wrapped on a `Unit` structure and its norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461490,"byte_end":461577,"line_start":79,"line_end":79,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461582,"byte_end":461585,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the norm was smaller or equal to `min_norm`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461590,"byte_end":461656,"line_start":81,"line_end":81,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461661,"byte_end":461670,"line_start":82,"line_end":82,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4656},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462311,"byte_end":462322,"line_start":97,"line_end":97,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Unit<T>>::renormalize","value":"pub fn renormalize(&mut Self) -> T::RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this value again. This is useful when repeated computations\n might cause a drift in the norm because of float inaccuracies.","sig":null,"attributes":[{"value":"/ Normalizes this value again. This is useful when repeated computations","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":461931,"byte_end":462005,"line_start":91,"line_end":91,"column_start":5,"column_end":79}},{"value":"/ might cause a drift in the norm because of float inaccuracies.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462010,"byte_end":462076,"line_start":92,"line_end":92,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462081,"byte_end":462084,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ Returns the norm before re-normalization. See `.renormalize_fast` for a faster alternative","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462089,"byte_end":462183,"line_start":94,"line_end":94,"column_start":5,"column_end":99}},{"value":"/ that may be slightly less accurate if `self` drifted significantly from having a unit length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462188,"byte_end":462285,"line_start":95,"line_end":95,"column_start":5,"column_end":102}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462290,"byte_end":462299,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4657},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462618,"byte_end":462634,"line_start":105,"line_end":105,"column_start":12,"column_end":28},"name":"renormalize_fast","qualname":"<Unit<T>>::renormalize_fast","value":"pub fn renormalize_fast(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this value again using a first-order Taylor approximation.\n This is useful when repeated computations might cause a drift in the norm\n because of float inaccuracies.\n","sig":null,"attributes":[{"value":"/ Normalizes this value again using a first-order Taylor approximation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462398,"byte_end":462471,"line_start":101,"line_end":101,"column_start":5,"column_end":78}},{"value":"/ This is useful when repeated computations might cause a drift in the norm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462476,"byte_end":462553,"line_start":102,"line_end":102,"column_start":5,"column_end":82}},{"value":"/ because of float inaccuracies.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462558,"byte_end":462592,"line_start":103,"line_end":103,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462597,"byte_end":462606,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4660},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462994,"byte_end":463007,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<Unit<T>>::new_unchecked","value":"pub fn new_unchecked(T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given value, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given value, assuming it is already normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462907,"byte_end":462968,"line_start":114,"line_end":114,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462973,"byte_end":462982,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4661},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463160,"byte_end":463178,"line_start":122,"line_end":122,"column_start":12,"column_end":30},"name":"from_ref_unchecked","qualname":"<Unit<T>>::from_ref_unchecked","value":"pub fn from_ref_unchecked<'a>(&'a T) -> &'a Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given reference, assuming it is already normalized.\n","sig":null,"attributes":[{"value":"/ Wraps the given reference, assuming it is already normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463069,"byte_end":463134,"line_start":120,"line_end":120,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463139,"byte_end":463148,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4663},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463324,"byte_end":463334,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Unit<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463263,"byte_end":463298,"line_start":126,"line_end":126,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463303,"byte_end":463312,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4664},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463545,"byte_end":463551,"line_start":136,"line_end":136,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Unit<T>>::unwrap","value":"pub fn unwrap(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying value.\n Deprecated: use [Unit::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463378,"byte_end":463413,"line_start":132,"line_end":132,"column_start":5,"column_end":40}},{"value":"/ Deprecated: use [Unit::into_inner] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463418,"byte_end":463465,"line_start":133,"line_end":133,"column_start":5,"column_end":52}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463470,"byte_end":463519,"line_start":134,"line_end":134,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463524,"byte_end":463533,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4665},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463833,"byte_end":463849,"line_start":144,"line_end":144,"column_start":12,"column_end":28},"name":"as_mut_unchecked","qualname":"<Unit<T>>::as_mut_unchecked","value":"pub fn as_mut_unchecked(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying value. This is `_unchecked` because modifying\n the underlying value in such a way that it no longer has unit length may lead to unexpected\n results.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying value. This is `_unchecked` because modifying","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463595,"byte_end":463690,"line_start":140,"line_end":140,"column_start":5,"column_end":100}},{"value":"/ the underlying value in such a way that it no longer has unit length may lead to unexpected","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463695,"byte_end":463790,"line_start":141,"line_end":141,"column_start":5,"column_end":100}},{"value":"/ results.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463795,"byte_end":463807,"line_start":142,"line_end":142,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463812,"byte_end":463821,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4726},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466442,"byte_end":466455,"line_start":10,"line_end":10,"column_start":12,"column_end":25},"name":"compress_rows","qualname":"<Matrix<N, R, C, S>>::compress_rows","value":"pub fn compress_rows<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                               N,\n                                                                                               R,\n                                                                                               S::RStride,\n                                                                                               S::CStride>)\n                     ->\n                     N>(&Self,\n                        impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> RowVectorN<N, C> where DefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a row vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.\n","sig":null,"attributes":[{"value":"/ Returns a row vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466273,"byte_end":466363,"line_start":7,"line_end":7,"column_start":5,"column_end":95}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466368,"byte_end":466416,"line_start":8,"line_end":8,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466421,"byte_end":466430,"line_start":9,"line_end":9,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4728},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467168,"byte_end":467184,"line_start":29,"line_end":29,"column_start":12,"column_end":28},"name":"compress_rows_tr","qualname":"<Matrix<N, R, C, S>>::compress_rows_tr","value":"pub fn compress_rows_tr<impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N: Fn(VectorSliceN<,\n                                                                                                  N,\n                                                                                                  R,\n                                                                                                  S::RStride,\n                                                                                                  S::CStride>)\n                        ->\n                        N>(&Self,\n                           impl Fn(VectorSliceN<N, R, S::RStride, S::CStride>) -> N)\n-> VectorN<N, C> where DefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector where each element is the result of the application of `f` on the\n corresponding column of the original matrix.","sig":null,"attributes":[{"value":"/ Returns a column vector where each element is the result of the application of `f` on the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466923,"byte_end":467016,"line_start":24,"line_end":24,"column_start":5,"column_end":98}},{"value":"/ corresponding column of the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467021,"byte_end":467069,"line_start":25,"line_end":25,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467074,"byte_end":467077,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.compress_rows(f).transpose()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467082,"byte_end":467142,"line_start":27,"line_end":27,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467147,"byte_end":467156,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4730},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467756,"byte_end":467772,"line_start":45,"line_end":45,"column_start":12,"column_end":28},"name":"compress_columns","qualname":"<Matrix<N, R, C, S>>::compress_columns","value":"pub fn compress_columns<impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>): Fn(&mut VectorN<N,\n                                                                                                                 R>,\n                                                                                                    VectorSliceN<,\n                                                                                                                 N,\n                                                                                                                 R,\n                                                                                                                 S::RStride,\n                                                                                                                 S::CStride>)\n                        ->\n                        ()>(&Self, VectorN<N, R>,\n                            impl Fn(&mut VectorN<N, R>, VectorSliceN<N, R, S::RStride, S::CStride>))\n-> VectorN<N, R> where DefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Returns a column vector resulting from the folding of `f` on each column of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a column vector resulting from the folding of `f` on each column of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467638,"byte_end":467730,"line_start":43,"line_end":43,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":467735,"byte_end":467744,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4737},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468539,"byte_end":468542,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"sum","qualname":"<Matrix<N, R, C, S>>::sum","value":"pub fn sum(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the elements of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468237,"byte_end":468284,"line_start":63,"line_end":63,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468289,"byte_end":468292,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468297,"byte_end":468310,"line_start":65,"line_end":65,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468315,"byte_end":468318,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468323,"byte_end":468330,"line_start":67,"line_end":67,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468335,"byte_end":468365,"line_start":68,"line_end":68,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468370,"byte_end":468373,"line_start":69,"line_end":69,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468378,"byte_end":468419,"line_start":70,"line_end":70,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468424,"byte_end":468466,"line_start":71,"line_end":71,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.sum(), 21.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468471,"byte_end":468501,"line_start":72,"line_end":72,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468506,"byte_end":468513,"line_start":73,"line_end":73,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468518,"byte_end":468527,"line_start":74,"line_end":74,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4739},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469059,"byte_end":469066,"line_start":93,"line_end":93,"column_start":12,"column_end":19},"name":"row_sum","qualname":"<Matrix<N, R, C, S>>::row_sum","value":"pub fn row_sum(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468627,"byte_end":468670,"line_start":79,"line_end":79,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468675,"byte_end":468678,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468683,"byte_end":468760,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468765,"byte_end":468768,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468773,"byte_end":468786,"line_start":83,"line_end":83,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468791,"byte_end":468794,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468799,"byte_end":468806,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468811,"byte_end":468855,"line_start":86,"line_end":86,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468860,"byte_end":468863,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468868,"byte_end":468909,"line_start":88,"line_end":88,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468914,"byte_end":468956,"line_start":89,"line_end":89,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum(), RowVector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468961,"byte_end":469021,"line_start":90,"line_end":90,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469026,"byte_end":469033,"line_start":91,"line_end":91,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469038,"byte_end":469047,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4741},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469600,"byte_end":469610,"line_start":110,"line_end":110,"column_start":12,"column_end":22},"name":"row_sum_tr","qualname":"<Matrix<N, R, C, S>>::row_sum_tr","value":"pub fn row_sum_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The sum of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469203,"byte_end":469304,"line_start":98,"line_end":98,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469309,"byte_end":469312,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469317,"byte_end":469330,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469335,"byte_end":469338,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469343,"byte_end":469350,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469355,"byte_end":469396,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469401,"byte_end":469404,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469409,"byte_end":469450,"line_start":105,"line_end":105,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469455,"byte_end":469497,"line_start":106,"line_end":106,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_sum_tr(), Vector3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469502,"byte_end":469562,"line_start":107,"line_end":107,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469567,"byte_end":469574,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469579,"byte_end":469588,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4743},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470081,"byte_end":470091,"line_start":127,"line_end":127,"column_start":12,"column_end":22},"name":"column_sum","qualname":"<Matrix<N, R, C, S>>::column_sum","value":"pub fn column_sum(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The sum of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The sum of all the columns of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469743,"byte_end":469789,"line_start":115,"line_end":115,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469794,"byte_end":469797,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469802,"byte_end":469815,"line_start":117,"line_end":117,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469820,"byte_end":469823,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469828,"byte_end":469835,"line_start":119,"line_end":119,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469840,"byte_end":469881,"line_start":120,"line_end":120,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469886,"byte_end":469889,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469894,"byte_end":469935,"line_start":122,"line_end":122,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469940,"byte_end":469982,"line_start":123,"line_end":123,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_sum(), Vector2::new(6.0, 15.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":469987,"byte_end":470043,"line_start":124,"line_end":124,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470048,"byte_end":470055,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470060,"byte_end":470069,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4745},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470802,"byte_end":470810,"line_start":153,"line_end":153,"column_start":12,"column_end":20},"name":"variance","qualname":"<Matrix<N, R, C, S>>::variance","value":"pub fn variance(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the elements of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470412,"byte_end":470464,"line_start":140,"line_end":140,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470469,"byte_end":470472,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470477,"byte_end":470490,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470495,"byte_end":470498,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470503,"byte_end":470510,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470515,"byte_end":470554,"line_start":145,"line_end":145,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470559,"byte_end":470589,"line_start":146,"line_end":146,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470594,"byte_end":470597,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470602,"byte_end":470643,"line_start":148,"line_end":148,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470648,"byte_end":470690,"line_start":149,"line_end":149,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.variance(), 35.0 / 12.0, epsilon = 1.0e-8);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470695,"byte_end":470764,"line_start":150,"line_end":150,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470769,"byte_end":470776,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":470781,"byte_end":470790,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4747},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471595,"byte_end":471607,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"row_variance","qualname":"<Matrix<N, R, C, S>>::row_variance","value":"pub fn row_variance(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471158,"byte_end":471206,"line_start":163,"line_end":163,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471211,"byte_end":471214,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ Use `.row_variance_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471219,"byte_end":471296,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471301,"byte_end":471314,"line_start":166,"line_end":166,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471319,"byte_end":471322,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471327,"byte_end":471334,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471339,"byte_end":471383,"line_start":169,"line_end":169,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471388,"byte_end":471391,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471396,"byte_end":471437,"line_start":171,"line_end":171,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471442,"byte_end":471484,"line_start":172,"line_end":172,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance(), RowVector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471489,"byte_end":471557,"line_start":173,"line_end":173,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471562,"byte_end":471569,"line_start":174,"line_end":174,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471574,"byte_end":471583,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4749},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472159,"byte_end":472174,"line_start":193,"line_end":193,"column_start":12,"column_end":27},"name":"row_variance_tr","qualname":"<Matrix<N, R, C, S>>::row_variance_tr","value":"pub fn row_variance_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The variance of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471749,"byte_end":471855,"line_start":181,"line_end":181,"column_start":5,"column_end":111}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471860,"byte_end":471863,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471868,"byte_end":471881,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471886,"byte_end":471889,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471894,"byte_end":471901,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471906,"byte_end":471947,"line_start":186,"line_end":186,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471952,"byte_end":471955,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":471960,"byte_end":472001,"line_start":188,"line_end":188,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472006,"byte_end":472048,"line_start":189,"line_end":189,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_variance_tr(), Vector3::new(2.25, 2.25, 2.25));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472053,"byte_end":472121,"line_start":190,"line_end":190,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472126,"byte_end":472133,"line_start":191,"line_end":191,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472138,"byte_end":472147,"line_start":192,"line_end":192,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4751},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472742,"byte_end":472757,"line_start":211,"line_end":211,"column_start":12,"column_end":27},"name":"column_variance","qualname":"<Matrix<N, R, C, S>>::column_variance","value":"pub fn column_variance(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The variance of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The variance of all the columns of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472312,"byte_end":472363,"line_start":198,"line_end":198,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472368,"byte_end":472371,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472376,"byte_end":472389,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472394,"byte_end":472397,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472402,"byte_end":472409,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472414,"byte_end":472453,"line_start":203,"line_end":203,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472458,"byte_end":472499,"line_start":204,"line_end":204,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472504,"byte_end":472507,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472512,"byte_end":472553,"line_start":206,"line_end":206,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472558,"byte_end":472600,"line_start":207,"line_end":207,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(m.column_variance(), Vector2::new(2.0 / 3.0, 2.0 / 3.0), epsilon = 1.0e-8);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472605,"byte_end":472704,"line_start":208,"line_end":208,"column_start":5,"column_end":104}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472709,"byte_end":472716,"line_start":209,"line_end":209,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":472721,"byte_end":472730,"line_start":210,"line_end":210,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4754},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473684,"byte_end":473688,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"mean","qualname":"<Matrix<N, R, C, S>>::mean","value":"pub fn mean(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the elements of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the elements of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473381,"byte_end":473429,"line_start":234,"line_end":234,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473434,"byte_end":473437,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473442,"byte_end":473455,"line_start":236,"line_end":236,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473460,"byte_end":473463,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473468,"byte_end":473475,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Matrix2x3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473480,"byte_end":473510,"line_start":239,"line_end":239,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473515,"byte_end":473518,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473523,"byte_end":473564,"line_start":241,"line_end":241,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473569,"byte_end":473611,"line_start":242,"line_end":242,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.mean(), 3.5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473616,"byte_end":473646,"line_start":243,"line_end":243,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473651,"byte_end":473658,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473663,"byte_end":473672,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4755},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474281,"byte_end":474289,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"row_mean","qualname":"<Matrix<N, R, C, S>>::row_mean","value":"pub fn row_mean(&Self) -> RowVectorN<N, C> where\nDefaultAllocator: Allocator<N, U1, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473851,"byte_end":473895,"line_start":254,"line_end":254,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473900,"byte_end":473903,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Use `.row_mean_tr` if you need the result in a column vector instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473908,"byte_end":473981,"line_start":256,"line_end":256,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473986,"byte_end":473989,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":473994,"byte_end":474007,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474012,"byte_end":474015,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474020,"byte_end":474027,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, RowVector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474032,"byte_end":474076,"line_start":261,"line_end":261,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474081,"byte_end":474084,"line_start":262,"line_end":262,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474089,"byte_end":474130,"line_start":263,"line_end":263,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474135,"byte_end":474177,"line_start":264,"line_end":264,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean(), RowVector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474182,"byte_end":474243,"line_start":265,"line_end":265,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474248,"byte_end":474255,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474260,"byte_end":474269,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4757},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474826,"byte_end":474837,"line_start":285,"line_end":285,"column_start":12,"column_end":23},"name":"row_mean_tr","qualname":"<Matrix<N, R, C, S>>::row_mean_tr","value":"pub fn row_mean_tr(&Self) -> VectorN<N, C> where\nDefaultAllocator: Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","sig":null,"attributes":[{"value":"/ The mean of all the rows of this matrix. The result is transposed and returned as a column vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474427,"byte_end":474529,"line_start":273,"line_end":273,"column_start":5,"column_end":107}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474534,"byte_end":474537,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474542,"byte_end":474555,"line_start":275,"line_end":275,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474560,"byte_end":474563,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474568,"byte_end":474575,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474580,"byte_end":474621,"line_start":278,"line_end":278,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474626,"byte_end":474629,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474634,"byte_end":474675,"line_start":280,"line_end":280,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474680,"byte_end":474722,"line_start":281,"line_end":281,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.row_mean_tr(), Vector3::new(2.5, 3.5, 4.5));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474727,"byte_end":474788,"line_start":282,"line_end":282,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474793,"byte_end":474800,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474805,"byte_end":474814,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4759},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475310,"byte_end":475321,"line_start":302,"line_end":302,"column_start":12,"column_end":23},"name":"column_mean","qualname":"<Matrix<N, R, C, S>>::column_mean","value":"pub fn column_mean(&Self) -> VectorN<N, R> where\nDefaultAllocator: Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" The mean of all the columns of this matrix.","sig":null,"attributes":[{"value":"/ The mean of all the columns of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":474971,"byte_end":475018,"line_start":290,"line_end":290,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475023,"byte_end":475026,"line_start":291,"line_end":291,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475031,"byte_end":475044,"line_start":292,"line_end":292,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475049,"byte_end":475052,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475057,"byte_end":475064,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix2x3, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475069,"byte_end":475110,"line_start":295,"line_end":295,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475115,"byte_end":475118,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix2x3::new(1.0, 2.0, 3.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475123,"byte_end":475164,"line_start":297,"line_end":297,"column_start":5,"column_end":46}},{"value":"/                        4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475169,"byte_end":475211,"line_start":298,"line_end":298,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(m.column_mean(), Vector2::new(2.0, 5.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475216,"byte_end":475272,"line_start":299,"line_end":299,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475277,"byte_end":475284,"line_start":300,"line_end":300,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":475289,"byte_end":475298,"line_start":301,"line_end":301,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":4805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476089,"byte_end":476093,"line_start":14,"line_end":14,"column_start":11,"column_end":15},"name":"Norm","qualname":"::base::norm::Norm","value":"Norm<N: ComplexField>","parent":null,"children":[{"krate":0,"index":4807},{"krate":0,"index":4811}],"decl_id":null,"docs":" A trait for abstract matrix norms.","sig":null,"attributes":[{"value":"/ A trait for abstract matrix norms.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":475981,"byte_end":476019,"line_start":11,"line_end":11,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476020,"byte_end":476023,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ This may be moved to the alga crate in the future.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476024,"byte_end":476078,"line_start":13,"line_end":13,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":4807},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476165,"byte_end":476169,"line_start":16,"line_end":16,"column_start":8,"column_end":12},"name":"norm","qualname":"::base::norm::Norm::norm","value":"pub fn norm<R, C, S>(&Self, &Matrix<N, R, C, S>) -> N::RealField where R: Dim,\nC: Dim, S: Storage<N, R, C>","parent":{"krate":0,"index":4805},"children":[],"decl_id":null,"docs":" Apply this norm to the given matrix.\n","sig":null,"attributes":[{"value":"/ Apply this norm to the given matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476117,"byte_end":476157,"line_start":15,"line_end":15,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":4811},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476391,"byte_end":476406,"line_start":19,"line_end":19,"column_start":8,"column_end":23},"name":"metric_distance","qualname":"::base::norm::Norm::metric_distance","value":"pub fn metric_distance<R1, C1, S1, R2, C2,\n                       S2>(&Self, &Matrix<N, R1, C1, S1>,\n                           &Matrix<N, R2, C2, S2>) -> N::RealField where\nR1: Dim, C1: Dim, S1: Storage<N, R1, C1>, R2: Dim, C2: Dim,\nS2: Storage<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R1, R2> +\nSameNumberOfColumns<C1, C2>","parent":{"krate":0,"index":4805},"children":[],"decl_id":null,"docs":" Use the metric induced by this norm to compute the metric distance between the two given matrices.\n","sig":null,"attributes":[{"value":"/ Use the metric induced by this norm to compute the metric distance between the two given matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476281,"byte_end":476383,"line_start":18,"line_end":18,"column_start":5,"column_end":107}}]},{"kind":"Struct","id":{"krate":0,"index":4818},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476743,"byte_end":476756,"line_start":26,"line_end":26,"column_start":12,"column_end":25},"name":"EuclideanNorm","qualname":"::base::norm::EuclideanNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Euclidean norm.\n","sig":null,"attributes":[{"value":"/ Euclidean norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476712,"byte_end":476731,"line_start":25,"line_end":25,"column_start":1,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":4820},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476782,"byte_end":476788,"line_start":28,"line_end":28,"column_start":12,"column_end":18},"name":"LpNorm","qualname":"::base::norm::LpNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" Lp norm.\n","sig":null,"attributes":[{"value":"/ Lp norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476758,"byte_end":476770,"line_start":27,"line_end":27,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":4822},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476789,"byte_end":476796,"line_start":28,"line_end":28,"column_start":19,"column_end":26},"name":"0","qualname":"::base::norm::LpNorm::0","value":"i32","parent":{"krate":0,"index":4820},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4823},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476890,"byte_end":476901,"line_start":30,"line_end":30,"column_start":12,"column_end":23},"name":"UniformNorm","qualname":"::base::norm::UniformNorm","value":"","parent":null,"children":[],"decl_id":null,"docs":" L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.\n","sig":null,"attributes":[{"value":"/ L-infinite norm aka. Chebytchev norm aka. uniform norm aka. suppremum norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476799,"byte_end":476878,"line_start":29,"line_end":29,"column_start":1,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":4874},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479605,"byte_end":479617,"line_start":101,"line_end":101,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Matrix<N, R, C, S>>::norm_squared","value":"pub fn norm_squared(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The squared L2 norm of this vector.\n","sig":null,"attributes":[{"value":"/ The squared L2 norm of this vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479540,"byte_end":479579,"line_start":99,"line_end":99,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479584,"byte_end":479593,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4875},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479951,"byte_end":479955,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"norm","qualname":"<Matrix<N, R, C, S>>::norm","value":"pub fn norm(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The L2 norm of this matrix.","sig":null,"attributes":[{"value":"/ The L2 norm of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479836,"byte_end":479867,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479872,"byte_end":479875,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_norm` to apply a custom norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479880,"byte_end":479925,"line_start":114,"line_end":114,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479930,"byte_end":479939,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4876},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480219,"byte_end":480234,"line_start":124,"line_end":124,"column_start":12,"column_end":27},"name":"metric_distance","qualname":"<Matrix<N, R, C, S>>::metric_distance","value":"pub fn metric_distance<R2, C2, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> N::RealField where R2: Dim, C2: Dim, S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","sig":null,"attributes":[{"value":"/ Compute the distance between `self` and `rhs` using the metric induced by the euclidean norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480027,"byte_end":480124,"line_start":120,"line_end":120,"column_start":5,"column_end":102}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480129,"byte_end":480132,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ Use `.apply_metric_distance` to apply a custom norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480137,"byte_end":480193,"line_start":122,"line_end":122,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480198,"byte_end":480207,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4880},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480936,"byte_end":480946,"line_start":143,"line_end":143,"column_start":12,"column_end":22},"name":"apply_norm","qualname":"<Matrix<N, R, C, S>>::apply_norm","value":"pub fn apply_norm<impl Norm<N>: Norm<N>>(&Self, &impl Norm<N>) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Uses the given `norm` to compute the norm of `self`.","sig":null,"attributes":[{"value":"/ Uses the given `norm` to compute the norm of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480508,"byte_end":480564,"line_start":130,"line_end":130,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480569,"byte_end":480572,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480577,"byte_end":480590,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480595,"byte_end":480598,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480603,"byte_end":480610,"line_start":134,"line_end":134,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480615,"byte_end":480681,"line_start":135,"line_end":135,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480686,"byte_end":480689,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ let v = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480694,"byte_end":480734,"line_start":137,"line_end":137,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(v.apply_norm(&UniformNorm), 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480739,"byte_end":480787,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(v.apply_norm(&LpNorm(1)), 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480792,"byte_end":480838,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(v.apply_norm(&EuclideanNorm), v.norm());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480843,"byte_end":480898,"line_start":140,"line_end":140,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480903,"byte_end":480910,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":480915,"byte_end":480924,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4882},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481636,"byte_end":481657,"line_start":162,"line_end":162,"column_start":12,"column_end":33},"name":"apply_metric_distance","qualname":"<Matrix<N, R, C, S>>::apply_metric_distance","value":"pub fn apply_metric_distance<R2, C2, S2,\n                             impl Norm<N>: Norm<N>>(&Self,\n                                                    &Matrix<N, R2, C2, S2>,\n                                                    &impl Norm<N>)\n-> N::RealField where R2: Dim, C2: Dim, S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R, R2> + SameNumberOfColumns<C, C2>","parent":null,"children":[],"decl_id":null,"docs":" Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","sig":null,"attributes":[{"value":"/ Uses the metric induced by the given `norm` to compute the metric distance between `self` and `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481028,"byte_end":481132,"line_start":147,"line_end":147,"column_start":5,"column_end":109}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481137,"byte_end":481140,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481145,"byte_end":481158,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481163,"byte_end":481166,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481171,"byte_end":481178,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector3, UniformNorm, LpNorm, EuclideanNorm};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481183,"byte_end":481249,"line_start":152,"line_end":152,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481254,"byte_end":481257,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481262,"byte_end":481303,"line_start":154,"line_end":154,"column_start":5,"column_end":46}},{"value":"/ let v2 = Vector3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481308,"byte_end":481352,"line_start":155,"line_end":155,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481357,"byte_end":481360,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &UniformNorm), 27.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481365,"byte_end":481431,"line_start":157,"line_end":157,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &LpNorm(1)), 27.0 + 18.0 + 9.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481436,"byte_end":481513,"line_start":158,"line_end":158,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(v1.apply_metric_distance(&v2, &EuclideanNorm), (v1 - v2).norm());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481518,"byte_end":481598,"line_start":159,"line_end":159,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481603,"byte_end":481610,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481615,"byte_end":481624,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4887},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482110,"byte_end":482119,"line_start":174,"line_end":174,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Matrix<N, R, C, S>>::magnitude","value":"pub fn magnitude(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481936,"byte_end":481978,"line_start":168,"line_end":168,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481983,"byte_end":481986,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":481991,"byte_end":482010,"line_start":170,"line_end":170,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482015,"byte_end":482018,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm()`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482023,"byte_end":482084,"line_start":172,"line_end":172,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482089,"byte_end":482098,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4888},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482374,"byte_end":482391,"line_start":184,"line_end":184,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Matrix<N, R, C, S>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this matrix.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482176,"byte_end":482226,"line_start":178,"line_end":178,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482231,"byte_end":482234,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482239,"byte_end":482266,"line_start":180,"line_end":180,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482271,"byte_end":482274,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ This function is simply implemented as a call to `norm_squared()`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482279,"byte_end":482348,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482353,"byte_end":482362,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4889},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482530,"byte_end":482539,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Matrix<N, R, C, S>>::normalize","value":"pub fn normalize(&Self) -> MatrixMN<N, R, C> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482456,"byte_end":482504,"line_start":188,"line_end":188,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482509,"byte_end":482518,"line_start":189,"line_end":189,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4890},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482785,"byte_end":482798,"line_start":197,"line_end":197,"column_start":12,"column_end":25},"name":"try_normalize","qualname":"<Matrix<N, R, C, S>>::try_normalize","value":"pub fn try_normalize(&Self, N::RealField) -> Option<MatrixMN<N, R, C>> where\nDefaultAllocator: Allocator<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.\n","sig":null,"attributes":[{"value":"/ Returns a normalized version of this matrix unless its norm as smaller or equal to `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482666,"byte_end":482759,"line_start":195,"line_end":195,"column_start":5,"column_end":98}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":482764,"byte_end":482773,"line_start":196,"line_end":196,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4891},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483115,"byte_end":483122,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"lp_norm","qualname":"<Matrix<N, R, C, S>>::lp_norm","value":"pub fn lp_norm(&Self, i32) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The Lp norm of this matrix.\n","sig":null,"attributes":[{"value":"/ The Lp norm of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483058,"byte_end":483089,"line_start":208,"line_end":208,"column_start":5,"column_end":36}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483094,"byte_end":483103,"line_start":209,"line_end":209,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4897},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483372,"byte_end":483385,"line_start":219,"line_end":219,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Matrix<N, R, C, S>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place and returns its norm.\n","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place and returns its norm.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483289,"byte_end":483346,"line_start":217,"line_end":217,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483351,"byte_end":483360,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":4898},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483701,"byte_end":483718,"line_start":230,"line_end":230,"column_start":12,"column_end":29},"name":"try_normalize_mut","qualname":"<Matrix<N, R, C, S>>::try_normalize_mut","value":"pub fn try_normalize_mut(&mut Self, N::RealField) -> Option<N::RealField>","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","sig":null,"attributes":[{"value":"/ Normalizes this matrix in-place or does nothing if its norm is smaller or equal to `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483495,"byte_end":483588,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483593,"byte_end":483596,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ If the normalization succeeded, returns the old normal of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483601,"byte_end":483675,"line_start":228,"line_end":228,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483680,"byte_end":483689,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":4899},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/helper.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"helper","qualname":"::base::helper","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/helper.rs","parent":null,"children":[{"krate":0,"index":4900},{"krate":0,"index":4901},{"krate":0,"index":4904},{"krate":0,"index":4905},{"krate":0,"index":4907},{"krate":0,"index":4910}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":4910},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/helper.rs","byte_start":484413,"byte_end":484424,"line_start":20,"line_end":20,"column_start":8,"column_end":19},"name":"reject_rand","qualname":"::base::helper::reject_rand","value":"pub fn reject_rand<G: Rng + ?Sized, F: FnMut(&T) -> bool, T>(&mut G, F) -> T\nwhere Standard: Distribution<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/helper.rs","byte_start":484396,"byte_end":484405,"line_start":19,"line_end":19,"column_start":1,"column_end":10}}]},{"kind":"Mod","id":{"krate":0,"index":4929},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"geometry","qualname":"::geometry","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","parent":null,"children":[{"krate":0,"index":4930},{"krate":0,"index":4937},{"krate":0,"index":5048},{"krate":0,"index":5116},{"krate":0,"index":5151},{"krate":0,"index":5239},{"krate":0,"index":5312},{"krate":0,"index":5375},{"krate":0,"index":5508},{"krate":0,"index":5627},{"krate":0,"index":5758},{"krate":0,"index":5773},{"krate":0,"index":5815},{"krate":0,"index":5968},{"krate":0,"index":6056},{"krate":0,"index":6198},{"krate":0,"index":6403},{"krate":0,"index":6589},{"krate":0,"index":6725},{"krate":0,"index":6849},{"krate":0,"index":6876},{"krate":0,"index":6976},{"krate":0,"index":7058},{"krate":0,"index":7181},{"krate":0,"index":7264},{"krate":0,"index":7373},{"krate":0,"index":7519},{"krate":0,"index":7645},{"krate":0,"index":7774},{"krate":0,"index":7809},{"krate":0,"index":7883},{"krate":0,"index":8002},{"krate":0,"index":8065},{"krate":0,"index":8124},{"krate":0,"index":8258},{"krate":0,"index":8391},{"krate":0,"index":8423},{"krate":0,"index":8529},{"krate":0,"index":8633},{"krate":0,"index":8700},{"krate":0,"index":8842},{"krate":0,"index":8965},{"krate":0,"index":8997},{"krate":0,"index":9097},{"krate":0,"index":9192},{"krate":0,"index":9259},{"krate":0,"index":9294},{"krate":0,"index":9459},{"krate":0,"index":9564},{"krate":0,"index":9597},{"krate":0,"index":9641},{"krate":0,"index":9704},{"krate":0,"index":9832},{"krate":0,"index":9919},{"krate":0,"index":10020},{"krate":0,"index":10117},{"krate":0,"index":10118},{"krate":0,"index":10119},{"krate":0,"index":10120},{"krate":0,"index":10121},{"krate":0,"index":10122},{"krate":0,"index":10123},{"krate":0,"index":10124},{"krate":0,"index":10125},{"krate":0,"index":10126},{"krate":0,"index":10127},{"krate":0,"index":10128},{"krate":0,"index":10129},{"krate":0,"index":10130},{"krate":0,"index":10131},{"krate":0,"index":10132},{"krate":0,"index":10135}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Data structures for points and usual transformations\n (rotations, isometries, etc.)\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Data structures for points and usual transformations","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":484600,"byte_end":484696,"line_start":1,"line_end":1,"column_start":1,"column_end":97}},{"value":"/ (rotations, isometries, etc.)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/mod.rs","byte_start":484697,"byte_end":484730,"line_start":2,"line_end":2,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":21177},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495737,"byte_end":495742,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Point","qualname":"::geometry::point::Point","value":"Point { coords }","parent":null,"children":[{"krate":0,"index":21180}],"decl_id":null,"docs":" A point in a n-dimensional euclidean space.\n","sig":null,"attributes":[{"value":"/ A point in a n-dimensional euclidean space.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495643,"byte_end":495690,"line_start":20,"line_end":20,"column_start":1,"column_end":48}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495691,"byte_end":495701,"line_start":21,"line_end":21,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":21180},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495888,"byte_end":495894,"line_start":27,"line_end":27,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::point::Point::coords","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":21177},"children":[],"decl_id":null,"docs":" The coordinates of this point, i.e., the shift from the origin.\n","sig":null,"attributes":[{"value":"/ The coordinates of this point, i.e., the shift from the origin.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495812,"byte_end":495879,"line_start":26,"line_end":26,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":5004},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498297,"byte_end":498311,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Point<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> VectorN<N, DimNameSum<D, U1>> where N: One,\nD: DimNameAdd<U1>, DefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the\n end of it.","sig":null,"attributes":[{"value":"/ Converts this point into a vector in homogeneous coordinates, i.e., appends a `1` at the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497719,"byte_end":497811,"line_start":97,"line_end":97,"column_start":5,"column_end":97}},{"value":"/ end of it.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497816,"byte_end":497830,"line_start":98,"line_end":98,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497835,"byte_end":497838,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ This is the same as `.into()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497843,"byte_end":497877,"line_start":100,"line_end":100,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497882,"byte_end":497885,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497890,"byte_end":497903,"line_start":102,"line_end":102,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497908,"byte_end":497915,"line_start":103,"line_end":103,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497920,"byte_end":497975,"line_start":104,"line_end":104,"column_start":5,"column_end":60}},{"value":"/ let p = Point2::new(10.0, 20.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497980,"byte_end":498016,"line_start":105,"line_end":105,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector3::new(10.0, 20.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498021,"byte_end":498087,"line_start":106,"line_end":106,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498092,"byte_end":498095,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498100,"byte_end":498135,"line_start":108,"line_end":108,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498140,"byte_end":498182,"line_start":109,"line_end":109,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.to_homogeneous(), Vector4::new(10.0, 20.0, 30.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498187,"byte_end":498259,"line_start":110,"line_end":110,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498264,"byte_end":498271,"line_start":111,"line_end":111,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498276,"byte_end":498285,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5005},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498826,"byte_end":498842,"line_start":129,"line_end":129,"column_start":12,"column_end":28},"name":"from_coordinates","qualname":"<Point<N, D>>::from_coordinates","value":"pub fn from_coordinates(VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with the given coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with the given coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498688,"byte_end":498739,"line_start":126,"line_end":126,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"Use Point::from(vector) instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498744,"byte_end":498800,"line_start":127,"line_end":127,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498805,"byte_end":498814,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5006},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499267,"byte_end":499270,"line_start":146,"line_end":146,"column_start":12,"column_end":15},"name":"len","qualname":"<Point<N, D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of this point.","sig":null,"attributes":[{"value":"/ The dimension of this point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498919,"byte_end":498951,"line_start":133,"line_end":133,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498956,"byte_end":498959,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498964,"byte_end":498977,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498982,"byte_end":498989,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":498994,"byte_end":499031,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499036,"byte_end":499070,"line_start":138,"line_end":138,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.len(), 2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499075,"byte_end":499102,"line_start":139,"line_end":139,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499107,"byte_end":499110,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499115,"byte_end":499150,"line_start":141,"line_end":141,"column_start":5,"column_end":40}},{"value":"/ let p = Point3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499155,"byte_end":499197,"line_start":142,"line_end":142,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(p.len(), 3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499202,"byte_end":499229,"line_start":143,"line_end":143,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499234,"byte_end":499241,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499246,"byte_end":499255,"line_start":145,"line_end":145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5007},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499559,"byte_end":499565,"line_start":154,"line_end":154,"column_start":12,"column_end":18},"name":"stride","qualname":"<Point<N, D>>::stride","value":"pub fn stride(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The stride of this point. This is the number of buffer element separating each component of\n this point.\n","sig":null,"attributes":[{"value":"/ The stride of this point. This is the number of buffer element separating each component of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499326,"byte_end":499421,"line_start":150,"line_end":150,"column_start":5,"column_end":100}},{"value":"/ this point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499426,"byte_end":499441,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499446,"byte_end":499455,"line_start":152,"line_end":152,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This methods is no longer significant and will always return 1.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499460,"byte_end":499547,"line_start":153,"line_end":153,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":5008},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500022,"byte_end":500026,"line_start":171,"line_end":171,"column_start":12,"column_end":16},"name":"iter","qualname":"<Point<N, D>>::iter","value":"pub fn iter(&Self)\n-> MatrixIter<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Iterates through this point coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499627,"byte_end":499671,"line_start":158,"line_end":158,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499676,"byte_end":499679,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499684,"byte_end":499697,"line_start":160,"line_end":160,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499702,"byte_end":499709,"line_start":161,"line_end":161,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499714,"byte_end":499741,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499746,"byte_end":499785,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ let mut it = p.iter().cloned();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499790,"byte_end":499825,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499830,"byte_end":499833,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(it.next(), Some(1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499838,"byte_end":499875,"line_start":166,"line_end":166,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499880,"byte_end":499917,"line_start":167,"line_end":167,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), Some(3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499922,"byte_end":499959,"line_start":168,"line_end":168,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(it.next(), None);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":499964,"byte_end":499996,"line_start":169,"line_end":169,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500001,"byte_end":500010,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5009},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500252,"byte_end":500265,"line_start":177,"line_end":177,"column_start":19,"column_end":32},"name":"get_unchecked","qualname":"<Point<N, D>>::get_unchecked","value":"pub unsafe fn get_unchecked(&Self, usize) -> &N","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500145,"byte_end":500219,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500224,"byte_end":500233,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5010},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500672,"byte_end":500680,"line_start":194,"line_end":194,"column_start":12,"column_end":20},"name":"iter_mut","qualname":"<Point<N, D>>::iter_mut","value":"pub fn iter_mut(&mut Self)\n-> MatrixIterMut<, N, D, U1, <DefaultAllocator as Allocator<N, D>>::Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Mutably iterates through this point coordinates.","sig":null,"attributes":[{"value":"/ Mutably iterates through this point coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500340,"byte_end":500392,"line_start":181,"line_end":181,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500397,"byte_end":500400,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500405,"byte_end":500418,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500423,"byte_end":500430,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Point3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500435,"byte_end":500462,"line_start":185,"line_end":185,"column_start":5,"column_end":32}},{"value":"/ let mut p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500467,"byte_end":500510,"line_start":186,"line_end":186,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500515,"byte_end":500518,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ for e in p.iter_mut() {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500523,"byte_end":500550,"line_start":188,"line_end":188,"column_start":5,"column_end":32}},{"value":"/     *e *= 10.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500555,"byte_end":500574,"line_start":189,"line_end":189,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500579,"byte_end":500584,"line_start":190,"line_end":190,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500589,"byte_end":500592,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p, Point3::new(10.0, 20.0, 30.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500597,"byte_end":500646,"line_start":192,"line_end":192,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500651,"byte_end":500660,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5011},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500940,"byte_end":500957,"line_start":202,"line_end":202,"column_start":19,"column_end":36},"name":"get_unchecked_mut","qualname":"<Point<N, D>>::get_unchecked_mut","value":"pub unsafe fn get_unchecked_mut(&mut Self, usize) -> &mut N","parent":null,"children":[],"decl_id":null,"docs":" Gets a mutable reference to i-th element of this point without bound-checking.\n","sig":null,"attributes":[{"value":"/ Gets a mutable reference to i-th element of this point without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500825,"byte_end":500907,"line_start":200,"line_end":200,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":500912,"byte_end":500921,"line_start":201,"line_end":201,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5012},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501122,"byte_end":501136,"line_start":208,"line_end":208,"column_start":19,"column_end":33},"name":"swap_unchecked","qualname":"<Point<N, D>>::swap_unchecked","value":"pub unsafe fn swap_unchecked(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Swaps two entries without bound-checking.\n","sig":null,"attributes":[{"value":"/ Swaps two entries without bound-checking.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501044,"byte_end":501089,"line_start":206,"line_end":206,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501094,"byte_end":501103,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5139},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":505847,"byte_end":505853,"line_start":6,"line_end":6,"column_start":10,"column_end":16},"name":"Point1","qualname":"::geometry::point_alias::Point1","value":"Point<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 1-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 1-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":505787,"byte_end":505837,"line_start":5,"line_end":5,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5141},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":505933,"byte_end":505939,"line_start":8,"line_end":8,"column_start":10,"column_end":16},"name":"Point2","qualname":"::geometry::point_alias::Point2","value":"Point<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 2-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 2-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":505873,"byte_end":505923,"line_start":7,"line_end":7,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5143},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506019,"byte_end":506025,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Point3","qualname":"::geometry::point_alias::Point3","value":"Point<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 3-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 3-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":505959,"byte_end":506009,"line_start":9,"line_end":9,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5145},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506105,"byte_end":506111,"line_start":12,"line_end":12,"column_start":10,"column_end":16},"name":"Point4","qualname":"::geometry::point_alias::Point4","value":"Point<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 4-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 4-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506045,"byte_end":506095,"line_start":11,"line_end":11,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5147},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506191,"byte_end":506197,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Point5","qualname":"::geometry::point_alias::Point5","value":"Point<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 5-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 5-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506131,"byte_end":506181,"line_start":13,"line_end":13,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":5149},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506277,"byte_end":506283,"line_start":16,"line_end":16,"column_start":10,"column_end":16},"name":"Point6","qualname":"::geometry::point_alias::Point6","value":"Point<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A statically sized 6-dimensional column point.\n","sig":null,"attributes":[{"value":"/ A statically sized 6-dimensional column point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alias.rs","byte_start":506217,"byte_end":506267,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":5222},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506881,"byte_end":506898,"line_start":20,"line_end":20,"column_start":19,"column_end":36},"name":"new_uninitialized","qualname":"<Point<N, D>>::new_uninitialized","value":"pub unsafe fn new_uninitialized() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with uninitialized coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new point with uninitialized coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506793,"byte_end":506848,"line_start":18,"line_end":18,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506853,"byte_end":506862,"line_start":19,"line_end":19,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5223},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507527,"byte_end":507533,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point<N, D>>::origin","value":"pub fn origin() -> Self where N: Zero","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point with all coordinates equal to zero.","sig":null,"attributes":[{"value":"/ Creates a new point with all coordinates equal to zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506971,"byte_end":507030,"line_start":24,"line_end":24,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507035,"byte_end":507038,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507043,"byte_end":507056,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507061,"byte_end":507064,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507069,"byte_end":507076,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507081,"byte_end":507118,"line_start":29,"line_end":29,"column_start":5,"column_end":42}},{"value":"/ // This works in any dimension.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507123,"byte_end":507158,"line_start":30,"line_end":30,"column_start":5,"column_end":40}},{"value":"/ // The explicit crate::<f32> type annotation may not always be needed,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507163,"byte_end":507237,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ // depending on the context of type inference.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507242,"byte_end":507292,"line_start":32,"line_end":32,"column_start":5,"column_end":55}},{"value":"/ let pt = Point2::<f32>::origin();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507297,"byte_end":507334,"line_start":33,"line_end":33,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507339,"byte_end":507379,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507384,"byte_end":507387,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::<f32>::origin();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507392,"byte_end":507429,"line_start":36,"line_end":36,"column_start":5,"column_end":42}},{"value":"/ assert!(pt.x == 0.0 && pt.y == 0.0 && pt.z == 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507434,"byte_end":507489,"line_start":37,"line_end":37,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507494,"byte_end":507501,"line_start":38,"line_end":38,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507506,"byte_end":507515,"line_start":39,"line_end":39,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5224},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508037,"byte_end":508047,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<Point<N, D>>::from_slice","value":"pub fn from_slice(&[N]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from a slice.","sig":null,"attributes":[{"value":"/ Creates a new point from a slice.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507628,"byte_end":507665,"line_start":45,"line_end":45,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507670,"byte_end":507673,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507678,"byte_end":507691,"line_start":47,"line_end":47,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507696,"byte_end":507699,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507704,"byte_end":507711,"line_start":49,"line_end":49,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507716,"byte_end":507753,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/ let data = [ 1.0, 2.0, 3.0 ];","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507758,"byte_end":507791,"line_start":51,"line_end":51,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507796,"byte_end":507799,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::from_slice(&data[..2]);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507804,"byte_end":507848,"line_start":53,"line_end":53,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(pt, Point2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507853,"byte_end":507895,"line_start":54,"line_end":54,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507900,"byte_end":507903,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ let pt = Point3::from_slice(&data);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507908,"byte_end":507947,"line_start":56,"line_end":56,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(pt, Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":507952,"byte_end":507999,"line_start":57,"line_end":57,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508004,"byte_end":508011,"line_start":58,"line_end":58,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508016,"byte_end":508025,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5225},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509404,"byte_end":509420,"line_start":95,"line_end":95,"column_start":12,"column_end":28},"name":"from_homogeneous","qualname":"<Point<N, D>>::from_homogeneous","value":"pub fn from_homogeneous(VectorN<N, DimNameSum<D, U1>>) -> Option<Self> where\nN: Scalar + Zero + One + ClosedDiv, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new point from its homogeneous vector representation.","sig":null,"attributes":[{"value":"/ Creates a new point from its homogeneous vector representation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508143,"byte_end":508210,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508215,"byte_end":508218,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ In practice, this builds a D-dimensional points with the same first D component as `v`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508223,"byte_end":508313,"line_start":66,"line_end":66,"column_start":5,"column_end":95}},{"value":"/ divided by the last component of `v`. Returns `None` if this divisor is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508318,"byte_end":508399,"line_start":67,"line_end":67,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508404,"byte_end":508407,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508412,"byte_end":508425,"line_start":69,"line_end":69,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508430,"byte_end":508433,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508438,"byte_end":508445,"line_start":71,"line_end":71,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Vector3, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508450,"byte_end":508505,"line_start":72,"line_end":72,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508510,"byte_end":508513,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508518,"byte_end":508568,"line_start":74,"line_end":74,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508573,"byte_end":508619,"line_start":75,"line_end":75,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(1.0, 2.0, 3.0)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508624,"byte_end":508677,"line_start":76,"line_end":76,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508682,"byte_end":508685,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ // All component of the result will be divided by the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508690,"byte_end":508747,"line_start":78,"line_end":78,"column_start":5,"column_end":62}},{"value":"/ // last component of the vector, here 2.0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508752,"byte_end":508799,"line_start":79,"line_end":79,"column_start":5,"column_end":51}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508804,"byte_end":508854,"line_start":80,"line_end":80,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508859,"byte_end":508905,"line_start":81,"line_end":81,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point3::new(0.5, 1.0, 1.5)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508910,"byte_end":508963,"line_start":82,"line_end":82,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508968,"byte_end":508971,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ // Fails because the last component is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":508976,"byte_end":509024,"line_start":84,"line_end":84,"column_start":5,"column_end":53}},{"value":"/ let coords = Vector4::new(1.0, 2.0, 3.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509029,"byte_end":509079,"line_start":85,"line_end":85,"column_start":5,"column_end":55}},{"value":"/ let pt = Point3::from_homogeneous(coords);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509084,"byte_end":509130,"line_start":86,"line_end":86,"column_start":5,"column_end":51}},{"value":"/ assert!(pt.is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509135,"byte_end":509161,"line_start":87,"line_end":87,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509166,"byte_end":509169,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ // Works also in other dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509174,"byte_end":509212,"line_start":89,"line_end":89,"column_start":5,"column_end":43}},{"value":"/ let coords = Vector3::new(1.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509217,"byte_end":509262,"line_start":90,"line_end":90,"column_start":5,"column_end":50}},{"value":"/ let pt = Point2::from_homogeneous(coords);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509267,"byte_end":509313,"line_start":91,"line_end":91,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(pt, Some(Point2::new(1.0, 2.0)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509318,"byte_end":509366,"line_start":92,"line_end":92,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509371,"byte_end":509378,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509383,"byte_end":509392,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21567},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527053,"byte_end":527061,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"name":"Rotation","qualname":"::geometry::rotation::Rotation","value":"Rotation {  }","parent":null,"children":[{"krate":0,"index":21570}],"decl_id":null,"docs":" A rotation matrix.\n","sig":null,"attributes":[{"value":"/ A rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":526991,"byte_end":527013,"line_start":24,"line_end":24,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527014,"byte_end":527024,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":5582},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530040,"byte_end":530046,"line_start":130,"line_end":130,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Rotation<N, D>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529236,"byte_end":529309,"line_start":111,"line_end":111,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529314,"byte_end":529317,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529322,"byte_end":529335,"line_start":113,"line_end":113,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529340,"byte_end":529347,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529352,"byte_end":529422,"line_start":115,"line_end":115,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529427,"byte_end":529446,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529451,"byte_end":529536,"line_start":117,"line_end":117,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529541,"byte_end":529599,"line_start":118,"line_end":118,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529604,"byte_end":529662,"line_start":119,"line_end":119,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529667,"byte_end":529726,"line_start":120,"line_end":120,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529731,"byte_end":529771,"line_start":121,"line_end":121,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529776,"byte_end":529779,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529784,"byte_end":529787,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529792,"byte_end":529845,"line_start":124,"line_end":124,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529850,"byte_end":529898,"line_start":125,"line_end":125,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529903,"byte_end":529957,"line_start":126,"line_end":126,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(*rot.matrix(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529962,"byte_end":530002,"line_start":127,"line_end":127,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530007,"byte_end":530014,"line_start":128,"line_end":128,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530019,"byte_end":530028,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5583},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530287,"byte_end":530297,"line_start":137,"line_end":137,"column_start":19,"column_end":29},"name":"matrix_mut","qualname":"<Rotation<N, D>>::matrix_mut","value":"pub unsafe fn matrix_mut(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530106,"byte_end":530187,"line_start":134,"line_end":134,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530192,"byte_end":530201,"line_start":135,"line_end":135,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `.matrix_mut_unchecked()` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530206,"byte_end":530268,"line_start":136,"line_end":136,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":5584},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530736,"byte_end":530756,"line_start":147,"line_end":147,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Rotation<N, D>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix representation of this rotation.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix representation of this rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530369,"byte_end":530450,"line_start":141,"line_end":141,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530455,"byte_end":530458,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This is suffixed by \"_unchecked\" because this allows the user to replace the matrix by another one that is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530463,"byte_end":530573,"line_start":143,"line_end":143,"column_start":5,"column_end":115}},{"value":"/ non-square, non-inversible, or non-orthonormal. If one of those properties is broken,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530578,"byte_end":530667,"line_start":144,"line_end":144,"column_start":5,"column_end":94}},{"value":"/ subsequent method calls may be UB.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530672,"byte_end":530710,"line_start":145,"line_end":145,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530715,"byte_end":530724,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5585},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531645,"byte_end":531655,"line_start":172,"line_end":172,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Rotation<N, D>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530828,"byte_end":530862,"line_start":151,"line_end":151,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530867,"byte_end":530870,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530875,"byte_end":530888,"line_start":153,"line_end":153,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530893,"byte_end":530900,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix2, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530905,"byte_end":530975,"line_start":155,"line_end":155,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":530980,"byte_end":530999,"line_start":156,"line_end":156,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531004,"byte_end":531089,"line_start":157,"line_end":157,"column_start":5,"column_end":90}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531094,"byte_end":531125,"line_start":158,"line_end":158,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531130,"byte_end":531188,"line_start":159,"line_end":159,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531193,"byte_end":531251,"line_start":160,"line_end":160,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531256,"byte_end":531315,"line_start":161,"line_end":161,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531320,"byte_end":531350,"line_start":162,"line_end":162,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531355,"byte_end":531358,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531363,"byte_end":531366,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531371,"byte_end":531424,"line_start":165,"line_end":165,"column_start":5,"column_end":58}},{"value":"/ let mat = rot.into_inner();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531429,"byte_end":531460,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/ let expected = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531465,"byte_end":531513,"line_start":167,"line_end":167,"column_start":5,"column_end":53}},{"value":"/                             0.5,       0.8660254);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531518,"byte_end":531572,"line_start":168,"line_end":168,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(mat, expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531577,"byte_end":531607,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531612,"byte_end":531619,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531624,"byte_end":531633,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5586},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531882,"byte_end":531888,"line_start":180,"line_end":180,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Rotation<N, D>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the underlying matrix.\n Deprecated: Use [Rotation::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Unwraps the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531712,"byte_end":531746,"line_start":176,"line_end":176,"column_start":5,"column_end":39}},{"value":"/ Deprecated: Use [Rotation::into_inner] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531751,"byte_end":531802,"line_start":177,"line_end":177,"column_start":5,"column_end":56}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531807,"byte_end":531856,"line_start":178,"line_end":178,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531861,"byte_end":531870,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5587},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532983,"byte_end":532997,"line_start":207,"line_end":207,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Rotation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this rotation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this rotation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":531945,"byte_end":532026,"line_start":184,"line_end":184,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532031,"byte_end":532034,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.into()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532039,"byte_end":532077,"line_start":186,"line_end":186,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532082,"byte_end":532085,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532090,"byte_end":532103,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532108,"byte_end":532115,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3, Matrix3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532120,"byte_end":532190,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532195,"byte_end":532214,"line_start":191,"line_end":191,"column_start":5,"column_end":24}},{"value":"/ let rot = Rotation3::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532219,"byte_end":532304,"line_start":192,"line_end":192,"column_start":5,"column_end":90}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532309,"byte_end":532372,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532377,"byte_end":532440,"line_start":194,"line_end":194,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532445,"byte_end":532508,"line_start":195,"line_end":195,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532513,"byte_end":532577,"line_start":196,"line_end":196,"column_start":5,"column_end":69}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532582,"byte_end":532629,"line_start":197,"line_end":197,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532634,"byte_end":532637,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532642,"byte_end":532645,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532650,"byte_end":532703,"line_start":200,"line_end":200,"column_start":5,"column_end":58}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532708,"byte_end":532766,"line_start":201,"line_end":201,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532771,"byte_end":532829,"line_start":202,"line_end":202,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532834,"byte_end":532893,"line_start":203,"line_end":203,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532898,"byte_end":532945,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532950,"byte_end":532957,"line_start":205,"line_end":205,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":532962,"byte_end":532971,"line_start":206,"line_end":206,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5588},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534372,"byte_end":534393,"line_start":245,"line_end":245,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Rotation<N, D>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from the given square matrix.","sig":null,"attributes":[{"value":"/ Creates a new rotation from the given square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533570,"byte_end":533626,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533631,"byte_end":533634,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ The matrix squareness is checked but not its orthonormality.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533639,"byte_end":533703,"line_start":224,"line_end":224,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533708,"byte_end":533711,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533716,"byte_end":533729,"line_start":226,"line_end":226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533734,"byte_end":533741,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Matrix2, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533746,"byte_end":533807,"line_start":228,"line_end":228,"column_start":5,"column_end":66}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533812,"byte_end":533831,"line_start":229,"line_end":229,"column_start":5,"column_end":24}},{"value":"/ let mat = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533836,"byte_end":533889,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/                        0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533894,"byte_end":533947,"line_start":231,"line_end":231,"column_start":5,"column_end":58}},{"value":"/                        0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":533952,"byte_end":534006,"line_start":232,"line_end":232,"column_start":5,"column_end":59}},{"value":"/ let rot = Rotation3::from_matrix_unchecked(mat);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534011,"byte_end":534063,"line_start":233,"line_end":233,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534068,"byte_end":534071,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534076,"byte_end":534111,"line_start":235,"line_end":235,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534116,"byte_end":534119,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534124,"byte_end":534127,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ let mat = Matrix2::new(0.8660254, -0.5,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534132,"byte_end":534175,"line_start":238,"line_end":238,"column_start":5,"column_end":48}},{"value":"/                        0.5,       0.8660254);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534180,"byte_end":534229,"line_start":239,"line_end":239,"column_start":5,"column_end":54}},{"value":"/ let rot = Rotation2::from_matrix_unchecked(mat);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534234,"byte_end":534286,"line_start":240,"line_end":240,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534291,"byte_end":534294,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(*rot.matrix(), mat);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534299,"byte_end":534334,"line_start":242,"line_end":242,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534339,"byte_end":534346,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534351,"byte_end":534360,"line_start":244,"line_end":244,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5589},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535416,"byte_end":535425,"line_start":273,"line_end":273,"column_start":12,"column_end":21},"name":"transpose","qualname":"<Rotation<N, D>>::transpose","value":"pub fn transpose(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self`.","sig":null,"attributes":[{"value":"/ Transposes `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534599,"byte_end":534621,"line_start":254,"line_end":254,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534626,"byte_end":534629,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534634,"byte_end":534717,"line_start":256,"line_end":256,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534722,"byte_end":534725,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534730,"byte_end":534743,"line_start":258,"line_end":258,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534748,"byte_end":534755,"line_start":259,"line_end":259,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534760,"byte_end":534799,"line_start":260,"line_end":260,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534804,"byte_end":534856,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534861,"byte_end":534919,"line_start":262,"line_end":262,"column_start":5,"column_end":63}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534924,"byte_end":534957,"line_start":263,"line_end":263,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":534962,"byte_end":535041,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535046,"byte_end":535125,"line_start":265,"line_end":265,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535130,"byte_end":535133,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535138,"byte_end":535172,"line_start":267,"line_end":267,"column_start":5,"column_end":39}},{"value":"/ let tr_rot = rot.transpose();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535177,"byte_end":535210,"line_start":268,"line_end":268,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535215,"byte_end":535294,"line_start":269,"line_end":269,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535299,"byte_end":535378,"line_start":270,"line_end":270,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535383,"byte_end":535390,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535395,"byte_end":535404,"line_start":272,"line_end":272,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5590},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536309,"byte_end":536316,"line_start":296,"line_end":296,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535515,"byte_end":535534,"line_start":277,"line_end":277,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535539,"byte_end":535542,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535547,"byte_end":535632,"line_start":279,"line_end":279,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535637,"byte_end":535640,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535645,"byte_end":535658,"line_start":281,"line_end":281,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535663,"byte_end":535670,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535675,"byte_end":535714,"line_start":283,"line_end":283,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535719,"byte_end":535771,"line_start":284,"line_end":284,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535776,"byte_end":535834,"line_start":285,"line_end":285,"column_start":5,"column_end":63}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535839,"byte_end":535867,"line_start":286,"line_end":286,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535872,"byte_end":535948,"line_start":287,"line_end":287,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":535953,"byte_end":536029,"line_start":288,"line_end":288,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536034,"byte_end":536037,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536042,"byte_end":536076,"line_start":290,"line_end":290,"column_start":5,"column_end":39}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536081,"byte_end":536109,"line_start":291,"line_end":291,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536114,"byte_end":536190,"line_start":292,"line_end":292,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536195,"byte_end":536271,"line_start":293,"line_end":293,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536276,"byte_end":536283,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536288,"byte_end":536297,"line_start":295,"line_end":295,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5591},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537320,"byte_end":537333,"line_start":323,"line_end":323,"column_start":12,"column_end":25},"name":"transpose_mut","qualname":"<Rotation<N, D>>::transpose_mut","value":"pub fn transpose_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Transposes `self` in-place.","sig":null,"attributes":[{"value":"/ Transposes `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536370,"byte_end":536401,"line_start":300,"line_end":300,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536406,"byte_end":536409,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ Same as `.inverse_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536414,"byte_end":536501,"line_start":302,"line_end":302,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536506,"byte_end":536509,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536514,"byte_end":536527,"line_start":304,"line_end":304,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536532,"byte_end":536539,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536544,"byte_end":536583,"line_start":306,"line_end":306,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536588,"byte_end":536640,"line_start":307,"line_end":307,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536645,"byte_end":536703,"line_start":308,"line_end":308,"column_start":5,"column_end":63}},{"value":"/ let mut tr_rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536708,"byte_end":536773,"line_start":309,"line_end":309,"column_start":5,"column_end":70}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536778,"byte_end":536805,"line_start":310,"line_end":310,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536810,"byte_end":536813,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536818,"byte_end":536897,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536902,"byte_end":536981,"line_start":313,"line_end":313,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536986,"byte_end":536989,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":536994,"byte_end":537028,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ let mut tr_rot = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537033,"byte_end":537074,"line_start":316,"line_end":316,"column_start":5,"column_end":46}},{"value":"/ tr_rot.transpose_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537079,"byte_end":537106,"line_start":317,"line_end":317,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537111,"byte_end":537114,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * tr_rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537119,"byte_end":537198,"line_start":319,"line_end":319,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(tr_rot * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537203,"byte_end":537282,"line_start":320,"line_end":320,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537287,"byte_end":537294,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537299,"byte_end":537308,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5592},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538315,"byte_end":538326,"line_start":350,"line_end":350,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Rotation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537394,"byte_end":537422,"line_start":327,"line_end":327,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537427,"byte_end":537430,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ Same as `.transpose_mut()` because the inverse of a rotation matrix is its transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537435,"byte_end":537524,"line_start":329,"line_end":329,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537529,"byte_end":537532,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537537,"byte_end":537550,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537555,"byte_end":537562,"line_start":332,"line_end":332,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537567,"byte_end":537606,"line_start":333,"line_end":333,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537611,"byte_end":537663,"line_start":334,"line_end":334,"column_start":5,"column_end":57}},{"value":"/ let rot = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537668,"byte_end":537726,"line_start":335,"line_end":335,"column_start":5,"column_end":63}},{"value":"/ let mut inv = Rotation3::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537731,"byte_end":537793,"line_start":336,"line_end":336,"column_start":5,"column_end":67}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537798,"byte_end":537820,"line_start":337,"line_end":337,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537825,"byte_end":537828,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537833,"byte_end":537909,"line_start":339,"line_end":339,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation3::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537914,"byte_end":537990,"line_start":340,"line_end":340,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":537995,"byte_end":537998,"line_start":341,"line_end":341,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538003,"byte_end":538037,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ let mut inv = Rotation2::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538042,"byte_end":538080,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/ inv.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538085,"byte_end":538107,"line_start":344,"line_end":344,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538112,"byte_end":538115,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * inv, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538120,"byte_end":538196,"line_start":346,"line_end":346,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(inv * rot, Rotation2::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538201,"byte_end":538277,"line_start":347,"line_end":347,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538282,"byte_end":538289,"line_start":348,"line_end":348,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538294,"byte_end":538303,"line_start":349,"line_end":349,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5596},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539069,"byte_end":539084,"line_start":373,"line_end":373,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point.","sig":null,"attributes":[{"value":"/ Rotate the given point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538491,"byte_end":538518,"line_start":358,"line_end":358,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538523,"byte_end":538526,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538531,"byte_end":538586,"line_start":360,"line_end":360,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538591,"byte_end":538594,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538599,"byte_end":538612,"line_start":362,"line_end":362,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538617,"byte_end":538624,"line_start":363,"line_end":363,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538629,"byte_end":538668,"line_start":364,"line_end":364,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538673,"byte_end":538692,"line_start":365,"line_end":365,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538697,"byte_end":538773,"line_start":366,"line_end":366,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538778,"byte_end":538846,"line_start":367,"line_end":367,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538851,"byte_end":538928,"line_start":368,"line_end":368,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538933,"byte_end":538936,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538941,"byte_end":539031,"line_start":370,"line_end":370,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539036,"byte_end":539043,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539048,"byte_end":539057,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5597},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539731,"byte_end":539747,"line_start":392,"line_end":392,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation<N, D>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539156,"byte_end":539184,"line_start":377,"line_end":377,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539189,"byte_end":539192,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539197,"byte_end":539251,"line_start":379,"line_end":379,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539256,"byte_end":539259,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539264,"byte_end":539277,"line_start":381,"line_end":381,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539282,"byte_end":539289,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539294,"byte_end":539333,"line_start":383,"line_end":383,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539338,"byte_end":539357,"line_start":384,"line_end":384,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539362,"byte_end":539430,"line_start":385,"line_end":385,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539435,"byte_end":539503,"line_start":386,"line_end":386,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539508,"byte_end":539588,"line_start":387,"line_end":387,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539593,"byte_end":539596,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539601,"byte_end":539693,"line_start":389,"line_end":389,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539698,"byte_end":539705,"line_start":390,"line_end":390,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539710,"byte_end":539719,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5598},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540474,"byte_end":540497,"line_start":411,"line_end":411,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Rotation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n point.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this rotation. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539821,"byte_end":539892,"line_start":396,"line_end":396,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539897,"byte_end":539968,"line_start":397,"line_end":397,"column_start":5,"column_end":76}},{"value":"/ point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539973,"byte_end":539983,"line_start":398,"line_end":398,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539988,"byte_end":539991,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":539996,"byte_end":540009,"line_start":400,"line_end":400,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540014,"byte_end":540021,"line_start":401,"line_end":401,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540026,"byte_end":540065,"line_start":402,"line_end":402,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540070,"byte_end":540089,"line_start":403,"line_end":403,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540094,"byte_end":540170,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540175,"byte_end":540243,"line_start":405,"line_end":405,"column_start":5,"column_end":73}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540248,"byte_end":540333,"line_start":406,"line_end":406,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540338,"byte_end":540341,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540346,"byte_end":540436,"line_start":408,"line_end":408,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540441,"byte_end":540448,"line_start":409,"line_end":409,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540453,"byte_end":540462,"line_start":410,"line_end":410,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":5599},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541266,"byte_end":541290,"line_start":430,"line_end":430,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Rotation<N, D>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this rotation. This may be\n cheaper than inverting the rotation and then transforming the given\n vector.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this rotation. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540614,"byte_end":540686,"line_start":415,"line_end":415,"column_start":5,"column_end":77}},{"value":"/ cheaper than inverting the rotation and then transforming the given","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540691,"byte_end":540762,"line_start":416,"line_end":416,"column_start":5,"column_end":76}},{"value":"/ vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540767,"byte_end":540778,"line_start":417,"line_end":417,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540783,"byte_end":540786,"line_start":418,"line_end":418,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540791,"byte_end":540804,"line_start":419,"line_end":419,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540809,"byte_end":540816,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540821,"byte_end":540860,"line_start":421,"line_end":421,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540865,"byte_end":540884,"line_start":422,"line_end":422,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540889,"byte_end":540957,"line_start":423,"line_end":423,"column_start":5,"column_end":73}},{"value":"/ let rot = Rotation3::new(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":540962,"byte_end":541030,"line_start":424,"line_end":424,"column_start":5,"column_end":73}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541035,"byte_end":541123,"line_start":425,"line_end":425,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541128,"byte_end":541131,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541136,"byte_end":541228,"line_start":427,"line_end":427,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541233,"byte_end":541240,"line_start":428,"line_end":428,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541245,"byte_end":541254,"line_start":429,"line_end":429,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":5769},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alias.rs","byte_start":550753,"byte_end":550762,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Rotation2","qualname":"::geometry::rotation_alias::Rotation2","value":"Rotation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alias.rs","byte_start":550707,"byte_end":550743,"line_start":5,"line_end":5,"column_start":1,"column_end":37}}]},{"kind":"Type","id":{"krate":0,"index":5771},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alias.rs","byte_start":550832,"byte_end":550841,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Rotation3","qualname":"::geometry::rotation_alias::Rotation3","value":"Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional rotation matrix.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alias.rs","byte_start":550786,"byte_end":550822,"line_start":8,"line_end":8,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":5810},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551577,"byte_end":551585,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation<N, D>>::identity","value":"pub fn identity() -> Rotation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new square identity rotation of the given `dimension`.","sig":null,"attributes":[{"value":"/ Creates a new square identity rotation of the given `dimension`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551212,"byte_end":551280,"line_start":16,"line_end":16,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551285,"byte_end":551288,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551293,"byte_end":551306,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551311,"byte_end":551318,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551323,"byte_end":551354,"line_start":20,"line_end":20,"column_start":5,"column_end":36}},{"value":"/ let rot1 = Quaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551359,"byte_end":551397,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/ let rot2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551402,"byte_end":551453,"line_start":22,"line_end":22,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551458,"byte_end":551461,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551466,"byte_end":551500,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551505,"byte_end":551539,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551544,"byte_end":551551,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551556,"byte_end":551565,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6132},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566221,"byte_end":566224,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565823,"byte_end":565890,"line_start":24,"line_end":24,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565895,"byte_end":565898,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565903,"byte_end":565916,"line_start":26,"line_end":26,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565921,"byte_end":565924,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565929,"byte_end":565936,"line_start":28,"line_end":28,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565941,"byte_end":565980,"line_start":29,"line_end":29,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565985,"byte_end":566004,"line_start":30,"line_end":30,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566009,"byte_end":566049,"line_start":31,"line_end":31,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation2::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566054,"byte_end":566107,"line_start":32,"line_end":32,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566112,"byte_end":566115,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566120,"byte_end":566197,"line_start":34,"line_end":34,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566202,"byte_end":566209,"line_start":35,"line_end":35,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6133},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566646,"byte_end":566662,"line_start":47,"line_end":47,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation2<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a 2 dimensional rotation matrix from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566369,"byte_end":566470,"line_start":41,"line_end":41,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566475,"byte_end":566478,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566483,"byte_end":566486,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566491,"byte_end":566562,"line_start":44,"line_end":44,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566567,"byte_end":566620,"line_start":45,"line_end":45,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566625,"byte_end":566634,"line_start":46,"line_end":46,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6135},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567117,"byte_end":567128,"line_start":56,"line_end":56,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation2<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566766,"byte_end":566859,"line_start":51,"line_end":51,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566864,"byte_end":566867,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566872,"byte_end":566944,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":566949,"byte_end":566998,"line_start":54,"line_end":54,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567003,"byte_end":567105,"line_start":55,"line_end":55,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6136},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568042,"byte_end":568057,"line_start":72,"line_end":72,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation2<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567242,"byte_end":567335,"line_start":60,"line_end":60,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567340,"byte_end":567343,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567348,"byte_end":567450,"line_start":62,"line_end":62,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567455,"byte_end":567458,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567463,"byte_end":567479,"line_start":64,"line_end":64,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567484,"byte_end":567487,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567492,"byte_end":567564,"line_start":66,"line_end":66,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567569,"byte_end":567660,"line_start":67,"line_end":67,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567665,"byte_end":567768,"line_start":68,"line_end":68,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567773,"byte_end":567886,"line_start":69,"line_end":69,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `Rotation2::identity()` if no other","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567891,"byte_end":567990,"line_start":70,"line_end":70,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":567995,"byte_end":568030,"line_start":71,"line_end":71,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6137},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569342,"byte_end":569358,"line_start":111,"line_end":111,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation2<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568768,"byte_end":568841,"line_start":96,"line_end":96,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568846,"byte_end":568849,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568854,"byte_end":568949,"line_start":98,"line_end":98,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568954,"byte_end":568957,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568962,"byte_end":568975,"line_start":100,"line_end":100,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568980,"byte_end":568987,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":568992,"byte_end":569031,"line_start":102,"line_end":102,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569036,"byte_end":569077,"line_start":103,"line_end":103,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569082,"byte_end":569117,"line_start":104,"line_end":104,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569122,"byte_end":569157,"line_start":105,"line_end":105,"column_start":5,"column_end":40}},{"value":"/ let rot = Rotation2::rotation_between(&a, &b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569162,"byte_end":569212,"line_start":106,"line_end":106,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569217,"byte_end":569253,"line_start":107,"line_end":107,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569258,"byte_end":569304,"line_start":108,"line_end":108,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569309,"byte_end":569316,"line_start":109,"line_end":109,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569321,"byte_end":569330,"line_start":110,"line_end":110,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6140},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570254,"byte_end":570277,"line_start":134,"line_end":134,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation2<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569585,"byte_end":569673,"line_start":119,"line_end":119,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569678,"byte_end":569717,"line_start":120,"line_end":120,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569722,"byte_end":569725,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569730,"byte_end":569743,"line_start":122,"line_end":122,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569748,"byte_end":569755,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569760,"byte_end":569799,"line_start":124,"line_end":124,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, Rotation2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569804,"byte_end":569845,"line_start":125,"line_end":125,"column_start":5,"column_end":46}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569850,"byte_end":569885,"line_start":126,"line_end":126,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569890,"byte_end":569925,"line_start":127,"line_end":127,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569930,"byte_end":569993,"line_start":128,"line_end":128,"column_start":5,"column_end":68}},{"value":"/ let rot5 = Rotation2::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":569998,"byte_end":570061,"line_start":129,"line_end":129,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570066,"byte_end":570149,"line_start":130,"line_end":130,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570154,"byte_end":570216,"line_start":131,"line_end":131,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570221,"byte_end":570228,"line_start":132,"line_end":132,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570233,"byte_end":570242,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6143},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570817,"byte_end":570822,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation2<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle.","sig":null,"attributes":[{"value":"/ The rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570551,"byte_end":570574,"line_start":146,"line_end":146,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570579,"byte_end":570582,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570587,"byte_end":570600,"line_start":148,"line_end":148,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570605,"byte_end":570612,"line_start":149,"line_end":149,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570617,"byte_end":570656,"line_start":150,"line_end":150,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570661,"byte_end":570691,"line_start":151,"line_end":151,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570696,"byte_end":570731,"line_start":152,"line_end":152,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570736,"byte_end":570779,"line_start":153,"line_end":153,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570784,"byte_end":570791,"line_start":154,"line_end":154,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570796,"byte_end":570805,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6144},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571264,"byte_end":571272,"line_start":171,"line_end":171,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation2<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570907,"byte_end":570973,"line_start":160,"line_end":160,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570978,"byte_end":570981,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":570986,"byte_end":570999,"line_start":162,"line_end":162,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571004,"byte_end":571011,"line_start":163,"line_end":163,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571016,"byte_end":571055,"line_start":164,"line_end":164,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571060,"byte_end":571090,"line_start":165,"line_end":165,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571095,"byte_end":571130,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571135,"byte_end":571170,"line_start":167,"line_end":167,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571175,"byte_end":571226,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571231,"byte_end":571238,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571243,"byte_end":571252,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6145},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571902,"byte_end":571913,"line_start":191,"line_end":191,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation2<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571352,"byte_end":571419,"line_start":175,"line_end":175,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571424,"byte_end":571427,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571432,"byte_end":571503,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571508,"byte_end":571511,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571516,"byte_end":571529,"line_start":179,"line_end":179,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571534,"byte_end":571541,"line_start":180,"line_end":180,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571546,"byte_end":571585,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571590,"byte_end":571620,"line_start":182,"line_end":182,"column_start":5,"column_end":35}},{"value":"/ let rot1 = Rotation2::new(0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571625,"byte_end":571660,"line_start":183,"line_end":183,"column_start":5,"column_end":40}},{"value":"/ let rot2 = Rotation2::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571665,"byte_end":571700,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571705,"byte_end":571746,"line_start":185,"line_end":185,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571751,"byte_end":571754,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571759,"byte_end":571804,"line_start":187,"line_end":187,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571809,"byte_end":571864,"line_start":188,"line_end":188,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571869,"byte_end":571876,"line_start":189,"line_end":189,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571881,"byte_end":571890,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6146},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572196,"byte_end":572207,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation2<N>>::renormalize","value":"pub fn renormalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":571988,"byte_end":572076,"line_start":196,"line_end":196,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572081,"byte_end":572170,"line_start":197,"line_end":197,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572175,"byte_end":572184,"line_start":198,"line_end":198,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6147},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572813,"byte_end":572817,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation2<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the angle\n of `self` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the angle","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572401,"byte_end":572494,"line_start":207,"line_end":207,"column_start":5,"column_end":98}},{"value":"/ of `self` multiplied by `n`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572499,"byte_end":572531,"line_start":208,"line_end":208,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572536,"byte_end":572539,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572544,"byte_end":572557,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572562,"byte_end":572569,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572574,"byte_end":572613,"line_start":212,"line_end":212,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572618,"byte_end":572648,"line_start":213,"line_end":213,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation2::new(0.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572653,"byte_end":572688,"line_start":214,"line_end":214,"column_start":5,"column_end":40}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572693,"byte_end":572721,"line_start":215,"line_end":215,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572726,"byte_end":572775,"line_start":216,"line_end":216,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572780,"byte_end":572787,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572792,"byte_end":572801,"line_start":218,"line_end":218,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6148},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573110,"byte_end":573121,"line_start":228,"line_end":228,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation2<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> VectorN<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572888,"byte_end":572946,"line_start":223,"line_end":223,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572951,"byte_end":572954,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":572959,"byte_end":573030,"line_start":225,"line_end":225,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573035,"byte_end":573084,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573089,"byte_end":573098,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6156},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574829,"byte_end":574832,"line_start":282,"line_end":282,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation3<N>>::new","value":"pub fn new<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3 dimensional rotation matrix from an axis and an angle.","sig":null,"attributes":[{"value":"/ Builds a 3 dimensional rotation matrix from an axis and an angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573807,"byte_end":573876,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573881,"byte_end":573884,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573889,"byte_end":573904,"line_start":261,"line_end":261,"column_start":5,"column_end":20}},{"value":"/   * `axisangle` - A vector representing the rotation. Its magnitude is the amount of rotation","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573909,"byte_end":574006,"line_start":262,"line_end":262,"column_start":5,"column_end":102}},{"value":"/   in radian. Its direction is the axis of rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574011,"byte_end":574066,"line_start":263,"line_end":263,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574071,"byte_end":574074,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574079,"byte_end":574092,"line_start":265,"line_end":265,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574097,"byte_end":574104,"line_start":266,"line_end":266,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574109,"byte_end":574148,"line_start":267,"line_end":267,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574153,"byte_end":574172,"line_start":268,"line_end":268,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574177,"byte_end":574226,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574231,"byte_end":574289,"line_start":270,"line_end":270,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574294,"byte_end":574349,"line_start":271,"line_end":271,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574354,"byte_end":574394,"line_start":272,"line_end":272,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574399,"byte_end":574441,"line_start":273,"line_end":273,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574446,"byte_end":574486,"line_start":274,"line_end":274,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574491,"byte_end":574494,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574499,"byte_end":574580,"line_start":276,"line_end":276,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574585,"byte_end":574668,"line_start":277,"line_end":277,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574673,"byte_end":574676,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574681,"byte_end":574721,"line_start":279,"line_end":279,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::new(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574726,"byte_end":574805,"line_start":280,"line_end":280,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":574810,"byte_end":574817,"line_start":281,"line_end":281,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6158},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575405,"byte_end":575416,"line_start":293,"line_end":293,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<Rotation3<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575054,"byte_end":575147,"line_start":288,"line_end":288,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575152,"byte_end":575155,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575160,"byte_end":575232,"line_start":290,"line_end":290,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575237,"byte_end":575286,"line_start":291,"line_end":291,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575291,"byte_end":575393,"line_start":292,"line_end":292,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6159},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":576326,"byte_end":576341,"line_start":309,"line_end":309,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<Rotation3<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575530,"byte_end":575623,"line_start":297,"line_end":297,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575628,"byte_end":575631,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575636,"byte_end":575738,"line_start":299,"line_end":299,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575743,"byte_end":575746,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575751,"byte_end":575767,"line_start":301,"line_end":301,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575772,"byte_end":575775,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575780,"byte_end":575852,"line_start":303,"line_end":303,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575857,"byte_end":575948,"line_start":304,"line_end":304,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":575953,"byte_end":576056,"line_start":305,"line_end":305,"column_start":5,"column_end":108}},{"value":"/ * `guess`: a guess of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":576061,"byte_end":576170,"line_start":306,"line_end":306,"column_start":5,"column_end":114}},{"value":"/           to the actual solution is provided. Can be set to `Rotation3::identity()` if no other","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":576175,"byte_end":576274,"line_start":307,"line_end":307,"column_start":5,"column_end":104}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":576279,"byte_end":576314,"line_start":308,"line_end":308,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6160},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578141,"byte_end":578157,"line_start":357,"line_end":357,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<Rotation3<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U3>>(Vector<N, U3, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis scaled by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577231,"byte_end":577305,"line_start":336,"line_end":336,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577310,"byte_end":577313,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This is the same as `Self::new(axisangle)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577318,"byte_end":577365,"line_start":338,"line_end":338,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577370,"byte_end":577373,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577378,"byte_end":577391,"line_start":340,"line_end":340,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577396,"byte_end":577403,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577408,"byte_end":577447,"line_start":342,"line_end":342,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577452,"byte_end":577471,"line_start":343,"line_end":343,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577476,"byte_end":577525,"line_start":344,"line_end":344,"column_start":5,"column_end":54}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577530,"byte_end":577588,"line_start":345,"line_end":345,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577593,"byte_end":577648,"line_start":346,"line_end":346,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577653,"byte_end":577693,"line_start":347,"line_end":347,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577698,"byte_end":577740,"line_start":348,"line_end":348,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577745,"byte_end":577785,"line_start":349,"line_end":349,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577790,"byte_end":577793,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577798,"byte_end":577879,"line_start":351,"line_end":351,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577884,"byte_end":577967,"line_start":352,"line_end":352,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577972,"byte_end":577975,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":577980,"byte_end":578020,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578025,"byte_end":578117,"line_start":355,"line_end":355,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578122,"byte_end":578129,"line_start":356,"line_end":356,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6162},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":579221,"byte_end":579236,"line_start":383,"line_end":383,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<Rotation3<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a 3D rotation matrix from an axis and a rotation angle.","sig":null,"attributes":[{"value":"/ Builds a 3D rotation matrix from an axis and a rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578258,"byte_end":578324,"line_start":361,"line_end":361,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578329,"byte_end":578332,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578337,"byte_end":578350,"line_start":363,"line_end":363,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578355,"byte_end":578362,"line_start":364,"line_end":364,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578367,"byte_end":578406,"line_start":365,"line_end":365,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578411,"byte_end":578430,"line_start":366,"line_end":366,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578435,"byte_end":578484,"line_start":367,"line_end":367,"column_start":5,"column_end":54}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578489,"byte_end":578522,"line_start":368,"line_end":368,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578527,"byte_end":578566,"line_start":369,"line_end":369,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578571,"byte_end":578626,"line_start":370,"line_end":370,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578631,"byte_end":578671,"line_start":371,"line_end":371,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578676,"byte_end":578718,"line_start":372,"line_end":372,"column_start":5,"column_end":47}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578723,"byte_end":578778,"line_start":373,"line_end":373,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578783,"byte_end":578786,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578791,"byte_end":578833,"line_start":375,"line_end":375,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(rot.angle(), angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578838,"byte_end":578873,"line_start":376,"line_end":376,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(rot * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578878,"byte_end":578959,"line_start":377,"line_end":377,"column_start":5,"column_end":86}},{"value":"/ assert_relative_eq!(rot * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":578964,"byte_end":579047,"line_start":378,"line_end":378,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":579052,"byte_end":579055,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":579060,"byte_end":579100,"line_start":380,"line_end":380,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(Rotation3::from_scaled_axis(Vector3::<f32>::zeros()), Rotation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":579105,"byte_end":579197,"line_start":381,"line_end":381,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":579202,"byte_end":579209,"line_start":382,"line_end":382,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6164},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580787,"byte_end":580804,"line_start":425,"line_end":425,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<Rotation3<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new rotation from Euler angles.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580223,"byte_end":580268,"line_start":411,"line_end":411,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580273,"byte_end":580276,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580281,"byte_end":580360,"line_start":413,"line_end":413,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580365,"byte_end":580368,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580373,"byte_end":580386,"line_start":415,"line_end":415,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580391,"byte_end":580398,"line_start":416,"line_end":416,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580403,"byte_end":580442,"line_start":417,"line_end":417,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580447,"byte_end":580477,"line_start":418,"line_end":418,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580482,"byte_end":580540,"line_start":419,"line_end":419,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580545,"byte_end":580580,"line_start":420,"line_end":420,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580585,"byte_end":580641,"line_start":421,"line_end":421,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580646,"byte_end":580702,"line_start":422,"line_end":422,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580707,"byte_end":580763,"line_start":423,"line_end":423,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":580768,"byte_end":580775,"line_start":424,"line_end":424,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6165},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581481,"byte_end":581496,"line_start":447,"line_end":447,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<Rotation3<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates Euler angles from a rotation.","sig":null,"attributes":[{"value":"/ Creates Euler angles from a rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581286,"byte_end":581327,"line_start":443,"line_end":443,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581332,"byte_end":581335,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581340,"byte_end":581399,"line_start":445,"line_end":445,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581404,"byte_end":581469,"line_start":446,"line_end":446,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6166},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":582121,"byte_end":582133,"line_start":465,"line_end":465,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<Rotation3<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Euler angles corresponding to this rotation from a rotation.","sig":null,"attributes":[{"value":"/ Euler angles corresponding to this rotation from a rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581558,"byte_end":581622,"line_start":451,"line_end":451,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581627,"byte_end":581630,"line_start":452,"line_end":452,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581635,"byte_end":581694,"line_start":453,"line_end":453,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581699,"byte_end":581702,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581707,"byte_end":581720,"line_start":455,"line_end":455,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581725,"byte_end":581732,"line_start":456,"line_end":456,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581737,"byte_end":581776,"line_start":457,"line_end":457,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Rotation3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581781,"byte_end":581811,"line_start":458,"line_end":458,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581816,"byte_end":581874,"line_start":459,"line_end":459,"column_start":5,"column_end":63}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581879,"byte_end":581914,"line_start":460,"line_end":460,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581919,"byte_end":581975,"line_start":461,"line_end":461,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":581980,"byte_end":582036,"line_start":462,"line_end":462,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":582041,"byte_end":582097,"line_start":463,"line_end":463,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":582102,"byte_end":582109,"line_start":464,"line_end":464,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6167},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583135,"byte_end":583146,"line_start":487,"line_end":487,"column_start":12,"column_end":23},"name":"renormalize","qualname":"<Rotation3<N>>::renormalize","value":"pub fn renormalize(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated\n computations might cause the matrix from progressively not being orthonormal anymore.\n","sig":null,"attributes":[{"value":"/ Ensure this rotation is an orthonormal rotation matrix. This is useful when repeated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":582927,"byte_end":583015,"line_start":484,"line_end":484,"column_start":5,"column_end":93}},{"value":"/ computations might cause the matrix from progressively not being orthonormal anymore.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583020,"byte_end":583109,"line_start":485,"line_end":485,"column_start":5,"column_end":94}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583114,"byte_end":583123,"line_start":486,"line_end":486,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6168},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584212,"byte_end":584224,"line_start":516,"line_end":516,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<Rotation3<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates a rotation that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583342,"byte_end":583431,"line_start":494,"line_end":494,"column_start":5,"column_end":94}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583436,"byte_end":583472,"line_start":495,"line_end":495,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583477,"byte_end":583480,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583485,"byte_end":583533,"line_start":497,"line_end":497,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583538,"byte_end":583541,"line_start":498,"line_end":498,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583546,"byte_end":583561,"line_start":499,"line_end":499,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction, that is, direction the matrix `z` axis will be aligned with.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583566,"byte_end":583660,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/   * up - The vertical direction. The only requirement of this parameter is to not be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583665,"byte_end":583753,"line_start":501,"line_end":501,"column_start":5,"column_end":93}},{"value":"/   collinear to `dir`. Non-collinearity is not checked.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583758,"byte_end":583816,"line_start":502,"line_end":502,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583821,"byte_end":583824,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583829,"byte_end":583842,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583847,"byte_end":583854,"line_start":505,"line_end":505,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583859,"byte_end":583898,"line_start":506,"line_end":506,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583903,"byte_end":583922,"line_start":507,"line_end":507,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583927,"byte_end":583968,"line_start":508,"line_end":508,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":583973,"byte_end":584015,"line_start":509,"line_end":509,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584020,"byte_end":584046,"line_start":510,"line_end":510,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584051,"byte_end":584054,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::face_towards(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584059,"byte_end":584108,"line_start":512,"line_end":512,"column_start":5,"column_end":54}},{"value":"/ assert_relative_eq!(rot * Vector3::z(), dir.normalize());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584113,"byte_end":584174,"line_start":513,"line_end":513,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584179,"byte_end":584186,"line_start":514,"line_end":514,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584191,"byte_end":584200,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6171},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584795,"byte_end":584814,"line_start":532,"line_end":532,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<Rotation3<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [Rotation3::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [Rotation3::face_towards] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584677,"byte_end":584731,"line_start":530,"line_end":530,"column_start":5,"column_end":59}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584736,"byte_end":584783,"line_start":531,"line_end":531,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6174},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585913,"byte_end":585923,"line_start":563,"line_end":563,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<Rotation3<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":584999,"byte_end":585065,"line_start":540,"line_end":540,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585070,"byte_end":585073,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585078,"byte_end":585144,"line_start":542,"line_end":542,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585149,"byte_end":585236,"line_start":543,"line_end":543,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585241,"byte_end":585264,"line_start":544,"line_end":544,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585269,"byte_end":585272,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585277,"byte_end":585292,"line_start":546,"line_end":546,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585297,"byte_end":585355,"line_start":547,"line_end":547,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585360,"byte_end":585445,"line_start":548,"line_end":548,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585450,"byte_end":585518,"line_start":549,"line_end":549,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585523,"byte_end":585526,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585531,"byte_end":585544,"line_start":551,"line_end":551,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585549,"byte_end":585556,"line_start":552,"line_end":552,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585561,"byte_end":585600,"line_start":553,"line_end":553,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585605,"byte_end":585624,"line_start":554,"line_end":554,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585629,"byte_end":585670,"line_start":555,"line_end":555,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585675,"byte_end":585717,"line_start":556,"line_end":556,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585722,"byte_end":585748,"line_start":557,"line_end":557,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585753,"byte_end":585756,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_rh(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585761,"byte_end":585808,"line_start":559,"line_end":559,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585813,"byte_end":585875,"line_start":560,"line_end":560,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585880,"byte_end":585887,"line_start":561,"line_end":561,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":585892,"byte_end":585901,"line_start":562,"line_end":562,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6177},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587036,"byte_end":587046,"line_start":594,"line_end":594,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<Rotation3<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586125,"byte_end":586190,"line_start":571,"line_end":571,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586195,"byte_end":586198,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586203,"byte_end":586269,"line_start":573,"line_end":573,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586274,"byte_end":586360,"line_start":574,"line_end":574,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586365,"byte_end":586388,"line_start":575,"line_end":575,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586393,"byte_end":586396,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586401,"byte_end":586416,"line_start":577,"line_end":577,"column_start":5,"column_end":20}},{"value":"/   * dir - The direction toward which the camera looks.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586421,"byte_end":586479,"line_start":578,"line_end":578,"column_start":5,"column_end":63}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586484,"byte_end":586569,"line_start":579,"line_end":579,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586574,"byte_end":586642,"line_start":580,"line_end":580,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586647,"byte_end":586650,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586655,"byte_end":586668,"line_start":582,"line_end":582,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586673,"byte_end":586680,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586685,"byte_end":586724,"line_start":584,"line_end":584,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586729,"byte_end":586748,"line_start":585,"line_end":585,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586753,"byte_end":586794,"line_start":586,"line_end":586,"column_start":5,"column_end":46}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586799,"byte_end":586841,"line_start":587,"line_end":587,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586846,"byte_end":586872,"line_start":588,"line_end":588,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586877,"byte_end":586880,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ let rot = Rotation3::look_at_lh(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586885,"byte_end":586932,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(rot * dir.normalize(), Vector3::z());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":586937,"byte_end":586998,"line_start":591,"line_end":591,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587003,"byte_end":587010,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587015,"byte_end":587024,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6180},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587870,"byte_end":587886,"line_start":617,"line_end":617,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<Rotation3<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix required to align `a` and `b` but with its angle.","sig":null,"attributes":[{"value":"/ The rotation matrix required to align `a` and `b` but with its angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587241,"byte_end":587314,"line_start":602,"line_end":602,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587319,"byte_end":587322,"line_start":603,"line_end":603,"column_start":5,"column_end":8}},{"value":"/ This is the rotation `R` such that `(R * a).angle(b) == 0 && (R * a).dot(b).is_positive()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587327,"byte_end":587422,"line_start":604,"line_end":604,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587427,"byte_end":587430,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587435,"byte_end":587448,"line_start":606,"line_end":606,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587453,"byte_end":587460,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587465,"byte_end":587504,"line_start":608,"line_end":608,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587509,"byte_end":587550,"line_start":609,"line_end":609,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587555,"byte_end":587595,"line_start":610,"line_end":610,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587600,"byte_end":587640,"line_start":611,"line_end":611,"column_start":5,"column_end":45}},{"value":"/ let rot = Rotation3::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587645,"byte_end":587704,"line_start":612,"line_end":612,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(rot * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587709,"byte_end":587763,"line_start":613,"line_end":613,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587768,"byte_end":587832,"line_start":614,"line_end":614,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587837,"byte_end":587844,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":587849,"byte_end":587858,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6183},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588791,"byte_end":588814,"line_start":640,"line_end":640,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<Rotation3<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588094,"byte_end":588182,"line_start":625,"line_end":625,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588187,"byte_end":588226,"line_start":626,"line_end":626,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588231,"byte_end":588234,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588239,"byte_end":588252,"line_start":628,"line_end":628,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588257,"byte_end":588264,"line_start":629,"line_end":629,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588269,"byte_end":588308,"line_start":630,"line_end":630,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, Rotation3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588313,"byte_end":588354,"line_start":631,"line_end":631,"column_start":5,"column_end":46}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588359,"byte_end":588399,"line_start":632,"line_end":632,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588404,"byte_end":588444,"line_start":633,"line_end":633,"column_start":5,"column_end":45}},{"value":"/ let rot2 = Rotation3::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588449,"byte_end":588521,"line_start":634,"line_end":634,"column_start":5,"column_end":77}},{"value":"/ let rot5 = Rotation3::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588526,"byte_end":588598,"line_start":635,"line_end":635,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588603,"byte_end":588686,"line_start":636,"line_end":636,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588691,"byte_end":588753,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588758,"byte_end":588765,"line_start":638,"line_end":638,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":588770,"byte_end":588779,"line_start":639,"line_end":639,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6186},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590059,"byte_end":590064,"line_start":681,"line_end":681,"column_start":12,"column_end":17},"name":"angle","qualname":"<Rotation3<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi].","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi].","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589677,"byte_end":589711,"line_start":670,"line_end":670,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589716,"byte_end":589719,"line_start":671,"line_end":671,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589724,"byte_end":589737,"line_start":672,"line_end":672,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589742,"byte_end":589749,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589754,"byte_end":589793,"line_start":674,"line_end":674,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589798,"byte_end":589845,"line_start":675,"line_end":675,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589850,"byte_end":589914,"line_start":676,"line_end":676,"column_start":5,"column_end":69}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589919,"byte_end":589973,"line_start":677,"line_end":677,"column_start":5,"column_end":59}},{"value":"/ assert_relative_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":589978,"byte_end":590021,"line_start":678,"line_end":678,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590026,"byte_end":590033,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590038,"byte_end":590047,"line_start":680,"line_end":680,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6187},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590829,"byte_end":590833,"line_start":703,"line_end":703,"column_start":12,"column_end":16},"name":"axis","qualname":"<Rotation3<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis. Returns `None` if the rotation angle is zero or PI.","sig":null,"attributes":[{"value":"/ The rotation axis. Returns `None` if the rotation angle is zero or PI.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590233,"byte_end":590307,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590312,"byte_end":590315,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590320,"byte_end":590333,"line_start":689,"line_end":689,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590338,"byte_end":590345,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590350,"byte_end":590389,"line_start":691,"line_end":691,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590394,"byte_end":590441,"line_start":692,"line_end":692,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590446,"byte_end":590510,"line_start":693,"line_end":693,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590515,"byte_end":590535,"line_start":694,"line_end":694,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590540,"byte_end":590595,"line_start":695,"line_end":695,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(rot.axis().unwrap(), axis);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590600,"byte_end":590651,"line_start":696,"line_end":696,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590656,"byte_end":590659,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590664,"byte_end":590694,"line_start":698,"line_end":698,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590699,"byte_end":590752,"line_start":699,"line_end":699,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590757,"byte_end":590791,"line_start":700,"line_end":700,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590796,"byte_end":590803,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":590808,"byte_end":590817,"line_start":702,"line_end":702,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6188},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591565,"byte_end":591576,"line_start":724,"line_end":724,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<Rotation3<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis multiplied by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591163,"byte_end":591218,"line_start":713,"line_end":713,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591223,"byte_end":591226,"line_start":714,"line_end":714,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591231,"byte_end":591244,"line_start":715,"line_end":715,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591249,"byte_end":591256,"line_start":716,"line_end":716,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591261,"byte_end":591300,"line_start":717,"line_end":717,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591305,"byte_end":591352,"line_start":718,"line_end":718,"column_start":5,"column_end":52}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591357,"byte_end":591405,"line_start":719,"line_end":719,"column_start":5,"column_end":53}},{"value":"/ let rot = Rotation3::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591410,"byte_end":591450,"line_start":720,"line_end":720,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591455,"byte_end":591527,"line_start":721,"line_end":721,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591532,"byte_end":591539,"line_start":722,"line_end":722,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591544,"byte_end":591553,"line_start":723,"line_end":723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6189},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592495,"byte_end":592505,"line_start":752,"line_end":752,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<Rotation3<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591752,"byte_end":591819,"line_start":732,"line_end":732,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591824,"byte_end":591827,"line_start":733,"line_end":733,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591832,"byte_end":591872,"line_start":734,"line_end":734,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591877,"byte_end":591880,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591885,"byte_end":591898,"line_start":736,"line_end":736,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591903,"byte_end":591910,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591915,"byte_end":591954,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":591959,"byte_end":592006,"line_start":739,"line_end":739,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592011,"byte_end":592075,"line_start":740,"line_end":740,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592080,"byte_end":592100,"line_start":741,"line_end":741,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592105,"byte_end":592160,"line_start":742,"line_end":742,"column_start":5,"column_end":60}},{"value":"/ let axis_angle = rot.axis_angle().unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592165,"byte_end":592212,"line_start":743,"line_end":743,"column_start":5,"column_end":52}},{"value":"/ assert_relative_eq!(axis_angle.0, axis);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592217,"byte_end":592261,"line_start":744,"line_end":744,"column_start":5,"column_end":49}},{"value":"/ assert_relative_eq!(axis_angle.1, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592266,"byte_end":592311,"line_start":745,"line_end":745,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592316,"byte_end":592319,"line_start":746,"line_end":746,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592324,"byte_end":592354,"line_start":747,"line_end":747,"column_start":5,"column_end":35}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592359,"byte_end":592412,"line_start":748,"line_end":748,"column_start":5,"column_end":58}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592417,"byte_end":592457,"line_start":749,"line_end":749,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592462,"byte_end":592469,"line_start":750,"line_end":750,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592474,"byte_end":592483,"line_start":751,"line_end":751,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6190},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593140,"byte_end":593148,"line_start":771,"line_end":771,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Rotation3<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592684,"byte_end":592750,"line_start":760,"line_end":760,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592755,"byte_end":592758,"line_start":761,"line_end":761,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592763,"byte_end":592776,"line_start":762,"line_end":762,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592781,"byte_end":592788,"line_start":763,"line_end":763,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592793,"byte_end":592832,"line_start":764,"line_end":764,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592837,"byte_end":592878,"line_start":765,"line_end":765,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592883,"byte_end":592950,"line_start":766,"line_end":766,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":592955,"byte_end":593022,"line_start":767,"line_end":767,"column_start":5,"column_end":72}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593027,"byte_end":593102,"line_start":768,"line_end":768,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593107,"byte_end":593114,"line_start":769,"line_end":769,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593119,"byte_end":593128,"line_start":770,"line_end":770,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6191},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593803,"byte_end":593814,"line_start":789,"line_end":789,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<Rotation3<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation matrix needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation matrix needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593228,"byte_end":593295,"line_start":775,"line_end":775,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593300,"byte_end":593303,"line_start":776,"line_end":776,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593308,"byte_end":593379,"line_start":777,"line_end":777,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593384,"byte_end":593387,"line_start":778,"line_end":778,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593392,"byte_end":593405,"line_start":779,"line_end":779,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593410,"byte_end":593417,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593422,"byte_end":593461,"line_start":781,"line_end":781,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593466,"byte_end":593507,"line_start":782,"line_end":782,"column_start":5,"column_end":46}},{"value":"/ let rot1 = Rotation3::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593512,"byte_end":593579,"line_start":783,"line_end":783,"column_start":5,"column_end":72}},{"value":"/ let rot2 = Rotation3::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593584,"byte_end":593651,"line_start":784,"line_end":784,"column_start":5,"column_end":72}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593656,"byte_end":593697,"line_start":785,"line_end":785,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593702,"byte_end":593765,"line_start":786,"line_end":786,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593770,"byte_end":593777,"line_start":787,"line_end":787,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593782,"byte_end":593791,"line_start":788,"line_end":788,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6192},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594530,"byte_end":594534,"line_start":808,"line_end":808,"column_start":12,"column_end":16},"name":"powf","qualname":"<Rotation3<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power, i.e., returns the rotation with the same\n axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power, i.e., returns the rotation with the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593888,"byte_end":593980,"line_start":793,"line_end":793,"column_start":5,"column_end":97}},{"value":"/ axis as `self` and an angle equal to `self.angle()` multiplied by `n`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":593985,"byte_end":594059,"line_start":794,"line_end":794,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594064,"byte_end":594067,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594072,"byte_end":594085,"line_start":796,"line_end":796,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594090,"byte_end":594097,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594102,"byte_end":594141,"line_start":798,"line_end":798,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594146,"byte_end":594193,"line_start":799,"line_end":799,"column_start":5,"column_end":52}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594198,"byte_end":594262,"line_start":800,"line_end":800,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594267,"byte_end":594287,"line_start":801,"line_end":801,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594292,"byte_end":594347,"line_start":802,"line_end":802,"column_start":5,"column_end":60}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594352,"byte_end":594380,"line_start":803,"line_end":803,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594385,"byte_end":594454,"line_start":804,"line_end":804,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594459,"byte_end":594492,"line_start":805,"line_end":805,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594497,"byte_end":594504,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594509,"byte_end":594518,"line_start":807,"line_end":807,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":21847},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597221,"byte_end":597231,"line_start":28,"line_end":28,"column_start":12,"column_end":22},"name":"Quaternion","qualname":"::geometry::quaternion::Quaternion","value":"Quaternion { coords }","parent":null,"children":[{"krate":0,"index":21849}],"decl_id":null,"docs":" A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion\n that may be used as a rotation.\n","sig":null,"attributes":[{"value":"/ A quaternion. See the type alias `UnitQuaternion = Unit<Quaternion>` for a quaternion","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597056,"byte_end":597145,"line_start":24,"line_end":24,"column_start":1,"column_end":90}},{"value":"/ that may be used as a rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597146,"byte_end":597181,"line_start":25,"line_end":25,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597182,"byte_end":597192,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":21849},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597349,"byte_end":597355,"line_start":30,"line_end":30,"column_start":9,"column_end":15},"name":"coords","qualname":"::geometry::quaternion::Quaternion::coords","value":"base::matrix::Matrix<N, base::dimension::U4, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, base::dimension::U4>>::Buffer>","parent":{"krate":0,"index":21847},"children":[],"decl_id":null,"docs":" This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.\n","sig":null,"attributes":[{"value":"/ This quaternion as a 4D vector of coordinates in the `[ x, y, z, w ]` storage order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597252,"byte_end":597340,"line_start":29,"line_end":29,"column_start":5,"column_end":93}}]},{"kind":"Method","id":{"krate":0,"index":6284},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599298,"byte_end":599308,"line_start":101,"line_end":101,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<Quaternion<N>>::into_owned","value":"pub fn into_owned(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599121,"byte_end":599180,"line_start":98,"line_end":98,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599185,"byte_end":599194,"line_start":99,"line_end":99,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599199,"byte_end":599286,"line_start":100,"line_end":100,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":6285},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599527,"byte_end":599538,"line_start":108,"line_end":108,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Quaternion<N>>::clone_owned","value":"pub fn clone_owned(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599349,"byte_end":599409,"line_start":105,"line_end":105,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599414,"byte_end":599423,"line_start":106,"line_end":106,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is a no-op and will be removed in a future release.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599428,"byte_end":599515,"line_start":107,"line_end":107,"column_start":5,"column_end":92}}]},{"kind":"Method","id":{"krate":0,"index":6286},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599943,"byte_end":599952,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Quaternion<N>>::normalize","value":"pub fn normalize(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599613,"byte_end":599644,"line_start":112,"line_end":112,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599649,"byte_end":599652,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599657,"byte_end":599670,"line_start":114,"line_end":114,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599675,"byte_end":599682,"line_start":115,"line_end":115,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599687,"byte_end":599726,"line_start":116,"line_end":116,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599731,"byte_end":599762,"line_start":117,"line_end":117,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599767,"byte_end":599815,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/ let q_normalized = q.normalize();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599820,"byte_end":599857,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ relative_eq!(q_normalized.norm(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599862,"byte_end":599905,"line_start":120,"line_end":120,"column_start":5,"column_end":48}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599910,"byte_end":599917,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599922,"byte_end":599931,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6287},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600093,"byte_end":600097,"line_start":129,"line_end":129,"column_start":12,"column_end":16},"name":"imag","qualname":"<Quaternion<N>>::imag","value":"pub fn imag(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The imaginary part of this quaternion.\n","sig":null,"attributes":[{"value":"/ The imaginary part of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600025,"byte_end":600067,"line_start":127,"line_end":127,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600072,"byte_end":600081,"line_start":128,"line_end":128,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6288},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600480,"byte_end":600489,"line_start":143,"line_end":143,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<Quaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The conjugate of this quaternion.","sig":null,"attributes":[{"value":"/ The conjugate of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600158,"byte_end":600195,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600200,"byte_end":600203,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600208,"byte_end":600221,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600226,"byte_end":600233,"line_start":136,"line_end":136,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600238,"byte_end":600269,"line_start":137,"line_end":137,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600274,"byte_end":600322,"line_start":138,"line_end":138,"column_start":5,"column_end":53}},{"value":"/ let conj = q.conjugate();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600327,"byte_end":600356,"line_start":139,"line_end":139,"column_start":5,"column_end":34}},{"value":"/ assert!(conj.i == -2.0 && conj.j == -3.0 && conj.k == -4.0 && conj.w == 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600361,"byte_end":600442,"line_start":140,"line_end":140,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600447,"byte_end":600454,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600459,"byte_end":600468,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6289},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601142,"byte_end":601153,"line_start":166,"line_end":166,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Quaternion<N>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600565,"byte_end":600611,"line_start":147,"line_end":147,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600616,"byte_end":600619,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600624,"byte_end":600637,"line_start":149,"line_end":149,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600642,"byte_end":600649,"line_start":150,"line_end":150,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600654,"byte_end":600693,"line_start":151,"line_end":151,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600698,"byte_end":600729,"line_start":152,"line_end":152,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600734,"byte_end":600782,"line_start":153,"line_end":153,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600787,"byte_end":600819,"line_start":154,"line_end":154,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600824,"byte_end":600827,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_some());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600832,"byte_end":600861,"line_start":156,"line_end":156,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv_q.unwrap() * q, Quaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600866,"byte_end":600934,"line_start":157,"line_end":157,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600939,"byte_end":600942,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600947,"byte_end":600972,"line_start":159,"line_end":159,"column_start":5,"column_end":30}},{"value":"/ let q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":600977,"byte_end":601025,"line_start":160,"line_end":160,"column_start":5,"column_end":53}},{"value":"/ let inv_q = q.try_inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601030,"byte_end":601062,"line_start":161,"line_end":161,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601067,"byte_end":601070,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ assert!(inv_q.is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601075,"byte_end":601104,"line_start":163,"line_end":163,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601109,"byte_end":601116,"line_start":164,"line_end":164,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601121,"byte_end":601130,"line_start":165,"line_end":165,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6290},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601764,"byte_end":601768,"line_start":189,"line_end":189,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Quaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two quaternion.","sig":null,"attributes":[{"value":"/ Linear interpolation between two quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601353,"byte_end":601401,"line_start":176,"line_end":176,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601406,"byte_end":601409,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ Computes `self * (1 - t) + other * t`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601414,"byte_end":601456,"line_start":178,"line_end":178,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601461,"byte_end":601464,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601469,"byte_end":601482,"line_start":180,"line_end":180,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601487,"byte_end":601494,"line_start":181,"line_end":181,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601499,"byte_end":601530,"line_start":182,"line_end":182,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601535,"byte_end":601584,"line_start":183,"line_end":183,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(10.0, 20.0, 30.0, 40.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601589,"byte_end":601642,"line_start":184,"line_end":184,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601647,"byte_end":601650,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(1.9, 3.8, 5.7, 7.6));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601655,"byte_end":601726,"line_start":186,"line_end":186,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601731,"byte_end":601738,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601743,"byte_end":601752,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6291},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602195,"byte_end":602201,"line_start":204,"line_end":204,"column_start":12,"column_end":18},"name":"vector","qualname":"<Quaternion<N>>::vector","value":"pub fn vector(&Self)\n-> MatrixSlice<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601859,"byte_end":601910,"line_start":193,"line_end":193,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601915,"byte_end":601918,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601923,"byte_end":601936,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601941,"byte_end":601948,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601953,"byte_end":601984,"line_start":197,"line_end":197,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":601989,"byte_end":602037,"line_start":198,"line_end":198,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.vector()[0], 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602042,"byte_end":602077,"line_start":199,"line_end":199,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[1], 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602082,"byte_end":602117,"line_start":200,"line_end":200,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(q.vector()[2], 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602122,"byte_end":602157,"line_start":201,"line_end":201,"column_start":5,"column_end":40}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602162,"byte_end":602169,"line_start":202,"line_end":202,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602174,"byte_end":602183,"line_start":203,"line_end":203,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6292},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602573,"byte_end":602579,"line_start":217,"line_end":217,"column_start":12,"column_end":18},"name":"scalar","qualname":"<Quaternion<N>>::scalar","value":"pub fn scalar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scalar part `w` of this quaternion.","sig":null,"attributes":[{"value":"/ The scalar part `w` of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602328,"byte_end":602371,"line_start":208,"line_end":208,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602376,"byte_end":602379,"line_start":209,"line_end":209,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602384,"byte_end":602397,"line_start":210,"line_end":210,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602402,"byte_end":602409,"line_start":211,"line_end":211,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602414,"byte_end":602445,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602450,"byte_end":602498,"line_start":213,"line_end":213,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.scalar(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602503,"byte_end":602535,"line_start":214,"line_end":214,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602540,"byte_end":602547,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602552,"byte_end":602561,"line_start":216,"line_end":216,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6293},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603078,"byte_end":603087,"line_start":232,"line_end":232,"column_start":12,"column_end":21},"name":"as_vector","qualname":"<Quaternion<N>>::as_vector","value":"pub fn as_vector(&Self) -> &Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Reinterprets this quaternion as a 4D vector.","sig":null,"attributes":[{"value":"/ Reinterprets this quaternion as a 4D vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602628,"byte_end":602676,"line_start":221,"line_end":221,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602681,"byte_end":602684,"line_start":222,"line_end":222,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602689,"byte_end":602702,"line_start":223,"line_end":223,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602707,"byte_end":602714,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Vector4, Quaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602719,"byte_end":602761,"line_start":225,"line_end":225,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602766,"byte_end":602814,"line_start":226,"line_end":226,"column_start":5,"column_end":53}},{"value":"/ // Recall that the quaternion is stored internally as (i, j, k, w)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602819,"byte_end":602889,"line_start":227,"line_end":227,"column_start":5,"column_end":75}},{"value":"/ // while the crate::new constructor takes the arguments as (w, i, j, k).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602894,"byte_end":602970,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":602975,"byte_end":603040,"line_start":229,"line_end":229,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603045,"byte_end":603052,"line_start":230,"line_end":230,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603057,"byte_end":603066,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6294},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603454,"byte_end":603458,"line_start":246,"line_end":246,"column_start":12,"column_end":16},"name":"norm","qualname":"<Quaternion<N>>::norm","value":"pub fn norm(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The norm of this quaternion.","sig":null,"attributes":[{"value":"/ The norm of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603144,"byte_end":603176,"line_start":236,"line_end":236,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603181,"byte_end":603184,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603189,"byte_end":603202,"line_start":238,"line_end":238,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603207,"byte_end":603214,"line_start":239,"line_end":239,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603219,"byte_end":603258,"line_start":240,"line_end":240,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603263,"byte_end":603294,"line_start":241,"line_end":241,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603299,"byte_end":603347,"line_start":242,"line_end":242,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.norm(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603352,"byte_end":603416,"line_start":243,"line_end":243,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603421,"byte_end":603428,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603433,"byte_end":603442,"line_start":245,"line_end":245,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6295},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603910,"byte_end":603919,"line_start":263,"line_end":263,"column_start":12,"column_end":21},"name":"magnitude","qualname":"<Quaternion<N>>::magnitude","value":"pub fn magnitude(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the norm of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603511,"byte_end":603557,"line_start":250,"line_end":250,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603562,"byte_end":603565,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Aka the length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603570,"byte_end":603589,"line_start":252,"line_end":252,"column_start":5,"column_end":24}},{"value":"/ This is the same as `.norm()`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603594,"byte_end":603627,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603632,"byte_end":603635,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603640,"byte_end":603653,"line_start":255,"line_end":255,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603658,"byte_end":603665,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603670,"byte_end":603709,"line_start":257,"line_end":257,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603714,"byte_end":603745,"line_start":258,"line_end":258,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603750,"byte_end":603798,"line_start":259,"line_end":259,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.magnitude(), 5.47722557, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603803,"byte_end":603872,"line_start":260,"line_end":260,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603877,"byte_end":603884,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603889,"byte_end":603898,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6296},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604219,"byte_end":604231,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"norm_squared","qualname":"<Quaternion<N>>::norm_squared","value":"pub fn norm_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ The squared norm of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":603965,"byte_end":604005,"line_start":267,"line_end":267,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604010,"byte_end":604013,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604018,"byte_end":604031,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604036,"byte_end":604043,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604048,"byte_end":604079,"line_start":271,"line_end":271,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604084,"byte_end":604132,"line_start":272,"line_end":272,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604137,"byte_end":604181,"line_start":273,"line_end":273,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604186,"byte_end":604193,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604198,"byte_end":604207,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6297},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604646,"byte_end":604663,"line_start":292,"line_end":292,"column_start":12,"column_end":29},"name":"magnitude_squared","qualname":"<Quaternion<N>>::magnitude_squared","value":"pub fn magnitude_squared(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" A synonym for the squared norm of this quaternion.","sig":null,"attributes":[{"value":"/ A synonym for the squared norm of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604292,"byte_end":604346,"line_start":280,"line_end":280,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604351,"byte_end":604354,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ Aka the squared length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604359,"byte_end":604386,"line_start":282,"line_end":282,"column_start":5,"column_end":32}},{"value":"/ This is the same as `.norm_squared()`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604391,"byte_end":604432,"line_start":283,"line_end":283,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604437,"byte_end":604440,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604445,"byte_end":604458,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604463,"byte_end":604470,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604475,"byte_end":604506,"line_start":287,"line_end":287,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604511,"byte_end":604559,"line_start":288,"line_end":288,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(q.magnitude_squared(), 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604564,"byte_end":604608,"line_start":289,"line_end":289,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604613,"byte_end":604620,"line_start":290,"line_end":290,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604625,"byte_end":604634,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6298},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605015,"byte_end":605018,"line_start":306,"line_end":306,"column_start":12,"column_end":15},"name":"dot","qualname":"<Quaternion<N>>::dot","value":"pub fn dot(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The dot product of two quaternions.","sig":null,"attributes":[{"value":"/ The dot product of two quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604717,"byte_end":604756,"line_start":296,"line_end":296,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604761,"byte_end":604764,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604769,"byte_end":604782,"line_start":298,"line_end":298,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604787,"byte_end":604794,"line_start":299,"line_end":299,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604799,"byte_end":604830,"line_start":300,"line_end":300,"column_start":5,"column_end":36}},{"value":"/ let q1 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604835,"byte_end":604884,"line_start":301,"line_end":301,"column_start":5,"column_end":54}},{"value":"/ let q2 = Quaternion::new(5.0, 6.0, 7.0, 8.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604889,"byte_end":604938,"line_start":302,"line_end":302,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(q1.dot(&q2), 70.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604943,"byte_end":604977,"line_start":303,"line_end":303,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604982,"byte_end":604989,"line_start":304,"line_end":304,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":604994,"byte_end":605003,"line_start":305,"line_end":305,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6299},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605678,"byte_end":605683,"line_start":324,"line_end":324,"column_start":12,"column_end":17},"name":"inner","qualname":"<Quaternion<N>>::inner","value":"pub fn inner(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the inner product (also known as the dot product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the inner product (also known as the dot product).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605093,"byte_end":605158,"line_start":310,"line_end":310,"column_start":5,"column_end":70}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605163,"byte_end":605245,"line_start":311,"line_end":311,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605250,"byte_end":605267,"line_start":312,"line_end":312,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605272,"byte_end":605275,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605280,"byte_end":605293,"line_start":314,"line_end":314,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605298,"byte_end":605305,"line_start":315,"line_end":315,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605310,"byte_end":605349,"line_start":316,"line_end":316,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605354,"byte_end":605385,"line_start":317,"line_end":317,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605390,"byte_end":605438,"line_start":318,"line_end":318,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605443,"byte_end":605491,"line_start":319,"line_end":319,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(-20.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605496,"byte_end":605553,"line_start":320,"line_end":320,"column_start":5,"column_end":62}},{"value":"/ let result = a.inner(&b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605558,"byte_end":605587,"line_start":321,"line_end":321,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605592,"byte_end":605652,"line_start":322,"line_end":322,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605657,"byte_end":605666,"line_start":323,"line_end":323,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6300},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606372,"byte_end":606377,"line_start":343,"line_end":343,"column_start":12,"column_end":17},"name":"outer","qualname":"<Quaternion<N>>::outer","value":"pub fn outer(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the outer product (also known as the wedge product).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.89.","sig":null,"attributes":[{"value":"/ Calculates the outer product (also known as the wedge product).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605771,"byte_end":605838,"line_start":328,"line_end":328,"column_start":5,"column_end":72}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605843,"byte_end":605925,"line_start":329,"line_end":329,"column_start":5,"column_end":87}},{"value":"/ Formula 4.89.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605930,"byte_end":605947,"line_start":330,"line_end":330,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605952,"byte_end":605955,"line_start":331,"line_end":331,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605960,"byte_end":605973,"line_start":332,"line_end":332,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605978,"byte_end":605985,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":605990,"byte_end":606029,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606034,"byte_end":606065,"line_start":335,"line_end":335,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606070,"byte_end":606118,"line_start":336,"line_end":336,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606123,"byte_end":606171,"line_start":337,"line_end":337,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -5.0, 18.0, -11.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606176,"byte_end":606235,"line_start":338,"line_end":338,"column_start":5,"column_end":64}},{"value":"/ let result = a.outer(&b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606240,"byte_end":606269,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606274,"byte_end":606334,"line_start":340,"line_end":340,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606339,"byte_end":606346,"line_start":341,"line_end":341,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606351,"byte_end":606360,"line_start":342,"line_end":342,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6301},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607132,"byte_end":607139,"line_start":362,"line_end":362,"column_start":12,"column_end":19},"name":"project","qualname":"<Quaternion<N>>::project","value":"pub fn project(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the projection of `self` onto `other` (also known as the parallel).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the projection of `self` onto `other` (also known as the parallel).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606465,"byte_end":606547,"line_start":347,"line_end":347,"column_start":5,"column_end":87}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606552,"byte_end":606634,"line_start":348,"line_end":348,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606639,"byte_end":606656,"line_start":349,"line_end":349,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606661,"byte_end":606664,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606669,"byte_end":606682,"line_start":351,"line_end":351,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606687,"byte_end":606694,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606699,"byte_end":606738,"line_start":353,"line_end":353,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606743,"byte_end":606774,"line_start":354,"line_end":354,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606779,"byte_end":606827,"line_start":355,"line_end":355,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606832,"byte_end":606880,"line_start":356,"line_end":356,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, 3.333333333333333, 1.3333333333333333, 0.6666666666666666);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606885,"byte_end":606984,"line_start":357,"line_end":357,"column_start":5,"column_end":104}},{"value":"/ let result = a.project(&b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":606989,"byte_end":607029,"line_start":358,"line_end":358,"column_start":5,"column_end":45}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607034,"byte_end":607094,"line_start":359,"line_end":359,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607099,"byte_end":607106,"line_start":360,"line_end":360,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607111,"byte_end":607120,"line_start":361,"line_end":361,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6302},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607905,"byte_end":607911,"line_start":381,"line_end":381,"column_start":12,"column_end":18},"name":"reject","qualname":"<Quaternion<N>>::reject","value":"pub fn reject(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Calculates the rejection of `self` from `other` (also known as the perpendicular).\n See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel\n Formula 4.94.","sig":null,"attributes":[{"value":"/ Calculates the rejection of `self` from `other` (also known as the perpendicular).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607233,"byte_end":607319,"line_start":366,"line_end":366,"column_start":5,"column_end":91}},{"value":"/ See \"Foundations of Game Engine Development, Volume 1: Mathematics\" by Lengyel","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607324,"byte_end":607406,"line_start":367,"line_end":367,"column_start":5,"column_end":87}},{"value":"/ Formula 4.94.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607411,"byte_end":607428,"line_start":368,"line_end":368,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607433,"byte_end":607436,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607441,"byte_end":607454,"line_start":370,"line_end":370,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607459,"byte_end":607466,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607471,"byte_end":607510,"line_start":372,"line_end":372,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607515,"byte_end":607546,"line_start":373,"line_end":373,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607551,"byte_end":607599,"line_start":374,"line_end":374,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607604,"byte_end":607652,"line_start":375,"line_end":375,"column_start":5,"column_end":53}},{"value":"/ let expected = Quaternion::new(0.0, -1.3333333333333333, 1.6666666666666665, 3.3333333333333335);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607657,"byte_end":607758,"line_start":376,"line_end":376,"column_start":5,"column_end":106}},{"value":"/ let result = a.reject(&b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607763,"byte_end":607802,"line_start":377,"line_end":377,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607807,"byte_end":607867,"line_start":378,"line_end":378,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607872,"byte_end":607879,"line_start":379,"line_end":379,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":607884,"byte_end":607893,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6303},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608621,"byte_end":608640,"line_start":400,"line_end":400,"column_start":12,"column_end":31},"name":"polar_decomposition","qualname":"<Quaternion<N>>::polar_decomposition","value":"pub fn polar_decomposition(&Self) -> (N, N, Option<Unit<Vector3<N>>>)","parent":null,"children":[],"decl_id":null,"docs":" The polar decomposition of this quaternion.","sig":null,"attributes":[{"value":"/ The polar decomposition of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608005,"byte_end":608052,"line_start":385,"line_end":385,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608057,"byte_end":608060,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Returns, from left to right: the quaternion norm, the half rotation angle, the rotation","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608065,"byte_end":608156,"line_start":387,"line_end":387,"column_start":5,"column_end":96}},{"value":"/ axis. If the rotation angle is zero, the rotation axis is set to `None`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608161,"byte_end":608237,"line_start":388,"line_end":388,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608242,"byte_end":608245,"line_start":389,"line_end":389,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608250,"byte_end":608263,"line_start":390,"line_end":390,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608268,"byte_end":608275,"line_start":391,"line_end":391,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608280,"byte_end":608299,"line_start":392,"line_end":392,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Vector3, Quaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608304,"byte_end":608346,"line_start":393,"line_end":393,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(0.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608351,"byte_end":608399,"line_start":394,"line_end":394,"column_start":5,"column_end":53}},{"value":"/ let (norm, half_ang, axis) = q.polar_decomposition();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608404,"byte_end":608461,"line_start":395,"line_end":395,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(norm, 5.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608466,"byte_end":608492,"line_start":396,"line_end":396,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(half_ang, f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608497,"byte_end":608546,"line_start":397,"line_end":397,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(axis, Some(Vector3::x_axis()));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608551,"byte_end":608597,"line_start":398,"line_end":398,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":608602,"byte_end":608609,"line_start":399,"line_end":399,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":6304},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609461,"byte_end":609463,"line_start":424,"line_end":424,"column_start":12,"column_end":14},"name":"ln","qualname":"<Quaternion<N>>::ln","value":"pub fn ln(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609101,"byte_end":609151,"line_start":414,"line_end":414,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609156,"byte_end":609159,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609164,"byte_end":609177,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609182,"byte_end":609189,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609194,"byte_end":609233,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609238,"byte_end":609269,"line_start":419,"line_end":419,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(2.0, 5.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609274,"byte_end":609322,"line_start":420,"line_end":420,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.ln(), Quaternion::new(1.683647, 1.190289, 0.0, 0.0), epsilon = 1.0e-6)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609327,"byte_end":609423,"line_start":421,"line_end":421,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609428,"byte_end":609435,"line_start":422,"line_end":422,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609440,"byte_end":609449,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6305},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610004,"byte_end":610007,"line_start":442,"line_end":442,"column_start":12,"column_end":15},"name":"exp","qualname":"<Quaternion<N>>::exp","value":"pub fn exp(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609649,"byte_end":609693,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609698,"byte_end":609701,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609706,"byte_end":609719,"line_start":434,"line_end":434,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609724,"byte_end":609731,"line_start":435,"line_end":435,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609736,"byte_end":609775,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609780,"byte_end":609811,"line_start":437,"line_end":437,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609816,"byte_end":609874,"line_start":438,"line_end":438,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp(), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609879,"byte_end":609966,"line_start":439,"line_end":439,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609971,"byte_end":609978,"line_start":440,"line_end":440,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":609983,"byte_end":609992,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6306},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610699,"byte_end":610706,"line_start":461,"line_end":461,"column_start":12,"column_end":19},"name":"exp_eps","qualname":"<Quaternion<N>>::exp_eps","value":"pub fn exp_eps(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion\n has a norm smaller than `eps`.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion. Returns the identity if the vector part of this quaternion","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610079,"byte_end":610182,"line_start":446,"line_end":446,"column_start":5,"column_end":108}},{"value":"/ has a norm smaller than `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610187,"byte_end":610221,"line_start":447,"line_end":447,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610226,"byte_end":610229,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610234,"byte_end":610247,"line_start":449,"line_end":449,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610252,"byte_end":610259,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610264,"byte_end":610303,"line_start":451,"line_end":451,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610308,"byte_end":610339,"line_start":452,"line_end":452,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.683647, 1.190289, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610344,"byte_end":610402,"line_start":453,"line_end":453,"column_start":5,"column_end":63}},{"value":"/ assert_relative_eq!(q.exp_eps(1.0e-6), Quaternion::new(2.0, 5.0, 0.0, 0.0), epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610407,"byte_end":610505,"line_start":454,"line_end":454,"column_start":5,"column_end":103}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610510,"byte_end":610513,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ // Singular case.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610518,"byte_end":610539,"line_start":456,"line_end":456,"column_start":5,"column_end":26}},{"value":"/ let q = Quaternion::new(0.0000001, 0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610544,"byte_end":610598,"line_start":457,"line_end":457,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(q.exp_eps(1.0e-6), Quaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610603,"byte_end":610661,"line_start":458,"line_end":458,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610666,"byte_end":610673,"line_start":459,"line_end":459,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":610678,"byte_end":610687,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6307},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611453,"byte_end":611457,"line_start":486,"line_end":486,"column_start":12,"column_end":16},"name":"powf","qualname":"<Quaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611070,"byte_end":611121,"line_start":476,"line_end":476,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611126,"byte_end":611129,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611134,"byte_end":611147,"line_start":478,"line_end":478,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611152,"byte_end":611159,"line_start":479,"line_end":479,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611164,"byte_end":611203,"line_start":480,"line_end":480,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611208,"byte_end":611239,"line_start":481,"line_end":481,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611244,"byte_end":611292,"line_start":482,"line_end":482,"column_start":5,"column_end":53}},{"value":"/ assert_relative_eq!(q.powf(1.5), Quaternion::new( -6.2576659, 4.1549037, 6.2323556, 8.3098075), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611297,"byte_end":611415,"line_start":483,"line_end":483,"column_start":5,"column_end":123}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611420,"byte_end":611427,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611432,"byte_end":611441,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6308},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611905,"byte_end":611918,"line_start":500,"line_end":500,"column_start":12,"column_end":25},"name":"as_vector_mut","qualname":"<Quaternion<N>>::as_vector_mut","value":"pub fn as_vector_mut(&mut Self) -> &mut Vector4<N>","parent":null,"children":[],"decl_id":null,"docs":" Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","sig":null,"attributes":[{"value":"/ Transforms this quaternion into its 4D vector form (Vector part, Scalar part).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611522,"byte_end":611604,"line_start":490,"line_end":490,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611609,"byte_end":611612,"line_start":491,"line_end":491,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611617,"byte_end":611630,"line_start":492,"line_end":492,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611635,"byte_end":611642,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611647,"byte_end":611689,"line_start":494,"line_end":494,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611694,"byte_end":611733,"line_start":495,"line_end":495,"column_start":5,"column_end":44}},{"value":"/ *q.as_vector_mut() = Vector4::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611738,"byte_end":611796,"line_start":496,"line_end":496,"column_start":5,"column_end":63}},{"value":"/ assert!(q.i == 1.0 && q.j == 2.0 && q.k == 3.0 && q.w == 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611801,"byte_end":611867,"line_start":497,"line_end":497,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611872,"byte_end":611879,"line_start":498,"line_end":498,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611884,"byte_end":611893,"line_start":499,"line_end":499,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6309},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612416,"byte_end":612426,"line_start":519,"line_end":519,"column_start":12,"column_end":22},"name":"vector_mut","qualname":"<Quaternion<N>>::vector_mut","value":"pub fn vector_mut(&mut Self)\n-> MatrixSliceMut<, N, U3, U1, RStride<N, U4, U1>, CStride<N, U4, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The mutable vector part `(i, j, k)` of this quaternion.","sig":null,"attributes":[{"value":"/ The mutable vector part `(i, j, k)` of this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":611987,"byte_end":612046,"line_start":504,"line_end":504,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612051,"byte_end":612054,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612059,"byte_end":612072,"line_start":506,"line_end":506,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612077,"byte_end":612084,"line_start":507,"line_end":507,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612089,"byte_end":612131,"line_start":508,"line_end":508,"column_start":5,"column_end":47}},{"value":"/ let mut q = Quaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612136,"byte_end":612175,"line_start":509,"line_end":509,"column_start":5,"column_end":44}},{"value":"/ {","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612180,"byte_end":612185,"line_start":510,"line_end":510,"column_start":5,"column_end":10}},{"value":"/     let mut v = q.vector_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612190,"byte_end":612225,"line_start":511,"line_end":511,"column_start":5,"column_end":40}},{"value":"/     v[0] = 2.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612230,"byte_end":612249,"line_start":512,"line_end":512,"column_start":5,"column_end":24}},{"value":"/     v[1] = 3.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612254,"byte_end":612273,"line_start":513,"line_end":513,"column_start":5,"column_end":24}},{"value":"/     v[2] = 4.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612278,"byte_end":612297,"line_start":514,"line_end":514,"column_start":5,"column_end":24}},{"value":"/ }","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612302,"byte_end":612307,"line_start":515,"line_end":515,"column_start":5,"column_end":10}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612312,"byte_end":612378,"line_start":516,"line_end":516,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612383,"byte_end":612390,"line_start":517,"line_end":517,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612395,"byte_end":612404,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6310},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612895,"byte_end":612908,"line_start":535,"line_end":535,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<Quaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Replaces this quaternion by its conjugate.","sig":null,"attributes":[{"value":"/ Replaces this quaternion by its conjugate.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612579,"byte_end":612625,"line_start":525,"line_end":525,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612630,"byte_end":612633,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612638,"byte_end":612651,"line_start":527,"line_end":527,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612656,"byte_end":612663,"line_start":528,"line_end":528,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612668,"byte_end":612699,"line_start":529,"line_end":529,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612704,"byte_end":612756,"line_start":530,"line_end":530,"column_start":5,"column_end":57}},{"value":"/ q.conjugate_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612761,"byte_end":612783,"line_start":531,"line_end":531,"column_start":5,"column_end":27}},{"value":"/ assert!(q.i == -2.0 && q.j == -3.0 && q.k == -4.0 && q.w == 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612788,"byte_end":612857,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612862,"byte_end":612869,"line_start":533,"line_end":533,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":612874,"byte_end":612883,"line_start":534,"line_end":534,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6311},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613601,"byte_end":613616,"line_start":557,"line_end":557,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Quaternion<N>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion in-place if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion in-place if it is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613059,"byte_end":613114,"line_start":541,"line_end":541,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613119,"byte_end":613122,"line_start":542,"line_end":542,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613127,"byte_end":613140,"line_start":543,"line_end":543,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613145,"byte_end":613152,"line_start":544,"line_end":544,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613157,"byte_end":613196,"line_start":545,"line_end":545,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613201,"byte_end":613232,"line_start":546,"line_end":546,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613237,"byte_end":613289,"line_start":547,"line_end":547,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613294,"byte_end":613297,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ assert!(q.try_inverse_mut());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613302,"byte_end":613335,"line_start":549,"line_end":549,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * Quaternion::new(1.0, 2.0, 3.0, 4.0), Quaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613340,"byte_end":613429,"line_start":550,"line_end":550,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613434,"byte_end":613437,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ //Non-invertible case","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613442,"byte_end":613467,"line_start":552,"line_end":552,"column_start":5,"column_end":30}},{"value":"/ let mut q = Quaternion::new(0.0, 0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613472,"byte_end":613524,"line_start":553,"line_end":553,"column_start":5,"column_end":57}},{"value":"/ assert!(!q.try_inverse_mut());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613529,"byte_end":613563,"line_start":554,"line_end":554,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613568,"byte_end":613575,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613580,"byte_end":613589,"line_start":556,"line_end":556,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6312},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614204,"byte_end":614217,"line_start":581,"line_end":581,"column_start":12,"column_end":25},"name":"normalize_mut","qualname":"<Quaternion<N>>::normalize_mut","value":"pub fn normalize_mut(&mut Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Normalizes this quaternion.","sig":null,"attributes":[{"value":"/ Normalizes this quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613889,"byte_end":613920,"line_start":570,"line_end":570,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613925,"byte_end":613928,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613933,"byte_end":613946,"line_start":572,"line_end":572,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613951,"byte_end":613958,"line_start":573,"line_end":573,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":613963,"byte_end":614002,"line_start":574,"line_end":574,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614007,"byte_end":614038,"line_start":575,"line_end":575,"column_start":5,"column_end":36}},{"value":"/ let mut q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614043,"byte_end":614095,"line_start":576,"line_end":576,"column_start":5,"column_end":57}},{"value":"/ q.normalize_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614100,"byte_end":614122,"line_start":577,"line_end":577,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(q.norm(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614127,"byte_end":614166,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614171,"byte_end":614178,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614183,"byte_end":614192,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614347,"byte_end":614354,"line_start":587,"line_end":587,"column_start":12,"column_end":19},"name":"squared","qualname":"<Quaternion<N>>::squared","value":"pub fn squared(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square of a quaternion.\n","sig":null,"attributes":[{"value":"/ Calculates square of a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614283,"byte_end":614321,"line_start":585,"line_end":585,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614326,"byte_end":614335,"line_start":586,"line_end":586,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6314},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614461,"byte_end":614465,"line_start":593,"line_end":593,"column_start":12,"column_end":16},"name":"half","qualname":"<Quaternion<N>>::half","value":"pub fn half(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Divides quaternion into two.\n","sig":null,"attributes":[{"value":"/ Divides quaternion into two.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614403,"byte_end":614435,"line_start":591,"line_end":591,"column_start":5,"column_end":37}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614440,"byte_end":614449,"line_start":592,"line_end":592,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6315},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614585,"byte_end":614589,"line_start":599,"line_end":599,"column_start":12,"column_end":16},"name":"sqrt","qualname":"<Quaternion<N>>::sqrt","value":"pub fn sqrt(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates square root.\n","sig":null,"attributes":[{"value":"/ Calculates square root.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614532,"byte_end":614559,"line_start":597,"line_end":597,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614564,"byte_end":614573,"line_start":598,"line_end":598,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6316},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614719,"byte_end":614726,"line_start":605,"line_end":605,"column_start":12,"column_end":19},"name":"is_pure","qualname":"<Quaternion<N>>::is_pure","value":"pub fn is_pure(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if the quaternion is pure.\n","sig":null,"attributes":[{"value":"/ Check if the quaternion is pure.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614657,"byte_end":614693,"line_start":603,"line_end":603,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614698,"byte_end":614707,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6317},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614848,"byte_end":614852,"line_start":611,"line_end":611,"column_start":12,"column_end":16},"name":"pure","qualname":"<Quaternion<N>>::pure","value":"pub fn pure(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert quaternion to pure quaternion.\n","sig":null,"attributes":[{"value":"/ Convert quaternion to pure quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614780,"byte_end":614822,"line_start":609,"line_end":609,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614827,"byte_end":614836,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6318},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615048,"byte_end":615056,"line_start":619,"line_end":619,"column_start":12,"column_end":20},"name":"left_div","qualname":"<Quaternion<N>>::left_div","value":"pub fn left_div(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Left quaternionic division.","sig":null,"attributes":[{"value":"/ Left quaternionic division.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614918,"byte_end":614949,"line_start":615,"line_end":615,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614954,"byte_end":614957,"line_start":616,"line_end":616,"column_start":5,"column_end":8}},{"value":"/ Calculates B<sup>-1</sup> * A where A = self, B = other.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":614962,"byte_end":615022,"line_start":617,"line_end":617,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615027,"byte_end":615036,"line_start":618,"line_end":618,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6320},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615744,"byte_end":615753,"line_start":638,"line_end":638,"column_start":12,"column_end":21},"name":"right_div","qualname":"<Quaternion<N>>::right_div","value":"pub fn right_div(&Self, &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Right quaternionic division.","sig":null,"attributes":[{"value":"/ Right quaternionic division.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615157,"byte_end":615189,"line_start":623,"line_end":623,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615194,"byte_end":615197,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ Calculates A * B<sup>-1</sup> where A = self, B = other.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615202,"byte_end":615262,"line_start":625,"line_end":625,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615267,"byte_end":615270,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615275,"byte_end":615288,"line_start":627,"line_end":627,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615293,"byte_end":615300,"line_start":628,"line_end":628,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615305,"byte_end":615344,"line_start":629,"line_end":629,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615349,"byte_end":615380,"line_start":630,"line_end":630,"column_start":5,"column_end":36}},{"value":"/ let a = Quaternion::new(0.0, 1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615385,"byte_end":615433,"line_start":631,"line_end":631,"column_start":5,"column_end":53}},{"value":"/ let b = Quaternion::new(0.0, 5.0, 2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615438,"byte_end":615486,"line_start":632,"line_end":632,"column_start":5,"column_end":53}},{"value":"/ let result = a.right_div(&b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615491,"byte_end":615533,"line_start":633,"line_end":633,"column_start":5,"column_end":47}},{"value":"/ let expected = Quaternion::new(0.4, 0.13333333333333336, -0.4666666666666667, 0.26666666666666666);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615538,"byte_end":615641,"line_start":634,"line_end":634,"column_start":5,"column_end":108}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615646,"byte_end":615706,"line_start":635,"line_end":635,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615711,"byte_end":615718,"line_start":636,"line_end":636,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615723,"byte_end":615732,"line_start":637,"line_end":637,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6322},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616325,"byte_end":616328,"line_start":654,"line_end":654,"column_start":12,"column_end":15},"name":"cos","qualname":"<Quaternion<N>>::cos","value":"pub fn cos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic cosinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615854,"byte_end":615894,"line_start":642,"line_end":642,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615899,"byte_end":615902,"line_start":643,"line_end":643,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615907,"byte_end":615920,"line_start":644,"line_end":644,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615925,"byte_end":615932,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615937,"byte_end":615976,"line_start":646,"line_end":646,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":615981,"byte_end":616012,"line_start":647,"line_end":647,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616017,"byte_end":616069,"line_start":648,"line_end":648,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(58.93364616794395, -34.086183690465596, -51.1292755356984, -68.17236738093119);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616074,"byte_end":616188,"line_start":649,"line_end":649,"column_start":5,"column_end":119}},{"value":"/ let result = input.cos();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616193,"byte_end":616222,"line_start":650,"line_end":650,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616227,"byte_end":616287,"line_start":651,"line_end":651,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616292,"byte_end":616299,"line_start":652,"line_end":652,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616304,"byte_end":616313,"line_start":653,"line_end":653,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6323},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616867,"byte_end":616871,"line_start":671,"line_end":671,"column_start":12,"column_end":16},"name":"acos","qualname":"<Quaternion<N>>::acos","value":"pub fn acos(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arccosinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616508,"byte_end":616551,"line_start":660,"line_end":660,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616556,"byte_end":616559,"line_start":661,"line_end":661,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616564,"byte_end":616577,"line_start":662,"line_end":662,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616582,"byte_end":616589,"line_start":663,"line_end":663,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616594,"byte_end":616633,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616638,"byte_end":616669,"line_start":665,"line_end":665,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616674,"byte_end":616726,"line_start":666,"line_end":666,"column_start":5,"column_end":57}},{"value":"/ let result = input.cos().acos();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616731,"byte_end":616767,"line_start":667,"line_end":667,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616772,"byte_end":616829,"line_start":668,"line_end":668,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616834,"byte_end":616841,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":616846,"byte_end":616855,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6324},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617551,"byte_end":617554,"line_start":692,"line_end":692,"column_start":12,"column_end":15},"name":"sin","qualname":"<Quaternion<N>>::sin","value":"pub fn sin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic sinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617084,"byte_end":617122,"line_start":680,"line_end":680,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617127,"byte_end":617130,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617135,"byte_end":617148,"line_start":682,"line_end":682,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617153,"byte_end":617160,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617165,"byte_end":617204,"line_start":684,"line_end":684,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617209,"byte_end":617240,"line_start":685,"line_end":685,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617245,"byte_end":617297,"line_start":686,"line_end":686,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(91.78371578403467, 21.886486853029176, 32.82973027954377, 43.77297370605835);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617302,"byte_end":617414,"line_start":687,"line_end":687,"column_start":5,"column_end":117}},{"value":"/ let result = input.sin();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617419,"byte_end":617448,"line_start":688,"line_end":688,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617453,"byte_end":617513,"line_start":689,"line_end":689,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617518,"byte_end":617525,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617530,"byte_end":617539,"line_start":691,"line_end":691,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6325},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618090,"byte_end":618094,"line_start":709,"line_end":709,"column_start":12,"column_end":16},"name":"asin","qualname":"<Quaternion<N>>::asin","value":"pub fn asin(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arcsinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617733,"byte_end":617774,"line_start":698,"line_end":698,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617779,"byte_end":617782,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617787,"byte_end":617800,"line_start":700,"line_end":700,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617805,"byte_end":617812,"line_start":701,"line_end":701,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617817,"byte_end":617856,"line_start":702,"line_end":702,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617861,"byte_end":617892,"line_start":703,"line_end":703,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617897,"byte_end":617949,"line_start":704,"line_end":704,"column_start":5,"column_end":57}},{"value":"/ let result = input.sin().asin();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617954,"byte_end":617990,"line_start":705,"line_end":705,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":617995,"byte_end":618052,"line_start":706,"line_end":706,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618057,"byte_end":618064,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618069,"byte_end":618078,"line_start":708,"line_end":708,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6326},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618789,"byte_end":618792,"line_start":730,"line_end":730,"column_start":12,"column_end":15},"name":"tan","qualname":"<Quaternion<N>>::tan","value":"pub fn tan(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic tangent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618313,"byte_end":618353,"line_start":718,"line_end":718,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618358,"byte_end":618361,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618366,"byte_end":618379,"line_start":720,"line_end":720,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618384,"byte_end":618391,"line_start":721,"line_end":721,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618396,"byte_end":618435,"line_start":722,"line_end":722,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618440,"byte_end":618471,"line_start":723,"line_end":723,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618476,"byte_end":618528,"line_start":724,"line_end":724,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.00003821631725009489, 0.3713971716439371, 0.5570957574659058, 0.7427943432878743);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618533,"byte_end":618652,"line_start":725,"line_end":725,"column_start":5,"column_end":124}},{"value":"/ let result = input.tan();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618657,"byte_end":618686,"line_start":726,"line_end":726,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618691,"byte_end":618751,"line_start":727,"line_end":727,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618756,"byte_end":618763,"line_start":728,"line_end":728,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618768,"byte_end":618777,"line_start":729,"line_end":729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6327},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619231,"byte_end":619235,"line_start":745,"line_end":745,"column_start":12,"column_end":16},"name":"atan","qualname":"<Quaternion<N>>::atan","value":"pub fn atan(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the quaternionic arctangent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618872,"byte_end":618915,"line_start":734,"line_end":734,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618920,"byte_end":618923,"line_start":735,"line_end":735,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618928,"byte_end":618941,"line_start":736,"line_end":736,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618946,"byte_end":618953,"line_start":737,"line_end":737,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":618958,"byte_end":618997,"line_start":738,"line_end":738,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619002,"byte_end":619033,"line_start":739,"line_end":739,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619038,"byte_end":619090,"line_start":740,"line_end":740,"column_start":5,"column_end":57}},{"value":"/ let result = input.tan().atan();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619095,"byte_end":619131,"line_start":741,"line_end":741,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(input, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619136,"byte_end":619193,"line_start":742,"line_end":742,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619198,"byte_end":619205,"line_start":743,"line_end":743,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619210,"byte_end":619219,"line_start":744,"line_end":744,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6328},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619960,"byte_end":619964,"line_start":766,"line_end":766,"column_start":12,"column_end":16},"name":"sinh","qualname":"<Quaternion<N>>::sinh","value":"pub fn sinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic sinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic sinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619475,"byte_end":619524,"line_start":754,"line_end":754,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619529,"byte_end":619532,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619537,"byte_end":619550,"line_start":756,"line_end":756,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619555,"byte_end":619562,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619567,"byte_end":619606,"line_start":758,"line_end":758,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619611,"byte_end":619642,"line_start":759,"line_end":759,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619647,"byte_end":619699,"line_start":760,"line_end":760,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.7323376060463428, -0.4482074499805421, -0.6723111749708133, -0.8964148999610843);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619704,"byte_end":619822,"line_start":761,"line_end":761,"column_start":5,"column_end":123}},{"value":"/ let result = input.sinh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619827,"byte_end":619857,"line_start":762,"line_end":762,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619862,"byte_end":619922,"line_start":763,"line_end":763,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619927,"byte_end":619934,"line_start":764,"line_end":764,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":619939,"byte_end":619948,"line_start":765,"line_end":765,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6329},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620520,"byte_end":620525,"line_start":782,"line_end":782,"column_start":12,"column_end":17},"name":"asinh","qualname":"<Quaternion<N>>::asinh","value":"pub fn asinh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arcsinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arcsinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620037,"byte_end":620089,"line_start":770,"line_end":770,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620094,"byte_end":620097,"line_start":771,"line_end":771,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620102,"byte_end":620115,"line_start":772,"line_end":772,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620120,"byte_end":620127,"line_start":773,"line_end":773,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620132,"byte_end":620171,"line_start":774,"line_end":774,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620176,"byte_end":620207,"line_start":775,"line_end":775,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620212,"byte_end":620264,"line_start":776,"line_end":776,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.385889902585242, 0.514052600662788, 0.7710789009941821, 1.028105201325576);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620269,"byte_end":620381,"line_start":777,"line_end":777,"column_start":5,"column_end":117}},{"value":"/ let result = input.asinh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620386,"byte_end":620417,"line_start":778,"line_end":778,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620422,"byte_end":620482,"line_start":779,"line_end":779,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620487,"byte_end":620494,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620499,"byte_end":620508,"line_start":781,"line_end":781,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6330},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621139,"byte_end":621143,"line_start":799,"line_end":799,"column_start":12,"column_end":16},"name":"cosh","qualname":"<Quaternion<N>>::cosh","value":"pub fn cosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic cosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic cosinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620652,"byte_end":620703,"line_start":787,"line_end":787,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620708,"byte_end":620711,"line_start":788,"line_end":788,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620716,"byte_end":620729,"line_start":789,"line_end":789,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620734,"byte_end":620741,"line_start":790,"line_end":790,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620746,"byte_end":620785,"line_start":791,"line_end":791,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620790,"byte_end":620821,"line_start":792,"line_end":792,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620826,"byte_end":620878,"line_start":793,"line_end":793,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.9615851176369566, -0.3413521745610167, -0.5120282618415251, -0.6827043491220334);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":620883,"byte_end":621001,"line_start":794,"line_end":794,"column_start":5,"column_end":123}},{"value":"/ let result = input.cosh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621006,"byte_end":621036,"line_start":795,"line_end":795,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621041,"byte_end":621101,"line_start":796,"line_end":796,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621106,"byte_end":621113,"line_start":797,"line_end":797,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621118,"byte_end":621127,"line_start":798,"line_end":798,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6331},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621704,"byte_end":621709,"line_start":815,"line_end":815,"column_start":12,"column_end":17},"name":"acosh","qualname":"<Quaternion<N>>::acosh","value":"pub fn acosh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arccosinus.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arccosinus.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621216,"byte_end":621270,"line_start":803,"line_end":803,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621275,"byte_end":621278,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621283,"byte_end":621296,"line_start":805,"line_end":805,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621301,"byte_end":621308,"line_start":806,"line_end":806,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621313,"byte_end":621352,"line_start":807,"line_end":807,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621357,"byte_end":621388,"line_start":808,"line_end":808,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621393,"byte_end":621445,"line_start":809,"line_end":809,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(2.4014472020074007, 0.5162761016176176, 0.7744141524264264, 1.0325522032352352);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621450,"byte_end":621565,"line_start":810,"line_end":810,"column_start":5,"column_end":120}},{"value":"/ let result = input.acosh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621570,"byte_end":621601,"line_start":811,"line_end":811,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621606,"byte_end":621666,"line_start":812,"line_end":812,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621671,"byte_end":621678,"line_start":813,"line_end":813,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621683,"byte_end":621692,"line_start":814,"line_end":814,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6332},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622342,"byte_end":622346,"line_start":832,"line_end":832,"column_start":12,"column_end":16},"name":"tanh","qualname":"<Quaternion<N>>::tanh","value":"pub fn tanh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic tangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic tangent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621853,"byte_end":621904,"line_start":820,"line_end":820,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621909,"byte_end":621912,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621917,"byte_end":621930,"line_start":822,"line_end":822,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621935,"byte_end":621942,"line_start":823,"line_end":823,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621947,"byte_end":621986,"line_start":824,"line_end":824,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":621991,"byte_end":622022,"line_start":825,"line_end":825,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622027,"byte_end":622079,"line_start":826,"line_end":826,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(1.0248695360556623, -0.10229568178876419, -0.1534435226831464, -0.20459136357752844);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622084,"byte_end":622204,"line_start":827,"line_end":827,"column_start":5,"column_end":125}},{"value":"/ let result = input.tanh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622209,"byte_end":622239,"line_start":828,"line_end":828,"column_start":5,"column_end":35}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622244,"byte_end":622304,"line_start":829,"line_end":829,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622309,"byte_end":622316,"line_start":830,"line_end":830,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622321,"byte_end":622330,"line_start":831,"line_end":831,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6333},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622917,"byte_end":622922,"line_start":848,"line_end":848,"column_start":12,"column_end":17},"name":"atanh","qualname":"<Quaternion<N>>::atanh","value":"pub fn atanh(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculates the hyperbolic quaternionic arctangent.","sig":null,"attributes":[{"value":"/ Calculates the hyperbolic quaternionic arctangent.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622428,"byte_end":622482,"line_start":836,"line_end":836,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622487,"byte_end":622490,"line_start":837,"line_end":837,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622495,"byte_end":622508,"line_start":838,"line_end":838,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622513,"byte_end":622520,"line_start":839,"line_end":839,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622525,"byte_end":622564,"line_start":840,"line_end":840,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622569,"byte_end":622600,"line_start":841,"line_end":841,"column_start":5,"column_end":36}},{"value":"/ let input = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622605,"byte_end":622657,"line_start":842,"line_end":842,"column_start":5,"column_end":57}},{"value":"/ let expected = Quaternion::new(0.03230293287000163, 0.5173453683196951, 0.7760180524795426, 1.0346907366393903);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622662,"byte_end":622778,"line_start":843,"line_end":843,"column_start":5,"column_end":121}},{"value":"/ let result = input.atanh();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622783,"byte_end":622814,"line_start":844,"line_end":844,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(expected, result, epsilon = 1.0e-7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622819,"byte_end":622879,"line_start":845,"line_end":845,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622884,"byte_end":622891,"line_start":846,"line_end":846,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":622896,"byte_end":622905,"line_start":847,"line_end":847,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":6353},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625042,"byte_end":625056,"line_start":915,"line_end":915,"column_start":10,"column_end":24},"name":"UnitQuaternion","qualname":"::geometry::quaternion::UnitQuaternion","value":"Unit<Quaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A unit quaternions. May be used to represent a rotation.\n","sig":null,"attributes":[{"value":"/ A unit quaternions. May be used to represent a rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":624972,"byte_end":625032,"line_start":914,"line_end":914,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":6357},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625346,"byte_end":625356,"line_start":923,"line_end":923,"column_start":12,"column_end":22},"name":"into_owned","qualname":"<UnitQuaternion<N>>::into_owned","value":"pub fn into_owned(Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Moves this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Moves this unit quaternion into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625127,"byte_end":625186,"line_start":918,"line_end":918,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625191,"byte_end":625200,"line_start":919,"line_end":919,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is unnecessary and will be removed in a future release. Use `.clone()` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625205,"byte_end":625334,"line_start":920,"line_end":922,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6358},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625617,"byte_end":625628,"line_start":932,"line_end":932,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<UnitQuaternion<N>>::clone_owned","value":"pub fn clone_owned(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Clones this unit quaternion into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this unit quaternion into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625397,"byte_end":625457,"line_start":927,"line_end":927,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625462,"byte_end":625471,"line_start":928,"line_end":928,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is unnecessary and will be removed in a future release. Use `.clone()` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625476,"byte_end":625605,"line_start":929,"line_end":931,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":6359},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626034,"byte_end":626039,"line_start":946,"line_end":946,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitQuaternion<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in [0; pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation angle in [0; pi] of this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625671,"byte_end":625729,"line_start":936,"line_end":936,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625734,"byte_end":625737,"line_start":937,"line_end":937,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625742,"byte_end":625755,"line_start":938,"line_end":938,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625760,"byte_end":625767,"line_start":939,"line_end":939,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625772,"byte_end":625824,"line_start":940,"line_end":940,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625829,"byte_end":625893,"line_start":941,"line_end":941,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625898,"byte_end":625957,"line_start":942,"line_end":942,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625962,"byte_end":625996,"line_start":943,"line_end":943,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626001,"byte_end":626008,"line_start":944,"line_end":944,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626013,"byte_end":626022,"line_start":945,"line_end":945,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6360},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626511,"byte_end":626521,"line_start":962,"line_end":962,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<UnitQuaternion<N>>::quaternion","value":"pub fn quaternion(&Self) -> &Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying quaternion.","sig":null,"attributes":[{"value":"/ The underlying quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626186,"byte_end":626216,"line_start":951,"line_end":951,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626221,"byte_end":626224,"line_start":952,"line_end":952,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626229,"byte_end":626257,"line_start":953,"line_end":953,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626262,"byte_end":626265,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626270,"byte_end":626283,"line_start":955,"line_end":955,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626288,"byte_end":626295,"line_start":956,"line_end":956,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626300,"byte_end":626349,"line_start":957,"line_end":957,"column_start":5,"column_end":54}},{"value":"/ let axis = UnitQuaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626354,"byte_end":626396,"line_start":958,"line_end":958,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(*axis.quaternion(), Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626401,"byte_end":626473,"line_start":959,"line_end":959,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626478,"byte_end":626485,"line_start":960,"line_end":960,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626490,"byte_end":626499,"line_start":961,"line_end":961,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6361},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627007,"byte_end":627016,"line_start":977,"line_end":977,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitQuaternion<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626582,"byte_end":626632,"line_start":966,"line_end":966,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626637,"byte_end":626640,"line_start":967,"line_end":967,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626645,"byte_end":626658,"line_start":968,"line_end":968,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626663,"byte_end":626670,"line_start":969,"line_end":969,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626675,"byte_end":626727,"line_start":970,"line_end":970,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626732,"byte_end":626796,"line_start":971,"line_end":971,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626801,"byte_end":626860,"line_start":972,"line_end":972,"column_start":5,"column_end":64}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626865,"byte_end":626896,"line_start":973,"line_end":973,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(conj, UnitQuaternion::from_axis_angle(&-axis, 1.78));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626901,"byte_end":626969,"line_start":974,"line_end":974,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626974,"byte_end":626981,"line_start":975,"line_end":975,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":626986,"byte_end":626995,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6362},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627563,"byte_end":627570,"line_start":993,"line_end":993,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitQuaternion<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627100,"byte_end":627146,"line_start":981,"line_end":981,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627151,"byte_end":627154,"line_start":982,"line_end":982,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627159,"byte_end":627172,"line_start":983,"line_end":983,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627177,"byte_end":627184,"line_start":984,"line_end":984,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Unit, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627189,"byte_end":627241,"line_start":985,"line_end":985,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627246,"byte_end":627310,"line_start":986,"line_end":986,"column_start":5,"column_end":69}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627315,"byte_end":627374,"line_start":987,"line_end":987,"column_start":5,"column_end":64}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627379,"byte_end":627407,"line_start":988,"line_end":988,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(rot * inv, UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627412,"byte_end":627466,"line_start":989,"line_end":989,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(inv * rot, UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627471,"byte_end":627525,"line_start":990,"line_end":990,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627530,"byte_end":627537,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627542,"byte_end":627551,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6363},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628095,"byte_end":628103,"line_start":1008,"line_end":1008,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitQuaternion<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627624,"byte_end":627690,"line_start":997,"line_end":997,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627695,"byte_end":627698,"line_start":998,"line_end":998,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627703,"byte_end":627716,"line_start":999,"line_end":999,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627721,"byte_end":627728,"line_start":1000,"line_end":1000,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627733,"byte_end":627772,"line_start":1001,"line_end":1001,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627777,"byte_end":627823,"line_start":1002,"line_end":1002,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627828,"byte_end":627900,"line_start":1003,"line_end":1003,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627905,"byte_end":627977,"line_start":1004,"line_end":1004,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.0045657, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":627982,"byte_end":628057,"line_start":1005,"line_end":1005,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628062,"byte_end":628069,"line_start":1006,"line_end":1006,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628074,"byte_end":628083,"line_start":1007,"line_end":1007,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6364},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628800,"byte_end":628811,"line_start":1027,"line_end":1027,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitQuaternion<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628210,"byte_end":628277,"line_start":1013,"line_end":1013,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628282,"byte_end":628285,"line_start":1014,"line_end":1014,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628290,"byte_end":628361,"line_start":1015,"line_end":1015,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628366,"byte_end":628369,"line_start":1016,"line_end":1016,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628374,"byte_end":628387,"line_start":1017,"line_end":1017,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628392,"byte_end":628399,"line_start":1018,"line_end":1018,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628404,"byte_end":628443,"line_start":1019,"line_end":1019,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628448,"byte_end":628494,"line_start":1020,"line_end":1020,"column_start":5,"column_end":51}},{"value":"/ let rot1 = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628499,"byte_end":628571,"line_start":1021,"line_end":1021,"column_start":5,"column_end":77}},{"value":"/ let rot2 = UnitQuaternion::from_axis_angle(&Vector3::x_axis(), 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628576,"byte_end":628648,"line_start":1022,"line_end":1022,"column_start":5,"column_end":77}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628653,"byte_end":628694,"line_start":1023,"line_end":1023,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628699,"byte_end":628762,"line_start":1024,"line_end":1024,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628767,"byte_end":628774,"line_start":1025,"line_end":1025,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628779,"byte_end":628788,"line_start":1026,"line_end":1026,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6365},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629350,"byte_end":629354,"line_start":1043,"line_end":1043,"column_start":12,"column_end":16},"name":"lerp","qualname":"<UnitQuaternion<N>>::lerp","value":"pub fn lerp(&Self, &Self, N) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Linear interpolation between two unit quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628874,"byte_end":628928,"line_start":1031,"line_end":1031,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628933,"byte_end":628936,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ The result is not normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628941,"byte_end":628974,"line_start":1033,"line_end":1033,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628979,"byte_end":628982,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":628987,"byte_end":629000,"line_start":1035,"line_end":1035,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629005,"byte_end":629012,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629017,"byte_end":629066,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629071,"byte_end":629151,"line_start":1038,"line_end":1038,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629156,"byte_end":629236,"line_start":1039,"line_end":1039,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.lerp(&q2, 0.1), Quaternion::new(0.9, 0.1, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629241,"byte_end":629312,"line_start":1040,"line_end":1040,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629317,"byte_end":629324,"line_start":1041,"line_end":1041,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629329,"byte_end":629338,"line_start":1042,"line_end":1042,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6366},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630017,"byte_end":630022,"line_start":1059,"line_end":1059,"column_start":12,"column_end":17},"name":"nlerp","qualname":"<UnitQuaternion<N>>::nlerp","value":"pub fn nlerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Normalized linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Normalized linear interpolation between two unit quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629458,"byte_end":629523,"line_start":1047,"line_end":1047,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629528,"byte_end":629531,"line_start":1048,"line_end":1048,"column_start":5,"column_end":8}},{"value":"/ This is the same as `self.lerp` except that the result is normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629536,"byte_end":629609,"line_start":1049,"line_end":1049,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629614,"byte_end":629617,"line_start":1050,"line_end":1050,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629622,"byte_end":629635,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629640,"byte_end":629647,"line_start":1052,"line_end":1052,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Quaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629652,"byte_end":629701,"line_start":1053,"line_end":1053,"column_start":5,"column_end":54}},{"value":"/ let q1 = UnitQuaternion::new_normalize(Quaternion::new(1.0, 0.0, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629706,"byte_end":629786,"line_start":1054,"line_end":1054,"column_start":5,"column_end":85}},{"value":"/ let q2 = UnitQuaternion::new_normalize(Quaternion::new(0.0, 1.0, 0.0, 0.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629791,"byte_end":629871,"line_start":1055,"line_end":1055,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(q1.nlerp(&q2, 0.1), UnitQuaternion::new_normalize(Quaternion::new(0.9, 0.1, 0.0, 0.0)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629876,"byte_end":629979,"line_start":1056,"line_end":1056,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629984,"byte_end":629991,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":629996,"byte_end":630005,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6367},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630458,"byte_end":630463,"line_start":1071,"line_end":1071,"column_start":12,"column_end":17},"name":"slerp","qualname":"<UnitQuaternion<N>>::slerp","value":"pub fn slerp(&Self, &Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between two unit quaternions.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between two unit quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630185,"byte_end":630249,"line_start":1066,"line_end":1066,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630254,"byte_end":630257,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ Panics if the angle between both quaternion is 180 degrees (in which case the interpolation","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630262,"byte_end":630357,"line_start":1068,"line_end":1068,"column_start":5,"column_end":100}},{"value":"/ is not well-defined). Use `.try_slerp` instead to avoid the panic.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630362,"byte_end":630432,"line_start":1069,"line_end":1069,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630437,"byte_end":630446,"line_start":1070,"line_end":1070,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6368},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631304,"byte_end":631313,"line_start":1090,"line_end":1090,"column_start":12,"column_end":21},"name":"try_slerp","qualname":"<UnitQuaternion<N>>::try_slerp","value":"pub fn try_slerp(&Self, &Self, N, N) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Computes the spherical linear interpolation between two unit quaternions or returns `None`\n if both quaternions are approximately 180 degrees apart (in which case the interpolation is\n not well-defined).","sig":null,"attributes":[{"value":"/ Computes the spherical linear interpolation between two unit quaternions or returns `None`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630707,"byte_end":630801,"line_start":1079,"line_end":1079,"column_start":5,"column_end":99}},{"value":"/ if both quaternions are approximately 180 degrees apart (in which case the interpolation is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630806,"byte_end":630901,"line_start":1080,"line_end":1080,"column_start":5,"column_end":100}},{"value":"/ not well-defined).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630906,"byte_end":630928,"line_start":1081,"line_end":1081,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630933,"byte_end":630936,"line_start":1082,"line_end":1082,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630941,"byte_end":630956,"line_start":1083,"line_end":1083,"column_start":5,"column_end":20}},{"value":"/ * `self`: the first quaternion to interpolate from.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":630961,"byte_end":631016,"line_start":1084,"line_end":1084,"column_start":5,"column_end":60}},{"value":"/ * `other`: the second quaternion to interpolate toward.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631021,"byte_end":631080,"line_start":1085,"line_end":1085,"column_start":5,"column_end":64}},{"value":"/ * `t`: the interpolation parameter. Should be between 0 and 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631085,"byte_end":631151,"line_start":1086,"line_end":1086,"column_start":5,"column_end":71}},{"value":"/ * `epsilon`: the value below which the sinus of the angle separating both quaternion","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631156,"byte_end":631244,"line_start":1087,"line_end":1087,"column_start":5,"column_end":93}},{"value":"/ must be to return `None`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631249,"byte_end":631278,"line_start":1088,"line_end":1088,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631283,"byte_end":631292,"line_start":1089,"line_end":1089,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6370},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631698,"byte_end":631711,"line_start":1104,"line_end":1104,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitQuaternion<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit quaternion in-place.\n","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit quaternion in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631613,"byte_end":631672,"line_start":1102,"line_end":1102,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631677,"byte_end":631686,"line_start":1103,"line_end":1103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6371},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632331,"byte_end":632342,"line_start":1121,"line_end":1121,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitQuaternion<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts this quaternion if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this quaternion if it is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631784,"byte_end":631830,"line_start":1108,"line_end":1108,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631835,"byte_end":631838,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631843,"byte_end":631856,"line_start":1110,"line_end":1110,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631861,"byte_end":631868,"line_start":1111,"line_end":1111,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631873,"byte_end":631912,"line_start":1112,"line_end":1112,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631917,"byte_end":631969,"line_start":1113,"line_end":1113,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":631974,"byte_end":632022,"line_start":1114,"line_end":1114,"column_start":5,"column_end":53}},{"value":"/ let mut rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632027,"byte_end":632076,"line_start":1115,"line_end":1115,"column_start":5,"column_end":54}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632081,"byte_end":632103,"line_start":1116,"line_end":1116,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitQuaternion::new(axisangle), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632108,"byte_end":632198,"line_start":1117,"line_end":1117,"column_start":5,"column_end":95}},{"value":"/ assert_relative_eq!(UnitQuaternion::new(axisangle) * rot, UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632203,"byte_end":632293,"line_start":1118,"line_end":1118,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632298,"byte_end":632305,"line_start":1119,"line_end":1119,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632310,"byte_end":632319,"line_start":1120,"line_end":1120,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6372},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632976,"byte_end":632980,"line_start":1140,"line_end":1140,"column_start":12,"column_end":16},"name":"axis","qualname":"<UnitQuaternion<N>>::axis","value":"pub fn axis(&Self) -> Option<Unit<Vector3<N>>>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion or `None` if the rotation is zero.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion or `None` if the rotation is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632415,"byte_end":632495,"line_start":1125,"line_end":1125,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632500,"byte_end":632503,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632508,"byte_end":632521,"line_start":1127,"line_end":1127,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632526,"byte_end":632533,"line_start":1128,"line_end":1128,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632538,"byte_end":632590,"line_start":1129,"line_end":1129,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632595,"byte_end":632659,"line_start":1130,"line_end":1130,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632664,"byte_end":632684,"line_start":1131,"line_end":1131,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632689,"byte_end":632749,"line_start":1132,"line_end":1132,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis(), Some(axis));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632754,"byte_end":632793,"line_start":1133,"line_end":1133,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632798,"byte_end":632801,"line_start":1134,"line_end":1134,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632806,"byte_end":632836,"line_start":1135,"line_end":1135,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632841,"byte_end":632899,"line_start":1136,"line_end":1136,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632904,"byte_end":632938,"line_start":1137,"line_end":1137,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632943,"byte_end":632950,"line_start":1138,"line_end":1138,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":632955,"byte_end":632964,"line_start":1139,"line_end":1139,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6373},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633676,"byte_end":633687,"line_start":1161,"line_end":1161,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitQuaternion<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis of this unit quaternion multiplied by the rotation angle.","sig":null,"attributes":[{"value":"/ The rotation axis of this unit quaternion multiplied by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633240,"byte_end":633319,"line_start":1150,"line_end":1150,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633324,"byte_end":633327,"line_start":1151,"line_end":1151,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633332,"byte_end":633345,"line_start":1152,"line_end":1152,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633350,"byte_end":633357,"line_start":1153,"line_end":1153,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633362,"byte_end":633401,"line_start":1154,"line_end":1154,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633406,"byte_end":633458,"line_start":1155,"line_end":1155,"column_start":5,"column_end":57}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633463,"byte_end":633511,"line_start":1156,"line_end":1156,"column_start":5,"column_end":53}},{"value":"/ let rot = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633516,"byte_end":633561,"line_start":1157,"line_end":1157,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot.scaled_axis(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633566,"byte_end":633638,"line_start":1158,"line_end":1158,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633643,"byte_end":633650,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633655,"byte_end":633664,"line_start":1160,"line_end":1160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6374},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634486,"byte_end":634496,"line_start":1186,"line_end":1186,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitQuaternion<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector3<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this unit quaternion.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633864,"byte_end":633931,"line_start":1169,"line_end":1169,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633936,"byte_end":633939,"line_start":1170,"line_end":1170,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633944,"byte_end":633984,"line_start":1171,"line_end":1171,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633989,"byte_end":633992,"line_start":1172,"line_end":1172,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":633997,"byte_end":634010,"line_start":1173,"line_end":1173,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634015,"byte_end":634022,"line_start":1174,"line_end":1174,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634027,"byte_end":634079,"line_start":1175,"line_end":1175,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634084,"byte_end":634148,"line_start":1176,"line_end":1176,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634153,"byte_end":634173,"line_start":1177,"line_end":1177,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634178,"byte_end":634238,"line_start":1178,"line_end":1178,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(rot.axis_angle(), Some((axis, angle)));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634243,"byte_end":634297,"line_start":1179,"line_end":1179,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634302,"byte_end":634305,"line_start":1180,"line_end":1180,"column_start":5,"column_end":8}},{"value":"/ // Case with a zero angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634310,"byte_end":634340,"line_start":1181,"line_end":1181,"column_start":5,"column_end":35}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634345,"byte_end":634403,"line_start":1182,"line_end":1182,"column_start":5,"column_end":63}},{"value":"/ assert!(rot.axis_angle().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634408,"byte_end":634448,"line_start":1183,"line_end":1183,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634453,"byte_end":634460,"line_start":1184,"line_end":1184,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634465,"byte_end":634474,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6376},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634774,"byte_end":634777,"line_start":1194,"line_end":1194,"column_start":12,"column_end":15},"name":"exp","qualname":"<UnitQuaternion<N>>::exp","value":"pub fn exp(&Self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the exponential of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the exponential of a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634603,"byte_end":634647,"line_start":1190,"line_end":1190,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634652,"byte_end":634655,"line_start":1191,"line_end":1191,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634660,"byte_end":634748,"line_start":1192,"line_end":1192,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634753,"byte_end":634762,"line_start":1193,"line_end":1193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6377},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635493,"byte_end":635495,"line_start":1213,"line_end":1213,"column_start":12,"column_end":14},"name":"ln","qualname":"<UnitQuaternion<N>>::ln","value":"pub fn ln(&Self) -> Quaternion<N>","parent":null,"children":[],"decl_id":null,"docs":" Compute the natural logarithm of a quaternion.","sig":null,"attributes":[{"value":"/ Compute the natural logarithm of a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634843,"byte_end":634893,"line_start":1198,"line_end":1198,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634898,"byte_end":634901,"line_start":1199,"line_end":1199,"column_start":5,"column_end":8}},{"value":"/ Note that this function yields a `Quaternion<N>` because it loses the unit property.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634906,"byte_end":634994,"line_start":1200,"line_end":1200,"column_start":5,"column_end":93}},{"value":"/ The vector part of the return value corresponds to the axis-angle representation (divided","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":634999,"byte_end":635092,"line_start":1201,"line_end":1201,"column_start":5,"column_end":98}},{"value":"/ by 2.0) of this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635097,"byte_end":635133,"line_start":1202,"line_end":1202,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635138,"byte_end":635141,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635146,"byte_end":635159,"line_start":1204,"line_end":1204,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635164,"byte_end":635171,"line_start":1205,"line_end":1205,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635176,"byte_end":635215,"line_start":1206,"line_end":1206,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635220,"byte_end":635266,"line_start":1207,"line_end":1207,"column_start":5,"column_end":51}},{"value":"/ let axisangle = Vector3::new(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635271,"byte_end":635319,"line_start":1208,"line_end":1208,"column_start":5,"column_end":53}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635324,"byte_end":635367,"line_start":1209,"line_end":1209,"column_start":5,"column_end":48}},{"value":"/ assert_relative_eq!(q.ln().vector().into_owned(), axisangle, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635372,"byte_end":635455,"line_start":1210,"line_end":1210,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635460,"byte_end":635467,"line_start":1211,"line_end":1211,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635472,"byte_end":635481,"line_start":1212,"line_end":1212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6378},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636366,"byte_end":636370,"line_start":1238,"line_end":1238,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitQuaternion<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise the quaternion to a given floating power.","sig":null,"attributes":[{"value":"/ Raise the quaternion to a given floating power.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635695,"byte_end":635746,"line_start":1221,"line_end":1221,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635751,"byte_end":635754,"line_start":1222,"line_end":1222,"column_start":5,"column_end":8}},{"value":"/ This returns the unit quaternion that identifies a rotation with axis `self.axis()` and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635759,"byte_end":635850,"line_start":1223,"line_end":1223,"column_start":5,"column_end":96}},{"value":"/ angle `self.angle() × n`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635855,"byte_end":635885,"line_start":1224,"line_end":1224,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635890,"byte_end":635893,"line_start":1225,"line_end":1225,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635898,"byte_end":635911,"line_start":1226,"line_end":1226,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635916,"byte_end":635923,"line_start":1227,"line_end":1227,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635928,"byte_end":635967,"line_start":1228,"line_end":1228,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Unit};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":635972,"byte_end":636024,"line_start":1229,"line_end":1229,"column_start":5,"column_end":57}},{"value":"/ let axis = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636029,"byte_end":636093,"line_start":1230,"line_end":1230,"column_start":5,"column_end":69}},{"value":"/ let angle = 1.2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636098,"byte_end":636118,"line_start":1231,"line_end":1231,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636123,"byte_end":636183,"line_start":1232,"line_end":1232,"column_start":5,"column_end":65}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636188,"byte_end":636216,"line_start":1233,"line_end":1233,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.axis().unwrap(), axis, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636221,"byte_end":636290,"line_start":1234,"line_end":1234,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(pow.angle(), 2.4);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636295,"byte_end":636328,"line_start":1235,"line_end":1235,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636333,"byte_end":636340,"line_start":1236,"line_end":1236,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636345,"byte_end":636354,"line_start":1237,"line_end":1237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6379},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637228,"byte_end":637246,"line_start":1263,"line_end":1263,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitQuaternion<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a rotation matrix from this unit quaternion.","sig":null,"attributes":[{"value":"/ Builds a rotation matrix from this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636556,"byte_end":636611,"line_start":1246,"line_end":1246,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636616,"byte_end":636619,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636624,"byte_end":636637,"line_start":1248,"line_end":1248,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636642,"byte_end":636645,"line_start":1249,"line_end":1249,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636650,"byte_end":636657,"line_start":1250,"line_end":1250,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636662,"byte_end":636701,"line_start":1251,"line_end":1251,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636706,"byte_end":636725,"line_start":1252,"line_end":1252,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636730,"byte_end":636785,"line_start":1253,"line_end":1253,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636790,"byte_end":636878,"line_start":1254,"line_end":1254,"column_start":5,"column_end":93}},{"value":"/ let rot = q.to_rotation_matrix();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636883,"byte_end":636920,"line_start":1255,"line_end":1255,"column_start":5,"column_end":42}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636925,"byte_end":636983,"line_start":1256,"line_end":1256,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":636988,"byte_end":637046,"line_start":1257,"line_end":1257,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637051,"byte_end":637110,"line_start":1258,"line_end":1258,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637115,"byte_end":637118,"line_start":1259,"line_end":1259,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(*rot.matrix(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637123,"byte_end":637190,"line_start":1260,"line_end":1260,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637195,"byte_end":637202,"line_start":1261,"line_end":1261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":637207,"byte_end":637216,"line_start":1262,"line_end":1262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6380},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638333,"byte_end":638348,"line_start":1298,"line_end":1298,"column_start":12,"column_end":27},"name":"to_euler_angles","qualname":"<UnitQuaternion<N>>::to_euler_angles","value":"pub fn to_euler_angles(&Self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent Euler angles.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent Euler angles.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638098,"byte_end":638165,"line_start":1293,"line_end":1293,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638170,"byte_end":638173,"line_start":1294,"line_end":1294,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638178,"byte_end":638237,"line_start":1295,"line_end":1295,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638242,"byte_end":638251,"line_start":1296,"line_end":1296,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"This is renamed to use `.euler_angles()`.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638256,"byte_end":638321,"line_start":1297,"line_end":1297,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":6381},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639002,"byte_end":639014,"line_start":1317,"line_end":1317,"column_start":12,"column_end":24},"name":"euler_angles","qualname":"<UnitQuaternion<N>>::euler_angles","value":"pub fn euler_angles(&Self) -> (N, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the euler angles corresponding to this unit quaternion.","sig":null,"attributes":[{"value":"/ Retrieves the euler angles corresponding to this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638410,"byte_end":638479,"line_start":1302,"line_end":1302,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638484,"byte_end":638487,"line_start":1303,"line_end":1303,"column_start":5,"column_end":8}},{"value":"/ The angles are produced in the form (roll, pitch, yaw).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638492,"byte_end":638551,"line_start":1304,"line_end":1304,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638556,"byte_end":638559,"line_start":1305,"line_end":1305,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638564,"byte_end":638577,"line_start":1306,"line_end":1306,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638582,"byte_end":638589,"line_start":1307,"line_end":1307,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638594,"byte_end":638633,"line_start":1308,"line_end":1308,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638638,"byte_end":638673,"line_start":1309,"line_end":1309,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638678,"byte_end":638741,"line_start":1310,"line_end":1310,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638746,"byte_end":638781,"line_start":1311,"line_end":1311,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638786,"byte_end":638842,"line_start":1312,"line_end":1312,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638847,"byte_end":638903,"line_start":1313,"line_end":1313,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638908,"byte_end":638964,"line_start":1314,"line_end":1314,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638969,"byte_end":638976,"line_start":1315,"line_end":1315,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":638981,"byte_end":638990,"line_start":1316,"line_end":1316,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6382},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639852,"byte_end":639866,"line_start":1338,"line_end":1338,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitQuaternion<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit quaternion into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit quaternion into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639097,"byte_end":639185,"line_start":1321,"line_end":1321,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639190,"byte_end":639193,"line_start":1322,"line_end":1322,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639198,"byte_end":639211,"line_start":1323,"line_end":1323,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639216,"byte_end":639219,"line_start":1324,"line_end":1324,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639224,"byte_end":639231,"line_start":1325,"line_end":1325,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639236,"byte_end":639275,"line_start":1326,"line_end":1326,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639280,"byte_end":639299,"line_start":1327,"line_end":1327,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639304,"byte_end":639359,"line_start":1328,"line_end":1328,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::z_axis(), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639364,"byte_end":639454,"line_start":1329,"line_end":1329,"column_start":5,"column_end":95}},{"value":"/ let expected = Matrix4::new(0.8660254, -0.5,      0.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639459,"byte_end":639522,"line_start":1330,"line_end":1330,"column_start":5,"column_end":68}},{"value":"/                             0.5,       0.8660254, 0.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639527,"byte_end":639590,"line_start":1331,"line_end":1331,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       1.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639595,"byte_end":639658,"line_start":1332,"line_end":1332,"column_start":5,"column_end":68}},{"value":"/                             0.0,       0.0,       0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639663,"byte_end":639727,"line_start":1333,"line_end":1333,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639732,"byte_end":639735,"line_start":1334,"line_end":1334,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639740,"byte_end":639814,"line_start":1335,"line_end":1335,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639819,"byte_end":639826,"line_start":1336,"line_end":1336,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639831,"byte_end":639840,"line_start":1337,"line_end":1337,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6383},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640554,"byte_end":640569,"line_start":1358,"line_end":1358,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitQuaternion<N>>::transform_point","value":"pub fn transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a point by this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":639952,"byte_end":639995,"line_start":1342,"line_end":1342,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640000,"byte_end":640003,"line_start":1343,"line_end":1343,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640008,"byte_end":640063,"line_start":1344,"line_end":1344,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640068,"byte_end":640071,"line_start":1345,"line_end":1345,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640076,"byte_end":640089,"line_start":1346,"line_end":1346,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640094,"byte_end":640097,"line_start":1347,"line_end":1347,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640102,"byte_end":640109,"line_start":1348,"line_end":1348,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640114,"byte_end":640153,"line_start":1349,"line_end":1349,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640158,"byte_end":640177,"line_start":1350,"line_end":1350,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640182,"byte_end":640236,"line_start":1351,"line_end":1351,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640241,"byte_end":640331,"line_start":1352,"line_end":1352,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640336,"byte_end":640413,"line_start":1353,"line_end":1353,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640418,"byte_end":640421,"line_start":1354,"line_end":1354,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640426,"byte_end":640516,"line_start":1355,"line_end":1355,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640521,"byte_end":640528,"line_start":1356,"line_end":1356,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640533,"byte_end":640542,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6384},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641236,"byte_end":641252,"line_start":1378,"line_end":1378,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitQuaternion<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by this unit quaternion.","sig":null,"attributes":[{"value":"/ Rotate a vector by this unit quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640637,"byte_end":640681,"line_start":1362,"line_end":1362,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640686,"byte_end":640689,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640694,"byte_end":640748,"line_start":1364,"line_end":1364,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640753,"byte_end":640756,"line_start":1365,"line_end":1365,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640761,"byte_end":640774,"line_start":1366,"line_end":1366,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640779,"byte_end":640782,"line_start":1367,"line_end":1367,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640787,"byte_end":640794,"line_start":1368,"line_end":1368,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640799,"byte_end":640838,"line_start":1369,"line_end":1369,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640843,"byte_end":640862,"line_start":1370,"line_end":1370,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640867,"byte_end":640913,"line_start":1371,"line_end":1371,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":640918,"byte_end":641008,"line_start":1372,"line_end":1372,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641013,"byte_end":641093,"line_start":1373,"line_end":1373,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641098,"byte_end":641101,"line_start":1374,"line_end":1374,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641106,"byte_end":641198,"line_start":1375,"line_end":1375,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641203,"byte_end":641210,"line_start":1376,"line_end":1376,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641215,"byte_end":641224,"line_start":1377,"line_end":1377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6385},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641976,"byte_end":641999,"line_start":1398,"line_end":1398,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitQuaternion<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a point by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n point.","sig":null,"attributes":[{"value":"/ Rotate a point by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641320,"byte_end":641390,"line_start":1382,"line_end":1382,"column_start":5,"column_end":75}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641395,"byte_end":641462,"line_start":1383,"line_end":1383,"column_start":5,"column_end":72}},{"value":"/ point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641467,"byte_end":641477,"line_start":1384,"line_end":1384,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641482,"byte_end":641485,"line_start":1385,"line_end":1385,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641490,"byte_end":641503,"line_start":1386,"line_end":1386,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641508,"byte_end":641511,"line_start":1387,"line_end":1387,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641516,"byte_end":641523,"line_start":1388,"line_end":1388,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641528,"byte_end":641567,"line_start":1389,"line_end":1389,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641572,"byte_end":641591,"line_start":1390,"line_end":1390,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641596,"byte_end":641650,"line_start":1391,"line_end":1391,"column_start":5,"column_end":59}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641655,"byte_end":641745,"line_start":1392,"line_end":1392,"column_start":5,"column_end":95}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641750,"byte_end":641835,"line_start":1393,"line_end":1393,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641840,"byte_end":641843,"line_start":1394,"line_end":1394,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641848,"byte_end":641938,"line_start":1395,"line_end":1395,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641943,"byte_end":641950,"line_start":1396,"line_end":1396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":641955,"byte_end":641964,"line_start":1397,"line_end":1397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6386},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642889,"byte_end":642913,"line_start":1420,"line_end":1420,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitQuaternion<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector3<N>) -> Vector3<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate a vector by the inverse of this unit quaternion. This may be\n cheaper than inverting the unit quaternion and transforming the\n vector.","sig":null,"attributes":[{"value":"/ Rotate a vector by the inverse of this unit quaternion. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642234,"byte_end":642305,"line_start":1404,"line_end":1404,"column_start":5,"column_end":76}},{"value":"/ cheaper than inverting the unit quaternion and transforming the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642310,"byte_end":642377,"line_start":1405,"line_end":1405,"column_start":5,"column_end":72}},{"value":"/ vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642382,"byte_end":642393,"line_start":1406,"line_end":1406,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642398,"byte_end":642401,"line_start":1407,"line_end":1407,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642406,"byte_end":642419,"line_start":1408,"line_end":1408,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642424,"byte_end":642427,"line_start":1409,"line_end":1409,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642432,"byte_end":642439,"line_start":1410,"line_end":1410,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642444,"byte_end":642483,"line_start":1411,"line_end":1411,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642488,"byte_end":642507,"line_start":1412,"line_end":1412,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642512,"byte_end":642558,"line_start":1413,"line_end":1413,"column_start":5,"column_end":51}},{"value":"/ let rot = UnitQuaternion::from_axis_angle(&Vector3::y_axis(), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642563,"byte_end":642653,"line_start":1414,"line_end":1414,"column_start":5,"column_end":95}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642658,"byte_end":642746,"line_start":1415,"line_end":1415,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642751,"byte_end":642754,"line_start":1416,"line_end":1416,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642759,"byte_end":642851,"line_start":1417,"line_end":1417,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642856,"byte_end":642863,"line_start":1418,"line_end":1418,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":642868,"byte_end":642877,"line_start":1419,"line_end":1419,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6650},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652443,"byte_end":652454,"line_start":25,"line_end":25,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Quaternion<N>>::from_vector","value":"pub fn from_vector(Vector4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`\n vector component.\n","sig":null,"attributes":[{"value":"/ Creates a quaternion from a 4D vector. The quaternion scalar part corresponds to the `w`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652249,"byte_end":652341,"line_start":21,"line_end":21,"column_start":5,"column_end":97}},{"value":"/ vector component.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652346,"byte_end":652367,"line_start":22,"line_end":22,"column_start":5,"column_end":26}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652372,"byte_end":652381,"line_start":23,"line_end":23,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652386,"byte_end":652431,"line_start":24,"line_end":24,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":6651},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653116,"byte_end":653119,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"new","qualname":"<Quaternion<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its individual components. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its individual components. Note that the arguments order does","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652528,"byte_end":652623,"line_start":29,"line_end":29,"column_start":5,"column_end":100}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652628,"byte_end":652665,"line_start":30,"line_end":30,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652670,"byte_end":652673,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ The storage order is `[ i, j, k, w ]` while the arguments for this functions are in the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652678,"byte_end":652769,"line_start":32,"line_end":32,"column_start":5,"column_end":96}},{"value":"/ order `(w, i, j, k)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652774,"byte_end":652799,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652804,"byte_end":652807,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652812,"byte_end":652825,"line_start":35,"line_end":35,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652830,"byte_end":652837,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652842,"byte_end":652884,"line_start":37,"line_end":37,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652889,"byte_end":652937,"line_start":38,"line_end":38,"column_start":5,"column_end":53}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652942,"byte_end":653008,"line_start":39,"line_end":39,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653013,"byte_end":653078,"line_start":40,"line_end":40,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653083,"byte_end":653090,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653095,"byte_end":653104,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6652},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653269,"byte_end":653278,"line_start":49,"line_end":49,"column_start":12,"column_end":21},"name":"from_imag","qualname":"<Quaternion<N>>::from_imag","value":"pub fn from_imag(Vector3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a pure quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a pure quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653210,"byte_end":653243,"line_start":47,"line_end":47,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653248,"byte_end":653257,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6653},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653993,"byte_end":654003,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Quaternion<N>>::from_parts","value":"pub fn from_parts<SB>(N, Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its scalar and vector parts. Note that the arguments order does\n **not** follow the storage order.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its scalar and vector parts. Note that the arguments order does","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653364,"byte_end":653461,"line_start":53,"line_end":53,"column_start":5,"column_end":102}},{"value":"/ **not** follow the storage order.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653466,"byte_end":653503,"line_start":54,"line_end":54,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653508,"byte_end":653511,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ The storage order is [ vector, scalar ].","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653516,"byte_end":653560,"line_start":56,"line_end":56,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653565,"byte_end":653568,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653573,"byte_end":653586,"line_start":58,"line_end":58,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653591,"byte_end":653598,"line_start":59,"line_end":59,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Quaternion, Vector3, Vector4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653603,"byte_end":653654,"line_start":60,"line_end":60,"column_start":5,"column_end":56}},{"value":"/ let w = 1.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653659,"byte_end":653675,"line_start":61,"line_end":61,"column_start":5,"column_end":21}},{"value":"/ let ijk = Vector3::new(2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653680,"byte_end":653722,"line_start":62,"line_end":62,"column_start":5,"column_end":47}},{"value":"/ let q = Quaternion::from_parts(w, ijk);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653727,"byte_end":653770,"line_start":63,"line_end":63,"column_start":5,"column_end":48}},{"value":"/ assert!(q.i == 2.0 && q.j == 3.0 && q.k == 4.0 && q.w == 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653775,"byte_end":653841,"line_start":64,"line_end":64,"column_start":5,"column_end":71}},{"value":"/ assert_eq!(*q.as_vector(), Vector4::new(2.0, 3.0, 4.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653846,"byte_end":653911,"line_start":65,"line_end":65,"column_start":5,"column_end":70}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653916,"byte_end":653923,"line_start":66,"line_end":66,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":653928,"byte_end":653937,"line_start":67,"line_end":67,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6655},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654214,"byte_end":654223,"line_start":76,"line_end":76,"column_start":12,"column_end":21},"name":"from_real","qualname":"<Quaternion<N>>::from_real","value":"pub fn from_real(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructs a real quaternion.\n","sig":null,"attributes":[{"value":"/ Constructs a real quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654155,"byte_end":654188,"line_start":74,"line_end":74,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654193,"byte_end":654202,"line_start":75,"line_end":75,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6656},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654473,"byte_end":654497,"line_start":84,"line_end":84,"column_start":12,"column_end":36},"name":"from_polar_decomposition","qualname":"<Quaternion<N>>::from_polar_decomposition","value":"pub fn from_polar_decomposition<SB>(N, N, Unit<Vector<N, U3, SB>>) -> Self\nwhere SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from its polar decomposition.","sig":null,"attributes":[{"value":"/ Creates a new quaternion from its polar decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654296,"byte_end":654354,"line_start":80,"line_end":80,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654359,"byte_end":654362,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ Note that `axis` is assumed to be a unit vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654367,"byte_end":654419,"line_start":82,"line_end":82,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":6658},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655053,"byte_end":655061,"line_start":103,"line_end":103,"column_start":12,"column_end":20},"name":"identity","qualname":"<Quaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The quaternion multiplicative identity.","sig":null,"attributes":[{"value":"/ The quaternion multiplicative identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654732,"byte_end":654775,"line_start":91,"line_end":91,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654780,"byte_end":654783,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654788,"byte_end":654801,"line_start":93,"line_end":93,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654806,"byte_end":654813,"line_start":94,"line_end":94,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Quaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654818,"byte_end":654849,"line_start":95,"line_end":95,"column_start":5,"column_end":36}},{"value":"/ let q = Quaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654854,"byte_end":654889,"line_start":96,"line_end":96,"column_start":5,"column_end":40}},{"value":"/ let q2 = Quaternion::new(1.0, 2.0, 3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654894,"byte_end":654943,"line_start":97,"line_end":97,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654948,"byte_end":654951,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654956,"byte_end":654983,"line_start":99,"line_end":99,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":654988,"byte_end":655015,"line_start":100,"line_end":100,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655020,"byte_end":655027,"line_start":101,"line_end":101,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655032,"byte_end":655041,"line_start":102,"line_end":102,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6673},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656552,"byte_end":656560,"line_start":168,"line_end":168,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitQuaternion<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The rotation identity.","sig":null,"attributes":[{"value":"/ The rotation identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656076,"byte_end":656102,"line_start":152,"line_end":152,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656107,"byte_end":656110,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656115,"byte_end":656128,"line_start":154,"line_end":154,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656133,"byte_end":656140,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656145,"byte_end":656199,"line_start":156,"line_end":156,"column_start":5,"column_end":59}},{"value":"/ let q = UnitQuaternion::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656204,"byte_end":656243,"line_start":157,"line_end":157,"column_start":5,"column_end":44}},{"value":"/ let q2 = UnitQuaternion::new(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656248,"byte_end":656310,"line_start":158,"line_end":158,"column_start":5,"column_end":67}},{"value":"/ let v = Vector3::new_random();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656315,"byte_end":656349,"line_start":159,"line_end":159,"column_start":5,"column_end":39}},{"value":"/ let p = Point3::from(v);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656354,"byte_end":656382,"line_start":160,"line_end":160,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656387,"byte_end":656390,"line_start":161,"line_end":161,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q * q2, q2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656395,"byte_end":656422,"line_start":162,"line_end":162,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q2 * q, q2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656427,"byte_end":656454,"line_start":163,"line_end":163,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(q * v, v);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656459,"byte_end":656484,"line_start":164,"line_end":164,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(q * p, p);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656489,"byte_end":656514,"line_start":165,"line_end":165,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656519,"byte_end":656526,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656531,"byte_end":656540,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6674},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657667,"byte_end":657682,"line_start":196,"line_end":196,"column_start":12,"column_end":27},"name":"from_axis_angle","qualname":"<UnitQuaternion<N>>::from_axis_angle","value":"pub fn from_axis_angle<SB>(&Unit<Vector<N, U3, SB>>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new quaternion from a unit vector (the rotation axis) and an angle\n (the rotation angle).","sig":null,"attributes":[{"value":"/ Creates a new quaternion from a unit vector (the rotation axis) and an angle","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656636,"byte_end":656716,"line_start":172,"line_end":172,"column_start":5,"column_end":85}},{"value":"/ (the rotation angle).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656721,"byte_end":656746,"line_start":173,"line_end":173,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656751,"byte_end":656754,"line_start":174,"line_end":174,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656759,"byte_end":656772,"line_start":175,"line_end":175,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656777,"byte_end":656784,"line_start":176,"line_end":176,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656789,"byte_end":656828,"line_start":177,"line_end":177,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656833,"byte_end":656852,"line_start":178,"line_end":178,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656857,"byte_end":656911,"line_start":179,"line_end":179,"column_start":5,"column_end":59}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656916,"byte_end":656949,"line_start":180,"line_end":180,"column_start":5,"column_end":38}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656954,"byte_end":656993,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656998,"byte_end":657053,"line_start":182,"line_end":182,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657058,"byte_end":657098,"line_start":183,"line_end":183,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657103,"byte_end":657145,"line_start":184,"line_end":184,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657150,"byte_end":657208,"line_start":185,"line_end":185,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657213,"byte_end":657216,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(q.axis().unwrap(), axis);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657221,"byte_end":657261,"line_start":187,"line_end":187,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(q.angle(), angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657266,"byte_end":657299,"line_start":188,"line_end":188,"column_start":5,"column_end":38}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657304,"byte_end":657383,"line_start":189,"line_end":189,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657388,"byte_end":657469,"line_start":190,"line_end":190,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657474,"byte_end":657477,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657482,"byte_end":657522,"line_start":192,"line_end":192,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657527,"byte_end":657629,"line_start":193,"line_end":193,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657634,"byte_end":657641,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657646,"byte_end":657655,"line_start":195,"line_end":195,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6676},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658085,"byte_end":658100,"line_start":208,"line_end":208,"column_start":12,"column_end":27},"name":"from_quaternion","qualname":"<UnitQuaternion<N>>::from_quaternion","value":"pub fn from_quaternion(Quaternion<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from a quaternion.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from a quaternion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":657950,"byte_end":658002,"line_start":204,"line_end":204,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658007,"byte_end":658010,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The input quaternion will be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658015,"byte_end":658059,"line_start":206,"line_end":206,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658064,"byte_end":658073,"line_start":207,"line_end":207,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658766,"byte_end":658783,"line_start":227,"line_end":227,"column_start":12,"column_end":29},"name":"from_euler_angles","qualname":"<UnitQuaternion<N>>::from_euler_angles","value":"pub fn from_euler_angles(N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion from Euler angles.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658171,"byte_end":658223,"line_start":212,"line_end":212,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658228,"byte_end":658231,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ The primitive rotations are applied in order: 1 roll − 2 pitch − 3 yaw.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658236,"byte_end":658315,"line_start":214,"line_end":214,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658320,"byte_end":658323,"line_start":215,"line_end":215,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658328,"byte_end":658341,"line_start":216,"line_end":216,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658346,"byte_end":658353,"line_start":217,"line_end":217,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658358,"byte_end":658397,"line_start":218,"line_end":218,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitQuaternion;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658402,"byte_end":658437,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitQuaternion::from_euler_angles(0.1, 0.2, 0.3);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658442,"byte_end":658505,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/ let euler = rot.euler_angles();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658510,"byte_end":658545,"line_start":221,"line_end":221,"column_start":5,"column_end":40}},{"value":"/ assert_relative_eq!(euler.0, 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658550,"byte_end":658606,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.1, 0.2, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658611,"byte_end":658667,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ assert_relative_eq!(euler.2, 0.3, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658672,"byte_end":658728,"line_start":224,"line_end":224,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658733,"byte_end":658740,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":658745,"byte_end":658754,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6678},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659923,"byte_end":659943,"line_start":257,"line_end":257,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitQuaternion<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion from a rotation matrix.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion from a rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659271,"byte_end":659324,"line_start":242,"line_end":242,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659329,"byte_end":659332,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659337,"byte_end":659350,"line_start":244,"line_end":244,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659355,"byte_end":659362,"line_start":245,"line_end":245,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659367,"byte_end":659406,"line_start":246,"line_end":246,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Rotation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659411,"byte_end":659468,"line_start":247,"line_end":247,"column_start":5,"column_end":62}},{"value":"/ let axis = Vector3::y_axis();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659473,"byte_end":659506,"line_start":248,"line_end":248,"column_start":5,"column_end":38}},{"value":"/ let angle = 0.1;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659511,"byte_end":659531,"line_start":249,"line_end":249,"column_start":5,"column_end":25}},{"value":"/ let rot = Rotation3::from_axis_angle(&axis, angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659536,"byte_end":659591,"line_start":250,"line_end":250,"column_start":5,"column_end":60}},{"value":"/ let q = UnitQuaternion::from_rotation_matrix(&rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659596,"byte_end":659651,"line_start":251,"line_end":251,"column_start":5,"column_end":60}},{"value":"/ assert_relative_eq!(q.to_rotation_matrix(), rot, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659656,"byte_end":659727,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ assert_relative_eq!(q.axis().unwrap(), rot.axis().unwrap(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659732,"byte_end":659814,"line_start":253,"line_end":253,"column_start":5,"column_end":87}},{"value":"/ assert_relative_eq!(q.angle(), rot.angle(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659819,"byte_end":659885,"line_start":254,"line_end":254,"column_start":5,"column_end":71}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659890,"byte_end":659897,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":659902,"byte_end":659911,"line_start":256,"line_end":256,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6679},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662354,"byte_end":662365,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitQuaternion<N>>::from_matrix","value":"pub fn from_matrix(&Matrix3<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662002,"byte_end":662096,"line_start":305,"line_end":305,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662101,"byte_end":662104,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662109,"byte_end":662181,"line_start":307,"line_end":307,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662186,"byte_end":662235,"line_start":308,"line_end":308,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662240,"byte_end":662342,"line_start":309,"line_end":309,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":6680},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663250,"byte_end":663265,"line_start":326,"line_end":326,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitQuaternion<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix3<N>, N, usize, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit quaternion by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662444,"byte_end":662538,"line_start":314,"line_end":314,"column_start":5,"column_end":99}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662543,"byte_end":662546,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662551,"byte_end":662653,"line_start":316,"line_end":316,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662658,"byte_end":662661,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662666,"byte_end":662682,"line_start":318,"line_end":318,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662687,"byte_end":662690,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662695,"byte_end":662767,"line_start":320,"line_end":320,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662772,"byte_end":662863,"line_start":321,"line_end":321,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662868,"byte_end":662971,"line_start":322,"line_end":322,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":662976,"byte_end":663089,"line_start":323,"line_end":323,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663094,"byte_end":663198,"line_start":324,"line_end":324,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663203,"byte_end":663238,"line_start":325,"line_end":325,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":6681},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663976,"byte_end":663992,"line_start":345,"line_end":345,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitQuaternion<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Option<Self> where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663452,"byte_end":663541,"line_start":331,"line_end":331,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663546,"byte_end":663560,"line_start":332,"line_end":332,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663565,"byte_end":663568,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663573,"byte_end":663586,"line_start":334,"line_end":334,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663591,"byte_end":663598,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663603,"byte_end":663642,"line_start":336,"line_end":336,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663647,"byte_end":663693,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663698,"byte_end":663738,"line_start":338,"line_end":338,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663743,"byte_end":663783,"line_start":339,"line_end":339,"column_start":5,"column_end":45}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663788,"byte_end":663850,"line_start":340,"line_end":340,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663855,"byte_end":663889,"line_start":341,"line_end":341,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663894,"byte_end":663938,"line_start":342,"line_end":342,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663943,"byte_end":663950,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":663955,"byte_end":663964,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6684},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664894,"byte_end":664917,"line_start":368,"line_end":368,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitQuaternion<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>, N)\n-> Option<Self> where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664200,"byte_end":664288,"line_start":353,"line_end":353,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664293,"byte_end":664332,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664337,"byte_end":664340,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664345,"byte_end":664358,"line_start":356,"line_end":356,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664363,"byte_end":664370,"line_start":357,"line_end":357,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664375,"byte_end":664414,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector3, UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664419,"byte_end":664465,"line_start":359,"line_end":359,"column_start":5,"column_end":51}},{"value":"/ let a = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664470,"byte_end":664510,"line_start":360,"line_end":360,"column_start":5,"column_end":45}},{"value":"/ let b = Vector3::new(3.0, 1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664515,"byte_end":664555,"line_start":361,"line_end":361,"column_start":5,"column_end":45}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664560,"byte_end":664635,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664640,"byte_end":664715,"line_start":363,"line_end":363,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664720,"byte_end":664793,"line_start":364,"line_end":364,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664798,"byte_end":664856,"line_start":365,"line_end":365,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664861,"byte_end":664868,"line_start":366,"line_end":366,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":664873,"byte_end":664882,"line_start":367,"line_end":367,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6687},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666014,"byte_end":666035,"line_start":402,"line_end":402,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitQuaternion<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U3, SB>>,\n                                 &Unit<Vector<N, U3, SC>>) -> Option<Self>\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The unit quaternion needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit quaternion needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665442,"byte_end":665531,"line_start":388,"line_end":388,"column_start":5,"column_end":94}},{"value":"/ direction.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665536,"byte_end":665550,"line_start":389,"line_end":389,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665555,"byte_end":665558,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665563,"byte_end":665576,"line_start":391,"line_end":391,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665581,"byte_end":665588,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665593,"byte_end":665632,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665637,"byte_end":665689,"line_start":394,"line_end":394,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665694,"byte_end":665755,"line_start":395,"line_end":395,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665760,"byte_end":665821,"line_start":396,"line_end":396,"column_start":5,"column_end":66}},{"value":"/ let q = UnitQuaternion::rotation_between(&a, &b).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665826,"byte_end":665888,"line_start":397,"line_end":397,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(q * a, b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665893,"byte_end":665927,"line_start":398,"line_end":398,"column_start":5,"column_end":39}},{"value":"/ assert_relative_eq!(q.inverse() * b, a);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665932,"byte_end":665976,"line_start":399,"line_end":399,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665981,"byte_end":665988,"line_start":400,"line_end":400,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":665993,"byte_end":666002,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6690},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":667025,"byte_end":667053,"line_start":428,"line_end":428,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitQuaternion<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U3, SB>>,\n                                        &Unit<Vector<N, U3, SC>>, N)\n-> Option<Self> where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666283,"byte_end":666371,"line_start":413,"line_end":413,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666376,"byte_end":666415,"line_start":414,"line_end":414,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666420,"byte_end":666423,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666428,"byte_end":666441,"line_start":416,"line_end":416,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666446,"byte_end":666453,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666458,"byte_end":666497,"line_start":418,"line_end":418,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector3, UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666502,"byte_end":666554,"line_start":419,"line_end":419,"column_start":5,"column_end":57}},{"value":"/ let a = Unit::new_normalize(Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666559,"byte_end":666620,"line_start":420,"line_end":420,"column_start":5,"column_end":66}},{"value":"/ let b = Unit::new_normalize(Vector3::new(3.0, 1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666625,"byte_end":666686,"line_start":421,"line_end":421,"column_start":5,"column_end":66}},{"value":"/ let q2 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.2).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666691,"byte_end":666766,"line_start":422,"line_end":422,"column_start":5,"column_end":80}},{"value":"/ let q5 = UnitQuaternion::scaled_rotation_between(&a, &b, 0.5).unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666771,"byte_end":666846,"line_start":423,"line_end":423,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(q2 * q2 * q2 * q2 * q2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666851,"byte_end":666924,"line_start":424,"line_end":424,"column_start":5,"column_end":78}},{"value":"/ assert_relative_eq!(q5 * q5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666929,"byte_end":666987,"line_start":425,"line_end":425,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":666992,"byte_end":666999,"line_start":426,"line_end":426,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":667004,"byte_end":667013,"line_start":427,"line_end":427,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6693},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668982,"byte_end":668994,"line_start":486,"line_end":486,"column_start":12,"column_end":24},"name":"face_towards","qualname":"<UnitQuaternion<N>>::face_towards","value":"pub fn face_towards<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates an unit quaternion that corresponds to the local frame of an observer standing at the\n origin and looking toward `dir`.","sig":null,"attributes":[{"value":"/ Creates an unit quaternion that corresponds to the local frame of an observer standing at the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668079,"byte_end":668176,"line_start":463,"line_end":463,"column_start":5,"column_end":102}},{"value":"/ origin and looking toward `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668181,"byte_end":668217,"line_start":464,"line_end":464,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668222,"byte_end":668225,"line_start":465,"line_end":465,"column_start":5,"column_end":8}},{"value":"/ It maps the `z` axis to the direction `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668230,"byte_end":668278,"line_start":466,"line_end":466,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668283,"byte_end":668286,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668291,"byte_end":668306,"line_start":468,"line_end":468,"column_start":5,"column_end":20}},{"value":"/   * dir - The look direction. It does not need to be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668311,"byte_end":668379,"line_start":469,"line_end":469,"column_start":5,"column_end":73}},{"value":"/   * up - The vertical direction. It does not need to be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668384,"byte_end":668455,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/   The only requirement of this parameter is to not be collinear to `dir`. Non-collinearity","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668460,"byte_end":668554,"line_start":471,"line_end":471,"column_start":5,"column_end":99}},{"value":"/   is not checked.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668559,"byte_end":668580,"line_start":472,"line_end":472,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668585,"byte_end":668588,"line_start":473,"line_end":473,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668593,"byte_end":668606,"line_start":474,"line_end":474,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668611,"byte_end":668618,"line_start":475,"line_end":475,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668623,"byte_end":668662,"line_start":476,"line_end":476,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668667,"byte_end":668686,"line_start":477,"line_end":477,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668691,"byte_end":668737,"line_start":478,"line_end":478,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668742,"byte_end":668784,"line_start":479,"line_end":479,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668789,"byte_end":668815,"line_start":480,"line_end":480,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668820,"byte_end":668823,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::face_towards(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668828,"byte_end":668880,"line_start":482,"line_end":482,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(q * Vector3::z(), dir.normalize());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668885,"byte_end":668944,"line_start":483,"line_end":483,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668949,"byte_end":668956,"line_start":484,"line_end":484,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":668961,"byte_end":668970,"line_start":485,"line_end":485,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6696},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669336,"byte_end":669355,"line_start":496,"line_end":496,"column_start":12,"column_end":31},"name":"new_observer_frames","qualname":"<UnitQuaternion<N>>::new_observer_frames","value":"pub fn new_observer_frames<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>)\n-> Self where SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Deprecated: Use [UnitQuaternion::face_towards] instead.\n","sig":null,"attributes":[{"value":"/ Deprecated: Use [UnitQuaternion::face_towards] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669213,"byte_end":669272,"line_start":494,"line_end":494,"column_start":5,"column_end":64}},{"value":"deprecated(note = \"renamed to `face_towards`\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669277,"byte_end":669324,"line_start":495,"line_end":495,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":6699},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670507,"byte_end":670517,"line_start":527,"line_end":527,"column_start":12,"column_end":22},"name":"look_at_rh","qualname":"<UnitQuaternion<N>>::look_at_rh","value":"pub fn look_at_rh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a right-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a right-handed look-at view matrix without translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669540,"byte_end":669606,"line_start":504,"line_end":504,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669611,"byte_end":669614,"line_start":505,"line_end":505,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **negative** `z` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669619,"byte_end":669685,"line_start":506,"line_end":506,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of right handed look-at matrix from the computer","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669690,"byte_end":669777,"line_start":507,"line_end":507,"column_start":5,"column_end":92}},{"value":"/ graphics community.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669782,"byte_end":669805,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669810,"byte_end":669813,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669818,"byte_end":669833,"line_start":510,"line_end":510,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669838,"byte_end":669908,"line_start":511,"line_end":511,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. It does not need","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":669913,"byte_end":670006,"line_start":512,"line_end":512,"column_start":5,"column_end":98}},{"value":"/   to be normalized. The only requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670011,"byte_end":670106,"line_start":513,"line_end":513,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670111,"byte_end":670114,"line_start":514,"line_end":514,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670119,"byte_end":670132,"line_start":515,"line_end":515,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670137,"byte_end":670144,"line_start":516,"line_end":516,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670149,"byte_end":670188,"line_start":517,"line_end":517,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670193,"byte_end":670212,"line_start":518,"line_end":518,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670217,"byte_end":670263,"line_start":519,"line_end":519,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670268,"byte_end":670310,"line_start":520,"line_end":520,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670315,"byte_end":670341,"line_start":521,"line_end":521,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670346,"byte_end":670349,"line_start":522,"line_end":522,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_rh(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670354,"byte_end":670404,"line_start":523,"line_end":523,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), -Vector3::z());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670409,"byte_end":670469,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670474,"byte_end":670481,"line_start":525,"line_end":525,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670486,"byte_end":670495,"line_start":526,"line_end":526,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6702},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671643,"byte_end":671653,"line_start":558,"line_end":558,"column_start":12,"column_end":22},"name":"look_at_lh","qualname":"<UnitQuaternion<N>>::look_at_lh","value":"pub fn look_at_lh<SB, SC>(&Vector<N, U3, SB>, &Vector<N, U3, SC>) -> Self\nwhere SB: Storage<N, U3>, SC: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Builds a left-handed look-at view matrix without translation.","sig":null,"attributes":[{"value":"/ Builds a left-handed look-at view matrix without translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670714,"byte_end":670779,"line_start":535,"line_end":535,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670784,"byte_end":670787,"line_start":536,"line_end":536,"column_start":5,"column_end":8}},{"value":"/ It maps the view direction `dir` to the **positive** `z` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670792,"byte_end":670858,"line_start":537,"line_end":537,"column_start":5,"column_end":71}},{"value":"/ This conforms to the common notion of left handed look-at matrix from the computer","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670863,"byte_end":670949,"line_start":538,"line_end":538,"column_start":5,"column_end":91}},{"value":"/ graphics community.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670954,"byte_end":670977,"line_start":539,"line_end":539,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670982,"byte_end":670985,"line_start":540,"line_end":540,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":670990,"byte_end":671005,"line_start":541,"line_end":541,"column_start":5,"column_end":20}},{"value":"/   * dir − The view direction. It does not need to be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671010,"byte_end":671080,"line_start":542,"line_end":542,"column_start":5,"column_end":73}},{"value":"/   * up - A vector approximately aligned with required the vertical axis. The only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671085,"byte_end":671170,"line_start":543,"line_end":543,"column_start":5,"column_end":90}},{"value":"/   requirement of this parameter is to not be collinear to `dir`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671175,"byte_end":671243,"line_start":544,"line_end":544,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671248,"byte_end":671251,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671256,"byte_end":671269,"line_start":546,"line_end":546,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671274,"byte_end":671281,"line_start":547,"line_end":547,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671286,"byte_end":671325,"line_start":548,"line_end":548,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671330,"byte_end":671349,"line_start":549,"line_end":549,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671354,"byte_end":671400,"line_start":550,"line_end":550,"column_start":5,"column_end":51}},{"value":"/ let dir = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671405,"byte_end":671447,"line_start":551,"line_end":551,"column_start":5,"column_end":47}},{"value":"/ let up = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671452,"byte_end":671478,"line_start":552,"line_end":552,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671483,"byte_end":671486,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ let q = UnitQuaternion::look_at_lh(&dir, &up);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671491,"byte_end":671541,"line_start":554,"line_end":554,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(q * dir.normalize(), Vector3::z());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671546,"byte_end":671605,"line_start":555,"line_end":555,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671610,"byte_end":671617,"line_start":556,"line_end":556,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671622,"byte_end":671631,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6705},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672852,"byte_end":672855,"line_start":588,"line_end":588,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitQuaternion<N>>::new","value":"pub fn new<SB>(Vector<N, U3, SB>) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671848,"byte_end":671941,"line_start":566,"line_end":566,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671946,"byte_end":671949,"line_start":567,"line_end":567,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":671954,"byte_end":672061,"line_start":568,"line_end":568,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672066,"byte_end":672069,"line_start":569,"line_end":569,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672074,"byte_end":672087,"line_start":570,"line_end":570,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672092,"byte_end":672099,"line_start":571,"line_end":571,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672104,"byte_end":672143,"line_start":572,"line_end":572,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672148,"byte_end":672167,"line_start":573,"line_end":573,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672172,"byte_end":672226,"line_start":574,"line_end":574,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672231,"byte_end":672289,"line_start":575,"line_end":575,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672294,"byte_end":672349,"line_start":576,"line_end":576,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672354,"byte_end":672394,"line_start":577,"line_end":577,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672399,"byte_end":672441,"line_start":578,"line_end":578,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672446,"byte_end":672489,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672494,"byte_end":672497,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672502,"byte_end":672581,"line_start":581,"line_end":581,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672586,"byte_end":672667,"line_start":582,"line_end":582,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672672,"byte_end":672675,"line_start":583,"line_end":583,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672680,"byte_end":672720,"line_start":584,"line_end":584,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::new(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672725,"byte_end":672814,"line_start":585,"line_end":585,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672819,"byte_end":672826,"line_start":586,"line_end":586,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":672831,"byte_end":672840,"line_start":587,"line_end":587,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6707},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674115,"byte_end":674122,"line_start":617,"line_end":617,"column_start":12,"column_end":19},"name":"new_eps","qualname":"<UnitQuaternion<N>>::new_eps","value":"pub fn new_eps<SB>(Vector<N, U3, SB>, N) -> Self where SB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673083,"byte_end":673176,"line_start":595,"line_end":595,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673181,"byte_end":673184,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673189,"byte_end":673279,"line_start":597,"line_end":597,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673284,"byte_end":673287,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673292,"byte_end":673305,"line_start":599,"line_end":599,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673310,"byte_end":673317,"line_start":600,"line_end":600,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673322,"byte_end":673361,"line_start":601,"line_end":601,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673366,"byte_end":673385,"line_start":602,"line_end":602,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673390,"byte_end":673444,"line_start":603,"line_end":603,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673449,"byte_end":673507,"line_start":604,"line_end":604,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673512,"byte_end":673567,"line_start":605,"line_end":605,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673572,"byte_end":673612,"line_start":606,"line_end":606,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673617,"byte_end":673659,"line_start":607,"line_end":607,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::new_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673664,"byte_end":673719,"line_start":608,"line_end":608,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673724,"byte_end":673727,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673732,"byte_end":673811,"line_start":610,"line_end":610,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673816,"byte_end":673897,"line_start":611,"line_end":611,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673902,"byte_end":673905,"line_start":612,"line_end":612,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673910,"byte_end":673958,"line_start":613,"line_end":613,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::new_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":673963,"byte_end":674077,"line_start":614,"line_end":614,"column_start":5,"column_end":119}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674082,"byte_end":674089,"line_start":615,"line_end":615,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674094,"byte_end":674103,"line_start":616,"line_end":616,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6709},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675435,"byte_end":675451,"line_start":647,"line_end":647,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitQuaternion<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB>(Vector<N, U3, SB>) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674365,"byte_end":674458,"line_start":624,"line_end":624,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674463,"byte_end":674466,"line_start":625,"line_end":625,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `N::default_epsilon()`, this returns the identity rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674471,"byte_end":674578,"line_start":626,"line_end":626,"column_start":5,"column_end":112}},{"value":"/ Same as `Self::new(axisangle)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674583,"byte_end":674618,"line_start":627,"line_end":627,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674623,"byte_end":674626,"line_start":628,"line_end":628,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674631,"byte_end":674644,"line_start":629,"line_end":629,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674649,"byte_end":674656,"line_start":630,"line_end":630,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674661,"byte_end":674700,"line_start":631,"line_end":631,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674705,"byte_end":674724,"line_start":632,"line_end":632,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674729,"byte_end":674783,"line_start":633,"line_end":633,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674788,"byte_end":674846,"line_start":634,"line_end":634,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674851,"byte_end":674906,"line_start":635,"line_end":635,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674911,"byte_end":674951,"line_start":636,"line_end":636,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":674956,"byte_end":674998,"line_start":637,"line_end":637,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis(axisangle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675003,"byte_end":675059,"line_start":638,"line_end":638,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675064,"byte_end":675067,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675072,"byte_end":675151,"line_start":640,"line_end":640,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675156,"byte_end":675237,"line_start":641,"line_end":641,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675242,"byte_end":675245,"line_start":642,"line_end":642,"column_start":5,"column_end":8}},{"value":"/ // A zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675250,"byte_end":675290,"line_start":643,"line_end":643,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis(Vector3::<f32>::zeros()), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675295,"byte_end":675397,"line_start":644,"line_end":644,"column_start":5,"column_end":107}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675402,"byte_end":675409,"line_start":645,"line_end":645,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675414,"byte_end":675423,"line_start":646,"line_end":646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6711},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676672,"byte_end":676692,"line_start":675,"line_end":675,"column_start":12,"column_end":32},"name":"from_scaled_axis_eps","qualname":"<UnitQuaternion<N>>::from_scaled_axis_eps","value":"pub fn from_scaled_axis_eps<SB>(Vector<N, U3, SB>, N) -> Self where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new unit quaternion rotation from a rotation axis scaled by the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675565,"byte_end":675658,"line_start":652,"line_end":652,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675663,"byte_end":675666,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ If `axisangle` has a magnitude smaller than `eps`, this returns the identity rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675671,"byte_end":675761,"line_start":654,"line_end":654,"column_start":5,"column_end":95}},{"value":"/ Same as `Self::new_eps(axisangle, eps)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675766,"byte_end":675810,"line_start":655,"line_end":655,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675815,"byte_end":675818,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675823,"byte_end":675836,"line_start":657,"line_end":657,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675841,"byte_end":675848,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675853,"byte_end":675892,"line_start":659,"line_end":659,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675897,"byte_end":675916,"line_start":660,"line_end":660,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion, Point3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675921,"byte_end":675975,"line_start":661,"line_end":661,"column_start":5,"column_end":59}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":675980,"byte_end":676038,"line_start":662,"line_end":662,"column_start":5,"column_end":63}},{"value":"/ // Point and vector being transformed in the tests.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676043,"byte_end":676098,"line_start":663,"line_end":663,"column_start":5,"column_end":60}},{"value":"/ let pt = Point3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676103,"byte_end":676143,"line_start":664,"line_end":664,"column_start":5,"column_end":45}},{"value":"/ let vec = Vector3::new(4.0, 5.0, 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676148,"byte_end":676190,"line_start":665,"line_end":665,"column_start":5,"column_end":47}},{"value":"/ let q = UnitQuaternion::from_scaled_axis_eps(axisangle, 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676195,"byte_end":676263,"line_start":666,"line_end":666,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676268,"byte_end":676271,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(q * pt, Point3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676276,"byte_end":676355,"line_start":668,"line_end":668,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(q * vec, Vector3::new(6.0, 5.0, -4.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676360,"byte_end":676441,"line_start":669,"line_end":669,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676446,"byte_end":676449,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ // An almost zero vector yields an identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676454,"byte_end":676502,"line_start":671,"line_end":671,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(UnitQuaternion::from_scaled_axis_eps(Vector3::new(1.0e-8, 1.0e-9, 1.0e-7), 1.0e-6), UnitQuaternion::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676507,"byte_end":676634,"line_start":672,"line_end":672,"column_start":5,"column_end":132}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676639,"byte_end":676646,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676651,"byte_end":676660,"line_start":674,"line_end":674,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":6713},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677915,"byte_end":677922,"line_start":705,"line_end":705,"column_start":12,"column_end":19},"name":"mean_of","qualname":"<UnitQuaternion<N>>::mean_of","value":"pub fn mean_of<impl IntoIterator<Item = Self>: IntoIterator<Item =\n               Self>>(impl IntoIterator<Item = Self>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the mean unit quaternion from a data structure implementing IntoIterator\n returning unit quaternions.","sig":null,"attributes":[{"value":"/ Create the mean unit quaternion from a data structure implementing IntoIterator","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676823,"byte_end":676906,"line_start":680,"line_end":680,"column_start":5,"column_end":88}},{"value":"/ returning unit quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676911,"byte_end":676942,"line_start":681,"line_end":681,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676947,"byte_end":676950,"line_start":682,"line_end":682,"column_start":5,"column_end":8}},{"value":"/ The method will panic if the iterator does not return any quaternions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":676955,"byte_end":677029,"line_start":683,"line_end":683,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677034,"byte_end":677037,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ Algorithm from: Oshman, Yaakov, and Avishy Carmi. \"Attitude estimation from vector","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677042,"byte_end":677128,"line_start":685,"line_end":685,"column_start":5,"column_end":91}},{"value":"/ observations using a genetic-algorithm-embedded quaternion particle filter.\" Journal of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677133,"byte_end":677224,"line_start":686,"line_end":686,"column_start":5,"column_end":96}},{"value":"/ Guidance, Control, and Dynamics 29.4 (2006): 879-891.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677229,"byte_end":677286,"line_start":687,"line_end":687,"column_start":5,"column_end":62}},{"value":"/ ","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677291,"byte_end":677295,"line_start":688,"line_end":688,"column_start":5,"column_end":9}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677300,"byte_end":677313,"line_start":689,"line_end":689,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677318,"byte_end":677325,"line_start":690,"line_end":690,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677330,"byte_end":677369,"line_start":691,"line_end":691,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677374,"byte_end":677393,"line_start":692,"line_end":692,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitQuaternion};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677398,"byte_end":677435,"line_start":693,"line_end":693,"column_start":5,"column_end":42}},{"value":"/ let q1 = UnitQuaternion::from_euler_angles(0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677440,"byte_end":677502,"line_start":694,"line_end":694,"column_start":5,"column_end":67}},{"value":"/ let q2 = UnitQuaternion::from_euler_angles(-0.1, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677507,"byte_end":677570,"line_start":695,"line_end":695,"column_start":5,"column_end":68}},{"value":"/ let q3 = UnitQuaternion::from_euler_angles(0.1, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677575,"byte_end":677637,"line_start":696,"line_end":696,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677642,"byte_end":677645,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let quat_vec = vec![q1, q2, q3];","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677650,"byte_end":677686,"line_start":698,"line_end":698,"column_start":5,"column_end":41}},{"value":"/ let q_mean = UnitQuaternion::mean_of(quat_vec);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677691,"byte_end":677742,"line_start":699,"line_end":699,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677747,"byte_end":677750,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ let euler_angles_mean = q_mean.euler_angles();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677755,"byte_end":677805,"line_start":701,"line_end":701,"column_start":5,"column_end":55}},{"value":"/ assert_relative_eq!(euler_angles_mean.0, 0.0, epsilon = 1.0e-7)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677810,"byte_end":677877,"line_start":702,"line_end":702,"column_start":5,"column_end":72}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677882,"byte_end":677889,"line_start":703,"line_end":703,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":677894,"byte_end":677903,"line_start":704,"line_end":704,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":7019},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707054,"byte_end":707065,"line_start":10,"line_end":10,"column_start":10,"column_end":21},"name":"UnitComplex","qualname":"::geometry::unit_complex::UnitComplex","value":"Unit<Complex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A complex number with a norm equal to 1.\n","sig":null,"attributes":[{"value":"/ A complex number with a norm equal to 1.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707000,"byte_end":707044,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":7023},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707390,"byte_end":707395,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"angle","qualname":"<UnitComplex<N>>::angle","value":"pub fn angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle in `]-pi; pi]` of this unit complex number.","sig":null,"attributes":[{"value":"/ The rotation angle in `]-pi; pi]` of this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707130,"byte_end":707196,"line_start":13,"line_end":13,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707201,"byte_end":707204,"line_start":14,"line_end":14,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707209,"byte_end":707222,"line_start":15,"line_end":15,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707227,"byte_end":707234,"line_start":16,"line_end":16,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707239,"byte_end":707271,"line_start":17,"line_end":17,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707276,"byte_end":707313,"line_start":18,"line_end":18,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(rot.angle(), 1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707318,"byte_end":707352,"line_start":19,"line_end":19,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707357,"byte_end":707364,"line_start":20,"line_end":20,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707369,"byte_end":707378,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7024},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707722,"byte_end":707731,"line_start":36,"line_end":36,"column_start":12,"column_end":21},"name":"sin_angle","qualname":"<UnitComplex<N>>::sin_angle","value":"pub fn sin_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sine of the rotation angle.","sig":null,"attributes":[{"value":"/ The sine of the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707452,"byte_end":707487,"line_start":26,"line_end":26,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707492,"byte_end":707495,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707500,"byte_end":707513,"line_start":28,"line_end":28,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707518,"byte_end":707525,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707530,"byte_end":707562,"line_start":30,"line_end":30,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707567,"byte_end":707591,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707596,"byte_end":707634,"line_start":32,"line_end":32,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.sin_angle(), angle.sin());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707639,"byte_end":707684,"line_start":33,"line_end":33,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707689,"byte_end":707696,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707701,"byte_end":707710,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7025},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708044,"byte_end":708053,"line_start":50,"line_end":50,"column_start":12,"column_end":21},"name":"cos_angle","qualname":"<UnitComplex<N>>::cos_angle","value":"pub fn cos_angle(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The cosine of the rotation angle.","sig":null,"attributes":[{"value":"/ The cosine of the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707773,"byte_end":707810,"line_start":40,"line_end":40,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707815,"byte_end":707818,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707823,"byte_end":707836,"line_start":42,"line_end":42,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707841,"byte_end":707848,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707853,"byte_end":707885,"line_start":44,"line_end":44,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707890,"byte_end":707914,"line_start":45,"line_end":45,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707919,"byte_end":707957,"line_start":46,"line_end":46,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(rot.cos_angle(),angle.cos());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707962,"byte_end":708006,"line_start":47,"line_end":47,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708011,"byte_end":708018,"line_start":48,"line_end":48,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708023,"byte_end":708032,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7026},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708317,"byte_end":708328,"line_start":59,"line_end":59,"column_start":12,"column_end":23},"name":"scaled_axis","qualname":"<UnitComplex<N>>::scaled_axis","value":"pub fn scaled_axis(&Self) -> Vector1<N>","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle returned as a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ The rotation angle returned as a 1-dimensional vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708095,"byte_end":708153,"line_start":54,"line_end":54,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708158,"byte_end":708161,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708166,"byte_end":708237,"line_start":56,"line_end":56,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708242,"byte_end":708291,"line_start":57,"line_end":57,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708296,"byte_end":708305,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7027},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708673,"byte_end":708683,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"name":"axis_angle","qualname":"<UnitComplex<N>>::axis_angle","value":"pub fn axis_angle(&Self) -> Option<(Unit<Vector1<N>>, N)>","parent":null,"children":[],"decl_id":null,"docs":" The rotation axis and angle in ]0, pi] of this complex number.","sig":null,"attributes":[{"value":"/ The rotation axis and angle in ]0, pi] of this complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708398,"byte_end":708464,"line_start":63,"line_end":63,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708469,"byte_end":708472,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708477,"byte_end":708548,"line_start":65,"line_end":65,"column_start":5,"column_end":76}},{"value":"/ the `.angle()` method instead is more common.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708553,"byte_end":708602,"line_start":66,"line_end":66,"column_start":5,"column_end":54}},{"value":"/ Returns `None` if the angle is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708607,"byte_end":708647,"line_start":67,"line_end":67,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":708652,"byte_end":708661,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7028},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709417,"byte_end":709424,"line_start":95,"line_end":95,"column_start":12,"column_end":19},"name":"complex","qualname":"<UnitComplex<N>>::complex","value":"pub fn complex(&Self) -> &Complex<N>","parent":null,"children":[],"decl_id":null,"docs":" The underlying complex number.","sig":null,"attributes":[{"value":"/ The underlying complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709009,"byte_end":709043,"line_start":81,"line_end":81,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709048,"byte_end":709051,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Same as `self.as_ref()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709056,"byte_end":709084,"line_start":83,"line_end":83,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709089,"byte_end":709092,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709097,"byte_end":709110,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709115,"byte_end":709122,"line_start":86,"line_end":86,"column_start":5,"column_end":12}},{"value":"/ # extern crate num_complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709127,"byte_end":709158,"line_start":87,"line_end":87,"column_start":5,"column_end":36}},{"value":"/ # use num_complex::Complex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709163,"byte_end":709194,"line_start":88,"line_end":88,"column_start":5,"column_end":36}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709199,"byte_end":709231,"line_start":89,"line_end":89,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.78f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709236,"byte_end":709260,"line_start":90,"line_end":90,"column_start":5,"column_end":29}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709265,"byte_end":709303,"line_start":91,"line_end":91,"column_start":5,"column_end":43}},{"value":"/ assert_eq!(*rot.complex(), Complex::new(angle.cos(), angle.sin()));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709308,"byte_end":709379,"line_start":92,"line_end":92,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709384,"byte_end":709391,"line_start":93,"line_end":93,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709396,"byte_end":709405,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7029},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709842,"byte_end":709851,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"conjugate","qualname":"<UnitComplex<N>>::conjugate","value":"pub fn conjugate(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Compute the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute the conjugate of this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709482,"byte_end":709536,"line_start":99,"line_end":99,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709541,"byte_end":709544,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709549,"byte_end":709562,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709567,"byte_end":709574,"line_start":102,"line_end":102,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709579,"byte_end":709611,"line_start":103,"line_end":103,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709616,"byte_end":709653,"line_start":104,"line_end":104,"column_start":5,"column_end":42}},{"value":"/ let conj = rot.conjugate();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709658,"byte_end":709689,"line_start":105,"line_end":105,"column_start":5,"column_end":36}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709694,"byte_end":709747,"line_start":106,"line_end":106,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709752,"byte_end":709804,"line_start":107,"line_end":107,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709809,"byte_end":709816,"line_start":108,"line_end":108,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709821,"byte_end":709830,"line_start":109,"line_end":109,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7030},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710368,"byte_end":710375,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"inverse","qualname":"<UnitComplex<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts this complex number if it is not zero.","sig":null,"attributes":[{"value":"/ Inverts this complex number if it is not zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709921,"byte_end":709971,"line_start":114,"line_end":114,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709976,"byte_end":709979,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":709984,"byte_end":709997,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710002,"byte_end":710009,"line_start":117,"line_end":117,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710014,"byte_end":710053,"line_start":118,"line_end":118,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710058,"byte_end":710090,"line_start":119,"line_end":119,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(1.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710095,"byte_end":710131,"line_start":120,"line_end":120,"column_start":5,"column_end":41}},{"value":"/ let inv = rot.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710136,"byte_end":710164,"line_start":121,"line_end":121,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(rot * inv, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710169,"byte_end":710247,"line_start":122,"line_end":122,"column_start":5,"column_end":83}},{"value":"/ assert_relative_eq!(inv * rot, UnitComplex::identity(), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710252,"byte_end":710330,"line_start":123,"line_end":123,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710335,"byte_end":710342,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710347,"byte_end":710356,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7031},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710792,"byte_end":710800,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<UnitComplex<N>>::angle_to","value":"pub fn angle_to(&Self, &Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The rotation angle needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The rotation angle needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710429,"byte_end":710495,"line_start":130,"line_end":130,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710500,"byte_end":710503,"line_start":131,"line_end":131,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710508,"byte_end":710521,"line_start":132,"line_end":132,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710526,"byte_end":710533,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710538,"byte_end":710577,"line_start":134,"line_end":134,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710582,"byte_end":710614,"line_start":135,"line_end":135,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710619,"byte_end":710656,"line_start":136,"line_end":136,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710661,"byte_end":710698,"line_start":137,"line_end":137,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(rot1.angle_to(&rot2), 1.6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710703,"byte_end":710754,"line_start":138,"line_end":138,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710759,"byte_end":710766,"line_start":139,"line_end":139,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710771,"byte_end":710780,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7032},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711467,"byte_end":711478,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"rotation_to","qualname":"<UnitComplex<N>>::rotation_to","value":"pub fn rotation_to(&Self, &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number needed to make `self` and `other` coincide.","sig":null,"attributes":[{"value":"/ The unit complex number needed to make `self` and `other` coincide.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710907,"byte_end":710978,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710983,"byte_end":710986,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ The result is such that: `self.rotation_to(other) * self == other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":710991,"byte_end":711062,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711067,"byte_end":711070,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711075,"byte_end":711088,"line_start":150,"line_end":150,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711093,"byte_end":711100,"line_start":151,"line_end":151,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711105,"byte_end":711144,"line_start":152,"line_end":152,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711149,"byte_end":711181,"line_start":153,"line_end":153,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::new(0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711186,"byte_end":711223,"line_start":154,"line_end":154,"column_start":5,"column_end":42}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711228,"byte_end":711265,"line_start":155,"line_end":155,"column_start":5,"column_end":42}},{"value":"/ let rot_to = rot1.rotation_to(&rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711270,"byte_end":711311,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711316,"byte_end":711319,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot_to * rot1, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711324,"byte_end":711369,"line_start":158,"line_end":158,"column_start":5,"column_end":50}},{"value":"/ assert_relative_eq!(rot_to.inverse() * rot2, rot1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711374,"byte_end":711429,"line_start":159,"line_end":159,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711434,"byte_end":711441,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711446,"byte_end":711455,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7033},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712023,"byte_end":712036,"line_start":180,"line_end":180,"column_start":12,"column_end":25},"name":"conjugate_mut","qualname":"<UnitComplex<N>>::conjugate_mut","value":"pub fn conjugate_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Compute in-place the conjugate of this unit complex number.","sig":null,"attributes":[{"value":"/ Compute in-place the conjugate of this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711542,"byte_end":711605,"line_start":166,"line_end":166,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711610,"byte_end":711613,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711618,"byte_end":711631,"line_start":168,"line_end":168,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711636,"byte_end":711643,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711648,"byte_end":711687,"line_start":170,"line_end":170,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711692,"byte_end":711724,"line_start":171,"line_end":171,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711729,"byte_end":711749,"line_start":172,"line_end":172,"column_start":5,"column_end":25}},{"value":"/ let rot = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711754,"byte_end":711792,"line_start":173,"line_end":173,"column_start":5,"column_end":43}},{"value":"/ let mut conj = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711797,"byte_end":711840,"line_start":174,"line_end":174,"column_start":5,"column_end":48}},{"value":"/ conj.conjugate_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711845,"byte_end":711870,"line_start":175,"line_end":175,"column_start":5,"column_end":30}},{"value":"/ assert_eq!(rot.complex().im, -conj.complex().im);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711875,"byte_end":711928,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(rot.complex().re, conj.complex().re);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711933,"byte_end":711985,"line_start":177,"line_end":177,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":711990,"byte_end":711997,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712002,"byte_end":712011,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7034},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712599,"byte_end":712610,"line_start":198,"line_end":198,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<UnitComplex<N>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts in-place this unit complex number.","sig":null,"attributes":[{"value":"/ Inverts in-place this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712127,"byte_end":712173,"line_start":185,"line_end":185,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712178,"byte_end":712181,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712186,"byte_end":712199,"line_start":187,"line_end":187,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712204,"byte_end":712211,"line_start":188,"line_end":188,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712216,"byte_end":712255,"line_start":189,"line_end":189,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712260,"byte_end":712292,"line_start":190,"line_end":190,"column_start":5,"column_end":37}},{"value":"/ let angle = 1.7;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712297,"byte_end":712317,"line_start":191,"line_end":191,"column_start":5,"column_end":25}},{"value":"/ let mut rot = UnitComplex::new(angle);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712322,"byte_end":712364,"line_start":192,"line_end":192,"column_start":5,"column_end":47}},{"value":"/ rot.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712369,"byte_end":712391,"line_start":193,"line_end":193,"column_start":5,"column_end":27}},{"value":"/ assert_relative_eq!(rot * UnitComplex::new(angle), UnitComplex::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712396,"byte_end":712476,"line_start":194,"line_end":194,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(UnitComplex::new(angle) * rot, UnitComplex::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712481,"byte_end":712561,"line_start":195,"line_end":195,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712566,"byte_end":712573,"line_start":196,"line_end":196,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712578,"byte_end":712587,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7035},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713135,"byte_end":713139,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"powf","qualname":"<UnitComplex<N>>::powf","value":"pub fn powf(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Raise this unit complex number to a given floating power.","sig":null,"attributes":[{"value":"/ Raise this unit complex number to a given floating power.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712664,"byte_end":712725,"line_start":202,"line_end":202,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712730,"byte_end":712733,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This returns the unit complex number that identifies a rotation angle equal to","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712738,"byte_end":712820,"line_start":204,"line_end":204,"column_start":5,"column_end":87}},{"value":"/ `self.angle() × n`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712825,"byte_end":712849,"line_start":205,"line_end":205,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712854,"byte_end":712857,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712862,"byte_end":712875,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712880,"byte_end":712887,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712892,"byte_end":712931,"line_start":209,"line_end":209,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712936,"byte_end":712968,"line_start":210,"line_end":210,"column_start":5,"column_end":37}},{"value":"/ let rot = UnitComplex::new(0.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":712973,"byte_end":713010,"line_start":211,"line_end":211,"column_start":5,"column_end":42}},{"value":"/ let pow = rot.powf(2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713015,"byte_end":713043,"line_start":212,"line_end":212,"column_start":5,"column_end":33}},{"value":"/ assert_relative_eq!(pow.angle(), 2.0 * 0.78);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713048,"byte_end":713097,"line_start":213,"line_end":213,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713102,"byte_end":713109,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713114,"byte_end":713123,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7036},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713619,"byte_end":713637,"line_start":231,"line_end":231,"column_start":12,"column_end":30},"name":"to_rotation_matrix","qualname":"<UnitComplex<N>>::to_rotation_matrix","value":"pub fn to_rotation_matrix(&Self) -> Rotation2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds the rotation matrix corresponding to this unit complex number.","sig":null,"attributes":[{"value":"/ Builds the rotation matrix corresponding to this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713217,"byte_end":713290,"line_start":220,"line_end":220,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713295,"byte_end":713298,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713303,"byte_end":713316,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713321,"byte_end":713328,"line_start":223,"line_end":223,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Rotation2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713333,"byte_end":713378,"line_start":224,"line_end":224,"column_start":5,"column_end":50}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713383,"byte_end":713402,"line_start":225,"line_end":225,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713407,"byte_end":713462,"line_start":226,"line_end":226,"column_start":5,"column_end":60}},{"value":"/ let expected = Rotation2::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713467,"byte_end":713525,"line_start":227,"line_end":227,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(rot.to_rotation_matrix(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713530,"byte_end":713581,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713586,"byte_end":713593,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713598,"byte_end":713607,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7037},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714335,"byte_end":714349,"line_start":251,"line_end":251,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<UnitComplex<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix3<N>","parent":null,"children":[],"decl_id":null,"docs":" Converts this unit complex number into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this unit complex number into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713793,"byte_end":713885,"line_start":238,"line_end":238,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713890,"byte_end":713893,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713898,"byte_end":713911,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713916,"byte_end":713923,"line_start":241,"line_end":241,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{UnitComplex, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713928,"byte_end":713971,"line_start":242,"line_end":242,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":713976,"byte_end":713995,"line_start":243,"line_end":243,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714000,"byte_end":714055,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714060,"byte_end":714118,"line_start":245,"line_end":245,"column_start":5,"column_end":63}},{"value":"/                             0.5,       0.8660254, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714123,"byte_end":714181,"line_start":246,"line_end":246,"column_start":5,"column_end":63}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714186,"byte_end":714245,"line_start":247,"line_end":247,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(rot.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714250,"byte_end":714297,"line_start":248,"line_end":248,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714302,"byte_end":714309,"line_start":249,"line_end":249,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714314,"byte_end":714323,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7038},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714976,"byte_end":714991,"line_start":269,"line_end":269,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<UnitComplex<N>>::transform_point","value":"pub fn transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714435,"byte_end":714490,"line_start":255,"line_end":255,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714495,"byte_end":714498,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714503,"byte_end":714558,"line_start":257,"line_end":257,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714563,"byte_end":714566,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714571,"byte_end":714584,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714589,"byte_end":714596,"line_start":260,"line_end":260,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714601,"byte_end":714640,"line_start":261,"line_end":261,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714645,"byte_end":714687,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714692,"byte_end":714711,"line_start":263,"line_end":263,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714716,"byte_end":714771,"line_start":264,"line_end":264,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714776,"byte_end":714848,"line_start":265,"line_end":265,"column_start":5,"column_end":77}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714853,"byte_end":714938,"line_start":266,"line_end":266,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714943,"byte_end":714950,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":714955,"byte_end":714964,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7039},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715606,"byte_end":715622,"line_start":287,"line_end":287,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<UnitComplex<N>>::transform_vector","value":"pub fn transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715059,"byte_end":715115,"line_start":273,"line_end":273,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715120,"byte_end":715123,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715128,"byte_end":715182,"line_start":275,"line_end":275,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715187,"byte_end":715190,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715195,"byte_end":715208,"line_start":277,"line_end":277,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715213,"byte_end":715220,"line_start":278,"line_end":278,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715225,"byte_end":715264,"line_start":279,"line_end":279,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715269,"byte_end":715312,"line_start":280,"line_end":280,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715317,"byte_end":715336,"line_start":281,"line_end":281,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715341,"byte_end":715396,"line_start":282,"line_end":282,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715401,"byte_end":715476,"line_start":283,"line_end":283,"column_start":5,"column_end":80}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(-2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715481,"byte_end":715568,"line_start":284,"line_end":284,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715573,"byte_end":715580,"line_start":285,"line_end":285,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715585,"byte_end":715594,"line_start":286,"line_end":286,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7040},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716186,"byte_end":716209,"line_start":303,"line_end":303,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<UnitComplex<N>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point2<N>) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given point by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given point by the inverse of this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715690,"byte_end":715760,"line_start":291,"line_end":291,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715765,"byte_end":715768,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715773,"byte_end":715786,"line_start":293,"line_end":293,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715791,"byte_end":715798,"line_start":294,"line_end":294,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715803,"byte_end":715842,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715847,"byte_end":715889,"line_start":296,"line_end":296,"column_start":5,"column_end":47}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715894,"byte_end":715913,"line_start":297,"line_end":297,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715918,"byte_end":715973,"line_start":298,"line_end":298,"column_start":5,"column_end":60}},{"value":"/ let transformed_point = rot.inverse_transform_point(&Point2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":715978,"byte_end":716058,"line_start":299,"line_end":299,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_point, Point2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716063,"byte_end":716148,"line_start":300,"line_end":300,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716153,"byte_end":716160,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716165,"byte_end":716174,"line_start":302,"line_end":302,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7041},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716947,"byte_end":716971,"line_start":321,"line_end":321,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<UnitComplex<N>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &Vector2<N>) -> Vector2<N>","parent":null,"children":[],"decl_id":null,"docs":" Rotate the given vector by the inverse of this unit complex number.","sig":null,"attributes":[{"value":"/ Rotate the given vector by the inverse of this unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716444,"byte_end":716515,"line_start":309,"line_end":309,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716520,"byte_end":716523,"line_start":310,"line_end":310,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716528,"byte_end":716541,"line_start":311,"line_end":311,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716546,"byte_end":716553,"line_start":312,"line_end":312,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716558,"byte_end":716597,"line_start":313,"line_end":313,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{UnitComplex, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716602,"byte_end":716645,"line_start":314,"line_end":314,"column_start":5,"column_end":48}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716650,"byte_end":716669,"line_start":315,"line_end":315,"column_start":5,"column_end":24}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716674,"byte_end":716729,"line_start":316,"line_end":316,"column_start":5,"column_end":60}},{"value":"/ let transformed_vector = rot.inverse_transform_vector(&Vector2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716734,"byte_end":716817,"line_start":317,"line_end":317,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(transformed_vector, Vector2::new(2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716822,"byte_end":716909,"line_start":318,"line_end":318,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716914,"byte_end":716921,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":716926,"byte_end":716935,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7233},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723447,"byte_end":723455,"line_start":28,"line_end":28,"column_start":12,"column_end":20},"name":"identity","qualname":"<UnitComplex<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The unit complex number multiplicative identity.","sig":null,"attributes":[{"value":"/ The unit complex number multiplicative identity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723110,"byte_end":723162,"line_start":16,"line_end":16,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723167,"byte_end":723170,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723175,"byte_end":723188,"line_start":18,"line_end":18,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723193,"byte_end":723200,"line_start":19,"line_end":19,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::UnitComplex;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723205,"byte_end":723237,"line_start":20,"line_end":20,"column_start":5,"column_end":37}},{"value":"/ let rot1 = UnitComplex::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723242,"byte_end":723281,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/ let rot2 = UnitComplex::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723286,"byte_end":723323,"line_start":22,"line_end":22,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723328,"byte_end":723331,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(rot1 * rot2, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723336,"byte_end":723370,"line_start":24,"line_end":24,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(rot2 * rot1, rot2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723375,"byte_end":723409,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723414,"byte_end":723421,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723426,"byte_end":723435,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7234},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723977,"byte_end":723980,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<UnitComplex<N>>::new","value":"pub fn new(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the given angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the given angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723542,"byte_end":723628,"line_start":32,"line_end":32,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723633,"byte_end":723636,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723641,"byte_end":723654,"line_start":34,"line_end":34,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723659,"byte_end":723662,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723667,"byte_end":723674,"line_start":36,"line_end":36,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723679,"byte_end":723718,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723723,"byte_end":723742,"line_start":38,"line_end":38,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723747,"byte_end":723789,"line_start":39,"line_end":39,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723794,"byte_end":723849,"line_start":40,"line_end":40,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723854,"byte_end":723857,"line_start":41,"line_end":41,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723862,"byte_end":723939,"line_start":42,"line_end":42,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723944,"byte_end":723951,"line_start":43,"line_end":43,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723956,"byte_end":723965,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7235},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724611,"byte_end":724621,"line_start":66,"line_end":66,"column_start":12,"column_end":22},"name":"from_angle","qualname":"<UnitComplex<N>>::from_angle","value":"pub fn from_angle(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number corresponding to the rotation with the angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number corresponding to the rotation with the angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724101,"byte_end":724181,"line_start":50,"line_end":50,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724186,"byte_end":724189,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Same as `Self::new(angle)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724194,"byte_end":724225,"line_start":52,"line_end":52,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724230,"byte_end":724233,"line_start":53,"line_end":53,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724238,"byte_end":724251,"line_start":54,"line_end":54,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724256,"byte_end":724259,"line_start":55,"line_end":55,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724264,"byte_end":724271,"line_start":56,"line_end":56,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724276,"byte_end":724315,"line_start":57,"line_end":57,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724320,"byte_end":724339,"line_start":58,"line_end":58,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724344,"byte_end":724386,"line_start":59,"line_end":59,"column_start":5,"column_end":47}},{"value":"/ let rot = UnitComplex::from_angle(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724391,"byte_end":724453,"line_start":60,"line_end":60,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724458,"byte_end":724461,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724466,"byte_end":724543,"line_start":62,"line_end":62,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724548,"byte_end":724555,"line_start":63,"line_end":63,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724590,"byte_end":724599,"line_start":65,"line_end":65,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7236},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725367,"byte_end":725389,"line_start":87,"line_end":87,"column_start":12,"column_end":34},"name":"from_cos_sin_unchecked","qualname":"<UnitComplex<N>>::from_cos_sin_unchecked","value":"pub fn from_cos_sin_unchecked(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the sinus and cosinus of the rotation angle.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the sinus and cosinus of the rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724678,"byte_end":724762,"line_start":70,"line_end":70,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724767,"byte_end":724770,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ The input values are not checked to actually be cosines and sine of the same value.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724775,"byte_end":724862,"line_start":72,"line_end":72,"column_start":5,"column_end":92}},{"value":"/ Is is generally preferable to use the `::new(angle)` constructor instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724867,"byte_end":724944,"line_start":73,"line_end":73,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724949,"byte_end":724952,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724957,"byte_end":724970,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724975,"byte_end":724978,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724983,"byte_end":724990,"line_start":77,"line_end":77,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":724995,"byte_end":725034,"line_start":78,"line_end":78,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725039,"byte_end":725058,"line_start":79,"line_end":79,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{UnitComplex, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725063,"byte_end":725114,"line_start":80,"line_end":80,"column_start":5,"column_end":56}},{"value":"/ let angle = f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725119,"byte_end":725158,"line_start":81,"line_end":81,"column_start":5,"column_end":44}},{"value":"/ let rot = UnitComplex::from_cos_sin_unchecked(angle.cos(), angle.sin());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725163,"byte_end":725239,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725244,"byte_end":725247,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(rot * Point2::new(3.0, 4.0), Point2::new(-4.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725252,"byte_end":725329,"line_start":84,"line_end":84,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725334,"byte_end":725341,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725346,"byte_end":725355,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7237},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725740,"byte_end":725756,"line_start":96,"line_end":96,"column_start":12,"column_end":28},"name":"from_scaled_axis","qualname":"<UnitComplex<N>>::from_scaled_axis","value":"pub fn from_scaled_axis<SB: Storage<N, U1>>(Vector<N, U1, SB>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","sig":null,"attributes":[{"value":"/ Builds a unit complex rotation from an angle in radian wrapped in a 1-dimensional vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725479,"byte_end":725572,"line_start":91,"line_end":91,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725577,"byte_end":725580,"line_start":92,"line_end":92,"column_start":5,"column_end":8}},{"value":"/ This is generally used in the context of generic programming. Using","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725585,"byte_end":725656,"line_start":93,"line_end":93,"column_start":5,"column_end":76}},{"value":"/ the `::new(angle)` method instead is more common.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725661,"byte_end":725714,"line_start":94,"line_end":94,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725719,"byte_end":725728,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7239},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726014,"byte_end":726026,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"from_complex","qualname":"<UnitComplex<N>>::from_complex","value":"pub fn from_complex(Complex<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725867,"byte_end":725927,"line_start":100,"line_end":100,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725932,"byte_end":725935,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725940,"byte_end":725988,"line_start":102,"line_end":102,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":725993,"byte_end":726002,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7240},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726298,"byte_end":726318,"line_start":112,"line_end":112,"column_start":12,"column_end":32},"name":"from_complex_and_get","qualname":"<UnitComplex<N>>::from_complex_and_get","value":"pub fn from_complex_and_get(Complex<N>) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Creates a new unit complex number from a complex number.","sig":null,"attributes":[{"value":"/ Creates a new unit complex number from a complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726103,"byte_end":726163,"line_start":108,"line_end":108,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726168,"byte_end":726171,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ The input complex number will be normalized. Returns the norm of the complex number as well.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726176,"byte_end":726272,"line_start":110,"line_end":110,"column_start":5,"column_end":101}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726277,"byte_end":726286,"line_start":111,"line_end":111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7241},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726868,"byte_end":726888,"line_start":128,"line_end":128,"column_start":12,"column_end":32},"name":"from_rotation_matrix","qualname":"<UnitComplex<N>>::from_rotation_matrix","value":"pub fn from_rotation_matrix(&Rotation2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds the unit complex number from the corresponding 2D rotation matrix.","sig":null,"attributes":[{"value":"/ Builds the unit complex number from the corresponding 2D rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726461,"byte_end":726538,"line_start":117,"line_end":117,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726543,"byte_end":726546,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726551,"byte_end":726564,"line_start":119,"line_end":119,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726569,"byte_end":726576,"line_start":120,"line_end":120,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Rotation2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726581,"byte_end":726626,"line_start":121,"line_end":121,"column_start":5,"column_end":50}},{"value":"/ let rot = Rotation2::new(1.7);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726631,"byte_end":726665,"line_start":122,"line_end":122,"column_start":5,"column_end":39}},{"value":"/ let complex = UnitComplex::from_rotation_matrix(&rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726670,"byte_end":726728,"line_start":123,"line_end":123,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(complex, UnitComplex::new(1.7));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726733,"byte_end":726780,"line_start":124,"line_end":124,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726785,"byte_end":726792,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":726847,"byte_end":726856,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7242},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727356,"byte_end":727367,"line_start":137,"line_end":137,"column_start":12,"column_end":23},"name":"from_matrix","qualname":"<UnitComplex<N>>::from_matrix","value":"pub fn from_matrix(&Matrix2<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727007,"byte_end":727098,"line_start":132,"line_end":132,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727103,"byte_end":727106,"line_start":133,"line_end":133,"column_start":5,"column_end":8}},{"value":"/ This is an iterative method. See `.from_matrix_eps` to provide mover","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727111,"byte_end":727183,"line_start":134,"line_end":134,"column_start":5,"column_end":77}},{"value":"/ convergence parameters and starting solution.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727188,"byte_end":727237,"line_start":135,"line_end":135,"column_start":5,"column_end":54}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727242,"byte_end":727344,"line_start":136,"line_end":136,"column_start":5,"column_end":106}}]},{"kind":"Method","id":{"krate":0,"index":7243},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728249,"byte_end":728264,"line_start":153,"line_end":153,"column_start":12,"column_end":27},"name":"from_matrix_eps","qualname":"<UnitComplex<N>>::from_matrix_eps","value":"pub fn from_matrix_eps(&Matrix2<N>, N, usize, Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Builds an unit complex by extracting the rotation part of the given transformation `m`.","sig":null,"attributes":[{"value":"/ Builds an unit complex by extracting the rotation part of the given transformation `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727446,"byte_end":727537,"line_start":141,"line_end":141,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727542,"byte_end":727545,"line_start":142,"line_end":142,"column_start":5,"column_end":8}},{"value":"/ This implements \"A Robust Method to Extract the Rotational Part of Deformations\" by Müller et al.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727550,"byte_end":727652,"line_start":143,"line_end":143,"column_start":5,"column_end":106}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727657,"byte_end":727660,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ # Parameters","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727665,"byte_end":727681,"line_start":145,"line_end":145,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727686,"byte_end":727689,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ * `m`: the matrix from which the rotational part is to be extracted.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727694,"byte_end":727766,"line_start":147,"line_end":147,"column_start":5,"column_end":77}},{"value":"/ * `eps`: the angular errors tolerated between the current rotation and the optimal one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727771,"byte_end":727862,"line_start":148,"line_end":148,"column_start":5,"column_end":96}},{"value":"/ * `max_iter`: the maximum number of iterations. Loops indefinitely until convergence if set to `0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727867,"byte_end":727970,"line_start":149,"line_end":149,"column_start":5,"column_end":108}},{"value":"/ * `guess`: an estimate of the solution. Convergence will be significantly faster if an initial solution close","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":727975,"byte_end":728088,"line_start":150,"line_end":150,"column_start":5,"column_end":118}},{"value":"/           to the actual solution is provided. Can be set to `UnitQuaternion::identity()` if no other","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728093,"byte_end":728197,"line_start":151,"line_end":151,"column_start":5,"column_end":109}},{"value":"/           guesses come to mind.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728202,"byte_end":728237,"line_start":152,"line_end":152,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":7244},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728953,"byte_end":728969,"line_start":172,"line_end":172,"column_start":12,"column_end":28},"name":"rotation_between","qualname":"<UnitComplex<N>>::rotation_between","value":"pub fn rotation_between<SB, SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>)\n-> Self where SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728451,"byte_end":728537,"line_start":158,"line_end":158,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728542,"byte_end":728556,"line_start":159,"line_end":159,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728561,"byte_end":728564,"line_start":160,"line_end":160,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728569,"byte_end":728582,"line_start":161,"line_end":161,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728587,"byte_end":728594,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728599,"byte_end":728638,"line_start":163,"line_end":163,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728643,"byte_end":728686,"line_start":164,"line_end":164,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728691,"byte_end":728726,"line_start":165,"line_end":165,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728731,"byte_end":728766,"line_start":166,"line_end":166,"column_start":5,"column_end":40}},{"value":"/ let rot = UnitComplex::rotation_between(&a, &b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728771,"byte_end":728823,"line_start":167,"line_end":167,"column_start":5,"column_end":57}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728828,"byte_end":728864,"line_start":168,"line_end":168,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728869,"byte_end":728915,"line_start":169,"line_end":169,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728920,"byte_end":728927,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":728932,"byte_end":728941,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7247},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729844,"byte_end":729867,"line_start":195,"line_end":195,"column_start":12,"column_end":35},"name":"scaled_rotation_between","qualname":"<UnitComplex<N>>::scaled_rotation_between","value":"pub fn scaled_rotation_between<SB,\n                               SC>(&Vector<N, U2, SB>, &Vector<N, U2, SC>, N)\n-> Self where SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729169,"byte_end":729257,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729262,"byte_end":729301,"line_start":181,"line_end":181,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729306,"byte_end":729309,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729314,"byte_end":729327,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729332,"byte_end":729339,"line_start":184,"line_end":184,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729344,"byte_end":729383,"line_start":185,"line_end":185,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Vector2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729388,"byte_end":729431,"line_start":186,"line_end":186,"column_start":5,"column_end":48}},{"value":"/ let a = Vector2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729436,"byte_end":729471,"line_start":187,"line_end":187,"column_start":5,"column_end":40}},{"value":"/ let b = Vector2::new(2.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729476,"byte_end":729511,"line_start":188,"line_end":188,"column_start":5,"column_end":40}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between(&a, &b, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729516,"byte_end":729581,"line_start":189,"line_end":189,"column_start":5,"column_end":70}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between(&a, &b, 0.5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729586,"byte_end":729651,"line_start":190,"line_end":190,"column_start":5,"column_end":70}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729656,"byte_end":729739,"line_start":191,"line_end":191,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729744,"byte_end":729806,"line_start":192,"line_end":192,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729811,"byte_end":729818,"line_start":193,"line_end":193,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":729823,"byte_end":729832,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7250},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730933,"byte_end":730954,"line_start":229,"line_end":229,"column_start":12,"column_end":33},"name":"rotation_between_axis","qualname":"<UnitComplex<N>>::rotation_between_axis","value":"pub fn rotation_between_axis<SB,\n                             SC>(&Unit<Vector<N, U2, SB>>,\n                                 &Unit<Vector<N, U2, SC>>) -> Self where\nSB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The unit complex needed to make `a` and `b` be collinear and point toward the same\n direction.","sig":null,"attributes":[{"value":"/ The unit complex needed to make `a` and `b` be collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730378,"byte_end":730464,"line_start":215,"line_end":215,"column_start":5,"column_end":91}},{"value":"/ direction.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730469,"byte_end":730483,"line_start":216,"line_end":216,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730488,"byte_end":730491,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730496,"byte_end":730509,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730514,"byte_end":730521,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730526,"byte_end":730565,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730570,"byte_end":730619,"line_start":221,"line_end":221,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730624,"byte_end":730680,"line_start":222,"line_end":222,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730685,"byte_end":730741,"line_start":223,"line_end":223,"column_start":5,"column_end":61}},{"value":"/ let rot = UnitComplex::rotation_between_axis(&a, &b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730746,"byte_end":730803,"line_start":224,"line_end":224,"column_start":5,"column_end":62}},{"value":"/ assert_relative_eq!(rot * a, b);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730808,"byte_end":730844,"line_start":225,"line_end":225,"column_start":5,"column_end":41}},{"value":"/ assert_relative_eq!(rot.inverse() * b, a);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730849,"byte_end":730895,"line_start":226,"line_end":226,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730900,"byte_end":730907,"line_start":227,"line_end":227,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":730912,"byte_end":730921,"line_start":228,"line_end":228,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7253},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731927,"byte_end":731955,"line_start":255,"line_end":255,"column_start":12,"column_end":40},"name":"scaled_rotation_between_axis","qualname":"<UnitComplex<N>>::scaled_rotation_between_axis","value":"pub fn scaled_rotation_between_axis<SB,\n                                    SC>(&Unit<Vector<N, U2, SB>>,\n                                        &Unit<Vector<N, U2, SC>>, N) -> Self\nwhere SB: Storage<N, U2>, SC: Storage<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" The smallest rotation needed to make `a` and `b` collinear and point toward the same\n direction, raised to the power `s`.","sig":null,"attributes":[{"value":"/ The smallest rotation needed to make `a` and `b` collinear and point toward the same","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731194,"byte_end":731282,"line_start":240,"line_end":240,"column_start":5,"column_end":93}},{"value":"/ direction, raised to the power `s`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731287,"byte_end":731326,"line_start":241,"line_end":241,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731331,"byte_end":731334,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731339,"byte_end":731352,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731357,"byte_end":731364,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731369,"byte_end":731408,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Unit, Vector2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731413,"byte_end":731462,"line_start":246,"line_end":246,"column_start":5,"column_end":54}},{"value":"/ let a = Unit::new_normalize(Vector2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731467,"byte_end":731523,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ let b = Unit::new_normalize(Vector2::new(2.0, 1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731528,"byte_end":731584,"line_start":248,"line_end":248,"column_start":5,"column_end":61}},{"value":"/ let rot2 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731589,"byte_end":731659,"line_start":249,"line_end":249,"column_start":5,"column_end":75}},{"value":"/ let rot5 = UnitComplex::scaled_rotation_between_axis(&a, &b, 0.5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731664,"byte_end":731734,"line_start":250,"line_end":250,"column_start":5,"column_end":75}},{"value":"/ assert_relative_eq!(rot2 * rot2 * rot2 * rot2 * rot2 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731739,"byte_end":731822,"line_start":251,"line_end":251,"column_start":5,"column_end":88}},{"value":"/ assert_relative_eq!(rot5 * rot5 * a, b, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731827,"byte_end":731889,"line_start":252,"line_end":252,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731894,"byte_end":731901,"line_start":253,"line_end":253,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":731906,"byte_end":731915,"line_start":254,"line_end":254,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22464},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750506,"byte_end":750517,"line_start":26,"line_end":26,"column_start":12,"column_end":23},"name":"Translation","qualname":"::geometry::translation::Translation","value":"Translation { vector }","parent":null,"children":[{"krate":0,"index":22467}],"decl_id":null,"docs":" A translation.\n","sig":null,"attributes":[{"value":"/ A translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750448,"byte_end":750466,"line_start":23,"line_end":23,"column_start":1,"column_end":19}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750467,"byte_end":750477,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":22467},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750708,"byte_end":750714,"line_start":31,"line_end":31,"column_start":9,"column_end":15},"name":"vector","qualname":"::geometry::translation::Translation::vector","value":"base::matrix::Matrix<N, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D>>::Buffer>","parent":{"krate":0,"index":22464},"children":[],"decl_id":null,"docs":" The translation coordinates, i.e., how much is added to a point's coordinates when it is\n translated.\n","sig":null,"attributes":[{"value":"/ The translation coordinates, i.e., how much is added to a point's coordinates when it is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750587,"byte_end":750679,"line_start":29,"line_end":29,"column_start":5,"column_end":97}},{"value":"/ translated.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750684,"byte_end":750699,"line_start":30,"line_end":30,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":7606},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752800,"byte_end":752811,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"from_vector","qualname":"<Translation<N, D>>::from_vector","value":"pub fn from_vector(VectorN<N, D>) -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new translation from the given vector.\n","sig":null,"attributes":[{"value":"/ Creates a new translation from the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752672,"byte_end":752724,"line_start":111,"line_end":111,"column_start":5,"column_end":57}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752729,"byte_end":752738,"line_start":112,"line_end":112,"column_start":5,"column_end":14}},{"value":"deprecated(note = \"Use `::from` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752743,"byte_end":752788,"line_start":113,"line_end":113,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":7607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753447,"byte_end":753454,"line_start":133,"line_end":133,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation<N, D>>::inverse","value":"pub fn inverse(&Self) -> Translation<N, D> where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752908,"byte_end":752927,"line_start":118,"line_end":118,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752932,"byte_end":752935,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752940,"byte_end":752953,"line_start":120,"line_end":120,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752958,"byte_end":752965,"line_start":121,"line_end":121,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752970,"byte_end":753019,"line_start":122,"line_end":122,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753024,"byte_end":753069,"line_start":123,"line_end":123,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(t * t.inverse(), Translation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753074,"byte_end":753132,"line_start":124,"line_end":124,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753137,"byte_end":753195,"line_start":125,"line_end":125,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753200,"byte_end":753203,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753208,"byte_end":753238,"line_start":127,"line_end":127,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753243,"byte_end":753283,"line_start":128,"line_end":128,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(t * t.inverse(), Translation2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753288,"byte_end":753346,"line_start":129,"line_end":129,"column_start":5,"column_end":63}},{"value":"/ assert_eq!(t.inverse() * t, Translation2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753351,"byte_end":753409,"line_start":130,"line_end":130,"column_start":5,"column_end":63}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753414,"byte_end":753421,"line_start":131,"line_end":131,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753426,"byte_end":753435,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7608},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754384,"byte_end":754398,"line_start":157,"line_end":157,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Translation<N, D>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where N: Zero +\nOne, D: DimNameAdd<U1>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this translation into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this translation into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753560,"byte_end":753644,"line_start":138,"line_end":138,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753649,"byte_end":753652,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753657,"byte_end":753670,"line_start":140,"line_end":140,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753675,"byte_end":753682,"line_start":141,"line_end":141,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3, Matrix3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753687,"byte_end":753754,"line_start":142,"line_end":142,"column_start":5,"column_end":72}},{"value":"/ let t = Translation3::new(10.0, 20.0, 30.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753759,"byte_end":753807,"line_start":143,"line_end":143,"column_start":5,"column_end":53}},{"value":"/ let expected = Matrix4::new(1.0, 0.0, 0.0, 10.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753812,"byte_end":753864,"line_start":144,"line_end":144,"column_start":5,"column_end":57}},{"value":"/                             0.0, 1.0, 0.0, 20.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753869,"byte_end":753921,"line_start":145,"line_end":145,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 1.0, 30.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753926,"byte_end":753978,"line_start":146,"line_end":146,"column_start":5,"column_end":57}},{"value":"/                             0.0, 0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":753983,"byte_end":754035,"line_start":147,"line_end":147,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754040,"byte_end":754085,"line_start":148,"line_end":148,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754090,"byte_end":754093,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ let t = Translation2::new(10.0, 20.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754098,"byte_end":754140,"line_start":150,"line_end":150,"column_start":5,"column_end":47}},{"value":"/ let expected = Matrix3::new(1.0, 0.0, 10.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754145,"byte_end":754192,"line_start":151,"line_end":151,"column_start":5,"column_end":52}},{"value":"/                             0.0, 1.0, 20.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754197,"byte_end":754244,"line_start":152,"line_end":152,"column_start":5,"column_end":52}},{"value":"/                             0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754249,"byte_end":754296,"line_start":153,"line_end":153,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(t.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754301,"byte_end":754346,"line_start":154,"line_end":154,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754351,"byte_end":754358,"line_start":155,"line_end":155,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754363,"byte_end":754372,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7609},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755455,"byte_end":755466,"line_start":189,"line_end":189,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Translation<N, D>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where N: ClosedNeg","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754762,"byte_end":754790,"line_start":170,"line_end":170,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754795,"byte_end":754798,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754803,"byte_end":754816,"line_start":172,"line_end":172,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754821,"byte_end":754828,"line_start":173,"line_end":173,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation2, Translation3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754833,"byte_end":754882,"line_start":174,"line_end":174,"column_start":5,"column_end":54}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754887,"byte_end":754932,"line_start":175,"line_end":175,"column_start":5,"column_end":50}},{"value":"/ let mut inv_t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754937,"byte_end":754990,"line_start":176,"line_end":176,"column_start":5,"column_end":58}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":754995,"byte_end":755019,"line_start":177,"line_end":177,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755024,"byte_end":755076,"line_start":178,"line_end":178,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation3::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755081,"byte_end":755133,"line_start":179,"line_end":179,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755138,"byte_end":755141,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ // Work in all dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755146,"byte_end":755176,"line_start":181,"line_end":181,"column_start":5,"column_end":35}},{"value":"/ let t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755181,"byte_end":755221,"line_start":182,"line_end":182,"column_start":5,"column_end":45}},{"value":"/ let mut inv_t = Translation2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755226,"byte_end":755274,"line_start":183,"line_end":183,"column_start":5,"column_end":53}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755279,"byte_end":755303,"line_start":184,"line_end":184,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(t * inv_t, Translation2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755308,"byte_end":755360,"line_start":185,"line_end":185,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(inv_t * t, Translation2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755365,"byte_end":755417,"line_start":186,"line_end":186,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755422,"byte_end":755429,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755434,"byte_end":755443,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7613},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756053,"byte_end":756068,"line_start":209,"line_end":209,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation<N, D>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point.","sig":null,"attributes":[{"value":"/ Translate the given point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755646,"byte_end":755676,"line_start":198,"line_end":198,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755681,"byte_end":755684,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755689,"byte_end":755744,"line_start":200,"line_end":200,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755749,"byte_end":755752,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755757,"byte_end":755770,"line_start":202,"line_end":202,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755775,"byte_end":755782,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755787,"byte_end":755830,"line_start":204,"line_end":204,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755835,"byte_end":755880,"line_start":205,"line_end":205,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755885,"byte_end":755960,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(transformed_point, Point3::new(5.0, 7.0, 9.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755965,"byte_end":756027,"line_start":207,"line_end":207,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756032,"byte_end":756041,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":7617},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756632,"byte_end":756655,"line_start":226,"line_end":226,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Translation<N, D>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given point by the inverse of this translation.","sig":null,"attributes":[{"value":"/ Translate the given point by the inverse of this translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756250,"byte_end":756315,"line_start":217,"line_end":217,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756320,"byte_end":756323,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756328,"byte_end":756341,"line_start":219,"line_end":219,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756346,"byte_end":756353,"line_start":220,"line_end":220,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Translation3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756358,"byte_end":756401,"line_start":221,"line_end":221,"column_start":5,"column_end":48}},{"value":"/ let t = Translation3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756406,"byte_end":756451,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ let transformed_point = t.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756456,"byte_end":756539,"line_start":223,"line_end":223,"column_start":5,"column_end":88}},{"value":"/ assert_eq!(transformed_point, Point3::new(3.0, 3.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756544,"byte_end":756606,"line_start":224,"line_end":224,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756611,"byte_end":756620,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":7797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763660,"byte_end":763672,"line_start":6,"line_end":6,"column_start":10,"column_end":22},"name":"Translation1","qualname":"::geometry::translation_alias::Translation1","value":"Translation<N, U1>","parent":null,"children":[],"decl_id":null,"docs":" A 1-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 1-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763618,"byte_end":763650,"line_start":5,"line_end":5,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":7799},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763741,"byte_end":763753,"line_start":9,"line_end":9,"column_start":10,"column_end":22},"name":"Translation2","qualname":"::geometry::translation_alias::Translation2","value":"Translation<N, U2>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763699,"byte_end":763731,"line_start":8,"line_end":8,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":7801},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763822,"byte_end":763834,"line_start":12,"line_end":12,"column_start":10,"column_end":22},"name":"Translation3","qualname":"::geometry::translation_alias::Translation3","value":"Translation<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763780,"byte_end":763812,"line_start":11,"line_end":11,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":7803},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763903,"byte_end":763915,"line_start":15,"line_end":15,"column_start":10,"column_end":22},"name":"Translation4","qualname":"::geometry::translation_alias::Translation4","value":"Translation<N, U4>","parent":null,"children":[],"decl_id":null,"docs":" A 4-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 4-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763861,"byte_end":763893,"line_start":14,"line_end":14,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":7805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763984,"byte_end":763996,"line_start":18,"line_end":18,"column_start":10,"column_end":22},"name":"Translation5","qualname":"::geometry::translation_alias::Translation5","value":"Translation<N, U5>","parent":null,"children":[],"decl_id":null,"docs":" A 5-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 5-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":763942,"byte_end":763974,"line_start":17,"line_end":17,"column_start":1,"column_end":33}}]},{"kind":"Type","id":{"krate":0,"index":7807},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":764065,"byte_end":764077,"line_start":21,"line_end":21,"column_start":10,"column_end":22},"name":"Translation6","qualname":"::geometry::translation_alias::Translation6","value":"Translation<N, U6>","parent":null,"children":[],"decl_id":null,"docs":" A 6-dimensional translation.\n","sig":null,"attributes":[{"value":"/ A 6-dimensional translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alias.rs","byte_start":764023,"byte_end":764055,"line_start":20,"line_end":20,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":7871},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765099,"byte_end":765107,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation<N, D>>::identity","value":"pub fn identity() -> Translation<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity translation.","sig":null,"attributes":[{"value":"/ Creates a new identity translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764643,"byte_end":764682,"line_start":21,"line_end":21,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764687,"byte_end":764690,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764695,"byte_end":764708,"line_start":23,"line_end":23,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764713,"byte_end":764720,"line_start":24,"line_end":24,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Point2, Point3, Translation2, Translation3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764725,"byte_end":764790,"line_start":25,"line_end":25,"column_start":5,"column_end":70}},{"value":"/ let t = Translation2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764795,"byte_end":764832,"line_start":26,"line_end":26,"column_start":5,"column_end":42}},{"value":"/ let p = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764837,"byte_end":764871,"line_start":27,"line_end":27,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764876,"byte_end":764901,"line_start":28,"line_end":28,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764906,"byte_end":764909,"line_start":29,"line_end":29,"column_start":5,"column_end":8}},{"value":"/ // Works in all dimensions.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764914,"byte_end":764945,"line_start":30,"line_end":30,"column_start":5,"column_end":36}},{"value":"/ let t = Translation3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764950,"byte_end":764987,"line_start":31,"line_end":31,"column_start":5,"column_end":42}},{"value":"/ let p = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764992,"byte_end":765031,"line_start":32,"line_end":32,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(t * p, p);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765036,"byte_end":765061,"line_start":33,"line_end":33,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765066,"byte_end":765073,"line_start":34,"line_end":34,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765078,"byte_end":765087,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":22643},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":781946,"byte_end":781954,"line_start":39,"line_end":39,"column_start":12,"column_end":20},"name":"Isometry","qualname":"::geometry::isometry::Isometry","value":"Isometry { rotation, translation }","parent":null,"children":[{"krate":0,"index":22647},{"krate":0,"index":22648},{"krate":0,"index":22649}],"decl_id":null,"docs":" A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.\n","sig":null,"attributes":[{"value":"/ A direct isometry, i.e., a rotation followed by a translation, aka. a rigid-body motion, aka. an element of a Special Euclidean (SE) group.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":781282,"byte_end":781425,"line_start":23,"line_end":23,"column_start":1,"column_end":144}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":781426,"byte_end":781436,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":22647},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":782085,"byte_end":782093,"line_start":43,"line_end":43,"column_start":9,"column_end":17},"name":"rotation","qualname":"::geometry::isometry::Isometry::rotation","value":"R","parent":{"krate":0,"index":22643},"children":[],"decl_id":null,"docs":" The pure rotational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure rotational part of this isometry.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":782030,"byte_end":782076,"line_start":42,"line_end":42,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":22648},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":782160,"byte_end":782171,"line_start":45,"line_end":45,"column_start":9,"column_end":20},"name":"translation","qualname":"::geometry::isometry::Isometry::translation","value":"geometry::translation::Translation<N, D>","parent":{"krate":0,"index":22643},"children":[],"decl_id":null,"docs":" The pure translational part of this isometry.\n","sig":null,"attributes":[{"value":"/ The pure translational part of this isometry.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":782102,"byte_end":782151,"line_start":44,"line_end":44,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":8209},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784587,"byte_end":784597,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Isometry<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from its rotational and translational parts.","sig":null,"attributes":[{"value":"/ Creates a new isometry from its rotational and translational parts.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783975,"byte_end":784046,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784051,"byte_end":784054,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784059,"byte_end":784072,"line_start":112,"line_end":112,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784077,"byte_end":784080,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784085,"byte_end":784092,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784097,"byte_end":784136,"line_start":115,"line_end":115,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784141,"byte_end":784160,"line_start":116,"line_end":116,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784165,"byte_end":784244,"line_start":117,"line_end":117,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784249,"byte_end":784296,"line_start":118,"line_end":118,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::PI);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784301,"byte_end":784380,"line_start":119,"line_end":119,"column_start":5,"column_end":84}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784385,"byte_end":784431,"line_start":120,"line_end":120,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784436,"byte_end":784439,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * Point3::new(1.0, 2.0, 3.0), Point3::new(-1.0, 2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784444,"byte_end":784549,"line_start":122,"line_end":122,"column_start":5,"column_end":110}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784554,"byte_end":784561,"line_start":123,"line_end":123,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784566,"byte_end":784575,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8210},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785184,"byte_end":785191,"line_start":147,"line_end":147,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Isometry<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784798,"byte_end":784817,"line_start":133,"line_end":133,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784822,"byte_end":784825,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784830,"byte_end":784843,"line_start":135,"line_end":135,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784848,"byte_end":784851,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784856,"byte_end":784863,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784868,"byte_end":784887,"line_start":138,"line_end":138,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784892,"byte_end":784941,"line_start":139,"line_end":139,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":784946,"byte_end":785023,"line_start":140,"line_end":140,"column_start":5,"column_end":82}},{"value":"/ let inv = iso.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785028,"byte_end":785056,"line_start":141,"line_end":141,"column_start":5,"column_end":33}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785061,"byte_end":785096,"line_start":142,"line_end":142,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785101,"byte_end":785104,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(inv * (iso * pt), pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785109,"byte_end":785146,"line_start":144,"line_end":144,"column_start":5,"column_end":42}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785151,"byte_end":785158,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785163,"byte_end":785172,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8211},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785731,"byte_end":785742,"line_start":168,"line_end":168,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Isometry<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785295,"byte_end":785323,"line_start":153,"line_end":153,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785328,"byte_end":785331,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785336,"byte_end":785349,"line_start":155,"line_end":155,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785354,"byte_end":785357,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785362,"byte_end":785369,"line_start":157,"line_end":157,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785374,"byte_end":785393,"line_start":158,"line_end":158,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785398,"byte_end":785447,"line_start":159,"line_end":159,"column_start":5,"column_end":54}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785452,"byte_end":785533,"line_start":160,"line_end":160,"column_start":5,"column_end":86}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785538,"byte_end":785573,"line_start":161,"line_end":161,"column_start":5,"column_end":40}},{"value":"/ let transformed_pt = iso * pt;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785578,"byte_end":785612,"line_start":162,"line_end":162,"column_start":5,"column_end":39}},{"value":"/ iso.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785617,"byte_end":785639,"line_start":163,"line_end":163,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785644,"byte_end":785647,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * transformed_pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785652,"byte_end":785693,"line_start":165,"line_end":165,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785698,"byte_end":785705,"line_start":166,"line_end":166,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785710,"byte_end":785719,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8212},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786454,"byte_end":786476,"line_start":189,"line_end":189,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Isometry<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":785946,"byte_end":785999,"line_start":174,"line_end":174,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786004,"byte_end":786007,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786012,"byte_end":786025,"line_start":176,"line_end":176,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786030,"byte_end":786033,"line_start":177,"line_end":177,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786038,"byte_end":786045,"line_start":178,"line_end":178,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786050,"byte_end":786069,"line_start":179,"line_end":179,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786074,"byte_end":786129,"line_start":180,"line_end":180,"column_start":5,"column_end":60}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786134,"byte_end":786215,"line_start":181,"line_end":181,"column_start":5,"column_end":86}},{"value":"/ let tra = Translation2::new(3.0, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786220,"byte_end":786262,"line_start":182,"line_end":182,"column_start":5,"column_end":47}},{"value":"/ // Same as `iso = tra * iso`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786267,"byte_end":786300,"line_start":183,"line_end":183,"column_start":5,"column_end":38}},{"value":"/ iso.append_translation_mut(&tra);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786305,"byte_end":786342,"line_start":184,"line_end":184,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786347,"byte_end":786350,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso.translation, Translation2::new(4.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786355,"byte_end":786416,"line_start":186,"line_end":186,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786421,"byte_end":786428,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786433,"byte_end":786442,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8213},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787195,"byte_end":787214,"line_start":209,"line_end":209,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Isometry<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786569,"byte_end":786619,"line_start":193,"line_end":193,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786624,"byte_end":786627,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786632,"byte_end":786645,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786650,"byte_end":786653,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786658,"byte_end":786665,"line_start":197,"line_end":197,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786670,"byte_end":786709,"line_start":198,"line_end":198,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786714,"byte_end":786733,"line_start":199,"line_end":199,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786738,"byte_end":786806,"line_start":200,"line_end":200,"column_start":5,"column_end":73}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::PI / 6.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786811,"byte_end":786891,"line_start":201,"line_end":201,"column_start":5,"column_end":85}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI / 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786896,"byte_end":786950,"line_start":202,"line_end":202,"column_start":5,"column_end":59}},{"value":"/ // Same as `iso = rot * iso`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786955,"byte_end":786988,"line_start":203,"line_end":203,"column_start":5,"column_end":38}},{"value":"/ iso.append_rotation_mut(&rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":786993,"byte_end":787027,"line_start":204,"line_end":204,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787032,"byte_end":787035,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso, Isometry2::new(Vector2::new(-2.0, 1.0), f32::consts::PI * 2.0 / 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787040,"byte_end":787157,"line_start":206,"line_end":206,"column_start":5,"column_end":122}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787162,"byte_end":787169,"line_start":207,"line_end":207,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787174,"byte_end":787183,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8214},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788067,"byte_end":788096,"line_start":231,"line_end":231,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787385,"byte_end":787477,"line_start":214,"line_end":214,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787482,"byte_end":787505,"line_start":215,"line_end":215,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787510,"byte_end":787513,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787518,"byte_end":787531,"line_start":217,"line_end":217,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787536,"byte_end":787539,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787544,"byte_end":787551,"line_start":219,"line_end":219,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787556,"byte_end":787595,"line_start":220,"line_end":220,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787600,"byte_end":787619,"line_start":221,"line_end":221,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787624,"byte_end":787700,"line_start":222,"line_end":222,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787705,"byte_end":787786,"line_start":223,"line_end":223,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787791,"byte_end":787846,"line_start":224,"line_end":224,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787851,"byte_end":787886,"line_start":225,"line_end":225,"column_start":5,"column_end":40}},{"value":"/ iso.append_rotation_wrt_point_mut(&rot, &pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787891,"byte_end":787940,"line_start":226,"line_end":226,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787945,"byte_end":787948,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso * pt, Point2::new(-2.0, 0.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":787953,"byte_end":788029,"line_start":228,"line_end":228,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788034,"byte_end":788041,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788046,"byte_end":788055,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8215},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788969,"byte_end":788999,"line_start":254,"line_end":254,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Isometry<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788274,"byte_end":788354,"line_start":237,"line_end":237,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788359,"byte_end":788382,"line_start":238,"line_end":238,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788387,"byte_end":788390,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788395,"byte_end":788408,"line_start":240,"line_end":240,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788413,"byte_end":788416,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788421,"byte_end":788428,"line_start":242,"line_end":242,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788433,"byte_end":788452,"line_start":243,"line_end":243,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Translation2, UnitComplex, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788457,"byte_end":788533,"line_start":244,"line_end":244,"column_start":5,"column_end":81}},{"value":"/ let mut iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788538,"byte_end":788619,"line_start":245,"line_end":245,"column_start":5,"column_end":86}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788624,"byte_end":788679,"line_start":246,"line_end":246,"column_start":5,"column_end":60}},{"value":"/ iso.append_rotation_wrt_center_mut(&rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788684,"byte_end":788729,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788734,"byte_end":788737,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ // The translation part should not have changed.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788742,"byte_end":788794,"line_start":249,"line_end":249,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(iso.translation.vector, Vector2::new(1.0, 2.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788799,"byte_end":788862,"line_start":250,"line_end":250,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(iso.rotation, UnitComplex::new(f32::consts::PI));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788867,"byte_end":788931,"line_start":251,"line_end":251,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788936,"byte_end":788943,"line_start":252,"line_end":252,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":788948,"byte_end":788957,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8216},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789818,"byte_end":789833,"line_start":276,"line_end":276,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Isometry<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this isometry.","sig":null,"attributes":[{"value":"/ Transform the given point by this isometry.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789089,"byte_end":789136,"line_start":258,"line_end":258,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789141,"byte_end":789144,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789149,"byte_end":789204,"line_start":260,"line_end":260,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789209,"byte_end":789212,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789217,"byte_end":789230,"line_start":262,"line_end":262,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789235,"byte_end":789238,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789243,"byte_end":789250,"line_start":264,"line_end":264,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789255,"byte_end":789294,"line_start":265,"line_end":265,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789299,"byte_end":789318,"line_start":266,"line_end":266,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789323,"byte_end":789402,"line_start":267,"line_end":267,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789407,"byte_end":789454,"line_start":268,"line_end":268,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789459,"byte_end":789545,"line_start":269,"line_end":269,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789550,"byte_end":789596,"line_start":270,"line_end":270,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789601,"byte_end":789604,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789609,"byte_end":789686,"line_start":272,"line_end":272,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(3.0, 2.0, 2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789691,"byte_end":789780,"line_start":273,"line_end":273,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789785,"byte_end":789792,"line_start":274,"line_end":274,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789797,"byte_end":789806,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8217},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790690,"byte_end":790706,"line_start":299,"line_end":299,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Isometry<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this isometry, ignoring the translation\n component of the isometry.","sig":null,"attributes":[{"value":"/ Transform the given vector by this isometry, ignoring the translation","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789905,"byte_end":789978,"line_start":280,"line_end":280,"column_start":5,"column_end":78}},{"value":"/ component of the isometry.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":789983,"byte_end":790013,"line_start":281,"line_end":281,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790018,"byte_end":790021,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790026,"byte_end":790080,"line_start":283,"line_end":283,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790085,"byte_end":790088,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790093,"byte_end":790106,"line_start":285,"line_end":285,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790111,"byte_end":790114,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790119,"byte_end":790126,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790131,"byte_end":790170,"line_start":288,"line_end":288,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790175,"byte_end":790194,"line_start":289,"line_end":289,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790199,"byte_end":790270,"line_start":290,"line_end":290,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790275,"byte_end":790322,"line_start":291,"line_end":291,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790327,"byte_end":790413,"line_start":292,"line_end":292,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790418,"byte_end":790464,"line_start":293,"line_end":293,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790469,"byte_end":790472,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790477,"byte_end":790556,"line_start":295,"line_end":295,"column_start":5,"column_end":84}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(3.0, 2.0, -1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790561,"byte_end":790652,"line_start":296,"line_end":296,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790657,"byte_end":790664,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790669,"byte_end":790678,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8218},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791583,"byte_end":791606,"line_start":321,"line_end":321,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Isometry<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this isometry. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790780,"byte_end":790854,"line_start":303,"line_end":303,"column_start":5,"column_end":79}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790859,"byte_end":790929,"line_start":304,"line_end":304,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790934,"byte_end":790961,"line_start":305,"line_end":305,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790966,"byte_end":790969,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790974,"byte_end":790987,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":790992,"byte_end":790995,"line_start":308,"line_end":308,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791000,"byte_end":791007,"line_start":309,"line_end":309,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791012,"byte_end":791051,"line_start":310,"line_end":310,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791056,"byte_end":791075,"line_start":311,"line_end":311,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791080,"byte_end":791159,"line_start":312,"line_end":312,"column_start":5,"column_end":84}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791164,"byte_end":791211,"line_start":313,"line_end":313,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791216,"byte_end":791302,"line_start":314,"line_end":314,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791307,"byte_end":791353,"line_start":315,"line_end":315,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791358,"byte_end":791361,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_point(&Point3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791366,"byte_end":791451,"line_start":317,"line_end":317,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(0.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791456,"byte_end":791545,"line_start":318,"line_end":318,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791550,"byte_end":791557,"line_start":319,"line_end":319,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791562,"byte_end":791571,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8219},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792613,"byte_end":792637,"line_start":345,"line_end":345,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Isometry<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this isometry, ignoring the\n translation component of the isometry. This may be\n less expensive than computing the entire isometry inverse and then\n transforming the point.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this isometry, ignoring the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791753,"byte_end":791829,"line_start":326,"line_end":326,"column_start":5,"column_end":81}},{"value":"/ translation component of the isometry. This may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791834,"byte_end":791888,"line_start":327,"line_end":327,"column_start":5,"column_end":59}},{"value":"/ less expensive than computing the entire isometry inverse and then","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791893,"byte_end":791963,"line_start":328,"line_end":328,"column_start":5,"column_end":75}},{"value":"/ transforming the point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":791968,"byte_end":791995,"line_start":329,"line_end":329,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792000,"byte_end":792003,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792008,"byte_end":792021,"line_start":331,"line_end":331,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792026,"byte_end":792029,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792034,"byte_end":792041,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792046,"byte_end":792085,"line_start":334,"line_end":334,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792090,"byte_end":792109,"line_start":335,"line_end":335,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry3, Translation3, UnitQuaternion, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792114,"byte_end":792185,"line_start":336,"line_end":336,"column_start":5,"column_end":76}},{"value":"/ let tra = Translation3::new(0.0, 0.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792190,"byte_end":792237,"line_start":337,"line_end":337,"column_start":5,"column_end":52}},{"value":"/ let rot = UnitQuaternion::from_scaled_axis(Vector3::y() * f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792242,"byte_end":792328,"line_start":338,"line_end":338,"column_start":5,"column_end":91}},{"value":"/ let iso = Isometry3::from_parts(tra, rot);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792333,"byte_end":792379,"line_start":339,"line_end":339,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792384,"byte_end":792387,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ let transformed_point = iso.inverse_transform_vector(&Vector3::new(1.0, 2.0, 3.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792392,"byte_end":792479,"line_start":341,"line_end":341,"column_start":5,"column_end":92}},{"value":"/ assert_relative_eq!(transformed_point, Vector3::new(-3.0, 2.0, 1.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792484,"byte_end":792575,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792580,"byte_end":792587,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":792592,"byte_end":792601,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8224},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793834,"byte_end":793848,"line_start":373,"line_end":373,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Isometry<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this isometry into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this isometry into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793183,"byte_end":793264,"line_start":357,"line_end":357,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793269,"byte_end":793272,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793277,"byte_end":793290,"line_start":359,"line_end":359,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793295,"byte_end":793298,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793303,"byte_end":793310,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793315,"byte_end":793354,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793359,"byte_end":793378,"line_start":363,"line_end":363,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Matrix3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793383,"byte_end":793433,"line_start":364,"line_end":364,"column_start":5,"column_end":55}},{"value":"/ let iso = Isometry2::new(Vector2::new(10.0, 20.0), f32::consts::FRAC_PI_6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793438,"byte_end":793517,"line_start":365,"line_end":365,"column_start":5,"column_end":84}},{"value":"/ let expected = Matrix3::new(0.8660254, -0.5,      10.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793522,"byte_end":793581,"line_start":366,"line_end":366,"column_start":5,"column_end":64}},{"value":"/                             0.5,       0.8660254, 20.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793586,"byte_end":793645,"line_start":367,"line_end":367,"column_start":5,"column_end":64}},{"value":"/                             0.0,       0.0,       1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793650,"byte_end":793709,"line_start":368,"line_end":368,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793714,"byte_end":793717,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(iso.to_homogeneous(), expected, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793722,"byte_end":793796,"line_start":370,"line_end":370,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793801,"byte_end":793808,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793813,"byte_end":793822,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":8415},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802281,"byte_end":802290,"line_start":6,"line_end":6,"column_start":10,"column_end":19},"name":"Isometry2","qualname":"::geometry::isometry_alias::Isometry2","value":"Isometry<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a unit complex number for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802121,"byte_end":802271,"line_start":5,"line_end":5,"column_start":1,"column_end":151}}]},{"kind":"Type","id":{"krate":0,"index":8417},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802486,"byte_end":802495,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"Isometry3","qualname":"::geometry::isometry_alias::Isometry3","value":"Isometry<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a unit quaternion for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802330,"byte_end":802476,"line_start":8,"line_end":8,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":8419},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802694,"byte_end":802709,"line_start":12,"line_end":12,"column_start":10,"column_end":25},"name":"IsometryMatrix2","qualname":"::geometry::isometry_alias::IsometryMatrix2","value":"Isometry<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).\n","sig":null,"attributes":[{"value":"/ A 2-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(2).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802538,"byte_end":802684,"line_start":11,"line_end":11,"column_start":1,"column_end":147}}]},{"kind":"Type","id":{"krate":0,"index":8421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802903,"byte_end":802918,"line_start":15,"line_end":15,"column_start":10,"column_end":25},"name":"IsometryMatrix3","qualname":"::geometry::isometry_alias::IsometryMatrix3","value":"Isometry<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).\n","sig":null,"attributes":[{"value":"/ A 3-dimensional direct isometry using a rotation matrix for its rotational part. Also known as a rigid-body motion, or as an element of SE(3).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alias.rs","byte_start":802747,"byte_end":802893,"line_start":14,"line_end":14,"column_start":1,"column_end":147}}]},{"kind":"Method","id":{"krate":0,"index":8504},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804103,"byte_end":804111,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"identity","qualname":"<Isometry<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity isometry.","sig":null,"attributes":[{"value":"/ Creates a new identity isometry.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803668,"byte_end":803704,"line_start":25,"line_end":25,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803709,"byte_end":803712,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803717,"byte_end":803730,"line_start":27,"line_end":27,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803735,"byte_end":803738,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803743,"byte_end":803750,"line_start":29,"line_end":29,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Isometry2, Point2, Isometry3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803755,"byte_end":803814,"line_start":30,"line_end":30,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803819,"byte_end":803822,"line_start":31,"line_end":31,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803827,"byte_end":803863,"line_start":32,"line_end":32,"column_start":5,"column_end":41}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803868,"byte_end":803903,"line_start":33,"line_end":33,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803908,"byte_end":803937,"line_start":34,"line_end":34,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803942,"byte_end":803945,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let iso = Isometry3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803950,"byte_end":803986,"line_start":36,"line_end":36,"column_start":5,"column_end":41}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803991,"byte_end":804031,"line_start":37,"line_end":37,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(iso * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804036,"byte_end":804065,"line_start":38,"line_end":38,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804070,"byte_end":804077,"line_start":39,"line_end":39,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804082,"byte_end":804091,"line_start":40,"line_end":40,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8505},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804879,"byte_end":804897,"line_start":62,"line_end":62,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Isometry<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The isometry that applies the rotation `r` with its axis passing through the point `p`.\n This effectively lets `p` invariant.","sig":null,"attributes":[{"value":"/ The isometry that applies the rotation `r` with its axis passing through the point `p`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804200,"byte_end":804291,"line_start":45,"line_end":45,"column_start":5,"column_end":96}},{"value":"/ This effectively lets `p` invariant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804296,"byte_end":804336,"line_start":46,"line_end":46,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804341,"byte_end":804344,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804349,"byte_end":804362,"line_start":48,"line_end":48,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804367,"byte_end":804370,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804375,"byte_end":804382,"line_start":50,"line_end":50,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804387,"byte_end":804426,"line_start":51,"line_end":51,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804431,"byte_end":804450,"line_start":52,"line_end":52,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Point2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804455,"byte_end":804508,"line_start":53,"line_end":53,"column_start":5,"column_end":58}},{"value":"/ let rot = UnitComplex::new(f32::consts::PI);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804513,"byte_end":804561,"line_start":54,"line_end":54,"column_start":5,"column_end":53}},{"value":"/ let pt = Point2::new(1.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804566,"byte_end":804601,"line_start":55,"line_end":55,"column_start":5,"column_end":40}},{"value":"/ let iso = Isometry2::rotation_wrt_point(rot, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804606,"byte_end":804659,"line_start":56,"line_end":56,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804664,"byte_end":804667,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * pt, pt); // The rotation center is not affected.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804672,"byte_end":804741,"line_start":58,"line_end":58,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(iso * Point2::new(1.0, 2.0), Point2::new(1.0, -2.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804746,"byte_end":804841,"line_start":59,"line_end":59,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804846,"byte_end":804853,"line_start":60,"line_end":60,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":804858,"byte_end":804867,"line_start":61,"line_end":61,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8520},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806661,"byte_end":806664,"line_start":126,"line_end":126,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, Rotation2<N>>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806189,"byte_end":806259,"line_start":112,"line_end":112,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806264,"byte_end":806267,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as a 2x2 rotation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806272,"byte_end":806336,"line_start":114,"line_end":114,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806341,"byte_end":806344,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806349,"byte_end":806362,"line_start":116,"line_end":116,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806367,"byte_end":806370,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806375,"byte_end":806382,"line_start":118,"line_end":118,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806387,"byte_end":806406,"line_start":119,"line_end":119,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Isometry2, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806411,"byte_end":806460,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"/ let iso = Isometry2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806465,"byte_end":806542,"line_start":121,"line_end":121,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806547,"byte_end":806550,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806555,"byte_end":806623,"line_start":123,"line_end":123,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806628,"byte_end":806635,"line_start":124,"line_end":124,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806640,"byte_end":806649,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8521},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806936,"byte_end":806947,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, Rotation2<N>>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806844,"byte_end":806910,"line_start":133,"line_end":133,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806915,"byte_end":806924,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8522},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807113,"byte_end":807121,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, Rotation2<N>>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807030,"byte_end":807087,"line_start":139,"line_end":139,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807092,"byte_end":807101,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8525},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807736,"byte_end":807739,"line_start":161,"line_end":161,"column_start":12,"column_end":15},"name":"new","qualname":"<Isometry<N, U2, UnitComplex<N>>>::new","value":"pub fn new(Vector2<N>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new 2D isometry from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new 2D isometry from a translation and a rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807251,"byte_end":807321,"line_start":147,"line_end":147,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807326,"byte_end":807329,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ Its rotational part is represented as an unit complex number.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807334,"byte_end":807399,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807404,"byte_end":807407,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807412,"byte_end":807425,"line_start":151,"line_end":151,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807430,"byte_end":807433,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807438,"byte_end":807445,"line_start":153,"line_end":153,"column_start":5,"column_end":12}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807450,"byte_end":807469,"line_start":154,"line_end":154,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{IsometryMatrix2, Point2, Vector2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807474,"byte_end":807529,"line_start":155,"line_end":155,"column_start":5,"column_end":60}},{"value":"/ let iso = IsometryMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807534,"byte_end":807617,"line_start":156,"line_end":156,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807622,"byte_end":807625,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(iso * Point2::new(3.0, 4.0), Point2::new(-3.0, 5.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807630,"byte_end":807698,"line_start":158,"line_end":158,"column_start":5,"column_end":73}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807703,"byte_end":807710,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807715,"byte_end":807724,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8526},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":808012,"byte_end":808023,"line_start":170,"line_end":170,"column_start":12,"column_end":23},"name":"translation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::translation","value":"pub fn translation(N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given translation coordinates.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given translation coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807920,"byte_end":807986,"line_start":168,"line_end":168,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807991,"byte_end":808000,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8527},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":808215,"byte_end":808223,"line_start":176,"line_end":176,"column_start":12,"column_end":20},"name":"rotation","qualname":"<Isometry<N, U2, UnitComplex<N>>>::rotation","value":"pub fn rotation(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new isometry from the given rotation angle.\n","sig":null,"attributes":[{"value":"/ Creates a new isometry from the given rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":808132,"byte_end":808189,"line_start":174,"line_end":174,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":808194,"byte_end":808203,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":23184},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":839723,"byte_end":839733,"line_start":44,"line_end":44,"column_start":12,"column_end":22},"name":"Similarity","qualname":"::geometry::similarity::Similarity","value":"Similarity { isometry }","parent":null,"children":[{"krate":0,"index":23188},{"krate":0,"index":23189}],"decl_id":null,"docs":" A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.\n","sig":null,"attributes":[{"value":"/ A similarity, i.e., an uniform scaling, followed by a rotation, followed by a translation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":839001,"byte_end":839095,"line_start":22,"line_end":22,"column_start":1,"column_end":95}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":839096,"byte_end":839106,"line_start":23,"line_end":23,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":23188},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":839891,"byte_end":839899,"line_start":48,"line_end":48,"column_start":9,"column_end":17},"name":"isometry","qualname":"::geometry::similarity::Similarity::isometry","value":"geometry::isometry::Isometry<N, D, R>","parent":{"krate":0,"index":23184},"children":[],"decl_id":null,"docs":" The part of this similarity that does not include the scaling factor.\n","sig":null,"attributes":[{"value":"/ The part of this similarity that does not include the scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":839809,"byte_end":839882,"line_start":47,"line_end":47,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":8785},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841440,"byte_end":841450,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Similarity<N, D, R>>::from_parts","value":"pub fn from_parts(Translation<N, D>, R, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841341,"byte_end":841414,"line_start":103,"line_end":103,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841419,"byte_end":841428,"line_start":104,"line_end":104,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8786},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841745,"byte_end":841758,"line_start":116,"line_end":116,"column_start":12,"column_end":25},"name":"from_isometry","qualname":"<Similarity<N, D, R>>::from_isometry","value":"pub fn from_isometry(Isometry<N, D, R>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from its rotational and translational parts.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity from its rotational and translational parts.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841646,"byte_end":841719,"line_start":114,"line_end":114,"column_start":5,"column_end":78}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841724,"byte_end":841733,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8787},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842125,"byte_end":842137,"line_start":130,"line_end":130,"column_start":12,"column_end":24},"name":"from_scaling","qualname":"<Similarity<N, D, R>>::from_scaling","value":"pub fn from_scaling(N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity that applies only a scaling factor.\n","sig":null,"attributes":[{"value":"/ Creates a new similarity that applies only a scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842035,"byte_end":842099,"line_start":128,"line_end":128,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842104,"byte_end":842113,"line_start":129,"line_end":129,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8788},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842275,"byte_end":842282,"line_start":136,"line_end":136,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Similarity<N, D, R>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self`.\n","sig":null,"attributes":[{"value":"/ Inverts `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842230,"byte_end":842249,"line_start":134,"line_end":134,"column_start":5,"column_end":24}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842254,"byte_end":842263,"line_start":135,"line_end":135,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8789},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842440,"byte_end":842451,"line_start":144,"line_end":144,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Similarity<N, D, R>>::inverse_mut","value":"pub fn inverse_mut(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Inverts `self` in-place.\n","sig":null,"attributes":[{"value":"/ Inverts `self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842386,"byte_end":842414,"line_start":142,"line_end":142,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842419,"byte_end":842428,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8790},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842702,"byte_end":842713,"line_start":152,"line_end":152,"column_start":12,"column_end":23},"name":"set_scaling","qualname":"<Similarity<N, D, R>>::set_scaling","value":"pub fn set_scaling(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842619,"byte_end":842676,"line_start":150,"line_end":150,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842681,"byte_end":842690,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8791},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843003,"byte_end":843010,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"scaling","qualname":"<Similarity<N, D, R>>::scaling","value":"pub fn scaling(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The scaling factor of this similarity transformation.\n","sig":null,"attributes":[{"value":"/ The scaling factor of this similarity transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842920,"byte_end":842977,"line_start":161,"line_end":161,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":842982,"byte_end":842991,"line_start":162,"line_end":162,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8792},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843171,"byte_end":843186,"line_start":169,"line_end":169,"column_start":12,"column_end":27},"name":"prepend_scaling","qualname":"<Similarity<N, D, R>>::prepend_scaling","value":"pub fn prepend_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843057,"byte_end":843145,"line_start":167,"line_end":167,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843150,"byte_end":843159,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8793},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843553,"byte_end":843567,"line_start":180,"line_end":180,"column_start":12,"column_end":26},"name":"append_scaling","qualname":"<Similarity<N, D, R>>::append_scaling","value":"pub fn append_scaling(&Self, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ The similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843440,"byte_end":843527,"line_start":178,"line_end":178,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843532,"byte_end":843541,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8794},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844067,"byte_end":844086,"line_start":195,"line_end":195,"column_start":12,"column_end":31},"name":"prepend_scaling_mut","qualname":"<Similarity<N, D, R>>::prepend_scaling_mut","value":"pub fn prepend_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` before `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":843938,"byte_end":844041,"line_start":193,"line_end":193,"column_start":5,"column_end":108}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844046,"byte_end":844055,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8795},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844421,"byte_end":844439,"line_start":206,"line_end":206,"column_start":12,"column_end":30},"name":"append_scaling_mut","qualname":"<Similarity<N, D, R>>::append_scaling_mut","value":"pub fn append_scaling_mut(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.\n","sig":null,"attributes":[{"value":"/ Sets `self` to the similarity transformation that applies a scaling factor `scaling` after `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844293,"byte_end":844395,"line_start":204,"line_end":204,"column_start":5,"column_end":107}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844400,"byte_end":844409,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8796},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844779,"byte_end":844801,"line_start":218,"line_end":218,"column_start":12,"column_end":34},"name":"append_translation_mut","qualname":"<Similarity<N, D, R>>::append_translation_mut","value":"pub fn append_translation_mut(&mut Self, &Translation<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given translation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given translation in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844700,"byte_end":844753,"line_start":216,"line_end":216,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844758,"byte_end":844767,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8797},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844973,"byte_end":844992,"line_start":224,"line_end":224,"column_start":12,"column_end":31},"name":"append_rotation_mut","qualname":"<Similarity<N, D, R>>::append_rotation_mut","value":"pub fn append_rotation_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends to `self` the given rotation in-place.\n","sig":null,"attributes":[{"value":"/ Appends to `self` the given rotation in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844897,"byte_end":844947,"line_start":222,"line_end":222,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":844952,"byte_end":844961,"line_start":223,"line_end":223,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8798},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845215,"byte_end":845244,"line_start":231,"line_end":231,"column_start":12,"column_end":41},"name":"append_rotation_wrt_point_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_point_mut","value":"pub fn append_rotation_wrt_point_mut(&mut Self, &R, &Point<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that\n lets `p` invariant.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point `p`, i.e., the rotation that","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845069,"byte_end":845161,"line_start":228,"line_end":228,"column_start":5,"column_end":97}},{"value":"/ lets `p` invariant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845166,"byte_end":845189,"line_start":229,"line_end":229,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845194,"byte_end":845203,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8799},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845485,"byte_end":845515,"line_start":238,"line_end":238,"column_start":12,"column_end":42},"name":"append_rotation_wrt_center_mut","qualname":"<Similarity<N, D, R>>::append_rotation_wrt_center_mut","value":"pub fn append_rotation_wrt_center_mut(&mut Self, &R)","parent":null,"children":[],"decl_id":null,"docs":" Appends in-place to `self` a rotation centered at the point with coordinates\n `self.translation`.\n","sig":null,"attributes":[{"value":"/ Appends in-place to `self` a rotation centered at the point with coordinates","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845351,"byte_end":845431,"line_start":235,"line_end":235,"column_start":5,"column_end":85}},{"value":"/ `self.translation`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845436,"byte_end":845459,"line_start":236,"line_end":236,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845464,"byte_end":845473,"line_start":237,"line_end":237,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8800},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846282,"byte_end":846297,"line_start":258,"line_end":258,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Similarity<N, D, R>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this similarity.","sig":null,"attributes":[{"value":"/ Transform the given point by this similarity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845603,"byte_end":845652,"line_start":242,"line_end":242,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845657,"byte_end":845660,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845665,"byte_end":845720,"line_start":244,"line_end":244,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845725,"byte_end":845728,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845733,"byte_end":845746,"line_start":246,"line_end":246,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845751,"byte_end":845758,"line_start":247,"line_end":247,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845763,"byte_end":845802,"line_start":248,"line_end":248,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845807,"byte_end":845826,"line_start":249,"line_end":249,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845831,"byte_end":845882,"line_start":250,"line_end":250,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845887,"byte_end":845945,"line_start":251,"line_end":251,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":845950,"byte_end":846000,"line_start":252,"line_end":252,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846005,"byte_end":846065,"line_start":253,"line_end":253,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846070,"byte_end":846147,"line_start":254,"line_end":254,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(19.0, 17.0, -9.0), epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846152,"byte_end":846244,"line_start":255,"line_end":255,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846249,"byte_end":846256,"line_start":256,"line_end":256,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846261,"byte_end":846270,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8801},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847092,"byte_end":847108,"line_start":279,"line_end":279,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Similarity<N, D, R>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this similarity, ignoring the translational\n component.","sig":null,"attributes":[{"value":"/ Transform the given vector by this similarity, ignoring the translational","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846369,"byte_end":846446,"line_start":262,"line_end":262,"column_start":5,"column_end":82}},{"value":"/ component.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846451,"byte_end":846465,"line_start":263,"line_end":263,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846470,"byte_end":846473,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * t`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846478,"byte_end":846532,"line_start":265,"line_end":265,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846537,"byte_end":846540,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846545,"byte_end":846558,"line_start":267,"line_end":267,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846563,"byte_end":846570,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846575,"byte_end":846614,"line_start":269,"line_end":269,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846619,"byte_end":846638,"line_start":270,"line_end":270,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846643,"byte_end":846686,"line_start":271,"line_end":271,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846691,"byte_end":846749,"line_start":272,"line_end":272,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846754,"byte_end":846804,"line_start":273,"line_end":273,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846809,"byte_end":846869,"line_start":274,"line_end":274,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846874,"byte_end":846954,"line_start":275,"line_end":275,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(18.0, 15.0, -12.0), epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":846959,"byte_end":847054,"line_start":276,"line_end":276,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847059,"byte_end":847066,"line_start":277,"line_end":277,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847071,"byte_end":847080,"line_start":278,"line_end":278,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8802},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847919,"byte_end":847942,"line_start":299,"line_end":299,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Similarity<N, D, R>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this similarity. This may\n be cheaper than inverting the similarity and then transforming the\n given point.","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this similarity. This may","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847182,"byte_end":847255,"line_start":283,"line_end":283,"column_start":5,"column_end":78}},{"value":"/ be cheaper than inverting the similarity and then transforming the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847260,"byte_end":847330,"line_start":284,"line_end":284,"column_start":5,"column_end":75}},{"value":"/ given point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847335,"byte_end":847351,"line_start":285,"line_end":285,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847356,"byte_end":847359,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847364,"byte_end":847377,"line_start":287,"line_end":287,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847382,"byte_end":847389,"line_start":288,"line_end":288,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847394,"byte_end":847433,"line_start":289,"line_end":289,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847438,"byte_end":847457,"line_start":290,"line_end":290,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Point3, Similarity3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847462,"byte_end":847513,"line_start":291,"line_end":291,"column_start":5,"column_end":56}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847518,"byte_end":847576,"line_start":292,"line_end":292,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847581,"byte_end":847631,"line_start":293,"line_end":293,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847636,"byte_end":847696,"line_start":294,"line_end":294,"column_start":5,"column_end":65}},{"value":"/ let transformed_point = sim.inverse_transform_point(&Point3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847701,"byte_end":847786,"line_start":295,"line_end":295,"column_start":5,"column_end":90}},{"value":"/ assert_relative_eq!(transformed_point, Point3::new(-1.5, 1.5, 1.5), epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847791,"byte_end":847881,"line_start":296,"line_end":296,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847886,"byte_end":847893,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":847898,"byte_end":847907,"line_start":298,"line_end":298,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8803},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848837,"byte_end":848861,"line_start":319,"line_end":319,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Similarity<N, D, R>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this similarity,\n ignoring the translational component. This may be cheaper than\n inverting the similarity and then transforming the given vector.","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this similarity,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848063,"byte_end":848128,"line_start":303,"line_end":303,"column_start":5,"column_end":70}},{"value":"/ ignoring the translational component. This may be cheaper than","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848133,"byte_end":848199,"line_start":304,"line_end":304,"column_start":5,"column_end":71}},{"value":"/ inverting the similarity and then transforming the given vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848204,"byte_end":848272,"line_start":305,"line_end":305,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848277,"byte_end":848280,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848285,"byte_end":848298,"line_start":307,"line_end":307,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848303,"byte_end":848310,"line_start":308,"line_end":308,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848315,"byte_end":848354,"line_start":309,"line_end":309,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848359,"byte_end":848378,"line_start":310,"line_end":310,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848383,"byte_end":848426,"line_start":311,"line_end":311,"column_start":5,"column_end":48}},{"value":"/ let axisangle = Vector3::y() * f32::consts::FRAC_PI_2;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848431,"byte_end":848489,"line_start":312,"line_end":312,"column_start":5,"column_end":63}},{"value":"/ let translation = Vector3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848494,"byte_end":848544,"line_start":313,"line_end":313,"column_start":5,"column_end":55}},{"value":"/ let sim = Similarity3::new(translation, axisangle, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848549,"byte_end":848609,"line_start":314,"line_end":314,"column_start":5,"column_end":65}},{"value":"/ let transformed_vector = sim.inverse_transform_vector(&Vector3::new(4.0, 5.0, 6.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848614,"byte_end":848702,"line_start":315,"line_end":315,"column_start":5,"column_end":93}},{"value":"/ assert_relative_eq!(transformed_vector, Vector3::new(-3.0, 2.5, 2.0), epsilon = 1.0e-5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848707,"byte_end":848799,"line_start":316,"line_end":316,"column_start":5,"column_end":97}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848804,"byte_end":848811,"line_start":317,"line_end":317,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":848816,"byte_end":848825,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":8808},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849544,"byte_end":849558,"line_start":333,"line_end":333,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Similarity<N, D, R>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>> where\nD: DimNameAdd<U1>, R: SubsetOf<MatrixN<N, DimNameSum<D, U1>>>,\nDefaultAllocator: Allocator<N, DimNameSum<D, U1>, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this similarity into its equivalent homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ Converts this similarity into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849435,"byte_end":849518,"line_start":331,"line_end":331,"column_start":5,"column_end":88}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849523,"byte_end":849532,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":8989},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857538,"byte_end":857549,"line_start":6,"line_end":6,"column_start":10,"column_end":21},"name":"Similarity2","qualname":"::geometry::similarity_alias::Similarity2","value":"Similarity<N, U2, UnitComplex<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857497,"byte_end":857528,"line_start":5,"line_end":5,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":8991},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857632,"byte_end":857643,"line_start":9,"line_end":9,"column_start":10,"column_end":21},"name":"Similarity3","qualname":"::geometry::similarity_alias::Similarity3","value":"Similarity<N, U3, UnitQuaternion<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857591,"byte_end":857622,"line_start":8,"line_end":8,"column_start":1,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":8993},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857775,"byte_end":857792,"line_start":12,"line_end":12,"column_start":10,"column_end":27},"name":"SimilarityMatrix2","qualname":"::geometry::similarity_alias::SimilarityMatrix2","value":"Similarity<N, U2, Rotation2<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 2-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 2-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857688,"byte_end":857765,"line_start":11,"line_end":11,"column_start":1,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":8995},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857919,"byte_end":857936,"line_start":15,"line_end":15,"column_start":10,"column_end":27},"name":"SimilarityMatrix3","qualname":"::geometry::similarity_alias::SimilarityMatrix3","value":"Similarity<N, U3, Rotation3<N>>","parent":null,"children":[],"decl_id":null,"docs":" A 3-dimensional similarity using a rotation matrix for its rotation part.\n","sig":null,"attributes":[{"value":"/ A 3-dimensional similarity using a rotation matrix for its rotation part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alias.rs","byte_start":857832,"byte_end":857909,"line_start":14,"line_end":14,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":9072},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859122,"byte_end":859130,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Similarity<N, D, R>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity similarity.","sig":null,"attributes":[{"value":"/ Creates a new identity similarity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858677,"byte_end":858715,"line_start":27,"line_end":27,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858720,"byte_end":858723,"line_start":28,"line_end":28,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858728,"byte_end":858741,"line_start":29,"line_end":29,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858746,"byte_end":858749,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858754,"byte_end":858761,"line_start":31,"line_end":31,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Similarity2, Point2, Similarity3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858766,"byte_end":858829,"line_start":32,"line_end":32,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858834,"byte_end":858837,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858842,"byte_end":858880,"line_start":34,"line_end":34,"column_start":5,"column_end":43}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858885,"byte_end":858920,"line_start":35,"line_end":35,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858925,"byte_end":858954,"line_start":36,"line_end":36,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858959,"byte_end":858962,"line_start":37,"line_end":37,"column_start":5,"column_end":8}},{"value":"/ let sim = Similarity3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858967,"byte_end":859005,"line_start":38,"line_end":38,"column_start":5,"column_end":43}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859010,"byte_end":859050,"line_start":39,"line_end":39,"column_start":5,"column_end":45}},{"value":"/ assert_eq!(sim * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859055,"byte_end":859084,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859089,"byte_end":859096,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859101,"byte_end":859110,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9089},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860709,"byte_end":860727,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"rotation_wrt_point","qualname":"<Similarity<N, D, R>>::rotation_wrt_point","value":"pub fn rotation_wrt_point(R, Point<N, D>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with\n its axis passing through the point `p`.","sig":null,"attributes":[{"value":"/ The similarity that applies the scaling factor `scaling`, followed by the rotation `r` with","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860081,"byte_end":860176,"line_start":82,"line_end":82,"column_start":5,"column_end":100}},{"value":"/ its axis passing through the point `p`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860181,"byte_end":860224,"line_start":83,"line_end":83,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860229,"byte_end":860232,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860237,"byte_end":860250,"line_start":85,"line_end":85,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860255,"byte_end":860258,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860263,"byte_end":860270,"line_start":87,"line_end":87,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860275,"byte_end":860314,"line_start":88,"line_end":88,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860319,"byte_end":860338,"line_start":89,"line_end":89,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Point2, UnitComplex};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860343,"byte_end":860398,"line_start":90,"line_end":90,"column_start":5,"column_end":60}},{"value":"/ let rot = UnitComplex::new(f32::consts::FRAC_PI_2);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860403,"byte_end":860458,"line_start":91,"line_end":91,"column_start":5,"column_end":60}},{"value":"/ let pt = Point2::new(3.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860463,"byte_end":860498,"line_start":92,"line_end":92,"column_start":5,"column_end":40}},{"value":"/ let sim = Similarity2::rotation_wrt_point(rot, pt, 4.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860503,"byte_end":860563,"line_start":93,"line_end":93,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860568,"byte_end":860571,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(1.0, 2.0), Point2::new(-3.0, 3.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860576,"byte_end":860671,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860676,"byte_end":860683,"line_start":96,"line_end":96,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":860688,"byte_end":860697,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9092},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862070,"byte_end":862073,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, Rotation2<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation, a rotation, and an uniform scaling factor.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861561,"byte_end":861652,"line_start":131,"line_end":131,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861657,"byte_end":861660,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861665,"byte_end":861678,"line_start":133,"line_end":133,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861683,"byte_end":861686,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861691,"byte_end":861698,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861703,"byte_end":861742,"line_start":136,"line_end":136,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861747,"byte_end":861766,"line_start":137,"line_end":137,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{SimilarityMatrix2, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861771,"byte_end":861828,"line_start":138,"line_end":138,"column_start":5,"column_end":62}},{"value":"/ let sim = SimilarityMatrix2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861833,"byte_end":861923,"line_start":139,"line_end":139,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861928,"byte_end":861931,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861936,"byte_end":862032,"line_start":141,"line_end":141,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862037,"byte_end":862044,"line_start":142,"line_end":142,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862049,"byte_end":862058,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9095},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862810,"byte_end":862813,"line_start":167,"line_end":167,"column_start":12,"column_end":15},"name":"new","qualname":"<Similarity<N, U2, UnitComplex<N>>>::new","value":"pub fn new(Vector2<N>, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new similarity from a translation and a rotation angle.","sig":null,"attributes":[{"value":"/ Creates a new similarity from a translation and a rotation angle.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862335,"byte_end":862404,"line_start":154,"line_end":154,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862409,"byte_end":862412,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862417,"byte_end":862430,"line_start":156,"line_end":156,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862435,"byte_end":862438,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862443,"byte_end":862450,"line_start":158,"line_end":158,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862455,"byte_end":862494,"line_start":159,"line_end":159,"column_start":5,"column_end":44}},{"value":"/ # use std::f32;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862499,"byte_end":862518,"line_start":160,"line_end":160,"column_start":5,"column_end":24}},{"value":"/ # use nalgebra::{Similarity2, Vector2, Point2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862523,"byte_end":862574,"line_start":161,"line_end":161,"column_start":5,"column_end":56}},{"value":"/ let sim = Similarity2::new(Vector2::new(1.0, 2.0), f32::consts::FRAC_PI_2, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862579,"byte_end":862663,"line_start":162,"line_end":162,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862668,"byte_end":862671,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(sim * Point2::new(2.0, 4.0), Point2::new(-11.0, 8.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862676,"byte_end":862772,"line_start":164,"line_end":164,"column_start":5,"column_end":101}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862777,"byte_end":862784,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862789,"byte_end":862798,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":23733},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894166,"byte_end":894168,"line_start":27,"line_end":27,"column_start":15,"column_end":17},"name":"xx","qualname":"<Point<N, D>>::xx","value":"pub fn xx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23734},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894203,"byte_end":894206,"line_start":28,"line_end":28,"column_start":15,"column_end":18},"name":"xxx","qualname":"<Point<N, D>>::xxx","value":"pub fn xxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23738},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894244,"byte_end":894246,"line_start":30,"line_end":30,"column_start":15,"column_end":17},"name":"xy","qualname":"<Point<N, D>>::xy","value":"pub fn xy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23739},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894281,"byte_end":894283,"line_start":31,"line_end":31,"column_start":15,"column_end":17},"name":"yx","qualname":"<Point<N, D>>::yx","value":"pub fn yx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23740},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894318,"byte_end":894320,"line_start":32,"line_end":32,"column_start":15,"column_end":17},"name":"yy","qualname":"<Point<N, D>>::yy","value":"pub fn yy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23741},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894355,"byte_end":894358,"line_start":33,"line_end":33,"column_start":15,"column_end":18},"name":"xxy","qualname":"<Point<N, D>>::xxy","value":"pub fn xxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23742},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894395,"byte_end":894398,"line_start":34,"line_end":34,"column_start":15,"column_end":18},"name":"xyx","qualname":"<Point<N, D>>::xyx","value":"pub fn xyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23743},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894435,"byte_end":894438,"line_start":35,"line_end":35,"column_start":15,"column_end":18},"name":"xyy","qualname":"<Point<N, D>>::xyy","value":"pub fn xyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23744},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894475,"byte_end":894478,"line_start":36,"line_end":36,"column_start":15,"column_end":18},"name":"yxx","qualname":"<Point<N, D>>::yxx","value":"pub fn yxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23745},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894515,"byte_end":894518,"line_start":37,"line_end":37,"column_start":15,"column_end":18},"name":"yxy","qualname":"<Point<N, D>>::yxy","value":"pub fn yxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23746},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894555,"byte_end":894558,"line_start":38,"line_end":38,"column_start":15,"column_end":18},"name":"yyx","qualname":"<Point<N, D>>::yyx","value":"pub fn yyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23747},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894595,"byte_end":894598,"line_start":39,"line_end":39,"column_start":15,"column_end":18},"name":"yyy","qualname":"<Point<N, D>>::yyy","value":"pub fn yyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23751},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894636,"byte_end":894638,"line_start":41,"line_end":41,"column_start":15,"column_end":17},"name":"xz","qualname":"<Point<N, D>>::xz","value":"pub fn xz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23752},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894673,"byte_end":894675,"line_start":42,"line_end":42,"column_start":15,"column_end":17},"name":"yz","qualname":"<Point<N, D>>::yz","value":"pub fn yz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23753},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894710,"byte_end":894712,"line_start":43,"line_end":43,"column_start":15,"column_end":17},"name":"zx","qualname":"<Point<N, D>>::zx","value":"pub fn zx(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23754},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894747,"byte_end":894749,"line_start":44,"line_end":44,"column_start":15,"column_end":17},"name":"zy","qualname":"<Point<N, D>>::zy","value":"pub fn zy(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23755},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894784,"byte_end":894786,"line_start":45,"line_end":45,"column_start":15,"column_end":17},"name":"zz","qualname":"<Point<N, D>>::zz","value":"pub fn zz(&Self) -> Point2<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23756},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894821,"byte_end":894824,"line_start":46,"line_end":46,"column_start":15,"column_end":18},"name":"xxz","qualname":"<Point<N, D>>::xxz","value":"pub fn xxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23757},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894861,"byte_end":894864,"line_start":47,"line_end":47,"column_start":15,"column_end":18},"name":"xyz","qualname":"<Point<N, D>>::xyz","value":"pub fn xyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23758},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894901,"byte_end":894904,"line_start":48,"line_end":48,"column_start":15,"column_end":18},"name":"xzx","qualname":"<Point<N, D>>::xzx","value":"pub fn xzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23759},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894941,"byte_end":894944,"line_start":49,"line_end":49,"column_start":15,"column_end":18},"name":"xzy","qualname":"<Point<N, D>>::xzy","value":"pub fn xzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23760},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":894981,"byte_end":894984,"line_start":50,"line_end":50,"column_start":15,"column_end":18},"name":"xzz","qualname":"<Point<N, D>>::xzz","value":"pub fn xzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23761},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895021,"byte_end":895024,"line_start":51,"line_end":51,"column_start":15,"column_end":18},"name":"yxz","qualname":"<Point<N, D>>::yxz","value":"pub fn yxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23762},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895061,"byte_end":895064,"line_start":52,"line_end":52,"column_start":15,"column_end":18},"name":"yyz","qualname":"<Point<N, D>>::yyz","value":"pub fn yyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23763},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895101,"byte_end":895104,"line_start":53,"line_end":53,"column_start":15,"column_end":18},"name":"yzx","qualname":"<Point<N, D>>::yzx","value":"pub fn yzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23764},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895141,"byte_end":895144,"line_start":54,"line_end":54,"column_start":15,"column_end":18},"name":"yzy","qualname":"<Point<N, D>>::yzy","value":"pub fn yzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23765},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895181,"byte_end":895184,"line_start":55,"line_end":55,"column_start":15,"column_end":18},"name":"yzz","qualname":"<Point<N, D>>::yzz","value":"pub fn yzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23766},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895221,"byte_end":895224,"line_start":56,"line_end":56,"column_start":15,"column_end":18},"name":"zxx","qualname":"<Point<N, D>>::zxx","value":"pub fn zxx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23767},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895261,"byte_end":895264,"line_start":57,"line_end":57,"column_start":15,"column_end":18},"name":"zxy","qualname":"<Point<N, D>>::zxy","value":"pub fn zxy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23768},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895301,"byte_end":895304,"line_start":58,"line_end":58,"column_start":15,"column_end":18},"name":"zxz","qualname":"<Point<N, D>>::zxz","value":"pub fn zxz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23769},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895341,"byte_end":895344,"line_start":59,"line_end":59,"column_start":15,"column_end":18},"name":"zyx","qualname":"<Point<N, D>>::zyx","value":"pub fn zyx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23770},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895381,"byte_end":895384,"line_start":60,"line_end":60,"column_start":15,"column_end":18},"name":"zyy","qualname":"<Point<N, D>>::zyy","value":"pub fn zyy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23771},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895421,"byte_end":895424,"line_start":61,"line_end":61,"column_start":15,"column_end":18},"name":"zyz","qualname":"<Point<N, D>>::zyz","value":"pub fn zyz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23772},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895461,"byte_end":895464,"line_start":62,"line_end":62,"column_start":15,"column_end":18},"name":"zzx","qualname":"<Point<N, D>>::zzx","value":"pub fn zzx(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23773},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895501,"byte_end":895504,"line_start":63,"line_end":63,"column_start":15,"column_end":18},"name":"zzy","qualname":"<Point<N, D>>::zzy","value":"pub fn zzy(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":23774},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":895541,"byte_end":895544,"line_start":64,"line_end":64,"column_start":15,"column_end":18},"name":"zzz","qualname":"<Point<N, D>>::zzz","value":"pub fn zzz(&Self) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Builds a new point from components of `self`.\n","sig":null,"attributes":[{"value":"/ Builds a new point from components of `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893874,"byte_end":893923,"line_start":15,"line_end":15,"column_start":21,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/swizzle.rs","byte_start":893944,"byte_end":893953,"line_start":16,"line_end":16,"column_start":21,"column_end":30}}]},{"kind":"Trait","id":{"krate":0,"index":9353},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896250,"byte_end":896259,"line_start":21,"line_end":21,"column_start":11,"column_end":20},"name":"TCategory","qualname":"::geometry::transform::TCategory","value":"TCategory: Any + Debug + Copy + PartialEq + Send","parent":null,"children":[{"krate":0,"index":9354},{"krate":0,"index":9355}],"decl_id":null,"docs":" Trait implemented by phantom types identifying the projective transformation type.","sig":null,"attributes":[{"value":"/ Trait implemented by phantom types identifying the projective transformation type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896061,"byte_end":896147,"line_start":18,"line_end":18,"column_start":1,"column_end":87}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896148,"byte_end":896151,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ NOTE: this trait is not intended to be implemented outside of the `nalgebra` crate.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896152,"byte_end":896239,"line_start":20,"line_end":20,"column_start":1,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":9354},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896439,"byte_end":896453,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"has_normalizer","qualname":"::geometry::transform::TCategory::has_normalizer","value":"pub fn has_normalizer() -> bool","parent":{"krate":0,"index":9353},"children":[],"decl_id":null,"docs":" Indicates whether a `Transform` with the category `Self` has a bottom-row different from\n `0 0 .. 1`.\n","sig":null,"attributes":[{"value":"/ Indicates whether a `Transform` with the category `Self` has a bottom-row different from","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896305,"byte_end":896397,"line_start":22,"line_end":22,"column_start":5,"column_end":97}},{"value":"/ `0 0 .. 1`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896402,"byte_end":896417,"line_start":23,"line_end":23,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896422,"byte_end":896431,"line_start":24,"line_end":24,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9355},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896614,"byte_end":896642,"line_start":31,"line_end":31,"column_start":8,"column_end":36},"name":"check_homogeneous_invariants","qualname":"::geometry::transform::TCategory::check_homogeneous_invariants","value":"pub fn check_homogeneous_invariants<N: RealField, D: DimName>(&MatrixN<N, D>)\n-> bool where N::Epsilon: Copy, DefaultAllocator: Allocator<N, D, D>","parent":{"krate":0,"index":9353},"children":[],"decl_id":null,"docs":" Checks that the given matrix is a valid homogeneous representation of an element of the\n category `Self`.\n","sig":null,"attributes":[{"value":"/ Checks that the given matrix is a valid homogeneous representation of an element of the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896490,"byte_end":896581,"line_start":29,"line_end":29,"column_start":5,"column_end":96}},{"value":"/ category `Self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896586,"byte_end":896606,"line_start":30,"line_end":30,"column_start":5,"column_end":25}}]},{"kind":"Trait","id":{"krate":0,"index":9358},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896956,"byte_end":896968,"line_start":39,"line_end":39,"column_start":11,"column_end":23},"name":"TCategoryMul","qualname":"::geometry::transform::TCategoryMul","value":"TCategoryMul<Other: TCategory>: TCategory","parent":null,"children":[{"krate":0,"index":9360}],"decl_id":null,"docs":" Traits that gives the `Transform` category that is compatible with the result of the\n multiplication of transformations with categories `Self` and `Other`.\n","sig":null,"attributes":[{"value":"/ Traits that gives the `Transform` category that is compatible with the result of the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896783,"byte_end":896871,"line_start":37,"line_end":37,"column_start":1,"column_end":89}},{"value":"/ multiplication of transformations with categories `Self` and `Other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896872,"byte_end":896945,"line_start":38,"line_end":38,"column_start":1,"column_end":74}}]},{"kind":"Type","id":{"krate":0,"index":9360},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897225,"byte_end":897239,"line_start":43,"line_end":43,"column_start":10,"column_end":24},"name":"Representative","qualname":"::geometry::transform::TCategoryMul::Representative","value":"type Representative: TCategory;","parent":{"krate":0,"index":9358},"children":[],"decl_id":null,"docs":" The transform category that results from the multiplication of a `Transform<Self>` to a\n `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most\n general category.\n","sig":null,"attributes":[{"value":"/ The transform category that results from the multiplication of a `Transform<Self>` to a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897004,"byte_end":897095,"line_start":40,"line_end":40,"column_start":5,"column_end":96}},{"value":"/ `Transform<Other>`. This is usually equal to `Self` or `Other`, whichever is the most","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897100,"byte_end":897189,"line_start":41,"line_end":41,"column_start":5,"column_end":94}},{"value":"/ general category.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897194,"byte_end":897215,"line_start":42,"line_end":42,"column_start":5,"column_end":26}}]},{"kind":"Trait","id":{"krate":0,"index":9361},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897344,"byte_end":897360,"line_start":47,"line_end":47,"column_start":11,"column_end":27},"name":"SuperTCategoryOf","qualname":"::geometry::transform::SuperTCategoryOf","value":"SuperTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more general `Transform` category than `Other`.\n","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more general `Transform` category than `Other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897255,"byte_end":897333,"line_start":46,"line_end":46,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":9363},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897547,"byte_end":897561,"line_start":52,"line_end":52,"column_start":11,"column_end":25},"name":"SubTCategoryOf","qualname":"::geometry::transform::SubTCategoryOf","value":"SubTCategoryOf<Other: TCategory>: TCategory","parent":null,"children":[],"decl_id":null,"docs":" Indicates that `Self` is a more specific `Transform` category than `Other`.","sig":null,"attributes":[{"value":"/ Indicates that `Self` is a more specific `Transform` category than `Other`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897394,"byte_end":897473,"line_start":49,"line_end":49,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897474,"byte_end":897477,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Automatically implemented based on `SuperTCategoryOf`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897478,"byte_end":897536,"line_start":51,"line_end":51,"column_start":1,"column_end":59}}]},{"kind":"Enum","id":{"krate":0,"index":23775},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897838,"byte_end":897846,"line_start":62,"line_end":62,"column_start":10,"column_end":18},"name":"TGeneral","qualname":"::geometry::transform::TGeneral","value":"pub enum TGeneral { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general (not necessarily inversible) `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general (not necessarily inversible) `Transform` type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897693,"byte_end":897777,"line_start":60,"line_end":60,"column_start":1,"column_end":85}}]},{"kind":"Enum","id":{"krate":0,"index":23790},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897978,"byte_end":897989,"line_start":66,"line_end":66,"column_start":10,"column_end":21},"name":"TProjective","qualname":"::geometry::transform::TProjective","value":"pub enum TProjective { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing the most general inversible `Transform` type.\n","sig":null,"attributes":[{"value":"/ Tag representing the most general inversible `Transform` type.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897851,"byte_end":897917,"line_start":64,"line_end":64,"column_start":1,"column_end":67}}]},{"kind":"Enum","id":{"krate":0,"index":23805},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898144,"byte_end":898151,"line_start":70,"line_end":70,"column_start":10,"column_end":17},"name":"TAffine","qualname":"::geometry::transform::TAffine","value":"pub enum TAffine { }","parent":null,"children":[],"decl_id":null,"docs":" Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.\n","sig":null,"attributes":[{"value":"/ Tag representing an affine `Transform`. Its bottom-row is equal to `(0, 0 ... 0, 1)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897994,"byte_end":898083,"line_start":68,"line_end":68,"column_start":1,"column_end":90}}]},{"kind":"Struct","id":{"krate":0,"index":23835},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900358,"byte_end":900367,"line_start":160,"line_end":160,"column_start":12,"column_end":21},"name":"Transform","qualname":"::geometry::transform::Transform","value":"Transform {  }","parent":null,"children":[{"krate":0,"index":23839},{"krate":0,"index":23840}],"decl_id":null,"docs":" A transformation matrix in homogeneous coordinates.","sig":null,"attributes":[{"value":"/ A transformation matrix in homogeneous coordinates.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900138,"byte_end":900193,"line_start":154,"line_end":154,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900194,"byte_end":900197,"line_start":155,"line_end":155,"column_start":1,"column_end":4}},{"value":"/ It is stored as a matrix with dimensions `(D + 1, D + 1)`, e.g., it stores a 4x4 matrix for a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900198,"byte_end":900295,"line_start":156,"line_end":156,"column_start":1,"column_end":98}},{"value":"/ 3D transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900296,"byte_end":900318,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"repr(C)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900319,"byte_end":900329,"line_start":158,"line_end":158,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":9411},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903169,"byte_end":903190,"line_start":236,"line_end":236,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Transform<N, D, C>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(MatrixN<N, DimNameSum<D, U1>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new transformation from the given homogeneous matrix. The transformation category\n of `Self` is not checked to be verified by the given matrix.\n","sig":null,"attributes":[{"value":"/ Creates a new transformation from the given homogeneous matrix. The transformation category","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902979,"byte_end":903074,"line_start":233,"line_end":233,"column_start":5,"column_end":100}},{"value":"/ of `Self` is not checked to be verified by the given matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903079,"byte_end":903143,"line_start":234,"line_end":234,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903148,"byte_end":903157,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9412},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903738,"byte_end":903748,"line_start":256,"line_end":256,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Transform<N, D, C>>::into_inner","value":"pub fn into_inner(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903344,"byte_end":903380,"line_start":243,"line_end":243,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903385,"byte_end":903388,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903393,"byte_end":903407,"line_start":245,"line_end":245,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903412,"byte_end":903419,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903424,"byte_end":903466,"line_start":247,"line_end":247,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903471,"byte_end":903474,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903479,"byte_end":903518,"line_start":249,"line_end":249,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903523,"byte_end":903562,"line_start":250,"line_end":250,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903567,"byte_end":903607,"line_start":251,"line_end":251,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903612,"byte_end":903661,"line_start":252,"line_end":252,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903666,"byte_end":903700,"line_start":253,"line_end":253,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903705,"byte_end":903712,"line_start":254,"line_end":254,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903717,"byte_end":903726,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9413},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903994,"byte_end":904000,"line_start":264,"line_end":264,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Transform<N, D, C>>::unwrap","value":"pub fn unwrap(Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying matrix.\n Deprecated: Use [Transform::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903821,"byte_end":903857,"line_start":260,"line_end":260,"column_start":5,"column_end":41}},{"value":"/ Deprecated: Use [Transform::into_inner] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903862,"byte_end":903914,"line_start":261,"line_end":261,"column_start":5,"column_end":57}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903919,"byte_end":903968,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":903973,"byte_end":903982,"line_start":263,"line_end":263,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9414},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904469,"byte_end":904475,"line_start":281,"line_end":281,"column_start":12,"column_end":18},"name":"matrix","qualname":"<Transform<N, D, C>>::matrix","value":"pub fn matrix(&Self) -> &MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904073,"byte_end":904114,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904119,"byte_end":904122,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904127,"byte_end":904141,"line_start":270,"line_end":270,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904146,"byte_end":904153,"line_start":271,"line_end":271,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904158,"byte_end":904200,"line_start":272,"line_end":272,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904205,"byte_end":904208,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904213,"byte_end":904252,"line_start":274,"line_end":274,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904257,"byte_end":904296,"line_start":275,"line_end":275,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904301,"byte_end":904341,"line_start":276,"line_end":276,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904346,"byte_end":904395,"line_start":277,"line_end":277,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(*t.matrix(), m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904400,"byte_end":904431,"line_start":278,"line_end":278,"column_start":5,"column_end":36}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904436,"byte_end":904443,"line_start":279,"line_end":279,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904448,"byte_end":904457,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9415},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905382,"byte_end":905402,"line_start":308,"line_end":308,"column_start":12,"column_end":32},"name":"matrix_mut_unchecked","qualname":"<Transform<N, D, C>>::matrix_mut_unchecked","value":"pub fn matrix_mut_unchecked(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to the underlying matrix.","sig":null,"attributes":[{"value":"/ A mutable reference to the underlying matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904551,"byte_end":904600,"line_start":285,"line_end":285,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904605,"byte_end":904608,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ It is `_unchecked` because direct modifications of this matrix may break invariants","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904613,"byte_end":904700,"line_start":287,"line_end":287,"column_start":5,"column_end":92}},{"value":"/ identified by this transformation category.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904705,"byte_end":904752,"line_start":288,"line_end":288,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904757,"byte_end":904760,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904765,"byte_end":904779,"line_start":290,"line_end":290,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904784,"byte_end":904791,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904796,"byte_end":904838,"line_start":292,"line_end":292,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904843,"byte_end":904846,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904851,"byte_end":904890,"line_start":294,"line_end":294,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904895,"byte_end":904934,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904939,"byte_end":904979,"line_start":296,"line_end":296,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":904984,"byte_end":905037,"line_start":297,"line_end":297,"column_start":5,"column_end":58}},{"value":"/ t.matrix_mut_unchecked().m12 = 42.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905042,"byte_end":905082,"line_start":298,"line_end":298,"column_start":5,"column_end":45}},{"value":"/ t.matrix_mut_unchecked().m23 = 90.0;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905087,"byte_end":905127,"line_start":299,"line_end":299,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905132,"byte_end":905135,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905140,"byte_end":905143,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let expected = Matrix3::new(1.0, 42.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905148,"byte_end":905195,"line_start":302,"line_end":302,"column_start":5,"column_end":52}},{"value":"/                             3.0, 4.0,  90.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905200,"byte_end":905248,"line_start":303,"line_end":303,"column_start":5,"column_end":53}},{"value":"/                             0.0, 0.0,  1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905253,"byte_end":905301,"line_start":304,"line_end":304,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(*t.matrix(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905306,"byte_end":905344,"line_start":305,"line_end":305,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905349,"byte_end":905356,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905361,"byte_end":905370,"line_start":307,"line_end":307,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9416},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905874,"byte_end":905886,"line_start":319,"line_end":319,"column_start":12,"column_end":24},"name":"set_category","qualname":"<Transform<N, D, C>>::set_category","value":"pub fn set_category<CNew: SuperTCategoryOf<C>>(Self) -> Transform<N, D, CNew>","parent":null,"children":[],"decl_id":null,"docs":" Sets the category of this transform.","sig":null,"attributes":[{"value":"/ Sets the category of this transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905490,"byte_end":905530,"line_start":312,"line_end":312,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905535,"byte_end":905538,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This can be done only if the new category is more general than the current one, e.g., a","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905543,"byte_end":905634,"line_start":314,"line_end":314,"column_start":5,"column_end":96}},{"value":"/ transform with category `TProjective` cannot be converted to a transform with category","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905639,"byte_end":905729,"line_start":315,"line_end":315,"column_start":5,"column_end":95}},{"value":"/ `TAffine` because not all projective transformations are affine (the other way-round is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905734,"byte_end":905825,"line_start":316,"line_end":316,"column_start":5,"column_end":96}},{"value":"/ valid though).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905830,"byte_end":905848,"line_start":317,"line_end":317,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":905853,"byte_end":905862,"line_start":318,"line_end":318,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9418},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906248,"byte_end":906259,"line_start":328,"line_end":328,"column_start":12,"column_end":23},"name":"clone_owned","qualname":"<Transform<N, D, C>>::clone_owned","value":"pub fn clone_owned(&Self) -> Transform<N, D, C>","parent":null,"children":[],"decl_id":null,"docs":" Clones this transform into one that owns its data.\n","sig":null,"attributes":[{"value":"/ Clones this transform into one that owns its data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906012,"byte_end":906066,"line_start":323,"line_end":323,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906071,"byte_end":906080,"line_start":324,"line_end":324,"column_start":5,"column_end":14}},{"value":"deprecated(note =\n             \"This method is redundant with automatic `Copy` and the `.clone()` method and will be removed in a future release.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906085,"byte_end":906236,"line_start":325,"line_end":327,"column_start":5,"column_end":7}}]},{"kind":"Method","id":{"krate":0,"index":9419},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906810,"byte_end":906824,"line_start":345,"line_end":345,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Transform<N, D, C>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Converts this transform into its equivalent homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ Converts this transform into its equivalent homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906370,"byte_end":906452,"line_start":332,"line_end":332,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906457,"byte_end":906460,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906465,"byte_end":906479,"line_start":334,"line_end":334,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906484,"byte_end":906491,"line_start":335,"line_end":335,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906496,"byte_end":906538,"line_start":336,"line_end":336,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906543,"byte_end":906546,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(1.0, 2.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906551,"byte_end":906590,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/                      3.0, 4.0, 0.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906595,"byte_end":906634,"line_start":339,"line_end":339,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906639,"byte_end":906679,"line_start":340,"line_end":340,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906684,"byte_end":906733,"line_start":341,"line_end":341,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(t.into_inner(), m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906738,"byte_end":906772,"line_start":342,"line_end":342,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906777,"byte_end":906784,"line_start":343,"line_end":343,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906789,"byte_end":906798,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9420},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907917,"byte_end":907928,"line_start":373,"line_end":373,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<Transform<N, D, C>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<Transform<N, D, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation. You may use `.inverse` instead of this\n transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation. You may use `.inverse` instead of this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":906914,"byte_end":906996,"line_start":349,"line_end":349,"column_start":5,"column_end":87}},{"value":"/ transformation has a subcategory of `TProjective` (i.e. if it is a `Projective{2,3}` or `Affine{2,3}`).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907001,"byte_end":907108,"line_start":350,"line_end":350,"column_start":5,"column_end":112}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907113,"byte_end":907116,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907121,"byte_end":907135,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907140,"byte_end":907147,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907152,"byte_end":907191,"line_start":354,"line_end":354,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907196,"byte_end":907238,"line_start":355,"line_end":355,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907243,"byte_end":907246,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907251,"byte_end":907291,"line_start":357,"line_end":357,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907296,"byte_end":907335,"line_start":358,"line_end":358,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907340,"byte_end":907380,"line_start":359,"line_end":359,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907385,"byte_end":907434,"line_start":360,"line_end":360,"column_start":5,"column_end":54}},{"value":"/ let inv_t = t.try_inverse().unwrap();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907439,"byte_end":907480,"line_start":361,"line_end":361,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907485,"byte_end":907544,"line_start":362,"line_end":362,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907549,"byte_end":907608,"line_start":363,"line_end":363,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907613,"byte_end":907616,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907621,"byte_end":907648,"line_start":365,"line_end":365,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907653,"byte_end":907692,"line_start":366,"line_end":366,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907697,"byte_end":907736,"line_start":367,"line_end":367,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907741,"byte_end":907781,"line_start":368,"line_end":368,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907786,"byte_end":907835,"line_start":369,"line_end":369,"column_start":5,"column_end":54}},{"value":"/ assert!(t.try_inverse().is_none());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907840,"byte_end":907879,"line_start":370,"line_end":370,"column_start":5,"column_end":44}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907884,"byte_end":907891,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":907896,"byte_end":907905,"line_start":372,"line_end":372,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908825,"byte_end":908832,"line_start":398,"line_end":398,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform<N, D, C>>::inverse","value":"pub fn inverse(Self) -> Transform<N, D, C> where\nC: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`\n category (i.e., a `Transform{2,3}` may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation. Use `.try_inverse` if this transform has the `TGeneral`","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908129,"byte_end":908217,"line_start":381,"line_end":381,"column_start":5,"column_end":93}},{"value":"/ category (i.e., a `Transform{2,3}` may not be invertible).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908222,"byte_end":908284,"line_start":382,"line_end":382,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908289,"byte_end":908292,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908297,"byte_end":908311,"line_start":384,"line_end":384,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908316,"byte_end":908323,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908328,"byte_end":908367,"line_start":386,"line_end":386,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908372,"byte_end":908415,"line_start":387,"line_end":387,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908420,"byte_end":908423,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908428,"byte_end":908468,"line_start":389,"line_end":389,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908473,"byte_end":908512,"line_start":390,"line_end":390,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908517,"byte_end":908557,"line_start":391,"line_end":391,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908562,"byte_end":908615,"line_start":392,"line_end":392,"column_start":5,"column_end":58}},{"value":"/ let inv_t = proj.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908620,"byte_end":908651,"line_start":393,"line_end":393,"column_start":5,"column_end":36}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908656,"byte_end":908719,"line_start":394,"line_end":394,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908724,"byte_end":908787,"line_start":395,"line_end":395,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908792,"byte_end":908799,"line_start":396,"line_end":396,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":908804,"byte_end":908813,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9422},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910019,"byte_end":910034,"line_start":429,"line_end":429,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<Transform<N, D, C>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this\n transformation has a subcategory of `TProjective`.","sig":null,"attributes":[{"value":"/ Attempts to invert this transformation in-place. You may use `.inverse_mut` instead of this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909034,"byte_end":909129,"line_start":404,"line_end":404,"column_start":5,"column_end":100}},{"value":"/ transformation has a subcategory of `TProjective`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909134,"byte_end":909188,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909193,"byte_end":909196,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909201,"byte_end":909215,"line_start":407,"line_end":407,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909220,"byte_end":909227,"line_start":408,"line_end":408,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909232,"byte_end":909271,"line_start":409,"line_end":409,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Transform2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909276,"byte_end":909318,"line_start":410,"line_end":410,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909323,"byte_end":909326,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909331,"byte_end":909371,"line_start":412,"line_end":412,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909376,"byte_end":909415,"line_start":413,"line_end":413,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909420,"byte_end":909460,"line_start":414,"line_end":414,"column_start":5,"column_end":45}},{"value":"/ let t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909465,"byte_end":909514,"line_start":415,"line_end":415,"column_start":5,"column_end":54}},{"value":"/ let mut inv_t = t;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909519,"byte_end":909541,"line_start":416,"line_end":416,"column_start":5,"column_end":27}},{"value":"/ assert!(inv_t.try_inverse_mut());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909546,"byte_end":909583,"line_start":417,"line_end":417,"column_start":5,"column_end":42}},{"value":"/ assert_relative_eq!(t * inv_t, Transform2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909588,"byte_end":909647,"line_start":418,"line_end":418,"column_start":5,"column_end":64}},{"value":"/ assert_relative_eq!(inv_t * t, Transform2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909652,"byte_end":909711,"line_start":419,"line_end":419,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909716,"byte_end":909719,"line_start":420,"line_end":420,"column_start":5,"column_end":8}},{"value":"/ // Non-invertible case.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909724,"byte_end":909751,"line_start":421,"line_end":421,"column_start":5,"column_end":32}},{"value":"/ let m = Matrix3::new(0.0, 2.0, 1.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909756,"byte_end":909795,"line_start":422,"line_end":422,"column_start":5,"column_end":44}},{"value":"/                      3.0, 0.0, 5.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909800,"byte_end":909839,"line_start":423,"line_end":423,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 0.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909844,"byte_end":909884,"line_start":424,"line_end":424,"column_start":5,"column_end":45}},{"value":"/ let mut t = Transform2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909889,"byte_end":909942,"line_start":425,"line_end":425,"column_start":5,"column_end":58}},{"value":"/ assert!(!t.try_inverse_mut());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909947,"byte_end":909981,"line_start":426,"line_end":426,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909986,"byte_end":909993,"line_start":427,"line_end":427,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":909998,"byte_end":910007,"line_start":428,"line_end":428,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9423},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910815,"byte_end":910826,"line_start":451,"line_end":451,"column_start":12,"column_end":23},"name":"inverse_mut","qualname":"<Transform<N, D, C>>::inverse_mut","value":"pub fn inverse_mut(&mut Self) where C: SubTCategoryOf<TProjective>","parent":null,"children":[],"decl_id":null,"docs":" Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the\n `TGeneral` category (it may not be invertible).","sig":null,"attributes":[{"value":"/ Inverts this transformation in-place. Use `.try_inverse_mut` if this transform has the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910105,"byte_end":910195,"line_start":433,"line_end":433,"column_start":5,"column_end":95}},{"value":"/ `TGeneral` category (it may not be invertible).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910200,"byte_end":910251,"line_start":434,"line_end":434,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910256,"byte_end":910259,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910264,"byte_end":910278,"line_start":436,"line_end":436,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910283,"byte_end":910290,"line_start":437,"line_end":437,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910295,"byte_end":910334,"line_start":438,"line_end":438,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Matrix3, Projective2};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910339,"byte_end":910382,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910387,"byte_end":910390,"line_start":440,"line_end":440,"column_start":5,"column_end":8}},{"value":"/ let m = Matrix3::new(2.0, 2.0, -0.3,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910395,"byte_end":910435,"line_start":441,"line_end":441,"column_start":5,"column_end":45}},{"value":"/                      3.0, 4.0, 0.1,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910440,"byte_end":910479,"line_start":442,"line_end":442,"column_start":5,"column_end":44}},{"value":"/                      0.0, 0.0, 1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910484,"byte_end":910524,"line_start":443,"line_end":443,"column_start":5,"column_end":45}},{"value":"/ let proj = Projective2::from_matrix_unchecked(m);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910529,"byte_end":910582,"line_start":444,"line_end":444,"column_start":5,"column_end":58}},{"value":"/ let mut inv_t = proj;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910587,"byte_end":910612,"line_start":445,"line_end":445,"column_start":5,"column_end":30}},{"value":"/ inv_t.inverse_mut();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910617,"byte_end":910641,"line_start":446,"line_end":446,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj * inv_t, Projective2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910646,"byte_end":910709,"line_start":447,"line_end":447,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(inv_t * proj, Projective2::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910714,"byte_end":910777,"line_start":448,"line_end":448,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910782,"byte_end":910789,"line_start":449,"line_end":449,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910794,"byte_end":910803,"line_start":450,"line_end":450,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9428},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911352,"byte_end":911367,"line_start":470,"line_end":470,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform<N, D, C>>::transform_point","value":"pub fn transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by this transformation.","sig":null,"attributes":[{"value":"/ Transform the given point by this transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911205,"byte_end":911258,"line_start":466,"line_end":466,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911263,"byte_end":911266,"line_start":467,"line_end":467,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911271,"byte_end":911326,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911331,"byte_end":911340,"line_start":469,"line_end":469,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9429},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911654,"byte_end":911670,"line_start":479,"line_end":479,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform<N, D, C>>::transform_vector","value":"pub fn transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by this transformation, ignoring the\n translational component of the transformation.","sig":null,"attributes":[{"value":"/ Transform the given vector by this transformation, ignoring the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911439,"byte_end":911506,"line_start":474,"line_end":474,"column_start":5,"column_end":72}},{"value":"/ translational component of the transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911511,"byte_end":911561,"line_start":475,"line_end":475,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911566,"byte_end":911569,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ This is the same as the multiplication `self * v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911574,"byte_end":911628,"line_start":477,"line_end":477,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911633,"byte_end":911642,"line_start":478,"line_end":478,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9434},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912222,"byte_end":912245,"line_start":495,"line_end":495,"column_start":12,"column_end":35},"name":"inverse_transform_point","qualname":"<Transform<N, D, C>>::inverse_transform_point","value":"pub fn inverse_transform_point(&Self, &Point<N, D>) -> Point<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given point by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the point.\n","sig":null,"attributes":[{"value":"/ Transform the given point by the inverse of this transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912030,"byte_end":912098,"line_start":491,"line_end":491,"column_start":5,"column_end":73}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912103,"byte_end":912177,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/ the point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912182,"byte_end":912196,"line_start":493,"line_end":493,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912201,"byte_end":912210,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9435},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912531,"byte_end":912555,"line_start":503,"line_end":503,"column_start":12,"column_end":36},"name":"inverse_transform_vector","qualname":"<Transform<N, D, C>>::inverse_transform_vector","value":"pub fn inverse_transform_vector(&Self, &VectorN<N, D>) -> VectorN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Transform the given vector by the inverse of this transformation.\n This may be cheaper than inverting the transformation and transforming\n the vector.\n","sig":null,"attributes":[{"value":"/ Transform the given vector by the inverse of this transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912337,"byte_end":912406,"line_start":499,"line_end":499,"column_start":5,"column_end":74}},{"value":"/ This may be cheaper than inverting the transformation and transforming","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912411,"byte_end":912485,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ the vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912490,"byte_end":912505,"line_start":501,"line_end":501,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912510,"byte_end":912519,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9439},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912958,"byte_end":912968,"line_start":514,"line_end":514,"column_start":12,"column_end":22},"name":"matrix_mut","qualname":"<Transform<N, D, TGeneral>>::matrix_mut","value":"pub fn matrix_mut(&mut Self) -> &mut MatrixN<N, DimNameSum<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this\n transformation category is not `TGeneral`.\n","sig":null,"attributes":[{"value":"/ A mutable reference to underlying matrix. Use `.matrix_mut_unchecked` instead if this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912792,"byte_end":912881,"line_start":511,"line_end":511,"column_start":5,"column_end":94}},{"value":"/ transformation category is not `TGeneral`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912886,"byte_end":912932,"line_start":512,"line_end":512,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912937,"byte_end":912946,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Type","id":{"krate":0,"index":9585},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919359,"byte_end":919369,"line_start":6,"line_end":6,"column_start":10,"column_end":20},"name":"Transform2","qualname":"::geometry::transform_alias::Transform2","value":"Transform<N, U2, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 2D general transformation that may not be invertible. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D general transformation that may not be invertible. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919253,"byte_end":919349,"line_start":5,"line_end":5,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":9587},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919494,"byte_end":919505,"line_start":8,"line_end":8,"column_start":10,"column_end":21},"name":"Projective2","qualname":"::geometry::transform_alias::Projective2","value":"Transform<N, U2, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 2D general transformation. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 2D general transformation. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919403,"byte_end":919484,"line_start":7,"line_end":7,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":9589},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919620,"byte_end":919627,"line_start":10,"line_end":10,"column_start":10,"column_end":17},"name":"Affine2","qualname":"::geometry::transform_alias::Affine2","value":"Transform<N, U2, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 2D affine transformation. Stored as an homogeneous 3x3 matrix.\n","sig":null,"attributes":[{"value":"/ A 2D affine transformation. Stored as an homogeneous 3x3 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919542,"byte_end":919610,"line_start":9,"line_end":9,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":9591},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919767,"byte_end":919777,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"Transform3","qualname":"::geometry::transform_alias::Transform3","value":"Transform<N, U3, TGeneral>","parent":null,"children":[],"decl_id":null,"docs":" A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D general transformation that may not be inversible. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919661,"byte_end":919757,"line_start":12,"line_end":12,"column_start":1,"column_end":97}}]},{"kind":"Type","id":{"krate":0,"index":9593},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919902,"byte_end":919913,"line_start":15,"line_end":15,"column_start":10,"column_end":21},"name":"Projective3","qualname":"::geometry::transform_alias::Projective3","value":"Transform<N, U3, TProjective>","parent":null,"children":[],"decl_id":null,"docs":" An invertible 3D general transformation. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ An invertible 3D general transformation. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919811,"byte_end":919892,"line_start":14,"line_end":14,"column_start":1,"column_end":82}}]},{"kind":"Type","id":{"krate":0,"index":9595},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":920028,"byte_end":920035,"line_start":17,"line_end":17,"column_start":10,"column_end":17},"name":"Affine3","qualname":"::geometry::transform_alias::Affine3","value":"Transform<N, U3, TAffine>","parent":null,"children":[],"decl_id":null,"docs":" A 3D affine transformation. Stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D affine transformation. Stored as an homogeneous 4x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alias.rs","byte_start":919950,"byte_end":920018,"line_start":16,"line_end":16,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":9635},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921294,"byte_end":921302,"line_start":43,"line_end":43,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform<N, D, C>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new identity transform.","sig":null,"attributes":[{"value":"/ Creates a new identity transform.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920457,"byte_end":920494,"line_start":14,"line_end":14,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920499,"byte_end":920502,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920507,"byte_end":920520,"line_start":16,"line_end":16,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920525,"byte_end":920528,"line_start":17,"line_end":17,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920533,"byte_end":920540,"line_start":18,"line_end":18,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Transform2, Projective2, Affine2, Transform3, Projective3, Affine3, Point2, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920545,"byte_end":920650,"line_start":19,"line_end":19,"column_start":5,"column_end":110}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920655,"byte_end":920658,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ let pt = Point2::new(1.0, 2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920663,"byte_end":920698,"line_start":21,"line_end":21,"column_start":5,"column_end":40}},{"value":"/ let t = Projective2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920703,"byte_end":920739,"line_start":22,"line_end":22,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920744,"byte_end":920771,"line_start":23,"line_end":23,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920776,"byte_end":920779,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920784,"byte_end":920818,"line_start":25,"line_end":25,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920823,"byte_end":920852,"line_start":26,"line_end":26,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920857,"byte_end":920860,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform2::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920865,"byte_end":920902,"line_start":28,"line_end":28,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920907,"byte_end":920936,"line_start":29,"line_end":29,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920941,"byte_end":920944,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ // Also works in 3D.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920949,"byte_end":920973,"line_start":31,"line_end":31,"column_start":5,"column_end":29}},{"value":"/ let pt = Point3::new(1.0, 2.0, 3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920978,"byte_end":921018,"line_start":32,"line_end":32,"column_start":5,"column_end":45}},{"value":"/ let t = Projective3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921023,"byte_end":921059,"line_start":33,"line_end":33,"column_start":5,"column_end":41}},{"value":"/ assert_eq!(t * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921064,"byte_end":921091,"line_start":34,"line_end":34,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921096,"byte_end":921099,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ let aff = Affine3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921104,"byte_end":921138,"line_start":36,"line_end":36,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921143,"byte_end":921172,"line_start":37,"line_end":37,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921177,"byte_end":921180,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ let aff = Transform3::identity();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921185,"byte_end":921222,"line_start":39,"line_end":39,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(aff * pt, pt);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921227,"byte_end":921256,"line_start":40,"line_end":40,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921261,"byte_end":921268,"line_start":41,"line_end":41,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921273,"byte_end":921282,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":9888},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947680,"byte_end":947690,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"Reflection","qualname":"::geometry::reflection::Reflection","value":"Reflection {  }","parent":null,"children":[{"krate":0,"index":9892},{"krate":0,"index":9893}],"decl_id":null,"docs":" A reflection wrt. a plane.\n","sig":null,"attributes":[{"value":"/ A reflection wrt. a plane.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947638,"byte_end":947668,"line_start":10,"line_end":10,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":9898},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948102,"byte_end":948105,"line_start":21,"line_end":21,"column_start":12,"column_end":15},"name":"new","qualname":"<Reflection<N, D, S>>::new","value":"pub fn new(Unit<Vector<N, D, S>>, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt the plane orthogonal to the given axis and bias.","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt the plane orthogonal to the given axis and bias.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947847,"byte_end":947928,"line_start":17,"line_end":17,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947933,"byte_end":947936,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ The bias is the position of the plane on the axis. In particular, a bias equal to zero","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947941,"byte_end":948031,"line_start":19,"line_end":19,"column_start":5,"column_end":95}},{"value":"/ represents a plane that passes through the origin.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948036,"byte_end":948090,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":9899},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948371,"byte_end":948391,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"new_containing_point","qualname":"<Reflection<N, D, S>>::new_containing_point","value":"pub fn new_containing_point(Unit<Vector<N, D, S>>, &Point<N, D>) -> Self where\nD: DimName, DefaultAllocator: Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the\n point `pt`.\n","sig":null,"attributes":[{"value":"/ Creates a new reflection wrt. the plane orthogonal to the given axis and that contains the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948245,"byte_end":948339,"line_start":28,"line_end":28,"column_start":5,"column_end":99}},{"value":"/ point `pt`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948344,"byte_end":948359,"line_start":29,"line_end":29,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":9900},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948667,"byte_end":948671,"line_start":43,"line_end":43,"column_start":12,"column_end":16},"name":"axis","qualname":"<Reflection<N, D, S>>::axis","value":"pub fn axis(&Self) -> &Vector<N, D, S>","parent":null,"children":[],"decl_id":null,"docs":" The reflexion axis.\n","sig":null,"attributes":[{"value":"/ The reflexion axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948632,"byte_end":948655,"line_start":42,"line_end":42,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":9901},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948856,"byte_end":948863,"line_start":49,"line_end":49,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Reflection<N, D, S>>::reflect","value":"pub fn reflect<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":948793,"byte_end":948844,"line_start":48,"line_end":48,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9905},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":949652,"byte_end":949669,"line_start":66,"line_end":66,"column_start":12,"column_end":29},"name":"reflect_with_sign","qualname":"<Reflection<N, D, S>>::reflect_with_sign","value":"pub fn reflect_with_sign<R2: Dim, C2: Dim,\n                         S2>(&Self, &mut Matrix<N, R2, C2, S2>, N) where\nS2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the columns of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":949589,"byte_end":949640,"line_start":65,"line_end":65,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":9909},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":950419,"byte_end":950431,"line_start":82,"line_end":82,"column_start":12,"column_end":24},"name":"reflect_rows","qualname":"<Reflection<N, D, S>>::reflect_rows","value":"pub fn reflect_rows<R2: Dim, C2: Dim, S2,\n                    S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                        &mut Vector<N, R2, S3>) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":950359,"byte_end":950407,"line_start":81,"line_end":81,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":9914},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":951011,"byte_end":951033,"line_start":102,"line_end":102,"column_start":12,"column_end":34},"name":"reflect_rows_with_sign","qualname":"<Reflection<N, D, S>>::reflect_rows_with_sign","value":"pub fn reflect_rows_with_sign<R2: Dim, C2: Dim, S2,\n                              S3>(&Self, &mut Matrix<N, R2, C2, S2>,\n                                  &mut Vector<N, R2, S3>, N) where\nS2: StorageMut<N, R2, C2>, S3: StorageMut<N, R2>,\nShapeConstraint: DimEq<C2, D> + AreMultipliable<R2, C2, D, U1>","parent":null,"children":[],"decl_id":null,"docs":" Applies the reflection to the rows of `lhs`.\n","sig":null,"attributes":[{"value":"/ Applies the reflection to the rows of `lhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":950951,"byte_end":950999,"line_start":101,"line_end":101,"column_start":5,"column_end":53}}]},{"kind":"Struct","id":{"krate":0,"index":9965},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952126,"byte_end":952139,"line_start":20,"line_end":20,"column_start":12,"column_end":25},"name":"Orthographic3","qualname":"::geometry::orthographic::Orthographic3","value":"Orthographic3 {  }","parent":null,"children":[{"krate":0,"index":9967}],"decl_id":null,"docs":" A 3D orthographic projection stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D orthographic projection stored as an homogeneous 4x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952045,"byte_end":952114,"line_start":19,"line_end":19,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":9981},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955886,"byte_end":955889,"line_start":108,"line_end":108,"column_start":12,"column_end":15},"name":"new","qualname":"<Orthographic3<N>>::new","value":"pub fn new(N, N, N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix.","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953331,"byte_end":953380,"line_start":65,"line_end":65,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953385,"byte_end":953388,"line_start":66,"line_end":66,"column_start":5,"column_end":8}},{"value":"/ This follows the OpenGL convention, so this will flip the `z` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953393,"byte_end":953464,"line_start":67,"line_end":67,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953469,"byte_end":953472,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953477,"byte_end":953490,"line_start":69,"line_end":69,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953495,"byte_end":953502,"line_start":70,"line_end":70,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953507,"byte_end":953546,"line_start":71,"line_end":71,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953551,"byte_end":953595,"line_start":72,"line_end":72,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953600,"byte_end":953669,"line_start":73,"line_end":73,"column_start":5,"column_end":74}},{"value":"/ // Check this projection actually transforms the view cuboid into the double-unit cube.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953674,"byte_end":953765,"line_start":74,"line_end":74,"column_start":5,"column_end":96}},{"value":"/ // See https://www.nalgebra.org/projections/#orthographic-projection for more details.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953770,"byte_end":953860,"line_start":75,"line_end":75,"column_start":5,"column_end":95}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953865,"byte_end":953906,"line_start":76,"line_end":76,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953911,"byte_end":953955,"line_start":77,"line_end":77,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953960,"byte_end":954002,"line_start":78,"line_end":78,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954007,"byte_end":954052,"line_start":79,"line_end":79,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954057,"byte_end":954099,"line_start":80,"line_end":80,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954104,"byte_end":954149,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954154,"byte_end":954197,"line_start":82,"line_end":82,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954202,"byte_end":954248,"line_start":83,"line_end":83,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954253,"byte_end":954256,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954261,"byte_end":954341,"line_start":85,"line_end":85,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954346,"byte_end":954426,"line_start":86,"line_end":86,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954431,"byte_end":954511,"line_start":87,"line_end":87,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954516,"byte_end":954596,"line_start":88,"line_end":88,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954601,"byte_end":954681,"line_start":89,"line_end":89,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954686,"byte_end":954766,"line_start":90,"line_end":90,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954771,"byte_end":954851,"line_start":91,"line_end":91,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954856,"byte_end":954936,"line_start":92,"line_end":92,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954941,"byte_end":954944,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/ // This also works with flipped axis. In other words, we allow that","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":954949,"byte_end":955020,"line_start":94,"line_end":94,"column_start":5,"column_end":76}},{"value":"/ // `left > right`, `bottom > top`, and/or `znear > zfar`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955025,"byte_end":955086,"line_start":95,"line_end":95,"column_start":5,"column_end":66}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955091,"byte_end":955160,"line_start":96,"line_end":96,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955165,"byte_end":955168,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955173,"byte_end":955253,"line_start":98,"line_end":98,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955258,"byte_end":955338,"line_start":99,"line_end":99,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955343,"byte_end":955423,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955428,"byte_end":955508,"line_start":101,"line_end":101,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955513,"byte_end":955593,"line_start":102,"line_end":102,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955598,"byte_end":955678,"line_start":103,"line_end":103,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955683,"byte_end":955763,"line_start":104,"line_end":104,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955768,"byte_end":955848,"line_start":105,"line_end":105,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955853,"byte_end":955860,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":955865,"byte_end":955874,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9982},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956976,"byte_end":956997,"line_start":137,"line_end":137,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Orthographic3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D orthographic matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D orthographic matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956223,"byte_end":956294,"line_start":119,"line_end":119,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956299,"byte_end":956302,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956307,"byte_end":956396,"line_start":121,"line_end":121,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956401,"byte_end":956416,"line_start":122,"line_end":122,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956421,"byte_end":956424,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956429,"byte_end":956442,"line_start":124,"line_end":124,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956447,"byte_end":956454,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956459,"byte_end":956512,"line_start":126,"line_end":126,"column_start":5,"column_end":58}},{"value":"/ let mat = Matrix4::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956517,"byte_end":956544,"line_start":127,"line_end":127,"column_start":5,"column_end":32}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956549,"byte_end":956605,"line_start":128,"line_end":128,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956610,"byte_end":956667,"line_start":129,"line_end":129,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956672,"byte_end":956732,"line_start":130,"line_end":130,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956737,"byte_end":956784,"line_start":131,"line_end":131,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956789,"byte_end":956795,"line_start":132,"line_end":132,"column_start":5,"column_end":11}},{"value":"/ let proj = Orthographic3::from_matrix_unchecked(mat);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956800,"byte_end":956857,"line_start":133,"line_end":133,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(proj, Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956862,"byte_end":956938,"line_start":134,"line_end":134,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956943,"byte_end":956950,"line_start":135,"line_end":135,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":956955,"byte_end":956964,"line_start":136,"line_end":136,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9983},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957198,"byte_end":957206,"line_start":143,"line_end":143,"column_start":12,"column_end":20},"name":"from_fov","qualname":"<Orthographic3<N>>::from_fov","value":"pub fn from_fov(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.\n","sig":null,"attributes":[{"value":"/ Creates a new orthographic projection matrix from an aspect ratio and the vertical field of view.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957071,"byte_end":957172,"line_start":141,"line_end":141,"column_start":5,"column_end":106}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957177,"byte_end":957186,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9984},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958583,"byte_end":958590,"line_start":185,"line_end":185,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Orthographic3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957814,"byte_end":957877,"line_start":167,"line_end":167,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957882,"byte_end":957885,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957890,"byte_end":957903,"line_start":169,"line_end":169,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957908,"byte_end":957915,"line_start":170,"line_end":170,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957920,"byte_end":957959,"line_start":171,"line_end":171,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":957964,"byte_end":958017,"line_start":172,"line_end":172,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958022,"byte_end":958091,"line_start":173,"line_end":173,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958096,"byte_end":958125,"line_start":174,"line_end":174,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958130,"byte_end":958133,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958138,"byte_end":958207,"line_start":176,"line_end":176,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958212,"byte_end":958281,"line_start":177,"line_end":177,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958286,"byte_end":958289,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958294,"byte_end":958363,"line_start":179,"line_end":179,"column_start":5,"column_end":74}},{"value":"/ let inv = proj.inverse();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958368,"byte_end":958397,"line_start":180,"line_end":180,"column_start":5,"column_end":34}},{"value":"/ assert_relative_eq!(inv * proj.as_matrix(), Matrix4::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958402,"byte_end":958471,"line_start":181,"line_end":181,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.as_matrix() * inv, Matrix4::identity());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958476,"byte_end":958545,"line_start":182,"line_end":182,"column_start":5,"column_end":74}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958550,"byte_end":958557,"line_start":183,"line_end":183,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":958562,"byte_end":958571,"line_start":184,"line_end":184,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9985},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959702,"byte_end":959716,"line_start":218,"line_end":218,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Orthographic3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959103,"byte_end":959153,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959158,"byte_end":959161,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959166,"byte_end":959179,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959184,"byte_end":959191,"line_start":206,"line_end":206,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959196,"byte_end":959249,"line_start":207,"line_end":207,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959254,"byte_end":959323,"line_start":208,"line_end":208,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959328,"byte_end":959360,"line_start":209,"line_end":209,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959365,"byte_end":959421,"line_start":210,"line_end":210,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959426,"byte_end":959483,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959488,"byte_end":959548,"line_start":212,"line_end":212,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959553,"byte_end":959600,"line_start":213,"line_end":213,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959605,"byte_end":959611,"line_start":214,"line_end":214,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.to_homogeneous(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959616,"byte_end":959664,"line_start":215,"line_end":215,"column_start":5,"column_end":53}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959669,"byte_end":959676,"line_start":216,"line_end":216,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959681,"byte_end":959690,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9986},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960384,"byte_end":960393,"line_start":237,"line_end":237,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Orthographic3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959771,"byte_end":959839,"line_start":222,"line_end":222,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959844,"byte_end":959847,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959852,"byte_end":959865,"line_start":224,"line_end":224,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959870,"byte_end":959877,"line_start":225,"line_end":225,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959882,"byte_end":959935,"line_start":226,"line_end":226,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":959940,"byte_end":960009,"line_start":227,"line_end":227,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960014,"byte_end":960046,"line_start":228,"line_end":228,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960051,"byte_end":960107,"line_start":229,"line_end":229,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960112,"byte_end":960169,"line_start":230,"line_end":230,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960174,"byte_end":960234,"line_start":231,"line_end":231,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960239,"byte_end":960286,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960291,"byte_end":960297,"line_start":233,"line_end":233,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(*proj.as_matrix(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960302,"byte_end":960346,"line_start":234,"line_end":234,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960351,"byte_end":960358,"line_start":235,"line_end":235,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960363,"byte_end":960372,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9987},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960784,"byte_end":960797,"line_start":250,"line_end":250,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Orthographic3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960450,"byte_end":960513,"line_start":241,"line_end":241,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960518,"byte_end":960521,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960526,"byte_end":960539,"line_start":243,"line_end":243,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960544,"byte_end":960551,"line_start":244,"line_end":244,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960556,"byte_end":960590,"line_start":245,"line_end":245,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960595,"byte_end":960664,"line_start":246,"line_end":246,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.as_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960669,"byte_end":960746,"line_start":247,"line_end":247,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960751,"byte_end":960758,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960763,"byte_end":960772,"line_start":249,"line_end":249,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9988},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961196,"byte_end":961209,"line_start":263,"line_end":263,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Orthographic3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960877,"byte_end":960925,"line_start":254,"line_end":254,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960930,"byte_end":960933,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960938,"byte_end":960951,"line_start":256,"line_end":256,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960956,"byte_end":960963,"line_start":257,"line_end":257,"column_start":5,"column_end":12}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":960968,"byte_end":961002,"line_start":258,"line_end":258,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961007,"byte_end":961076,"line_start":259,"line_end":259,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(proj.to_projective().to_homogeneous(), proj.to_homogeneous());","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961081,"byte_end":961158,"line_start":260,"line_end":260,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961163,"byte_end":961170,"line_start":261,"line_end":261,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961175,"byte_end":961184,"line_start":262,"line_end":262,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9989},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961941,"byte_end":961951,"line_start":283,"line_end":283,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Orthographic3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961304,"byte_end":961352,"line_start":267,"line_end":267,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961357,"byte_end":961360,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961365,"byte_end":961378,"line_start":269,"line_end":269,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961383,"byte_end":961390,"line_start":270,"line_end":270,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961395,"byte_end":961434,"line_start":271,"line_end":271,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3, Matrix4};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961439,"byte_end":961492,"line_start":272,"line_end":272,"column_start":5,"column_end":58}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961497,"byte_end":961566,"line_start":273,"line_end":273,"column_start":5,"column_end":74}},{"value":"/ let expected = Matrix4::new(","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961571,"byte_end":961603,"line_start":274,"line_end":274,"column_start":5,"column_end":37}},{"value":"/     2.0 / 9.0, 0.0,        0.0,         -11.0 / 9.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961608,"byte_end":961664,"line_start":275,"line_end":275,"column_start":5,"column_end":61}},{"value":"/     0.0,       2.0 / 18.0, 0.0,         -22.0 / 18.0,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961669,"byte_end":961726,"line_start":276,"line_end":276,"column_start":5,"column_end":62}},{"value":"/     0.0,       0.0,       -2.0 / 999.9, -1000.1 / 999.9,","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961731,"byte_end":961791,"line_start":277,"line_end":277,"column_start":5,"column_end":65}},{"value":"/     0.0,       0.0,        0.0,         1.0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961796,"byte_end":961843,"line_start":278,"line_end":278,"column_start":5,"column_end":52}},{"value":"/ );","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961848,"byte_end":961854,"line_start":279,"line_end":279,"column_start":5,"column_end":11}},{"value":"/ assert_eq!(proj.into_inner(), expected);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961859,"byte_end":961903,"line_start":280,"line_end":280,"column_start":5,"column_end":49}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961908,"byte_end":961915,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":961920,"byte_end":961929,"line_start":282,"line_end":282,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9990},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962194,"byte_end":962200,"line_start":291,"line_end":291,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Orthographic3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Orthographic3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962005,"byte_end":962053,"line_start":287,"line_end":287,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Orthographic3::into_inner] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962058,"byte_end":962114,"line_start":288,"line_end":288,"column_start":5,"column_end":61}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962119,"byte_end":962168,"line_start":289,"line_end":289,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962173,"byte_end":962182,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9991},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962721,"byte_end":962725,"line_start":307,"line_end":307,"column_start":12,"column_end":16},"name":"left","qualname":"<Orthographic3<N>>::left","value":"pub fn left(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The left offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962254,"byte_end":962293,"line_start":295,"line_end":295,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962298,"byte_end":962301,"line_start":296,"line_end":296,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962306,"byte_end":962313,"line_start":297,"line_end":297,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962318,"byte_end":962357,"line_start":298,"line_end":298,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962362,"byte_end":962396,"line_start":299,"line_end":299,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962401,"byte_end":962470,"line_start":300,"line_end":300,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962475,"byte_end":962535,"line_start":301,"line_end":301,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962540,"byte_end":962543,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962548,"byte_end":962617,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.left(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962622,"byte_end":962683,"line_start":304,"line_end":304,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962688,"byte_end":962695,"line_start":305,"line_end":305,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962700,"byte_end":962709,"line_start":306,"line_end":306,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9992},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963285,"byte_end":963290,"line_start":323,"line_end":323,"column_start":12,"column_end":17},"name":"right","qualname":"<Orthographic3<N>>::right","value":"pub fn right(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The right offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962815,"byte_end":962855,"line_start":311,"line_end":311,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962860,"byte_end":962863,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962868,"byte_end":962875,"line_start":313,"line_end":313,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962880,"byte_end":962919,"line_start":314,"line_end":314,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962924,"byte_end":962958,"line_start":315,"line_end":315,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":962963,"byte_end":963032,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 10.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963037,"byte_end":963099,"line_start":317,"line_end":317,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963104,"byte_end":963107,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963112,"byte_end":963181,"line_start":319,"line_end":319,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.right(), 1.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963186,"byte_end":963247,"line_start":320,"line_end":320,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963252,"byte_end":963259,"line_start":321,"line_end":321,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963264,"byte_end":963273,"line_start":322,"line_end":322,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9993},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963852,"byte_end":963858,"line_start":339,"line_end":339,"column_start":12,"column_end":18},"name":"bottom","qualname":"<Orthographic3<N>>::bottom","value":"pub fn bottom(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The bottom offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963379,"byte_end":963420,"line_start":327,"line_end":327,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963425,"byte_end":963428,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963433,"byte_end":963440,"line_start":329,"line_end":329,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963445,"byte_end":963484,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963489,"byte_end":963523,"line_start":331,"line_end":331,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963528,"byte_end":963597,"line_start":332,"line_end":332,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963602,"byte_end":963664,"line_start":333,"line_end":333,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963669,"byte_end":963672,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963677,"byte_end":963746,"line_start":335,"line_end":335,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.bottom(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963751,"byte_end":963814,"line_start":336,"line_end":336,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963819,"byte_end":963826,"line_start":337,"line_end":337,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963831,"byte_end":963840,"line_start":338,"line_end":338,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9994},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964412,"byte_end":964415,"line_start":355,"line_end":355,"column_start":12,"column_end":15},"name":"top","qualname":"<Orthographic3<N>>::top","value":"pub fn top(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The top offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963948,"byte_end":963986,"line_start":343,"line_end":343,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963991,"byte_end":963994,"line_start":344,"line_end":344,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":963999,"byte_end":964006,"line_start":345,"line_end":345,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964011,"byte_end":964050,"line_start":346,"line_end":346,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964055,"byte_end":964089,"line_start":347,"line_end":347,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964094,"byte_end":964163,"line_start":348,"line_end":348,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964168,"byte_end":964228,"line_start":349,"line_end":349,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964233,"byte_end":964236,"line_start":350,"line_end":350,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964241,"byte_end":964310,"line_start":351,"line_end":351,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.top(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964315,"byte_end":964374,"line_start":352,"line_end":352,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964379,"byte_end":964386,"line_start":353,"line_end":353,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964391,"byte_end":964400,"line_start":354,"line_end":354,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9995},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964981,"byte_end":964986,"line_start":371,"line_end":371,"column_start":12,"column_end":17},"name":"znear","qualname":"<Orthographic3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The near plane offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964504,"byte_end":964549,"line_start":359,"line_end":359,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964554,"byte_end":964557,"line_start":360,"line_end":360,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964562,"byte_end":964569,"line_start":361,"line_end":361,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964574,"byte_end":964613,"line_start":362,"line_end":362,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964618,"byte_end":964652,"line_start":363,"line_end":363,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964657,"byte_end":964726,"line_start":364,"line_end":364,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964731,"byte_end":964792,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964797,"byte_end":964800,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964805,"byte_end":964874,"line_start":367,"line_end":367,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.znear(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964879,"byte_end":964943,"line_start":368,"line_end":368,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964948,"byte_end":964955,"line_start":369,"line_end":369,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":964960,"byte_end":964969,"line_start":370,"line_end":370,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9996},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965549,"byte_end":965553,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Orthographic3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ The far plane offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965075,"byte_end":965119,"line_start":375,"line_end":375,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965124,"byte_end":965127,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965132,"byte_end":965139,"line_start":377,"line_end":377,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965144,"byte_end":965183,"line_start":378,"line_end":378,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965188,"byte_end":965222,"line_start":379,"line_end":379,"column_start":5,"column_end":39}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965227,"byte_end":965296,"line_start":380,"line_end":380,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 1000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965301,"byte_end":965364,"line_start":381,"line_end":381,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965369,"byte_end":965372,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ let proj = Orthographic3::new(10.0, 1.0, 20.0, 2.0, 1000.0, 0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965377,"byte_end":965446,"line_start":383,"line_end":383,"column_start":5,"column_end":74}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.1, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965451,"byte_end":965511,"line_start":384,"line_end":384,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965516,"byte_end":965523,"line_start":385,"line_end":385,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965528,"byte_end":965537,"line_start":386,"line_end":386,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9997},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967101,"byte_end":967114,"line_start":419,"line_end":419,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Orthographic3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965718,"byte_end":965774,"line_start":392,"line_end":392,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965779,"byte_end":965782,"line_start":393,"line_end":393,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965787,"byte_end":965800,"line_start":394,"line_end":394,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965805,"byte_end":965812,"line_start":395,"line_end":395,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965817,"byte_end":965856,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965861,"byte_end":965905,"line_start":397,"line_end":397,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965910,"byte_end":965979,"line_start":398,"line_end":398,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965984,"byte_end":965987,"line_start":399,"line_end":399,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(1.0, 2.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":965992,"byte_end":966033,"line_start":400,"line_end":400,"column_start":5,"column_end":46}},{"value":"/ let p2 = Point3::new(1.0, 2.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966038,"byte_end":966082,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"/ let p3 = Point3::new(1.0, 20.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966087,"byte_end":966129,"line_start":402,"line_end":402,"column_start":5,"column_end":47}},{"value":"/ let p4 = Point3::new(1.0, 20.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966134,"byte_end":966179,"line_start":403,"line_end":403,"column_start":5,"column_end":50}},{"value":"/ let p5 = Point3::new(10.0, 2.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966184,"byte_end":966226,"line_start":404,"line_end":404,"column_start":5,"column_end":47}},{"value":"/ let p6 = Point3::new(10.0, 2.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966231,"byte_end":966276,"line_start":405,"line_end":405,"column_start":5,"column_end":50}},{"value":"/ let p7 = Point3::new(10.0, 20.0, -0.1);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966281,"byte_end":966324,"line_start":406,"line_end":406,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new(10.0, 20.0, -1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966329,"byte_end":966375,"line_start":407,"line_end":407,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966380,"byte_end":966383,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_point(&p1), Point3::new(-1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966388,"byte_end":966468,"line_start":409,"line_end":409,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p2), Point3::new(-1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966473,"byte_end":966553,"line_start":410,"line_end":410,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p3), Point3::new(-1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966558,"byte_end":966638,"line_start":411,"line_end":411,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p4), Point3::new(-1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966643,"byte_end":966723,"line_start":412,"line_end":412,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p5), Point3::new( 1.0, -1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966728,"byte_end":966808,"line_start":413,"line_end":413,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p6), Point3::new( 1.0, -1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966813,"byte_end":966893,"line_start":414,"line_end":414,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p7), Point3::new( 1.0,  1.0, -1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966898,"byte_end":966978,"line_start":415,"line_end":415,"column_start":5,"column_end":85}},{"value":"/ assert_relative_eq!(proj.project_point(&p8), Point3::new( 1.0,  1.0,  1.0));","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":966983,"byte_end":967063,"line_start":416,"line_end":416,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967068,"byte_end":967075,"line_start":417,"line_end":417,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967080,"byte_end":967089,"line_start":418,"line_end":418,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9998},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968952,"byte_end":968967,"line_start":454,"line_end":454,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Orthographic3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the underlying matrix inverse.","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the underlying matrix inverse.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967380,"byte_end":967465,"line_start":427,"line_end":427,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967470,"byte_end":967473,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967478,"byte_end":967491,"line_start":429,"line_end":429,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967496,"byte_end":967503,"line_start":430,"line_end":430,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967508,"byte_end":967547,"line_start":431,"line_end":431,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Point3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967552,"byte_end":967596,"line_start":432,"line_end":432,"column_start":5,"column_end":49}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967601,"byte_end":967670,"line_start":433,"line_end":433,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967675,"byte_end":967678,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ let p1 = Point3::new(-1.0, -1.0, -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967683,"byte_end":967726,"line_start":435,"line_end":435,"column_start":5,"column_end":48}},{"value":"/ let p2 = Point3::new(-1.0, -1.0,  1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967731,"byte_end":967774,"line_start":436,"line_end":436,"column_start":5,"column_end":48}},{"value":"/ let p3 = Point3::new(-1.0,  1.0, -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967779,"byte_end":967822,"line_start":437,"line_end":437,"column_start":5,"column_end":48}},{"value":"/ let p4 = Point3::new(-1.0,  1.0,  1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967827,"byte_end":967870,"line_start":438,"line_end":438,"column_start":5,"column_end":48}},{"value":"/ let p5 = Point3::new( 1.0, -1.0, -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967875,"byte_end":967918,"line_start":439,"line_end":439,"column_start":5,"column_end":48}},{"value":"/ let p6 = Point3::new( 1.0, -1.0,  1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967923,"byte_end":967966,"line_start":440,"line_end":440,"column_start":5,"column_end":48}},{"value":"/ let p7 = Point3::new( 1.0,  1.0, -1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":967971,"byte_end":968014,"line_start":441,"line_end":441,"column_start":5,"column_end":48}},{"value":"/ let p8 = Point3::new( 1.0,  1.0,  1.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968019,"byte_end":968062,"line_start":442,"line_end":442,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968067,"byte_end":968070,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p1), Point3::new(1.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968075,"byte_end":968173,"line_start":444,"line_end":444,"column_start":5,"column_end":103}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p2), Point3::new(1.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968178,"byte_end":968279,"line_start":445,"line_end":445,"column_start":5,"column_end":106}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p3), Point3::new(1.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968284,"byte_end":968383,"line_start":446,"line_end":446,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p4), Point3::new(1.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968388,"byte_end":968490,"line_start":447,"line_end":447,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p5), Point3::new(10.0, 2.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968495,"byte_end":968594,"line_start":448,"line_end":448,"column_start":5,"column_end":104}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p6), Point3::new(10.0, 2.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968599,"byte_end":968701,"line_start":449,"line_end":449,"column_start":5,"column_end":107}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p7), Point3::new(10.0, 20.0, -0.1), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968706,"byte_end":968806,"line_start":450,"line_end":450,"column_start":5,"column_end":105}},{"value":"/ assert_relative_eq!(proj.unproject_point(&p8), Point3::new(10.0, 20.0, -1000.0), epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968811,"byte_end":968914,"line_start":451,"line_end":451,"column_start":5,"column_end":108}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968919,"byte_end":968926,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":968931,"byte_end":968940,"line_start":453,"line_end":453,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":9999},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970055,"byte_end":970069,"line_start":482,"line_end":482,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Orthographic3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969314,"byte_end":969371,"line_start":463,"line_end":463,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969376,"byte_end":969379,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ Vectors are not affected by the translation part of the projection.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969384,"byte_end":969455,"line_start":465,"line_end":465,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969460,"byte_end":969463,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969468,"byte_end":969481,"line_start":467,"line_end":467,"column_start":5,"column_end":18}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969486,"byte_end":969493,"line_start":468,"line_end":468,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969498,"byte_end":969537,"line_start":469,"line_end":469,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::{Orthographic3, Vector3};","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969542,"byte_end":969587,"line_start":470,"line_end":470,"column_start":5,"column_end":50}},{"value":"/ let proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969592,"byte_end":969661,"line_start":471,"line_end":471,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969666,"byte_end":969669,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ let v1 = Vector3::x();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969674,"byte_end":969700,"line_start":473,"line_end":473,"column_start":5,"column_end":31}},{"value":"/ let v2 = Vector3::y();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969705,"byte_end":969731,"line_start":474,"line_end":474,"column_start":5,"column_end":31}},{"value":"/ let v3 = Vector3::z();","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969736,"byte_end":969762,"line_start":475,"line_end":475,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969767,"byte_end":969770,"line_start":476,"line_end":476,"column_start":5,"column_end":8}},{"value":"/ assert_relative_eq!(proj.project_vector(&v1), Vector3::x() * 2.0 / 9.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969775,"byte_end":969851,"line_start":477,"line_end":477,"column_start":5,"column_end":81}},{"value":"/ assert_relative_eq!(proj.project_vector(&v2), Vector3::y() * 2.0 / 18.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969856,"byte_end":969933,"line_start":478,"line_end":478,"column_start":5,"column_end":82}},{"value":"/ assert_relative_eq!(proj.project_vector(&v3), Vector3::z() * -2.0 / 999.9);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":969938,"byte_end":970017,"line_start":479,"line_end":479,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970022,"byte_end":970029,"line_start":480,"line_end":480,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970034,"byte_end":970043,"line_start":481,"line_end":481,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10001},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970851,"byte_end":970859,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"set_left","qualname":"<Orthographic3<N>>::set_left","value":"pub fn set_left(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the left offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the left offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970312,"byte_end":970356,"line_start":491,"line_end":491,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970361,"byte_end":970364,"line_start":492,"line_end":492,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970369,"byte_end":970376,"line_start":493,"line_end":493,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970381,"byte_end":970420,"line_start":494,"line_end":494,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970425,"byte_end":970459,"line_start":495,"line_end":495,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970464,"byte_end":970537,"line_start":496,"line_end":496,"column_start":5,"column_end":78}},{"value":"/ proj.set_left(2.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970542,"byte_end":970565,"line_start":497,"line_end":497,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.left(), 2.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970570,"byte_end":970630,"line_start":498,"line_end":498,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970635,"byte_end":970638,"line_start":499,"line_end":499,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a left offset greater than the current right offset.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970643,"byte_end":970718,"line_start":500,"line_end":500,"column_start":5,"column_end":80}},{"value":"/ proj.set_left(20.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970723,"byte_end":970747,"line_start":501,"line_end":501,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.left(), 20.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970752,"byte_end":970813,"line_start":502,"line_end":502,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970818,"byte_end":970825,"line_start":503,"line_end":503,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970830,"byte_end":970839,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10002},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971519,"byte_end":971528,"line_start":524,"line_end":524,"column_start":12,"column_end":21},"name":"set_right","qualname":"<Orthographic3<N>>::set_right","value":"pub fn set_right(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the right offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the right offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":970973,"byte_end":971018,"line_start":510,"line_end":510,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971023,"byte_end":971026,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971031,"byte_end":971038,"line_start":512,"line_end":512,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971043,"byte_end":971082,"line_start":513,"line_end":513,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971087,"byte_end":971121,"line_start":514,"line_end":514,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971126,"byte_end":971199,"line_start":515,"line_end":515,"column_start":5,"column_end":78}},{"value":"/ proj.set_right(15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971204,"byte_end":971229,"line_start":516,"line_end":516,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971234,"byte_end":971296,"line_start":517,"line_end":517,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971301,"byte_end":971304,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a right offset smaller than the current left offset.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971309,"byte_end":971384,"line_start":519,"line_end":519,"column_start":5,"column_end":80}},{"value":"/ proj.set_right(-3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971389,"byte_end":971414,"line_start":520,"line_end":520,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.right(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971419,"byte_end":971481,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971486,"byte_end":971493,"line_start":522,"line_end":522,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971498,"byte_end":971507,"line_start":523,"line_end":523,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10003},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972190,"byte_end":972200,"line_start":543,"line_end":543,"column_start":12,"column_end":22},"name":"set_bottom","qualname":"<Orthographic3<N>>::set_bottom","value":"pub fn set_bottom(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the bottom offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the bottom offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971641,"byte_end":971687,"line_start":529,"line_end":529,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971692,"byte_end":971695,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971700,"byte_end":971707,"line_start":531,"line_end":531,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971712,"byte_end":971751,"line_start":532,"line_end":532,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971756,"byte_end":971790,"line_start":533,"line_end":533,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971795,"byte_end":971868,"line_start":534,"line_end":534,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom(8.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971873,"byte_end":971898,"line_start":535,"line_end":535,"column_start":5,"column_end":30}},{"value":"/ assert_relative_eq!(proj.bottom(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971903,"byte_end":971965,"line_start":536,"line_end":536,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971970,"byte_end":971973,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a bottom offset greater than the current top offset.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":971978,"byte_end":972053,"line_start":538,"line_end":538,"column_start":5,"column_end":80}},{"value":"/ proj.set_bottom(50.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972058,"byte_end":972084,"line_start":539,"line_end":539,"column_start":5,"column_end":31}},{"value":"/ assert_relative_eq!(proj.bottom(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972089,"byte_end":972152,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972157,"byte_end":972164,"line_start":541,"line_end":541,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972169,"byte_end":972178,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10004},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972848,"byte_end":972855,"line_start":562,"line_end":562,"column_start":12,"column_end":19},"name":"set_top","qualname":"<Orthographic3<N>>::set_top","value":"pub fn set_top(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the top offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the top offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972312,"byte_end":972355,"line_start":548,"line_end":548,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972360,"byte_end":972363,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972368,"byte_end":972375,"line_start":550,"line_end":550,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972380,"byte_end":972419,"line_start":551,"line_end":551,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972424,"byte_end":972458,"line_start":552,"line_end":552,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972463,"byte_end":972536,"line_start":553,"line_end":553,"column_start":5,"column_end":78}},{"value":"/ proj.set_top(15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972541,"byte_end":972564,"line_start":554,"line_end":554,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972569,"byte_end":972629,"line_start":555,"line_end":555,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972634,"byte_end":972637,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a top offset smaller than the current bottom offset.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972642,"byte_end":972717,"line_start":557,"line_end":557,"column_start":5,"column_end":80}},{"value":"/ proj.set_top(-3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972722,"byte_end":972745,"line_start":558,"line_end":558,"column_start":5,"column_end":28}},{"value":"/ assert_relative_eq!(proj.top(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972750,"byte_end":972810,"line_start":559,"line_end":559,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972815,"byte_end":972822,"line_start":560,"line_end":560,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972827,"byte_end":972836,"line_start":561,"line_end":561,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10005},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973509,"byte_end":973518,"line_start":581,"line_end":581,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Orthographic3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near plane offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":972970,"byte_end":973020,"line_start":567,"line_end":567,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973025,"byte_end":973028,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973033,"byte_end":973040,"line_start":569,"line_end":569,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973045,"byte_end":973084,"line_start":570,"line_end":570,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973089,"byte_end":973123,"line_start":571,"line_end":571,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973128,"byte_end":973201,"line_start":572,"line_end":572,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear(8.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973206,"byte_end":973230,"line_start":573,"line_end":573,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.znear(), 8.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973235,"byte_end":973296,"line_start":574,"line_end":574,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973301,"byte_end":973304,"line_start":575,"line_end":575,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a znear greater than the current zfar.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973309,"byte_end":973370,"line_start":576,"line_end":576,"column_start":5,"column_end":66}},{"value":"/ proj.set_znear(5000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973375,"byte_end":973402,"line_start":577,"line_end":577,"column_start":5,"column_end":32}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973407,"byte_end":973471,"line_start":578,"line_end":578,"column_start":5,"column_end":69}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973476,"byte_end":973483,"line_start":579,"line_end":579,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973488,"byte_end":973497,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10006},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974163,"byte_end":974171,"line_start":600,"line_end":600,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Orthographic3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the far plane offset of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the far plane offset of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973631,"byte_end":973680,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973685,"byte_end":973688,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973693,"byte_end":973700,"line_start":588,"line_end":588,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973705,"byte_end":973744,"line_start":589,"line_end":589,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973749,"byte_end":973783,"line_start":590,"line_end":590,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973788,"byte_end":973861,"line_start":591,"line_end":591,"column_start":5,"column_end":78}},{"value":"/ proj.set_zfar(15.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973866,"byte_end":973890,"line_start":592,"line_end":592,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), 15.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973895,"byte_end":973956,"line_start":593,"line_end":593,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973961,"byte_end":973964,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ // It is OK to set a zfar smaller than the current znear.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":973969,"byte_end":974030,"line_start":595,"line_end":595,"column_start":5,"column_end":66}},{"value":"/ proj.set_zfar(-3.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974035,"byte_end":974059,"line_start":596,"line_end":596,"column_start":5,"column_end":29}},{"value":"/ assert_relative_eq!(proj.zfar(), -3.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974064,"byte_end":974125,"line_start":597,"line_end":597,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974130,"byte_end":974137,"line_start":598,"line_end":598,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974142,"byte_end":974151,"line_start":599,"line_end":599,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10007},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974965,"byte_end":974983,"line_start":621,"line_end":621,"column_start":12,"column_end":30},"name":"set_left_and_right","qualname":"<Orthographic3<N>>::set_left_and_right","value":"pub fn set_left_and_right(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `x` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `x` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974285,"byte_end":974337,"line_start":605,"line_end":605,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974342,"byte_end":974345,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974350,"byte_end":974357,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974362,"byte_end":974401,"line_start":608,"line_end":608,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974406,"byte_end":974440,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974445,"byte_end":974518,"line_start":610,"line_end":610,"column_start":5,"column_end":78}},{"value":"/ proj.set_left_and_right(7.0, 70.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974523,"byte_end":974562,"line_start":611,"line_end":611,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974567,"byte_end":974627,"line_start":612,"line_end":612,"column_start":5,"column_end":65}},{"value":"/ assert_relative_eq!(proj.right(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974632,"byte_end":974694,"line_start":613,"line_end":613,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974699,"byte_end":974702,"line_start":614,"line_end":614,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `left > right`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974707,"byte_end":974751,"line_start":615,"line_end":615,"column_start":5,"column_end":49}},{"value":"/ proj.set_left_and_right(70.0, 7.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974756,"byte_end":974795,"line_start":616,"line_end":616,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.left(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974800,"byte_end":974861,"line_start":617,"line_end":617,"column_start":5,"column_end":66}},{"value":"/ assert_relative_eq!(proj.right(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974866,"byte_end":974927,"line_start":618,"line_end":618,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974932,"byte_end":974939,"line_start":619,"line_end":619,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":974944,"byte_end":974953,"line_start":620,"line_end":620,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10008},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975971,"byte_end":975989,"line_start":646,"line_end":646,"column_start":12,"column_end":30},"name":"set_bottom_and_top","qualname":"<Orthographic3<N>>::set_bottom_and_top","value":"pub fn set_bottom_and_top(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the view cuboid offsets along the `y` axis.","sig":null,"attributes":[{"value":"/ Sets the view cuboid offsets along the `y` axis.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975291,"byte_end":975343,"line_start":630,"line_end":630,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975348,"byte_end":975351,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975356,"byte_end":975363,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975368,"byte_end":975407,"line_start":633,"line_end":633,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975412,"byte_end":975446,"line_start":634,"line_end":634,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975451,"byte_end":975524,"line_start":635,"line_end":635,"column_start":5,"column_end":78}},{"value":"/ proj.set_bottom_and_top(7.0, 70.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975529,"byte_end":975568,"line_start":636,"line_end":636,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975573,"byte_end":975635,"line_start":637,"line_end":637,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.top(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975640,"byte_end":975700,"line_start":638,"line_end":638,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975705,"byte_end":975708,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `bottom > top`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975713,"byte_end":975757,"line_start":640,"line_end":640,"column_start":5,"column_end":49}},{"value":"/ proj.set_bottom_and_top(70.0, 7.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975762,"byte_end":975801,"line_start":641,"line_end":641,"column_start":5,"column_end":44}},{"value":"/ assert_relative_eq!(proj.bottom(), 70.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975806,"byte_end":975869,"line_start":642,"line_end":642,"column_start":5,"column_end":68}},{"value":"/ assert_relative_eq!(proj.top(), 7.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975874,"byte_end":975933,"line_start":643,"line_end":643,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975938,"byte_end":975945,"line_start":644,"line_end":644,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":975950,"byte_end":975959,"line_start":645,"line_end":645,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10009},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976994,"byte_end":977012,"line_start":671,"line_end":671,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Orthographic3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Sets the near and far plane offsets of the view cuboid.","sig":null,"attributes":[{"value":"/ Sets the near and far plane offsets of the view cuboid.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976297,"byte_end":976356,"line_start":655,"line_end":655,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976361,"byte_end":976364,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976369,"byte_end":976376,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # #[macro_use] extern crate approx;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976381,"byte_end":976420,"line_start":658,"line_end":658,"column_start":5,"column_end":44}},{"value":"/ # use nalgebra::Orthographic3;","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976425,"byte_end":976459,"line_start":659,"line_end":659,"column_start":5,"column_end":39}},{"value":"/ let mut proj = Orthographic3::new(1.0, 10.0, 2.0, 20.0, 0.1, 1000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976464,"byte_end":976537,"line_start":660,"line_end":660,"column_start":5,"column_end":78}},{"value":"/ proj.set_znear_and_zfar(50.0, 5000.0);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976542,"byte_end":976584,"line_start":661,"line_end":661,"column_start":5,"column_end":47}},{"value":"/ assert_relative_eq!(proj.znear(), 50.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976589,"byte_end":976651,"line_start":662,"line_end":662,"column_start":5,"column_end":67}},{"value":"/ assert_relative_eq!(proj.zfar(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976656,"byte_end":976719,"line_start":663,"line_end":663,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976724,"byte_end":976727,"line_start":664,"line_end":664,"column_start":5,"column_end":8}},{"value":"/ // It is also OK to have `znear > zfar`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976732,"byte_end":976776,"line_start":665,"line_end":665,"column_start":5,"column_end":49}},{"value":"/ proj.set_znear_and_zfar(5000.0, 0.5);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976781,"byte_end":976822,"line_start":666,"line_end":666,"column_start":5,"column_end":46}},{"value":"/ assert_relative_eq!(proj.znear(), 5000.0, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976827,"byte_end":976891,"line_start":667,"line_end":667,"column_start":5,"column_end":69}},{"value":"/ assert_relative_eq!(proj.zfar(), 0.5, epsilon = 1.0e-6);","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976896,"byte_end":976956,"line_start":668,"line_end":668,"column_start":5,"column_end":65}},{"value":"/ ```","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976961,"byte_end":976968,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":976973,"byte_end":976982,"line_start":670,"line_end":670,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":10069},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979093,"byte_end":979105,"line_start":21,"line_end":21,"column_start":12,"column_end":24},"name":"Perspective3","qualname":"::geometry::perspective::Perspective3","value":"Perspective3 {  }","parent":null,"children":[{"krate":0,"index":10071}],"decl_id":null,"docs":" A 3D perspective projection stored as an homogeneous 4x4 matrix.\n","sig":null,"attributes":[{"value":"/ A 3D perspective projection stored as an homogeneous 4x4 matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979013,"byte_end":979081,"line_start":20,"line_end":20,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":10085},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":980396,"byte_end":980399,"line_start":67,"line_end":67,"column_start":12,"column_end":15},"name":"new","qualname":"<Perspective3<N>>::new","value":"pub fn new(N, N, N, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.\n","sig":null,"attributes":[{"value":"/ Creates a new perspective matrix from the aspect ratio, y field of view, and near/far planes.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":980287,"byte_end":980384,"line_start":66,"line_end":66,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":10086},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981252,"byte_end":981273,"line_start":95,"line_end":95,"column_start":12,"column_end":33},"name":"from_matrix_unchecked","qualname":"<Perspective3<N>>::from_matrix_unchecked","value":"pub fn from_matrix_unchecked(Matrix4<N>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Wraps the given matrix to interpret it as a 3D perspective matrix.","sig":null,"attributes":[{"value":"/ Wraps the given matrix to interpret it as a 3D perspective matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981034,"byte_end":981104,"line_start":90,"line_end":90,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981109,"byte_end":981112,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ It is not checked whether or not the given matrix actually represents an orthographic","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981117,"byte_end":981206,"line_start":92,"line_end":92,"column_start":5,"column_end":94}},{"value":"/ projection.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981211,"byte_end":981226,"line_start":93,"line_end":93,"column_start":5,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981231,"byte_end":981240,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10087},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981436,"byte_end":981443,"line_start":101,"line_end":101,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Perspective3<N>>::inverse","value":"pub fn inverse(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the inverse of the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the inverse of the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981347,"byte_end":981410,"line_start":99,"line_end":99,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981415,"byte_end":981424,"line_start":100,"line_end":100,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10088},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981968,"byte_end":981982,"line_start":120,"line_end":120,"column_start":12,"column_end":26},"name":"to_homogeneous","qualname":"<Perspective3<N>>::to_homogeneous","value":"pub fn to_homogeneous(&Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Computes the corresponding homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Computes the corresponding homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981892,"byte_end":981942,"line_start":118,"line_end":118,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":981947,"byte_end":981956,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10089},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982145,"byte_end":982154,"line_start":126,"line_end":126,"column_start":12,"column_end":21},"name":"as_matrix","qualname":"<Perspective3<N>>::as_matrix","value":"pub fn as_matrix(&Self) -> &Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to the underlying homogeneous transformation matrix.\n","sig":null,"attributes":[{"value":"/ A reference to the underlying homogeneous transformation matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982051,"byte_end":982119,"line_start":124,"line_end":124,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982124,"byte_end":982133,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10090},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982300,"byte_end":982313,"line_start":132,"line_end":132,"column_start":12,"column_end":25},"name":"as_projective","qualname":"<Perspective3<N>>::as_projective","value":"pub fn as_projective(&Self) -> &Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" A reference to this transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ A reference to this transformation seen as a `Projective3`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982211,"byte_end":982274,"line_start":130,"line_end":130,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982279,"byte_end":982288,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10091},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982467,"byte_end":982480,"line_start":138,"line_end":138,"column_start":12,"column_end":25},"name":"to_projective","qualname":"<Perspective3<N>>::to_projective","value":"pub fn to_projective(&Self) -> Projective3<N>","parent":null,"children":[],"decl_id":null,"docs":" This transformation seen as a `Projective3`.\n","sig":null,"attributes":[{"value":"/ This transformation seen as a `Projective3`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982393,"byte_end":982441,"line_start":136,"line_end":136,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982446,"byte_end":982455,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10092},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982649,"byte_end":982659,"line_start":144,"line_end":144,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Perspective3<N>>::into_inner","value":"pub fn into_inner(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982575,"byte_end":982623,"line_start":142,"line_end":142,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982628,"byte_end":982637,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10093},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982901,"byte_end":982907,"line_start":152,"line_end":152,"column_start":12,"column_end":18},"name":"unwrap","qualname":"<Perspective3<N>>::unwrap","value":"pub fn unwrap(Self) -> Matrix4<N>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the underlying homogeneous matrix.\n Deprecated: Use [Perspective3::into_inner] instead.\n","sig":null,"attributes":[{"value":"/ Retrieves the underlying homogeneous matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982713,"byte_end":982761,"line_start":148,"line_end":148,"column_start":5,"column_end":53}},{"value":"/ Deprecated: Use [Perspective3::into_inner] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982766,"byte_end":982821,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"deprecated(note = \"use `.into_inner()` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982826,"byte_end":982875,"line_start":150,"line_end":150,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982880,"byte_end":982889,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10094},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983050,"byte_end":983056,"line_start":158,"line_end":158,"column_start":12,"column_end":18},"name":"aspect","qualname":"<Perspective3<N>>::aspect","value":"pub fn aspect(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the `width / height` aspect ratio of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the `width / height` aspect ratio of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":982961,"byte_end":983024,"line_start":156,"line_end":156,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983029,"byte_end":983038,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10095},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983207,"byte_end":983211,"line_start":164,"line_end":164,"column_start":12,"column_end":16},"name":"fovy","qualname":"<Perspective3<N>>::fovy","value":"pub fn fovy(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the y field of view of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983132,"byte_end":983181,"line_start":162,"line_end":162,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983186,"byte_end":983195,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10096},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983384,"byte_end":983389,"line_start":170,"line_end":170,"column_start":12,"column_end":17},"name":"znear","qualname":"<Perspective3<N>>::znear","value":"pub fn znear(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the near plane offset of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983307,"byte_end":983358,"line_start":168,"line_end":168,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983363,"byte_end":983372,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10097},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983687,"byte_end":983691,"line_start":178,"line_end":178,"column_start":12,"column_end":16},"name":"zfar","qualname":"<Perspective3<N>>::zfar","value":"pub fn zfar(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Gets the far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Gets the far plane offset of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983611,"byte_end":983661,"line_start":176,"line_end":176,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":983666,"byte_end":983675,"line_start":177,"line_end":177,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10098},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984119,"byte_end":984132,"line_start":189,"line_end":189,"column_start":12,"column_end":25},"name":"project_point","qualname":"<Perspective3<N>>::project_point","value":"pub fn project_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Projects a point. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a point. Faster than matrix multiplication.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984037,"byte_end":984093,"line_start":187,"line_end":187,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984098,"byte_end":984107,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10099},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984550,"byte_end":984565,"line_start":200,"line_end":200,"column_start":12,"column_end":27},"name":"unproject_point","qualname":"<Perspective3<N>>::unproject_point","value":"pub fn unproject_point(&Self, &Point3<N>) -> Point3<N>","parent":null,"children":[],"decl_id":null,"docs":" Un-projects a point. Faster than multiplication by the matrix inverse.\n","sig":null,"attributes":[{"value":"/ Un-projects a point. Faster than multiplication by the matrix inverse.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984450,"byte_end":984524,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984529,"byte_end":984538,"line_start":199,"line_end":199,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10100},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985024,"byte_end":985038,"line_start":213,"line_end":213,"column_start":12,"column_end":26},"name":"project_vector","qualname":"<Perspective3<N>>::project_vector","value":"pub fn project_vector<SB>(&Self, &Vector<N, U3, SB>) -> Vector3<N> where\nSB: Storage<N, U3>","parent":null,"children":[],"decl_id":null,"docs":" Projects a vector. Faster than matrix multiplication.\n","sig":null,"attributes":[{"value":"/ Projects a vector. Faster than matrix multiplication.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":984941,"byte_end":984998,"line_start":211,"line_end":211,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985003,"byte_end":985012,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10102},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985483,"byte_end":985493,"line_start":226,"line_end":226,"column_start":12,"column_end":22},"name":"set_aspect","qualname":"<Perspective3<N>>::set_aspect","value":"pub fn set_aspect(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new `width / height` aspect ratio of the view\n frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new `width / height` aspect ratio of the view","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985352,"byte_end":985440,"line_start":223,"line_end":223,"column_start":5,"column_end":93}},{"value":"/ frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985445,"byte_end":985457,"line_start":224,"line_end":224,"column_start":5,"column_end":17}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985462,"byte_end":985471,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10103},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985814,"byte_end":985822,"line_start":236,"line_end":236,"column_start":12,"column_end":20},"name":"set_fovy","qualname":"<Perspective3<N>>::set_fovy","value":"pub fn set_fovy(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective with a new y field of view of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective with a new y field of view of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985712,"byte_end":985788,"line_start":234,"line_end":234,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":985793,"byte_end":985802,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10104},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986172,"byte_end":986181,"line_start":244,"line_end":244,"column_start":12,"column_end":21},"name":"set_znear","qualname":"<Perspective3<N>>::set_znear","value":"pub fn set_znear(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new near plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new near plane offset of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986061,"byte_end":986146,"line_start":242,"line_end":242,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986151,"byte_end":986160,"line_start":243,"line_end":243,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10105},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986404,"byte_end":986412,"line_start":251,"line_end":251,"column_start":12,"column_end":20},"name":"set_zfar","qualname":"<Perspective3<N>>::set_zfar","value":"pub fn set_zfar(&mut Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with a new far plane offset of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with a new far plane offset of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986294,"byte_end":986378,"line_start":249,"line_end":249,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986383,"byte_end":986392,"line_start":250,"line_end":250,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10106},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986644,"byte_end":986662,"line_start":258,"line_end":258,"column_start":12,"column_end":30},"name":"set_znear_and_zfar","qualname":"<Perspective3<N>>::set_znear_and_zfar","value":"pub fn set_znear_and_zfar(&mut Self, N, N)","parent":null,"children":[],"decl_id":null,"docs":" Updates this perspective matrix with new near and far plane offsets of the view frustum.\n","sig":null,"attributes":[{"value":"/ Updates this perspective matrix with new near and far plane offsets of the view frustum.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986526,"byte_end":986618,"line_start":256,"line_end":256,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986623,"byte_end":986632,"line_start":257,"line_end":257,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":10138},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"linalg","qualname":"::linalg","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","parent":null,"children":[{"krate":0,"index":10139},{"krate":0,"index":10179},{"krate":0,"index":10261},{"krate":0,"index":10333},{"krate":0,"index":10361},{"krate":0,"index":10446},{"krate":0,"index":10506},{"krate":0,"index":10565},{"krate":0,"index":10622},{"krate":0,"index":10666},{"krate":0,"index":10779},{"krate":0,"index":10852},{"krate":0,"index":10961},{"krate":0,"index":11074},{"krate":0,"index":11201},{"krate":0,"index":11318},{"krate":0,"index":11396},{"krate":0,"index":11455},{"krate":0,"index":11513},{"krate":0,"index":11514},{"krate":0,"index":11515},{"krate":0,"index":11516},{"krate":0,"index":11517},{"krate":0,"index":11518},{"krate":0,"index":11519},{"krate":0,"index":11520},{"krate":0,"index":11521},{"krate":0,"index":11522},{"krate":0,"index":11523},{"krate":0,"index":11524}],"decl_id":null,"docs":" [Reexported at the root of this crate.] Factorization of real matrices.\n","sig":null,"attributes":[{"value":"/ [Reexported at the root of this crate.] Factorization of real matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":987806,"byte_end":987881,"line_start":1,"line_end":1,"column_start":1,"column_end":76}}]},{"kind":"Mod","id":{"krate":0,"index":10139},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"balancing","qualname":"::linalg::balancing","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","parent":null,"children":[{"krate":0,"index":10140},{"krate":0,"index":10143},{"krate":0,"index":10144},{"krate":0,"index":10147},{"krate":0,"index":10150},{"krate":0,"index":10153},{"krate":0,"index":10154},{"krate":0,"index":10157},{"krate":0,"index":10158},{"krate":0,"index":10160},{"krate":0,"index":10163},{"krate":0,"index":10164},{"krate":0,"index":10165},{"krate":0,"index":10167},{"krate":0,"index":10170},{"krate":0,"index":10173},{"krate":0,"index":10176}],"decl_id":null,"docs":" Functions for balancing a matrix.\n","sig":null,"attributes":[{"value":"/ Functions for balancing a matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":988654,"byte_end":988691,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Function","id":{"krate":0,"index":10173},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":989138,"byte_end":989161,"line_start":15,"line_end":15,"column_start":8,"column_end":31},"name":"balance_parlett_reinsch","qualname":"::linalg::balancing::balance_parlett_reinsch","value":"pub fn balance_parlett_reinsch<N: RealField, D: Dim>(&mut MatrixN<N, D>)\n-> VectorN<N, D> where DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns\n the corresponding diagonal transformation.","sig":null,"attributes":[{"value":"/ Applies in-place a modified Parlett and Reinsch matrix balancing with 2-norm to the matrix `m` and returns","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":988925,"byte_end":989035,"line_start":11,"line_end":11,"column_start":1,"column_end":111}},{"value":"/ the corresponding diagonal transformation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":989036,"byte_end":989082,"line_start":12,"line_end":12,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":989083,"byte_end":989086,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ See https://arxiv.org/pdf/1401.5766.pdf","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":989087,"byte_end":989130,"line_start":14,"line_end":14,"column_start":1,"column_end":44}}]},{"kind":"Function","id":{"krate":0,"index":10176},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":990560,"byte_end":990569,"line_start":67,"line_end":67,"column_start":8,"column_end":17},"name":"unbalance","qualname":"::linalg::balancing::unbalance","value":"pub fn unbalance<N: RealField, D: Dim>(&mut MatrixN<N, D>, &VectorN<N, D>)\nwhere DefaultAllocator: Allocator<N, D, D> + Allocator<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.\n","sig":null,"attributes":[{"value":"/ Computes in-place `D * m * D.inverse()`, where `D` is the matrix with diagonal `d`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/balancing.rs","byte_start":990465,"byte_end":990552,"line_start":66,"line_end":66,"column_start":1,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":24548},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":992530,"byte_end":992540,"line_start":40,"line_end":40,"column_start":12,"column_end":22},"name":"Bidiagonal","qualname":"::linalg::bidiagonal::Bidiagonal","value":"Bidiagonal {  }","parent":null,"children":[{"krate":0,"index":24552},{"krate":0,"index":24553},{"krate":0,"index":24554},{"krate":0,"index":24555}],"decl_id":null,"docs":" The bidiagonalization of a general matrix.\n","sig":null,"attributes":[{"value":"/ The bidiagonalization of a general matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":991418,"byte_end":991464,"line_start":13,"line_end":13,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":10241},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993949,"byte_end":993952,"line_start":78,"line_end":78,"column_start":12,"column_end":15},"name":"new","qualname":"<Bidiagonal<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Bidiagonal decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Bidiagonal decomposition using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993865,"byte_end":993937,"line_start":77,"line_end":77,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":10242},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996386,"byte_end":996403,"line_start":153,"line_end":153,"column_start":12,"column_end":29},"name":"is_upper_diagonal","qualname":"<Bidiagonal<N, R, C>>::is_upper_diagonal","value":"pub fn is_upper_diagonal(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates whether this decomposition contains an upper-diagonal matrix.\n","sig":null,"attributes":[{"value":"/ Indicates whether this decomposition contains an upper-diagonal matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996285,"byte_end":996360,"line_start":151,"line_end":151,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996365,"byte_end":996374,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10244},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996794,"byte_end":996800,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Bidiagonal<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixMN<N, R, DimMinimum<R, C>>, MatrixN<N, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>> +\nAllocator<N, R, DimMinimum<R, C>> + Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its three matrix factors `(U, D, V^t)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996624,"byte_end":996699,"line_start":166,"line_end":166,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996704,"byte_end":996707,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The decomposed matrix `M` is equal to `U * D * V^t`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996712,"byte_end":996768,"line_start":168,"line_end":168,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":996773,"byte_end":996782,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10245},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":997346,"byte_end":997347,"line_start":188,"line_end":188,"column_start":12,"column_end":13},"name":"d","qualname":"<Bidiagonal<N, R, C>>::d","value":"pub fn d(&Self) -> MatrixN<N, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":997248,"byte_end":997320,"line_start":186,"line_end":186,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":997325,"byte_end":997334,"line_start":187,"line_end":187,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10248},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":998140,"byte_end":998141,"line_start":207,"line_end":207,"column_start":12,"column_end":13},"name":"u","qualname":"<Bidiagonal<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `U` of this `U * D * V` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `U` of this `U * D * V` decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":997931,"byte_end":998004,"line_start":204,"line_end":204,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":10249},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":999131,"byte_end":999134,"line_start":235,"line_end":235,"column_start":12,"column_end":15},"name":"v_t","qualname":"<Bidiagonal<N, R, C>>::v_t","value":"pub fn v_t(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `V_t` of this `U * D * V_t` decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":999042,"byte_end":999119,"line_start":234,"line_end":234,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":10250},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1000468,"byte_end":1000476,"line_start":268,"line_end":268,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<Bidiagonal<N, R, C>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The diagonal part of this decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1000408,"byte_end":1000456,"line_start":267,"line_end":267,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":10252},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1000721,"byte_end":1000733,"line_start":274,"line_end":274,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<Bidiagonal<N, R, C>>::off_diagonal","value":"pub fn off_diagonal(&Self)\n-> VectorN<N::RealField, DimDiff<DimMinimum<R, C>, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<DimMinimum<R, C>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal part of this decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The off-diagonal part of this decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1000657,"byte_end":1000709,"line_start":273,"line_end":273,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":10254},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1000970,"byte_end":1000981,"line_start":280,"line_end":280,"column_start":12,"column_end":23},"name":"uv_internal","qualname":"<Bidiagonal<N, R, C>>::uv_internal","value":"pub fn uv_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10260},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1004450,"byte_end":1004463,"line_start":368,"line_end":368,"column_start":12,"column_end":25},"name":"bidiagonalize","qualname":"<Matrix<N, R, C, S>>::bidiagonalize","value":"pub fn bidiagonalize(Self) -> Bidiagonal<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the bidiagonalization using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the bidiagonalization using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1004373,"byte_end":1004438,"line_start":367,"line_end":367,"column_start":5,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":24566},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005431,"byte_end":1005439,"line_start":29,"line_end":29,"column_start":12,"column_end":20},"name":"Cholesky","qualname":"::linalg::cholesky::Cholesky","value":"Cholesky {  }","parent":null,"children":[{"krate":0,"index":24569}],"decl_id":null,"docs":" The Cholesky decomposition of a symmetric-definite-positive matrix.\n","sig":null,"attributes":[{"value":"/ The Cholesky decomposition of a symmetric-definite-positive matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1004916,"byte_end":1004987,"line_start":12,"line_end":12,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10314},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1006023,"byte_end":1006026,"line_start":48,"line_end":48,"column_start":12,"column_end":15},"name":"new","qualname":"<Cholesky<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of `matrix`.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005775,"byte_end":1005838,"line_start":44,"line_end":44,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005843,"byte_end":1005846,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005851,"byte_end":1005943,"line_start":46,"line_end":46,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005948,"byte_end":1006011,"line_start":47,"line_end":47,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10315},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007388,"byte_end":1007394,"line_start":87,"line_end":87,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Cholesky<N, D>>::unpack","value":"pub fn unpack(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n upper-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007238,"byte_end":1007327,"line_start":85,"line_end":85,"column_start":5,"column_end":94}},{"value":"/ upper-triangular part filled with zeros.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007332,"byte_end":1007376,"line_start":86,"line_end":86,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10316},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007782,"byte_end":1007794,"line_start":97,"line_end":97,"column_start":12,"column_end":24},"name":"unpack_dirty","qualname":"<Cholesky<N, D>>::unpack_dirty","value":"pub fn unpack_dirty(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007506,"byte_end":1007598,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007603,"byte_end":1007640,"line_start":93,"line_end":93,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007645,"byte_end":1007648,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The values of the strict upper-triangular part are garbage and should be ignored by further","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007653,"byte_end":1007748,"line_start":95,"line_end":95,"column_start":5,"column_end":100}},{"value":"/ computations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007753,"byte_end":1007770,"line_start":96,"line_end":96,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":10317},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007999,"byte_end":1008000,"line_start":103,"line_end":103,"column_start":12,"column_end":13},"name":"l","qualname":"<Cholesky<N, D>>::l","value":"pub fn l(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly\n uppen-triangular part filled with zeros.\n","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition with its strictly","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007849,"byte_end":1007938,"line_start":101,"line_end":101,"column_start":5,"column_end":94}},{"value":"/ uppen-triangular part filled with zeros.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1007943,"byte_end":1007987,"line_start":102,"line_end":102,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":10318},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008399,"byte_end":1008406,"line_start":112,"line_end":112,"column_start":12,"column_end":19},"name":"l_dirty","qualname":"<Cholesky<N, D>>::l_dirty","value":"pub fn l_dirty(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out\n its strict upper-triangular part.","sig":null,"attributes":[{"value":"/ Retrieves the lower-triangular factor of the Cholesky decomposition, without zeroing-out","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008073,"byte_end":1008165,"line_start":107,"line_end":107,"column_start":5,"column_end":97}},{"value":"/ its strict upper-triangular part.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008170,"byte_end":1008207,"line_start":108,"line_end":108,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008212,"byte_end":1008215,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This is an allocation-less version of `self.l()`. The values of the strict upper-triangular","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008220,"byte_end":1008315,"line_start":110,"line_end":110,"column_start":5,"column_end":100}},{"value":"/ part are garbage and should be ignored by further computations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008320,"byte_end":1008387,"line_start":111,"line_end":111,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":10319},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008616,"byte_end":1008625,"line_start":119,"line_end":119,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<Cholesky<N, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere S2: StorageMut<N, R2, C2>, ShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008464,"byte_end":1008559,"line_start":116,"line_end":116,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008564,"byte_end":1008567,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The result is stored on `b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008572,"byte_end":1008604,"line_start":118,"line_end":118,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":10323},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009047,"byte_end":1009052,"line_start":130,"line_end":130,"column_start":12,"column_end":17},"name":"solve","qualname":"<Cholesky<N, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> MatrixMN<N, R2, C2> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and\n `x` the unknown.\n","sig":null,"attributes":[{"value":"/ Returns the solution of the system `self * x = b` where `self` is the decomposed matrix and","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1008915,"byte_end":1009010,"line_start":128,"line_end":128,"column_start":5,"column_end":100}},{"value":"/ `x` the unknown.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009015,"byte_end":1009035,"line_start":129,"line_end":129,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":10327},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009439,"byte_end":1009446,"line_start":142,"line_end":142,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Cholesky<N, D>>::inverse","value":"pub fn inverse(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009377,"byte_end":1009427,"line_start":141,"line_end":141,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":10332},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1010025,"byte_end":1010033,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"cholesky","qualname":"<SquareMatrix<N, D, S>>::cholesky","value":"pub fn cholesky(Self) -> Option<Cholesky<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Cholesky decomposition of this matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Cholesky decomposition of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009774,"byte_end":1009840,"line_start":154,"line_end":154,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009845,"byte_end":1009848,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the input matrix is not definite-positive. The input matrix is assumed","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009853,"byte_end":1009945,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ to be symmetric and only the lower-triangular part is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009950,"byte_end":1010013,"line_start":157,"line_end":157,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":10360},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010587,"byte_end":1010598,"line_start":15,"line_end":15,"column_start":12,"column_end":23},"name":"determinant","qualname":"<SquareMatrix<N, D, S>>::determinant","value":"pub fn determinant(&Self) -> N where DefaultAllocator: Allocator<N, D, D> +\nAllocator<(usize, usize), D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the matrix determinant.","sig":null,"attributes":[{"value":"/ Computes the matrix determinant.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010435,"byte_end":1010471,"line_start":11,"line_end":11,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010476,"byte_end":1010479,"line_start":12,"line_end":12,"column_start":5,"column_end":8}},{"value":"/ If the matrix has a dimension larger than 3, an LU decomposition is used.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010484,"byte_end":1010561,"line_start":13,"line_end":13,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010566,"byte_end":1010575,"line_start":14,"line_end":14,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":24578},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1013449,"byte_end":1013458,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"FullPivLU","qualname":"::linalg::full_piv_lu::FullPivLU","value":"FullPivLU {  }","parent":null,"children":[{"krate":0,"index":24582},{"krate":0,"index":24583},{"krate":0,"index":24584}],"decl_id":null,"docs":" LU decomposition with full row and column pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with full row and column pivoting.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1012665,"byte_end":1012720,"line_start":14,"line_end":14,"column_start":1,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10419},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014282,"byte_end":1014285,"line_start":56,"line_end":56,"column_start":12,"column_end":15},"name":"new","qualname":"<FullPivLU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014117,"byte_end":1014182,"line_start":53,"line_end":53,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014187,"byte_end":1014190,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014195,"byte_end":1014270,"line_start":55,"line_end":55,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":10420},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1015640,"byte_end":1015651,"line_start":102,"line_end":102,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<FullPivLU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10421},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1015791,"byte_end":1015792,"line_start":108,"line_end":108,"column_start":12,"column_end":13},"name":"l","qualname":"<FullPivLU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1015711,"byte_end":1015765,"line_start":106,"line_end":106,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1015770,"byte_end":1015779,"line_start":107,"line_end":107,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10422},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016211,"byte_end":1016212,"line_start":119,"line_end":119,"column_start":12,"column_end":13},"name":"u","qualname":"<FullPivLU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016131,"byte_end":1016185,"line_start":117,"line_end":117,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016190,"byte_end":1016199,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10423},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016522,"byte_end":1016523,"line_start":127,"line_end":127,"column_start":12,"column_end":13},"name":"p","qualname":"<FullPivLU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016449,"byte_end":1016496,"line_start":125,"line_end":125,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016501,"byte_end":1016510,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10424},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016678,"byte_end":1016679,"line_start":133,"line_end":133,"column_start":12,"column_end":13},"name":"q","qualname":"<FullPivLU<N, R, C>>::q","value":"pub fn q(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The column permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The column permutations of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016602,"byte_end":1016652,"line_start":131,"line_end":131,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016657,"byte_end":1016666,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10425},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016879,"byte_end":1016885,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"unpack","qualname":"<FullPivLU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>, PermutationSequence<DimMinimum<R, C>>)\nwhere DefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.\n","sig":null,"attributes":[{"value":"/ The two matrices of this decomposition and the row and column permutations: `(P, L, U, Q)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016758,"byte_end":1016853,"line_start":137,"line_end":137,"column_start":5,"column_end":100}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1016858,"byte_end":1016867,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10429},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017699,"byte_end":1017704,"line_start":165,"line_end":165,"column_start":12,"column_end":17},"name":"solve","qualname":"<FullPivLU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017525,"byte_end":1017612,"line_start":162,"line_end":162,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017617,"byte_end":1017620,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017625,"byte_end":1017687,"line_start":164,"line_end":164,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":10433},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1018357,"byte_end":1018366,"line_start":186,"line_end":186,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<FullPivLU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1018118,"byte_end":1018205,"line_start":182,"line_end":182,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1018210,"byte_end":1018213,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1018218,"byte_end":1018308,"line_start":184,"line_end":184,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1018313,"byte_end":1018345,"line_start":185,"line_end":185,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":10437},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019265,"byte_end":1019276,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<FullPivLU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019128,"byte_end":1019178,"line_start":213,"line_end":213,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019183,"byte_end":1019186,"line_start":214,"line_end":214,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019191,"byte_end":1019253,"line_start":215,"line_end":215,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":10438},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019755,"byte_end":1019768,"line_start":233,"line_end":233,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<FullPivLU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1019690,"byte_end":1019743,"line_start":232,"line_end":232,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":10439},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020089,"byte_end":1020100,"line_start":244,"line_end":244,"column_start":12,"column_end":23},"name":"determinant","qualname":"<FullPivLU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020023,"byte_end":1020077,"line_start":243,"line_end":243,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10445},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020965,"byte_end":1020976,"line_start":270,"line_end":270,"column_start":12,"column_end":23},"name":"full_piv_lu","qualname":"<Matrix<N, R, C, S>>::full_piv_lu","value":"pub fn full_piv_lu(Self) -> FullPivLU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with full pivoting of `matrix`.","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with full pivoting of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020800,"byte_end":1020865,"line_start":267,"line_end":267,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020870,"byte_end":1020873,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ This effectively computes `P, L, U, Q` such that `P * matrix * Q = LU`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020878,"byte_end":1020953,"line_start":269,"line_end":269,"column_start":5,"column_end":80}}]},{"kind":"Mod","id":{"krate":0,"index":10446},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"givens","qualname":"::linalg::givens","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","parent":null,"children":[{"krate":0,"index":10447},{"krate":0,"index":10450},{"krate":0,"index":10451},{"krate":0,"index":10454},{"krate":0,"index":10457},{"krate":0,"index":10458},{"krate":0,"index":10461},{"krate":0,"index":10462},{"krate":0,"index":10464},{"krate":0,"index":10465},{"krate":0,"index":10466},{"krate":0,"index":10468},{"krate":0,"index":10471},{"krate":0,"index":10472},{"krate":0,"index":10475},{"krate":0,"index":10478},{"krate":0,"index":10479},{"krate":0,"index":10482},{"krate":0,"index":24595},{"krate":0,"index":24599},{"krate":0,"index":24602},{"krate":0,"index":24605},{"krate":0,"index":10485}],"decl_id":null,"docs":" Construction of givens rotations.\n","sig":null,"attributes":[{"value":"/ Construction of givens rotations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021058,"byte_end":1021095,"line_start":1,"line_end":1,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":24595},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021397,"byte_end":1021411,"line_start":14,"line_end":14,"column_start":12,"column_end":26},"name":"GivensRotation","qualname":"::linalg::givens::GivensRotation","value":"GivensRotation {  }","parent":null,"children":[{"krate":0,"index":24597},{"krate":0,"index":24598}],"decl_id":null,"docs":" A Givens rotation.\n","sig":null,"attributes":[{"value":"/ A Givens rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021333,"byte_end":1021355,"line_start":12,"line_end":12,"column_start":1,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":10487},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021598,"byte_end":1021606,"line_start":22,"line_end":22,"column_start":12,"column_end":20},"name":"identity","qualname":"<GivensRotation<N>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" The Givents rotation that does nothing.\n","sig":null,"attributes":[{"value":"/ The Givents rotation that does nothing.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021543,"byte_end":1021586,"line_start":21,"line_end":21,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":10488},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021914,"byte_end":1021927,"line_start":33,"line_end":33,"column_start":12,"column_end":25},"name":"new_unchecked","qualname":"<GivensRotation<N>>::new_unchecked","value":"pub fn new_unchecked(N::RealField, N) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its components.","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021716,"byte_end":1021770,"line_start":29,"line_end":29,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021775,"byte_end":1021778,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ The components are copies as-is. It is not checked whether they describe","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021783,"byte_end":1021859,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ an actually valid Givens rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021864,"byte_end":1021902,"line_start":32,"line_end":32,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":10489},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022107,"byte_end":1022110,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<GivensRotation<N>>::new","value":"pub fn new(N, N) -> (Self, N)","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation from its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation from its non-normalized cosine an sine components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022011,"byte_end":1022095,"line_start":39,"line_end":39,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":10490},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022304,"byte_end":1022311,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"try_new","qualname":"<GivensRotation<N>>::try_new","value":"pub fn try_new(N, N, N::RealField) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Initializes a Givens rotation form its non-normalized cosine an sine components.\n","sig":null,"attributes":[{"value":"/ Initializes a Givens rotation form its non-normalized cosine an sine components.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022208,"byte_end":1022292,"line_start":44,"line_end":44,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":10491},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023010,"byte_end":1023018,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"cancel_y","qualname":"<GivensRotation<N>>::cancel_y","value":"pub fn cancel_y<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `y` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `y` component of `R * v` is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022698,"byte_end":1022784,"line_start":59,"line_end":59,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022789,"byte_end":1022792,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.y == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022797,"byte_end":1022895,"line_start":61,"line_end":61,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ |v|, 0.0 ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1022900,"byte_end":1022998,"line_start":62,"line_end":62,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":10493},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023756,"byte_end":1023764,"line_start":80,"line_end":80,"column_start":12,"column_end":20},"name":"cancel_x","qualname":"<GivensRotation<N>>::cancel_x","value":"pub fn cancel_x<S: Storage<N, U2>>(&Vector<N, U2, S>) -> Option<(Self, N)>","parent":null,"children":[],"decl_id":null,"docs":" Computes the rotation `R` required such that the `x` component of `R * v` is zero.","sig":null,"attributes":[{"value":"/ Computes the rotation `R` required such that the `x` component of `R * v` is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023444,"byte_end":1023530,"line_start":76,"line_end":76,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023535,"byte_end":1023538,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if no rotation is needed (i.e. if `v.x == 0`). Otherwise, this returns the norm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023543,"byte_end":1023641,"line_start":78,"line_end":78,"column_start":5,"column_end":103}},{"value":"/ of `v` and the rotation `r` such that `R * v = [ 0.0, |v| ]^t` where `|v|` is the norm of `v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1023646,"byte_end":1023744,"line_start":79,"line_end":79,"column_start":5,"column_end":103}}]},{"kind":"Method","id":{"krate":0,"index":10495},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024251,"byte_end":1024252,"line_start":94,"line_end":94,"column_start":12,"column_end":13},"name":"c","qualname":"<GivensRotation<N>>::c","value":"pub fn c(&Self) -> N::RealField","parent":null,"children":[],"decl_id":null,"docs":" The cos part of this roration.\n","sig":null,"attributes":[{"value":"/ The cos part of this roration.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024205,"byte_end":1024239,"line_start":93,"line_end":93,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":10496},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024350,"byte_end":1024351,"line_start":99,"line_end":99,"column_start":12,"column_end":13},"name":"s","qualname":"<GivensRotation<N>>::s","value":"pub fn s(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The sin part of this roration.\n","sig":null,"attributes":[{"value":"/ The sin part of this roration.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024304,"byte_end":1024338,"line_start":98,"line_end":98,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":10497},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024444,"byte_end":1024451,"line_start":104,"line_end":104,"column_start":12,"column_end":19},"name":"inverse","qualname":"<GivensRotation<N>>::inverse","value":"pub fn inverse(&Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" The inverse of this givens rotation.\n","sig":null,"attributes":[{"value":"/ The inverse of this givens rotation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024392,"byte_end":1024432,"line_start":103,"line_end":103,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":10498},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024591,"byte_end":1024597,"line_start":109,"line_end":109,"column_start":12,"column_end":18},"name":"rotate","qualname":"<GivensRotation<N>>::rotate","value":"pub fn rotate<R2: Dim, C2: Dim,\n              S2: StorageMut<N, R2, C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<R2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `rhs = self * rhs` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `rhs = self * rhs` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1024519,"byte_end":1024579,"line_start":108,"line_end":108,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":10502},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1025377,"byte_end":1025388,"line_start":135,"line_end":135,"column_start":12,"column_end":23},"name":"rotate_rows","qualname":"<GivensRotation<N>>::rotate_rows","value":"pub fn rotate_rows<R2: Dim, C2: Dim,\n                   S2: StorageMut<N, R2,\n                                  C2>>(&Self, &mut Matrix<N, R2, C2, S2>)\nwhere ShapeConstraint: DimEq<C2, U2>","parent":null,"children":[],"decl_id":null,"docs":" Performs the multiplication `lhs = lhs * self` in-place.\n","sig":null,"attributes":[{"value":"/ Performs the multiplication `lhs = lhs * self` in-place.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1025305,"byte_end":1025365,"line_start":134,"line_end":134,"column_start":5,"column_end":65}}]},{"kind":"Struct","id":{"krate":0,"index":24607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027220,"byte_end":1027230,"line_start":33,"line_end":33,"column_start":12,"column_end":22},"name":"Hessenberg","qualname":"::linalg::hessenberg::Hessenberg","value":"Hessenberg {  }","parent":null,"children":[{"krate":0,"index":24610},{"krate":0,"index":24611}],"decl_id":null,"docs":" Hessenberg decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Hessenberg decomposition of a general matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1026502,"byte_end":1026551,"line_start":12,"line_end":12,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":10551},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027853,"byte_end":1027856,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Hessenberg<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027769,"byte_end":1027841,"line_start":50,"line_end":50,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":10552},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1028257,"byte_end":1028275,"line_start":60,"line_end":60,"column_start":12,"column_end":30},"name":"new_with_workspace","qualname":"<Hessenberg<N, D>>::new_with_workspace","value":"pub fn new_with_workspace(MatrixN<N, D>, &mut VectorN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition using householder reflections.","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1028045,"byte_end":1028117,"line_start":56,"line_end":56,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1028122,"byte_end":1028125,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The workspace containing `D` elements must be provided but its content does not have to be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1028130,"byte_end":1028224,"line_start":58,"line_end":58,"column_start":5,"column_end":99}},{"value":"/ initialized.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1028229,"byte_end":1028245,"line_start":59,"line_end":59,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":10553},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029306,"byte_end":1029312,"line_start":94,"line_end":94,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Hessenberg<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the\n hessenberg matrix.\n","sig":null,"attributes":[{"value":"/ Retrieves `(q, h)` with `q` the orthogonal matrix of this decomposition and `h` the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029166,"byte_end":1029253,"line_start":91,"line_end":91,"column_start":5,"column_end":92}},{"value":"/ hessenberg matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029258,"byte_end":1029280,"line_start":92,"line_end":92,"column_start":5,"column_end":27}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029285,"byte_end":1029294,"line_start":93,"line_end":93,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10554},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029520,"byte_end":1029528,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"name":"unpack_h","qualname":"<Hessenberg<N, D>>::unpack_h","value":"pub fn unpack_h(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029422,"byte_end":1029494,"line_start":100,"line_end":100,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029499,"byte_end":1029508,"line_start":101,"line_end":101,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10556},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030069,"byte_end":1030070,"line_start":116,"line_end":116,"column_start":12,"column_end":13},"name":"h","qualname":"<Hessenberg<N, D>>::h","value":"pub fn h(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `H` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `H` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029883,"byte_end":1029955,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029960,"byte_end":1029963,"line_start":113,"line_end":113,"column_start":5,"column_end":8}},{"value":"/ This is less efficient than `.unpack_h()` as it allocates a new matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1029968,"byte_end":1030043,"line_start":114,"line_end":114,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030048,"byte_end":1030057,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10558},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030459,"byte_end":1030460,"line_start":126,"line_end":126,"column_start":12,"column_end":13},"name":"q","qualname":"<Hessenberg<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030386,"byte_end":1030447,"line_start":125,"line_end":125,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10559},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030593,"byte_end":1030606,"line_start":131,"line_end":131,"column_start":12,"column_end":25},"name":"hess_internal","qualname":"<Hessenberg<N, D>>::hess_internal","value":"pub fn hess_internal(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10564},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030939,"byte_end":1030949,"line_start":140,"line_end":140,"column_start":12,"column_end":22},"name":"hessenberg","qualname":"<SquareMatrix<N, D, S>>::hessenberg","value":"pub fn hessenberg(Self) -> Hessenberg<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Hessenberg decomposition of this matrix using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the Hessenberg decomposition of this matrix using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030840,"byte_end":1030927,"line_start":139,"line_end":139,"column_start":5,"column_end":92}}]},{"kind":"Mod","id":{"krate":0,"index":10565},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"householder","qualname":"::linalg::householder","value":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","parent":null,"children":[{"krate":0,"index":10566},{"krate":0,"index":10569},{"krate":0,"index":10572},{"krate":0,"index":10575},{"krate":0,"index":10576},{"krate":0,"index":10577},{"krate":0,"index":10579},{"krate":0,"index":10582},{"krate":0,"index":10585},{"krate":0,"index":10588},{"krate":0,"index":10591},{"krate":0,"index":10594},{"krate":0,"index":10597},{"krate":0,"index":10598},{"krate":0,"index":10601},{"krate":0,"index":10604},{"krate":0,"index":10607},{"krate":0,"index":10611},{"krate":0,"index":10615},{"krate":0,"index":10619}],"decl_id":null,"docs":" Construction of householder elementary reflections.\n","sig":null,"attributes":[{"value":"/ Construction of householder elementary reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031030,"byte_end":1031085,"line_start":1,"line_end":1,"column_start":1,"column_end":56}}]},{"kind":"Function","id":{"krate":0,"index":10607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031689,"byte_end":1031708,"line_start":19,"line_end":19,"column_start":8,"column_end":27},"name":"reflection_axis_mut","qualname":"::linalg::householder::reflection_axis_mut","value":"pub fn reflection_axis_mut<N: ComplexField, D: Dim,\n                           S: StorageMut<N, D>>(&mut Vector<N, D, S>)\n-> (N, bool)","parent":null,"children":[],"decl_id":null,"docs":" Replaces `column` by the axis of the householder reflection that transforms `column` into\n `(+/-|column|, 0, ..., 0)`.","sig":null,"attributes":[{"value":"/ Replaces `column` by the axis of the householder reflection that transforms `column` into","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031352,"byte_end":1031445,"line_start":12,"line_end":12,"column_start":1,"column_end":94}},{"value":"/ `(+/-|column|, 0, ..., 0)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031446,"byte_end":1031477,"line_start":13,"line_end":13,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031478,"byte_end":1031481,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The unit-length axis is output to `column`. Returns what would be the first component of","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031482,"byte_end":1031574,"line_start":15,"line_end":15,"column_start":1,"column_end":93}},{"value":"/ `column` after reflection and `false` if no reflection was necessary.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031575,"byte_end":1031648,"line_start":16,"line_end":16,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1031664,"byte_end":1031681,"line_start":18,"line_end":18,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":10611},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1032590,"byte_end":1032612,"line_start":47,"line_end":47,"column_start":8,"column_end":30},"name":"clear_column_unchecked","qualname":"::linalg::householder::clear_column_unchecked","value":"pub fn clear_column_unchecked<N: ComplexField, R: Dim,\n                              C: Dim>(&mut MatrixMN<N, R, C>, &mut N, usize,\n                                      usize, Option<&mut VectorN<N, R>>) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th\n subdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `icol`-th column, starting with the `shift + 1`-th","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1032441,"byte_end":1032542,"line_start":44,"line_end":44,"column_start":1,"column_end":102}},{"value":"/ subdiagonal element.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1032543,"byte_end":1032567,"line_start":45,"line_end":45,"column_start":1,"column_end":25}}]},{"kind":"Function","id":{"krate":0,"index":10615},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1033606,"byte_end":1033625,"line_start":75,"line_end":75,"column_start":8,"column_end":27},"name":"clear_row_unchecked","qualname":"::linalg::householder::clear_row_unchecked","value":"pub fn clear_row_unchecked<N: ComplexField, R: Dim,\n                           C: Dim>(&mut MatrixMN<N, R, C>, &mut N,\n                                   &mut VectorN<N, C>, &mut VectorN<N, R>,\n                                   usize, usize) where\nDefaultAllocator: Allocator<N, R, C> + Allocator<N, R> + Allocator<N, C>","parent":null,"children":[],"decl_id":null,"docs":" Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th\n superdiagonal element.\n","sig":null,"attributes":[{"value":"/ Uses an householder reflection to zero out the `irow`-th row, ending before the `shift + 1`-th","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1033458,"byte_end":1033556,"line_start":72,"line_end":72,"column_start":1,"column_end":99}},{"value":"/ superdiagonal element.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1033557,"byte_end":1033583,"line_start":73,"line_end":73,"column_start":1,"column_end":27}}]},{"kind":"Function","id":{"krate":0,"index":10619},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1034954,"byte_end":1034964,"line_start":111,"line_end":111,"column_start":8,"column_end":18},"name":"assemble_q","qualname":"::linalg::householder::assemble_q","value":"pub fn assemble_q<N: ComplexField, D: Dim>(&MatrixN<N, D>, &[N])\n-> MatrixN<N, D> where DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal transformation described by the elementary reflector axii stored on\n the lower-diagonal element of the given matrix.\n matrices.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal transformation described by the elementary reflector axii stored on","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1034770,"byte_end":1034865,"line_start":107,"line_end":107,"column_start":1,"column_end":96}},{"value":"/ the lower-diagonal element of the given matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1034866,"byte_end":1034917,"line_start":108,"line_end":108,"column_start":1,"column_end":52}},{"value":"/ matrices.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/householder.rs","byte_start":1034918,"byte_end":1034931,"line_start":109,"line_end":109,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10656},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036035,"byte_end":1036046,"line_start":13,"line_end":13,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<SquareMatrix<N, D, S>>::try_inverse","value":"pub fn try_inverse(Self) -> Option<MatrixN<N, D>> where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1035974,"byte_end":1036009,"line_start":11,"line_end":11,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036014,"byte_end":1036023,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10661},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036499,"byte_end":1036514,"line_start":28,"line_end":28,"column_start":12,"column_end":27},"name":"try_inverse_mut","qualname":"<SquareMatrix<N, D, S>>::try_inverse_mut","value":"pub fn try_inverse_mut(&mut Self) -> bool where\nDefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if\n inversion fails.\n","sig":null,"attributes":[{"value":"/ Attempts to invert this matrix in-place. Returns `false` and leaves `self` untouched if","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036357,"byte_end":1036448,"line_start":25,"line_end":25,"column_start":5,"column_end":96}},{"value":"/ inversion fails.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036453,"byte_end":1036473,"line_start":26,"line_end":26,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036478,"byte_end":1036487,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":24620},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1044805,"byte_end":1044807,"line_start":35,"line_end":35,"column_start":12,"column_end":14},"name":"LU","qualname":"::linalg::lu::LU","value":"LU {  }","parent":null,"children":[{"krate":0,"index":24624},{"krate":0,"index":24625}],"decl_id":null,"docs":" LU decomposition with partial (row) pivoting.\n","sig":null,"attributes":[{"value":"/ LU decomposition with partial (row) pivoting.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1044027,"byte_end":1044076,"line_start":14,"line_end":14,"column_start":1,"column_end":50}}]},{"kind":"Function","id":{"krate":0,"index":10731},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045438,"byte_end":1045451,"line_start":52,"line_end":52,"column_start":8,"column_end":21},"name":"try_invert_to","qualname":"::linalg::lu::try_invert_to","value":"pub fn try_invert_to<N: ComplexField, D: Dim,\n                     S>(MatrixN<N, D>, &mut Matrix<N, D, D, S>) -> bool where\nS: StorageMut<N, D, D>, DefaultAllocator: Allocator<N, D, D>","parent":null,"children":[],"decl_id":null,"docs":" Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","sig":null,"attributes":[{"value":"/ Performs a LU decomposition to overwrite `out` with the inverse of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045255,"byte_end":1045335,"line_start":49,"line_end":49,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045336,"byte_end":1045339,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ If `matrix` is not invertible, `false` is returned and `out` may contain invalid data.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045340,"byte_end":1045430,"line_start":51,"line_end":51,"column_start":1,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":10739},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1046600,"byte_end":1046603,"line_start":93,"line_end":93,"column_start":12,"column_end":15},"name":"new","qualname":"<LU<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1046514,"byte_end":1046588,"line_start":92,"line_end":92,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":10740},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1047559,"byte_end":1047570,"line_start":125,"line_end":125,"column_start":12,"column_end":23},"name":"lu_internal","qualname":"<LU<N, R, C>>::lu_internal","value":"pub fn lu_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10741},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1047710,"byte_end":1047711,"line_start":131,"line_end":131,"column_start":12,"column_end":13},"name":"l","qualname":"<LU<N, R, C>>::l","value":"pub fn l(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1047630,"byte_end":1047684,"line_start":129,"line_end":129,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1047689,"byte_end":1047698,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10743},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1048643,"byte_end":1048651,"line_start":157,"line_end":157,"column_start":12,"column_end":20},"name":"l_unpack","qualname":"<LU<N, R, C>>::l_unpack","value":"pub fn l_unpack(Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The lower triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The lower triangular matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1048563,"byte_end":1048617,"line_start":155,"line_end":155,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1048622,"byte_end":1048631,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10744},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049078,"byte_end":1049079,"line_start":168,"line_end":168,"column_start":12,"column_end":13},"name":"u","qualname":"<LU<N, R, C>>::u","value":"pub fn u(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" The upper triangular matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ The upper triangular matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1048998,"byte_end":1049052,"line_start":166,"line_end":166,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049057,"byte_end":1049066,"line_start":167,"line_end":167,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10745},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049389,"byte_end":1049390,"line_start":176,"line_end":176,"column_start":12,"column_end":13},"name":"p","qualname":"<LU<N, R, C>>::p","value":"pub fn p(&Self) -> &PermutationSequence<DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations of this decomposition.\n","sig":null,"attributes":[{"value":"/ The row permutations of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049316,"byte_end":1049363,"line_start":174,"line_end":174,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049368,"byte_end":1049377,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10746},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049583,"byte_end":1049589,"line_start":182,"line_end":182,"column_start":12,"column_end":18},"name":"unpack","qualname":"<LU<N, R, C>>::unpack","value":"pub fn unpack(Self)\n->\n    (PermutationSequence<DimMinimum<R, C>>, MatrixMN<N, R, DimMinimum<R, C>>,\n     MatrixMN<N, DimMinimum<R, C>, C>) where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nAllocator<N, DimMinimum<R, C>, C> + Reallocator<N, R, C, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.\n","sig":null,"attributes":[{"value":"/ The row permutations and two triangular matrices of this decomposition: `(P, L, U)`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049469,"byte_end":1049557,"line_start":180,"line_end":180,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1049562,"byte_end":1049571,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10750},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050366,"byte_end":1050371,"line_start":206,"line_end":206,"column_start":12,"column_end":17},"name":"solve","qualname":"<LU<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: Storage<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050207,"byte_end":1050294,"line_start":203,"line_end":203,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050299,"byte_end":1050302,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050307,"byte_end":1050354,"line_start":205,"line_end":205,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":10754},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1051021,"byte_end":1051030,"line_start":227,"line_end":227,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<LU<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050782,"byte_end":1050869,"line_start":223,"line_end":223,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050874,"byte_end":1050877,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` may","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050882,"byte_end":1050972,"line_start":225,"line_end":225,"column_start":5,"column_end":95}},{"value":"/ be overwritten with garbage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050977,"byte_end":1051009,"line_start":226,"line_end":226,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":10758},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1051746,"byte_end":1051757,"line_start":250,"line_end":250,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<LU<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1051620,"byte_end":1051670,"line_start":247,"line_end":247,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1051675,"byte_end":1051678,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the matrix is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1051683,"byte_end":1051734,"line_start":249,"line_end":249,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":10759},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052394,"byte_end":1052408,"line_start":269,"line_end":269,"column_start":12,"column_end":26},"name":"try_inverse_to","qualname":"<LU<N, D, D>>::try_inverse_to","value":"pub fn try_inverse_to<S2: StorageMut<N, D,\n                                     D>>(&Self, &mut Matrix<N, D, D, S2>)\n-> bool","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix and outputs the result to `out`.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix and outputs the result to `out`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052168,"byte_end":1052250,"line_start":265,"line_end":265,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052255,"byte_end":1052258,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and `out` may be","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052263,"byte_end":1052348,"line_start":267,"line_end":267,"column_start":5,"column_end":90}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052353,"byte_end":1052382,"line_start":268,"line_end":268,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":10761},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052886,"byte_end":1052897,"line_start":284,"line_end":284,"column_start":12,"column_end":23},"name":"determinant","qualname":"<LU<N, D, D>>::determinant","value":"pub fn determinant(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the determinant of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the determinant of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1052820,"byte_end":1052874,"line_start":283,"line_end":283,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":10762},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1053339,"byte_end":1053352,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<LU<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1053274,"byte_end":1053327,"line_start":299,"line_end":299,"column_start":5,"column_end":58}}]},{"kind":"Function","id":{"krate":0,"index":10763},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1053840,"byte_end":1053850,"line_start":319,"line_end":319,"column_start":8,"column_end":18},"name":"gauss_step","qualname":"::linalg::lu::gauss_step","value":"pub fn gauss_step<N, R: Dim, C: Dim, S>(&mut Matrix<N, R, C, S>, N, usize)\nwhere N: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal\n element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Executes one step of gaussian elimination on the i-th row and column of `matrix`. The diagonal","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1053680,"byte_end":1053778,"line_start":317,"line_end":317,"column_start":1,"column_end":99}},{"value":"/ element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1053779,"byte_end":1053832,"line_start":318,"line_end":318,"column_start":1,"column_end":54}}]},{"kind":"Function","id":{"krate":0,"index":10768},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1054624,"byte_end":1054639,"line_start":343,"line_end":343,"column_start":8,"column_end":23},"name":"gauss_step_swap","qualname":"::linalg::lu::gauss_step_swap","value":"pub fn gauss_step_swap<N, R: Dim, C: Dim,\n                       S>(&mut Matrix<N, R, C, S>, N, usize, usize) where\nN: Scalar + Field, S: StorageMut<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th\n row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.\n","sig":null,"attributes":[{"value":"/ Swaps the rows `i` with the row `piv` and executes one step of gaussian elimination on the i-th","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1054422,"byte_end":1054521,"line_start":341,"line_end":341,"column_start":1,"column_end":100}},{"value":"/ row and column of `matrix`. The diagonal element `matrix[(i, i)]` is provided as argument.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1054522,"byte_end":1054616,"line_start":342,"line_end":342,"column_start":1,"column_end":95}}]},{"kind":"Method","id":{"krate":0,"index":10778},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1055617,"byte_end":1055619,"line_start":375,"line_end":375,"column_start":12,"column_end":14},"name":"lu","qualname":"<Matrix<N, R, C, S>>::lu","value":"pub fn lu(Self) -> LU<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the LU decomposition with partial (row) pivoting of `matrix`.\n","sig":null,"attributes":[{"value":"/ Computes the LU decomposition with partial (row) pivoting of `matrix`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1055531,"byte_end":1055605,"line_start":374,"line_end":374,"column_start":5,"column_end":79}}]},{"kind":"Struct","id":{"krate":0,"index":24636},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056596,"byte_end":1056615,"line_start":31,"line_end":31,"column_start":12,"column_end":31},"name":"PermutationSequence","qualname":"::linalg::permutation_sequence::PermutationSequence","value":"PermutationSequence {  }","parent":null,"children":[{"krate":0,"index":24638},{"krate":0,"index":24639}],"decl_id":null,"docs":" A sequence of row or column permutations.\n","sig":null,"attributes":[{"value":"/ A sequence of row or column permutations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056055,"byte_end":1056100,"line_start":14,"line_end":14,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":10822},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057083,"byte_end":1057091,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<D>>::identity","value":"pub fn identity() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new statically-allocated sequence of `D` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new statically-allocated sequence of `D` identity permutations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056980,"byte_end":1057057,"line_start":47,"line_end":47,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057062,"byte_end":1057071,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10824},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057406,"byte_end":1057414,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"identity","qualname":"<PermutationSequence<Dynamic>>::identity","value":"pub fn identity(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new dynamically-allocated sequence of `n` identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new dynamically-allocated sequence of `n` identity permutations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057302,"byte_end":1057380,"line_start":58,"line_end":58,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057385,"byte_end":1057394,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10827},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057667,"byte_end":1057683,"line_start":70,"line_end":70,"column_start":12,"column_end":28},"name":"identity_generic","qualname":"<PermutationSequence<D>>::identity_generic","value":"pub fn identity_generic(D) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new sequence of D identity permutations.\n","sig":null,"attributes":[{"value":"/ Creates a new sequence of D identity permutations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057587,"byte_end":1057641,"line_start":68,"line_end":68,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057646,"byte_end":1057655,"line_start":69,"line_end":69,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10828},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058013,"byte_end":1058031,"line_start":82,"line_end":82,"column_start":12,"column_end":30},"name":"append_permutation","qualname":"<PermutationSequence<D>>::append_permutation","value":"pub fn append_permutation(&mut Self, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this\n sequence of permutations.\n","sig":null,"attributes":[{"value":"/ Adds the interchange of the row (or column) `i` with the row (or column) `i2` to this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057864,"byte_end":1057953,"line_start":79,"line_end":79,"column_start":5,"column_end":94}},{"value":"/ sequence of permutations.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057958,"byte_end":1057987,"line_start":80,"line_end":80,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057992,"byte_end":1058001,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10829},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058406,"byte_end":1058418,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"permute_rows","qualname":"<PermutationSequence<D>>::permute_rows","value":"pub fn permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                    S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the rows of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058317,"byte_end":1058380,"line_start":93,"line_end":93,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058385,"byte_end":1058394,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10834},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058746,"byte_end":1058762,"line_start":104,"line_end":104,"column_start":12,"column_end":28},"name":"inv_permute_rows","qualname":"<PermutationSequence<D>>::inv_permute_rows","value":"pub fn inv_permute_rows<N: Scalar, R2: Dim, C2: Dim,\n                        S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the rows of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the rows of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058646,"byte_end":1058720,"line_start":102,"line_end":102,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1058725,"byte_end":1058734,"line_start":103,"line_end":103,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10839},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059140,"byte_end":1059155,"line_start":118,"line_end":118,"column_start":12,"column_end":27},"name":"permute_columns","qualname":"<PermutationSequence<D>>::permute_columns","value":"pub fn permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                       S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations to the columns of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059048,"byte_end":1059114,"line_start":116,"line_end":116,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059119,"byte_end":1059128,"line_start":117,"line_end":117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10844},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059521,"byte_end":1059540,"line_start":131,"line_end":131,"column_start":12,"column_end":31},"name":"inv_permute_columns","qualname":"<PermutationSequence<D>>::inv_permute_columns","value":"pub fn inv_permute_columns<N: Scalar, R2: Dim, C2: Dim,\n                           S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Applies this sequence of permutations in reverse to the columns of `rhs`.\n","sig":null,"attributes":[{"value":"/ Applies this sequence of permutations in reverse to the columns of `rhs`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059418,"byte_end":1059495,"line_start":129,"line_end":129,"column_start":5,"column_end":82}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059500,"byte_end":1059509,"line_start":130,"line_end":130,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10849},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059910,"byte_end":1059913,"line_start":144,"line_end":144,"column_start":12,"column_end":15},"name":"len","qualname":"<PermutationSequence<D>>::len","value":"pub fn len(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" The number of non-identity permutations applied by this sequence.\n","sig":null,"attributes":[{"value":"/ The number of non-identity permutations applied by this sequence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059829,"byte_end":1059898,"line_start":143,"line_end":143,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":10850},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1060054,"byte_end":1060065,"line_start":150,"line_end":150,"column_start":12,"column_end":23},"name":"determinant","qualname":"<PermutationSequence<D>>::determinant","value":"pub fn determinant<N: One + ClosedNeg>(&Self) -> N","parent":null,"children":[],"decl_id":null,"docs":" The determinant of the matrix corresponding to this permutation.\n","sig":null,"attributes":[{"value":"/ The determinant of the matrix corresponding to this permutation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1059960,"byte_end":1060028,"line_start":148,"line_end":148,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1060033,"byte_end":1060042,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":24646},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061412,"byte_end":1061414,"line_start":36,"line_end":36,"column_start":12,"column_end":14},"name":"QR","qualname":"::linalg::qr::QR","value":"QR {  }","parent":null,"children":[{"krate":0,"index":24650},{"krate":0,"index":24651}],"decl_id":null,"docs":" The QR decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ The QR decomposition of a general matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1060682,"byte_end":1060727,"line_start":15,"line_end":15,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":10926},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1062053,"byte_end":1062056,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<QR<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition using householder reflections.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition using householder reflections.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061977,"byte_end":1062041,"line_start":53,"line_end":53,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":10927},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1062769,"byte_end":1062770,"line_start":79,"line_end":79,"column_start":12,"column_end":13},"name":"r","qualname":"<QR<N, R, C>>::r","value":"pub fn r(&Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Allocator<N, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1062671,"byte_end":1062743,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1062748,"byte_end":1062757,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10929},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063301,"byte_end":1063309,"line_start":93,"line_end":93,"column_start":12,"column_end":20},"name":"unpack_r","qualname":"<QR<N, R, C>>::unpack_r","value":"pub fn unpack_r(Self) -> MatrixMN<N, DimMinimum<R, C>, C> where\nDefaultAllocator: Reallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the upper trapezoidal submatrix `R` of this decomposition.","sig":null,"attributes":[{"value":"/ Retrieves the upper trapezoidal submatrix `R` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063134,"byte_end":1063206,"line_start":89,"line_end":89,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063211,"byte_end":1063214,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ This is usually faster than `r` but consumes `self`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063219,"byte_end":1063275,"line_start":91,"line_end":91,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063280,"byte_end":1063289,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":10931},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063800,"byte_end":1063801,"line_start":105,"line_end":105,"column_start":12,"column_end":13},"name":"q","qualname":"<QR<N, R, C>>::q","value":"pub fn q(&Self) -> MatrixMN<N, R, DimMinimum<R, C>> where\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1063727,"byte_end":1063788,"line_start":104,"line_end":104,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":10932},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1064699,"byte_end":1064705,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"unpack","qualname":"<QR<N, R, C>>::unpack","value":"pub fn unpack(Self)\n-> (MatrixMN<N, R, DimMinimum<R, C>>, MatrixMN<N, DimMinimum<R, C>, C>) where\nDimMinimum<R, C>: DimMin<C, Output = DimMinimum<R, C>>,\nDefaultAllocator: Allocator<N, R, DimMinimum<R, C>> +\nReallocator<N, R, C, DimMinimum<R, C>, C>","parent":null,"children":[],"decl_id":null,"docs":" Unpacks this decomposition into its two matrix factors.\n","sig":null,"attributes":[{"value":"/ Unpacks this decomposition into its two matrix factors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1064628,"byte_end":1064687,"line_start":126,"line_end":126,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":10933},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065092,"byte_end":1065103,"line_start":142,"line_end":142,"column_start":12,"column_end":23},"name":"qr_internal","qualname":"<QR<N, R, C>>::qr_internal","value":"pub fn qr_internal(&Self) -> &MatrixMN<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":10934},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065267,"byte_end":1065275,"line_start":147,"line_end":147,"column_start":12,"column_end":20},"name":"q_tr_mul","qualname":"<QR<N, R, C>>::q_tr_mul","value":"pub fn q_tr_mul<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>) where\nS2: StorageMut<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.\n","sig":null,"attributes":[{"value":"/ Multiplies the provided matrix by the transpose of the `Q` matrix of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065163,"byte_end":1065255,"line_start":146,"line_end":146,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":10941},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066091,"byte_end":1066096,"line_start":168,"line_end":168,"column_start":12,"column_end":17},"name":"solve","qualname":"<QR<N, D, D>>::solve","value":"pub fn solve<R2: Dim, C2: Dim, S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>,\nDefaultAllocator: Allocator<N, R2, C2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065932,"byte_end":1066019,"line_start":165,"line_end":165,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066024,"byte_end":1066027,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if `self` is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066032,"byte_end":1066079,"line_start":167,"line_end":167,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":10945},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066746,"byte_end":1066755,"line_start":190,"line_end":190,"column_start":12,"column_end":21},"name":"solve_mut","qualname":"<QR<N, D, D>>::solve_mut","value":"pub fn solve_mut<R2: Dim, C2: Dim, S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","sig":null,"attributes":[{"value":"/ Solves the linear system `self * x = b`, where `x` is the unknown to be determined.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066511,"byte_end":1066598,"line_start":186,"line_end":186,"column_start":5,"column_end":92}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066603,"byte_end":1066606,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ If the decomposed matrix is not invertible, this returns `false` and its input `b` is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066611,"byte_end":1066700,"line_start":188,"line_end":188,"column_start":5,"column_end":94}},{"value":"/ overwritten with garbage.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1066705,"byte_end":1066734,"line_start":189,"line_end":189,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":10953},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068344,"byte_end":1068355,"line_start":247,"line_end":247,"column_start":12,"column_end":23},"name":"try_inverse","qualname":"<QR<N, D, D>>::try_inverse","value":"pub fn try_inverse(&Self) -> Option<MatrixN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the inverse of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068207,"byte_end":1068257,"line_start":244,"line_end":244,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068262,"byte_end":1068265,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the decomposed matrix is not invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068270,"byte_end":1068332,"line_start":246,"line_end":246,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":10954},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068876,"byte_end":1068889,"line_start":265,"line_end":265,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<QR<N, D, D>>::is_invertible","value":"pub fn is_invertible(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if the decomposed matrix is invertible.\n","sig":null,"attributes":[{"value":"/ Indicates if the decomposed matrix is invertible.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1068811,"byte_end":1068864,"line_start":264,"line_end":264,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":10960},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1069892,"byte_end":1069894,"line_start":298,"line_end":298,"column_start":12,"column_end":14},"name":"qr","qualname":"<Matrix<N, R, C, S>>::qr","value":"pub fn qr(Self) -> QR<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the QR decomposition of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the QR decomposition of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1069831,"byte_end":1069880,"line_start":297,"line_end":297,"column_start":5,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":24662},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071108,"byte_end":1071113,"line_start":38,"line_end":38,"column_start":12,"column_end":17},"name":"Schur","qualname":"::linalg::schur::Schur","value":"Schur {  }","parent":null,"children":[{"krate":0,"index":24665},{"krate":0,"index":24666}],"decl_id":null,"docs":" Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Schur decomposition of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1070535,"byte_end":1070578,"line_start":19,"line_end":19,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1070579,"byte_end":1070582,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ If this is a real matrix, this will be a RealField Schur decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1070583,"byte_end":1070658,"line_start":21,"line_end":21,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":11046},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071702,"byte_end":1071705,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<Schur<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071634,"byte_end":1071690,"line_start":59,"line_end":59,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":11047},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072386,"byte_end":1072393,"line_start":75,"line_end":75,"column_start":12,"column_end":19},"name":"try_new","qualname":"<Schur<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071815,"byte_end":1071882,"line_start":64,"line_end":64,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071887,"byte_end":1071890,"line_start":65,"line_end":65,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071895,"byte_end":1071977,"line_start":66,"line_end":66,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071982,"byte_end":1072011,"line_start":67,"line_end":67,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072016,"byte_end":1072019,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072024,"byte_end":1072039,"line_start":69,"line_end":69,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072044,"byte_end":1072047,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072052,"byte_end":1072130,"line_start":71,"line_end":71,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072135,"byte_end":1072227,"line_start":72,"line_end":72,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072232,"byte_end":1072324,"line_start":73,"line_end":73,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1072329,"byte_end":1072374,"line_start":74,"line_end":74,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11053},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082229,"byte_end":1082235,"line_start":375,"line_end":375,"column_start":12,"column_end":18},"name":"unpack","qualname":"<Schur<N, D>>::unpack","value":"pub fn unpack(Self) -> (MatrixN<N, D>, MatrixN<N, D>)","parent":null,"children":[],"decl_id":null,"docs":" Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the\n decomposed matrix equals `Q * T * Q.transpose()`.\n","sig":null,"attributes":[{"value":"/ Retrieves the unitary matrix `Q` and the upper-quasitriangular matrix `T` such that the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082068,"byte_end":1082159,"line_start":373,"line_end":373,"column_start":5,"column_end":96}},{"value":"/ decomposed matrix equals `Q * T * Q.transpose()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082164,"byte_end":1082217,"line_start":374,"line_end":374,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":11054},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082448,"byte_end":1082459,"line_start":382,"line_end":382,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<Schur<N, D>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the real eigenvalues of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the real eigenvalues of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082314,"byte_end":1082373,"line_start":379,"line_end":379,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082378,"byte_end":1082381,"line_start":380,"line_end":380,"column_start":5,"column_end":8}},{"value":"/ Return `None` if some eigenvalues are complex.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082386,"byte_end":1082436,"line_start":381,"line_end":381,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11055},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082794,"byte_end":1082813,"line_start":392,"line_end":392,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<Schur<N, D>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the complex eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ Computes the complex eigenvalues of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1082720,"byte_end":1082782,"line_start":391,"line_end":391,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11070},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086279,"byte_end":1086284,"line_start":499,"line_end":499,"column_start":12,"column_end":17},"name":"schur","qualname":"<SquareMatrix<N, D, S>>::schur","value":"pub fn schur(Self) -> Schur<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Schur decomposition of a square matrix.\n","sig":null,"attributes":[{"value":"/ Computes the Schur decomposition of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086211,"byte_end":1086267,"line_start":498,"line_end":498,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":11071},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086928,"byte_end":1086937,"line_start":514,"line_end":514,"column_start":12,"column_end":21},"name":"try_schur","qualname":"<SquareMatrix<N, D, S>>::try_schur","value":"pub fn try_schur(Self, N::RealField, usize) -> Option<Schur<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Schur decomposition of a square matrix.","sig":null,"attributes":[{"value":"/ Attempts to compute the Schur decomposition of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086357,"byte_end":1086424,"line_start":503,"line_end":503,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086429,"byte_end":1086432,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ If only eigenvalues are needed, it is more efficient to call the matrix method","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086437,"byte_end":1086519,"line_start":505,"line_end":505,"column_start":5,"column_end":87}},{"value":"/ `.eigenvalues()` instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086524,"byte_end":1086553,"line_start":506,"line_end":506,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086558,"byte_end":1086561,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086566,"byte_end":1086581,"line_start":508,"line_end":508,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086586,"byte_end":1086589,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086594,"byte_end":1086672,"line_start":510,"line_end":510,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086677,"byte_end":1086769,"line_start":511,"line_end":511,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086774,"byte_end":1086866,"line_start":512,"line_end":512,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1086871,"byte_end":1086916,"line_start":513,"line_end":513,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11072},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1087131,"byte_end":1087142,"line_start":519,"line_end":519,"column_start":12,"column_end":23},"name":"eigenvalues","qualname":"<SquareMatrix<N, D, S>>::eigenvalues","value":"pub fn eigenvalues(&Self) -> Option<VectorN<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1087075,"byte_end":1087119,"line_start":518,"line_end":518,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11073},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1088325,"byte_end":1088344,"line_start":559,"line_end":559,"column_start":12,"column_end":31},"name":"complex_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::complex_eigenvalues","value":"pub fn complex_eigenvalues(&Self) -> VectorN<NumComplex<N>, D> where\nN: RealField, DefaultAllocator: Allocator<NumComplex<N>, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1088269,"byte_end":1088313,"line_start":558,"line_end":558,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":11125},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089574,"byte_end":1089596,"line_start":13,"line_end":13,"column_start":12,"column_end":34},"name":"solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular","value":"pub fn solve_lower_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089360,"byte_end":1089455,"line_start":10,"line_end":10,"column_start":5,"column_end":100}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089460,"byte_end":1089548,"line_start":11,"line_end":11,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089553,"byte_end":1089562,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11129},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090241,"byte_end":1090263,"line_start":33,"line_end":33,"column_start":12,"column_end":34},"name":"solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular","value":"pub fn solve_upper_triangular<R2: Dim, C2: Dim,\n                              S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090027,"byte_end":1090122,"line_start":30,"line_end":30,"column_start":5,"column_end":100}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090127,"byte_end":1090215,"line_start":31,"line_end":31,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090220,"byte_end":1090229,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11133},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090876,"byte_end":1090902,"line_start":52,"line_end":52,"column_start":12,"column_end":38},"name":"solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_mut","value":"pub fn solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090694,"byte_end":1090775,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1090780,"byte_end":1090864,"line_start":51,"line_end":51,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11140},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1092376,"byte_end":1092412,"line_start":103,"line_end":103,"column_start":12,"column_end":48},"name":"solve_lower_triangular_with_diag_mut","qualname":"<SquareMatrix<N, D, S>>::solve_lower_triangular_with_diag_mut","value":"pub fn solve_lower_triangular_with_diag_mut<R2: Dim, C2: Dim,\n                                            S2>(&Self,\n                                                &mut Matrix<N, R2, C2, S2>, N)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is\n assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1092078,"byte_end":1092159,"line_start":100,"line_end":100,"column_start":5,"column_end":86}},{"value":"/ lower-triangular part of `self` is considered not-zero. The diagonal is never read as it is","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1092164,"byte_end":1092259,"line_start":101,"line_end":101,"column_start":5,"column_end":100}},{"value":"/ assumed to be equal to `diag`. Returns `false` and does not modify its inputs if `diag` is zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1092264,"byte_end":1092364,"line_start":102,"line_end":102,"column_start":5,"column_end":105}}]},{"kind":"Method","id":{"krate":0,"index":11144},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1093279,"byte_end":1093305,"line_start":134,"line_end":134,"column_start":12,"column_end":38},"name":"solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::solve_upper_triangular_mut","value":"pub fn solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                  S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1093097,"byte_end":1093178,"line_start":132,"line_end":132,"column_start":5,"column_end":86}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1093183,"byte_end":1093267,"line_start":133,"line_end":133,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11151},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1094713,"byte_end":1094738,"line_start":189,"line_end":189,"column_start":12,"column_end":37},"name":"tr_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular","value":"pub fn tr_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1094487,"byte_end":1094594,"line_start":186,"line_end":186,"column_start":5,"column_end":112}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1094599,"byte_end":1094687,"line_start":187,"line_end":187,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1094692,"byte_end":1094701,"line_start":188,"line_end":188,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11155},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095414,"byte_end":1095439,"line_start":209,"line_end":209,"column_start":12,"column_end":37},"name":"tr_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular","value":"pub fn tr_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.transpose() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095188,"byte_end":1095295,"line_start":206,"line_end":206,"column_start":5,"column_end":112}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095300,"byte_end":1095388,"line_start":207,"line_end":207,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095393,"byte_end":1095402,"line_start":208,"line_end":208,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11159},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1096083,"byte_end":1096112,"line_start":228,"line_end":228,"column_start":12,"column_end":41},"name":"tr_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_lower_triangular_mut","value":"pub fn tr_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095889,"byte_end":1095982,"line_start":226,"line_end":226,"column_start":5,"column_end":98}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1095987,"byte_end":1096071,"line_start":227,"line_end":227,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11165},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1096754,"byte_end":1096783,"line_start":249,"line_end":249,"column_start":12,"column_end":41},"name":"tr_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::tr_solve_upper_triangular_mut","value":"pub fn tr_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.transpose() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1096560,"byte_end":1096653,"line_start":247,"line_end":247,"column_start":5,"column_end":98}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1096658,"byte_end":1096742,"line_start":248,"line_end":248,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11171},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1097455,"byte_end":1097480,"line_start":271,"line_end":271,"column_start":12,"column_end":37},"name":"ad_solve_lower_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular","value":"pub fn ad_solve_lower_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1097231,"byte_end":1097336,"line_start":268,"line_end":268,"column_start":5,"column_end":110}},{"value":"/ the lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1097341,"byte_end":1097429,"line_start":269,"line_end":269,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1097434,"byte_end":1097443,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11175},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098154,"byte_end":1098179,"line_start":291,"line_end":291,"column_start":12,"column_end":37},"name":"ad_solve_upper_triangular","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular","value":"pub fn ad_solve_upper_triangular<R2: Dim, C2: Dim,\n                                 S2>(&Self, &Matrix<N, R2, C2, S2>)\n-> Option<MatrixMN<N, R2, C2>> where S2: StorageMut<N, R2, C2>,\nDefaultAllocator: Allocator<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only\n the upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Computes the solution of the linear system `self.adjoint() . x = b` where `x` is the unknown and only","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1097930,"byte_end":1098035,"line_start":288,"line_end":288,"column_start":5,"column_end":110}},{"value":"/ the upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098040,"byte_end":1098128,"line_start":289,"line_end":289,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098133,"byte_end":1098142,"line_start":290,"line_end":290,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":11179},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098821,"byte_end":1098850,"line_start":310,"line_end":310,"column_start":12,"column_end":41},"name":"ad_solve_lower_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_lower_triangular_mut","value":"pub fn ad_solve_lower_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n lower-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098629,"byte_end":1098720,"line_start":308,"line_end":308,"column_start":5,"column_end":96}},{"value":"/ lower-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1098725,"byte_end":1098809,"line_start":309,"line_end":309,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":11185},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1099503,"byte_end":1099532,"line_start":331,"line_end":331,"column_start":12,"column_end":41},"name":"ad_solve_upper_triangular_mut","qualname":"<SquareMatrix<N, D, S>>::ad_solve_upper_triangular_mut","value":"pub fn ad_solve_upper_triangular_mut<R2: Dim, C2: Dim,\n                                     S2>(&Self, &mut Matrix<N, R2, C2, S2>)\n-> bool where S2: StorageMut<N, R2, C2>,\nShapeConstraint: SameNumberOfRows<R2, D>","parent":null,"children":[],"decl_id":null,"docs":" Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the\n upper-triangular part of `self` (including the diagonal) is considered not-zero.\n","sig":null,"attributes":[{"value":"/ Solves the linear system `self.adjoint() . x = b` where `x` is the unknown and only the","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1099311,"byte_end":1099402,"line_start":329,"line_end":329,"column_start":5,"column_end":96}},{"value":"/ upper-triangular part of `self` (including the diagonal) is considered not-zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1099407,"byte_end":1099491,"line_start":330,"line_end":330,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":24675},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103380,"byte_end":1103383,"line_start":43,"line_end":43,"column_start":12,"column_end":15},"name":"SVD","qualname":"::linalg::svd::SVD","value":"SVD { u, v_t, singular_values }","parent":null,"children":[{"krate":0,"index":24679},{"krate":0,"index":24680},{"krate":0,"index":24681}],"decl_id":null,"docs":" Singular Value Decomposition of a general matrix.\n","sig":null,"attributes":[{"value":"/ Singular Value Decomposition of a general matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1102291,"byte_end":1102344,"line_start":18,"line_end":18,"column_start":1,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":24679},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103638,"byte_end":1103639,"line_start":49,"line_end":49,"column_start":9,"column_end":10},"name":"u","qualname":"::linalg::svd::SVD::u","value":"std::option::Option<base::matrix::Matrix<N, R, <R as base::dimension::DimMin<C>>::Output, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, R, <R as base::dimension::DimMin<C>>::Output>>::Buffer>>","parent":{"krate":0,"index":24675},"children":[],"decl_id":null,"docs":" The left-singular vectors `U` of this SVD.\n","sig":null,"attributes":[{"value":"/ The left-singular vectors `U` of this SVD.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103583,"byte_end":1103629,"line_start":48,"line_end":48,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":24680},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103745,"byte_end":1103748,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"name":"v_t","qualname":"::linalg::svd::SVD::v_t","value":"std::option::Option<base::matrix::Matrix<N, <R as base::dimension::DimMin<C>>::Output, C, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, <R as base::dimension::DimMin<C>>::Output, C>>::Buffer>>","parent":{"krate":0,"index":24675},"children":[],"decl_id":null,"docs":" The right-singular vectors `V^t` of this SVD.\n","sig":null,"attributes":[{"value":"/ The right-singular vectors `V^t` of this SVD.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103687,"byte_end":1103736,"line_start":50,"line_end":50,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":24681},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103841,"byte_end":1103856,"line_start":53,"line_end":53,"column_start":9,"column_end":24},"name":"singular_values","qualname":"::linalg::svd::SVD::singular_values","value":"base::matrix::Matrix<<N as alga::general::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as alga::general::ComplexField>::RealField, <R as base::dimension::DimMin<C>>::Output>>::Buffer>","parent":{"krate":0,"index":24675},"children":[],"decl_id":null,"docs":" The singular values of this SVD.\n","sig":null,"attributes":[{"value":"/ The singular values of this SVD.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103796,"byte_end":1103832,"line_start":52,"line_end":52,"column_start":5,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":11290},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1104877,"byte_end":1104880,"line_start":80,"line_end":80,"column_start":12,"column_end":15},"name":"new","qualname":"<SVD<N, R, C>>::new","value":"pub fn new(MatrixMN<N, R, C>, bool, bool) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition of `matrix` using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1104786,"byte_end":1104865,"line_start":79,"line_end":79,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":11291},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105719,"byte_end":1105726,"line_start":94,"line_end":94,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SVD<N, R, C>>::try_new","value":"pub fn try_new(MatrixMN<N, R, C>, bool, bool, N::RealField, usize)\n-> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105060,"byte_end":1105150,"line_start":84,"line_end":84,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105155,"byte_end":1105158,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105163,"byte_end":1105178,"line_start":86,"line_end":86,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105183,"byte_end":1105186,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105191,"byte_end":1105283,"line_start":88,"line_end":88,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105288,"byte_end":1105380,"line_start":89,"line_end":89,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105385,"byte_end":1105463,"line_start":90,"line_end":90,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105468,"byte_end":1105560,"line_start":91,"line_end":91,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105565,"byte_end":1105657,"line_start":92,"line_end":92,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1105662,"byte_end":1105707,"line_start":93,"line_end":93,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11297},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118533,"byte_end":1118537,"line_start":448,"line_end":448,"column_start":12,"column_end":16},"name":"rank","qualname":"<SVD<N, R, C>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of the decomposed matrix, i.e., the number of singular values greater\n than `eps`.\n","sig":null,"attributes":[{"value":"/ Computes the rank of the decomposed matrix, i.e., the number of singular values greater","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118410,"byte_end":1118501,"line_start":446,"line_end":446,"column_start":5,"column_end":96}},{"value":"/ than `eps`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118506,"byte_end":1118521,"line_start":447,"line_end":447,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":11299},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119030,"byte_end":1119039,"line_start":461,"line_end":461,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SVD<N, R, C>>::recompose","value":"pub fn recompose(Self) -> Result<MatrixMN<N, R, C>, &'static str>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118779,"byte_end":1118811,"line_start":456,"line_end":456,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118816,"byte_end":1118819,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the singular values have been manually modified.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118824,"byte_end":1118902,"line_start":458,"line_end":458,"column_start":5,"column_end":83}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not been","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118907,"byte_end":1118979,"line_start":459,"line_end":459,"column_start":5,"column_end":77}},{"value":"/ computed at construction-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1118984,"byte_end":1119018,"line_start":460,"line_end":460,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":11300},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119919,"byte_end":1119933,"line_start":481,"line_end":481,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<SVD<N, R, C>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of the decomposed matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119657,"byte_end":1119714,"line_start":476,"line_end":476,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119719,"byte_end":1119722,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119727,"byte_end":1119791,"line_start":478,"line_end":478,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the right- and left- singular vectors have not","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119796,"byte_end":1119863,"line_start":479,"line_end":479,"column_start":5,"column_end":72}},{"value":"/ been computed at construction-time.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1119868,"byte_end":1119907,"line_start":480,"line_end":480,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":11302},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1120965,"byte_end":1120970,"line_start":508,"line_end":508,"column_start":12,"column_end":17},"name":"solve","qualname":"<SVD<N, R, C>>::solve","value":"pub fn solve<R2: Dim, C2: Dim,\n             S2>(&Self, &Matrix<N, R2, C2, S2>, N::RealField)\n-> Result<MatrixMN<N, C, C2>, &'static str> where S2: Storage<N, R2, C2>,\nDefaultAllocator: Allocator<N, C, C2> + Allocator<N, DimMinimum<R, C>, C2>,\nShapeConstraint: SameNumberOfRows<R, R2>","parent":null,"children":[],"decl_id":null,"docs":" Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","sig":null,"attributes":[{"value":"/ Solves the system `self * x = b` where `self` is the decomposed matrix and `x` the unknown.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1120612,"byte_end":1120707,"line_start":503,"line_end":503,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1120712,"byte_end":1120715,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ Any singular value smaller than `eps` is assumed to be zero.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1120720,"byte_end":1120784,"line_start":505,"line_end":505,"column_start":5,"column_end":69}},{"value":"/ Returns `Err` if the singular vectors `U` and `V` have not been computed.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1120789,"byte_end":1120866,"line_start":506,"line_end":506,"column_start":5,"column_end":82}}]},{"kind":"Method","id":{"krate":0,"index":11311},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123018,"byte_end":1123021,"line_start":563,"line_end":563,"column_start":12,"column_end":15},"name":"svd","qualname":"<Matrix<N, R, C, S>>::svd","value":"pub fn svd(Self, bool, bool) -> SVD<N, R, C>","parent":null,"children":[],"decl_id":null,"docs":" Computes the Singular Value Decomposition using implicit shift.\n","sig":null,"attributes":[{"value":"/ Computes the Singular Value Decomposition using implicit shift.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1122939,"byte_end":1123006,"line_start":562,"line_end":562,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":11312},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123808,"byte_end":1123815,"line_start":577,"line_end":577,"column_start":12,"column_end":19},"name":"try_svd","qualname":"<Matrix<N, R, C, S>>::try_svd","value":"pub fn try_svd(Self, bool, bool, N::RealField, usize) -> Option<SVD<N, R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","sig":null,"attributes":[{"value":"/ Attempts to compute the Singular Value Decomposition of `matrix` using implicit shift.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123149,"byte_end":1123239,"line_start":567,"line_end":567,"column_start":5,"column_end":95}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123244,"byte_end":1123247,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123252,"byte_end":1123267,"line_start":569,"line_end":569,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123272,"byte_end":1123275,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ * `compute_u` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123280,"byte_end":1123372,"line_start":571,"line_end":571,"column_start":5,"column_end":95}},{"value":"/ * `compute_v` − set this to `true` to enable the computation of left-singular vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123377,"byte_end":1123469,"line_start":572,"line_end":572,"column_start":5,"column_end":95}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123474,"byte_end":1123552,"line_start":573,"line_end":573,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123557,"byte_end":1123649,"line_start":574,"line_end":574,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123654,"byte_end":1123746,"line_start":575,"line_end":575,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1123751,"byte_end":1123796,"line_start":576,"line_end":576,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11313},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124119,"byte_end":1124134,"line_start":589,"line_end":589,"column_start":12,"column_end":27},"name":"singular_values","qualname":"<Matrix<N, R, C, S>>::singular_values","value":"pub fn singular_values(&Self) -> VectorN<N::RealField, DimMinimum<R, C>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the singular values of this matrix.\n","sig":null,"attributes":[{"value":"/ Computes the singular values of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124059,"byte_end":1124107,"line_start":588,"line_end":588,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":11314},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124389,"byte_end":1124393,"line_start":596,"line_end":596,"column_start":12,"column_end":16},"name":"rank","qualname":"<Matrix<N, R, C, S>>::rank","value":"pub fn rank(&Self, N::RealField) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Computes the rank of this matrix.","sig":null,"attributes":[{"value":"/ Computes the rank of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124265,"byte_end":1124302,"line_start":593,"line_end":593,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124307,"byte_end":1124310,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124315,"byte_end":1124377,"line_start":595,"line_end":595,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":11315},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124660,"byte_end":1124674,"line_start":604,"line_end":604,"column_start":12,"column_end":26},"name":"pseudo_inverse","qualname":"<Matrix<N, R, C, S>>::pseudo_inverse","value":"pub fn pseudo_inverse(Self, N::RealField)\n-> Result<MatrixMN<N, C, R>, &'static str> where\nDefaultAllocator: Allocator<N, C, R>","parent":null,"children":[],"decl_id":null,"docs":" Computes the pseudo-inverse of this matrix.","sig":null,"attributes":[{"value":"/ Computes the pseudo-inverse of this matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124526,"byte_end":1124573,"line_start":601,"line_end":601,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124578,"byte_end":1124581,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ All singular values below `eps` are considered equal to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1124586,"byte_end":1124648,"line_start":603,"line_end":603,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":24692},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127548,"byte_end":1127562,"line_start":37,"line_end":37,"column_start":12,"column_end":26},"name":"SymmetricEigen","qualname":"::linalg::symmetric_eigen::SymmetricEigen","value":"SymmetricEigen { eigenvectors, eigenvalues }","parent":null,"children":[{"krate":0,"index":24695},{"krate":0,"index":24696}],"decl_id":null,"docs":" Eigendecomposition of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Eigendecomposition of a symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1126842,"byte_end":1126887,"line_start":16,"line_end":16,"column_start":1,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":24695},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127721,"byte_end":1127733,"line_start":41,"line_end":41,"column_start":9,"column_end":21},"name":"eigenvectors","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvectors","value":"base::matrix::Matrix<N, D, D, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<N, D, D>>::Buffer>","parent":{"krate":0,"index":24692},"children":[],"decl_id":null,"docs":" The eigenvectors of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The eigenvectors of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127666,"byte_end":1127712,"line_start":40,"line_end":40,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":24696},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127818,"byte_end":1127829,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"eigenvalues","qualname":"::linalg::symmetric_eigen::SymmetricEigen::eigenvalues","value":"base::matrix::Matrix<<N as alga::general::ComplexField>::RealField, D, base::dimension::U1, <base::default_allocator::DefaultAllocator as base::allocator::Allocator<<N as alga::general::ComplexField>::RealField, D>>::Buffer>","parent":{"krate":0,"index":24692},"children":[],"decl_id":null,"docs":" The unsorted eigenvalues of the decomposed matrix.\n","sig":null,"attributes":[{"value":"/ The unsorted eigenvalues of the decomposed matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127755,"byte_end":1127809,"line_start":43,"line_end":43,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11381},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128358,"byte_end":1128361,"line_start":60,"line_end":60,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricEigen<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self where D: DimSub<U1>,\nDefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128191,"byte_end":1128257,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128262,"byte_end":1128265,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular parts (including its diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128270,"byte_end":1128346,"line_start":59,"line_end":59,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":11382},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1129220,"byte_end":1129227,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"try_new","qualname":"<SymmetricEigen<N, D>>::try_new","value":"pub fn try_new(MatrixN<N, D>, N::RealField, usize) -> Option<Self> where\nD: DimSub<U1>, DefaultAllocator: Allocator<N, DimDiff<D, U1>> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128640,"byte_end":1128725,"line_start":69,"line_end":69,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128730,"byte_end":1128757,"line_start":70,"line_end":70,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128762,"byte_end":1128765,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including its diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128770,"byte_end":1128845,"line_start":72,"line_end":72,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128850,"byte_end":1128853,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128858,"byte_end":1128873,"line_start":74,"line_end":74,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128878,"byte_end":1128881,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128886,"byte_end":1128964,"line_start":76,"line_end":76,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128969,"byte_end":1129061,"line_start":77,"line_end":77,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1129066,"byte_end":1129158,"line_start":78,"line_end":78,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1129163,"byte_end":1129208,"line_start":79,"line_end":79,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11386},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135273,"byte_end":1135282,"line_start":274,"line_end":274,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricEigen<N, D>>::recompose","value":"pub fn recompose(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Rebuild the original matrix.","sig":null,"attributes":[{"value":"/ Rebuild the original matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135142,"byte_end":1135174,"line_start":271,"line_end":271,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135179,"byte_end":1135182,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ This is useful if some of the eigenvalues have been manually modified.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135187,"byte_end":1135261,"line_start":273,"line_end":273,"column_start":5,"column_end":79}}]},{"kind":"Function","id":{"krate":0,"index":11387},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135778,"byte_end":1135793,"line_start":291,"line_end":291,"column_start":8,"column_end":23},"name":"wilkinson_shift","qualname":"::linalg::symmetric_eigen::wilkinson_shift","value":"pub fn wilkinson_shift<N: ComplexField>(N, N, N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing\n component `tnn`.","sig":null,"attributes":[{"value":"/ Computes the wilkinson shift, i.e., the 2x2 symmetric matrix eigenvalue to its tailing","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135571,"byte_end":1135661,"line_start":285,"line_end":285,"column_start":1,"column_end":91}},{"value":"/ component `tnn`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135662,"byte_end":1135682,"line_start":286,"line_end":286,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135683,"byte_end":1135686,"line_start":287,"line_end":287,"column_start":1,"column_end":4}},{"value":"/ The inputs are interpreted as the 2x2 matrix:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135687,"byte_end":1135736,"line_start":288,"line_end":288,"column_start":1,"column_end":50}},{"value":"/     tmm  tmn","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135737,"byte_end":1135753,"line_start":289,"line_end":289,"column_start":1,"column_end":17}},{"value":"/     tmn  tnn","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1135754,"byte_end":1135770,"line_start":290,"line_end":290,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":11393},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136601,"byte_end":1136616,"line_start":314,"line_end":314,"column_start":12,"column_end":27},"name":"symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigen","value":"pub fn symmetric_eigen(Self) -> SymmetricEigen<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of this symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136440,"byte_end":1136501,"line_start":311,"line_end":311,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136506,"byte_end":1136509,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136514,"byte_end":1136589,"line_start":313,"line_end":313,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11394},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137287,"byte_end":1137306,"line_start":329,"line_end":329,"column_start":12,"column_end":31},"name":"try_symmetric_eigen","qualname":"<SquareMatrix<N, D, S>>::try_symmetric_eigen","value":"pub fn try_symmetric_eigen(Self, N::RealField, usize)\n-> Option<SymmetricEigen<N, D>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigendecomposition of the given symmetric matrix with user-specified\n convergence parameters.","sig":null,"attributes":[{"value":"/ Computes the eigendecomposition of the given symmetric matrix with user-specified","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136707,"byte_end":1136792,"line_start":318,"line_end":318,"column_start":5,"column_end":90}},{"value":"/ convergence parameters.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136797,"byte_end":1136824,"line_start":319,"line_end":319,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136829,"byte_end":1136832,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136837,"byte_end":1136912,"line_start":321,"line_end":321,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136917,"byte_end":1136920,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136925,"byte_end":1136940,"line_start":323,"line_end":323,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136945,"byte_end":1136948,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ * `eps`       − tolerance used to determine when a value converged to 0.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136953,"byte_end":1137031,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/ * `max_niter` − maximum total number of iterations performed by the algorithm. If this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137036,"byte_end":1137128,"line_start":326,"line_end":326,"column_start":5,"column_end":95}},{"value":"/ number of iteration is exceeded, `None` is returned. If `niter == 0`, then the algorithm","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137133,"byte_end":1137225,"line_start":327,"line_end":327,"column_start":5,"column_end":97}},{"value":"/ continues indefinitely until convergence.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137230,"byte_end":1137275,"line_start":328,"line_end":328,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11395},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137598,"byte_end":1137619,"line_start":336,"line_end":336,"column_start":12,"column_end":33},"name":"symmetric_eigenvalues","qualname":"<SquareMatrix<N, D, S>>::symmetric_eigenvalues","value":"pub fn symmetric_eigenvalues(&Self) -> VectorN<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the eigenvalues of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the eigenvalues of this symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137462,"byte_end":1137516,"line_start":333,"line_end":333,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137521,"byte_end":1137524,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part of the matrix is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1137529,"byte_end":1137586,"line_start":335,"line_end":335,"column_start":5,"column_end":62}}]},{"kind":"Struct","id":{"krate":0,"index":24705},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1140947,"byte_end":1140967,"line_start":33,"line_end":33,"column_start":12,"column_end":32},"name":"SymmetricTridiagonal","qualname":"::linalg::symmetric_tridiagonal::SymmetricTridiagonal","value":"SymmetricTridiagonal {  }","parent":null,"children":[{"krate":0,"index":24708},{"krate":0,"index":24709}],"decl_id":null,"docs":" Tridiagonalization of a symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Tridiagonalization of a symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1140233,"byte_end":1140278,"line_start":12,"line_end":12,"column_start":1,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":11441},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141676,"byte_end":1141679,"line_start":53,"line_end":53,"column_start":12,"column_end":15},"name":"new","qualname":"<SymmetricTridiagonal<N, D>>::new","value":"pub fn new(MatrixN<N, D>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of the symmetric matrix `m`.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of the symmetric matrix `m`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141512,"byte_end":1141576,"line_start":50,"line_end":50,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141581,"byte_end":1141584,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141589,"byte_end":1141664,"line_start":52,"line_end":52,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11442},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143051,"byte_end":1143063,"line_start":95,"line_end":95,"column_start":12,"column_end":24},"name":"internal_tri","qualname":"<SymmetricTridiagonal<N, D>>::internal_tri","value":"pub fn internal_tri(&Self) -> &MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":11443},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143242,"byte_end":1143248,"line_start":101,"line_end":101,"column_start":12,"column_end":18},"name":"unpack","qualname":"<SymmetricTridiagonal<N, D>>::unpack","value":"pub fn unpack(Self)\n->\n    (MatrixN<N, D>, VectorN<N::RealField, D>,\n     VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this\n decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the orthogonal transformation, diagonal, and off diagonal elements of this","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143120,"byte_end":1143207,"line_start":99,"line_end":99,"column_start":5,"column_end":92}},{"value":"/ decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143212,"byte_end":1143230,"line_start":100,"line_end":100,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":11444},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143678,"byte_end":1143696,"line_start":111,"line_end":111,"column_start":12,"column_end":30},"name":"unpack_tridiagonal","qualname":"<SymmetricTridiagonal<N, D>>::unpack_tridiagonal","value":"pub fn unpack_tridiagonal(Self)\n-> (VectorN<N::RealField, D>, VectorN<N::RealField, DimDiff<D, U1>>) where\nDefaultAllocator: Allocator<N::RealField, D> +\nAllocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the diagonal, and off diagonal elements of this decomposition.\n","sig":null,"attributes":[{"value":"/ Retrieve the diagonal, and off diagonal elements of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143591,"byte_end":1143666,"line_start":110,"line_end":110,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11445},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144039,"byte_end":1144047,"line_start":118,"line_end":118,"column_start":12,"column_end":20},"name":"diagonal","qualname":"<SymmetricTridiagonal<N, D>>::diagonal","value":"pub fn diagonal(&Self) -> VectorN<N::RealField, D> where\nDefaultAllocator: Allocator<N::RealField, D>","parent":null,"children":[],"decl_id":null,"docs":" The diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The diagonal components of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1143977,"byte_end":1144027,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":11447},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144249,"byte_end":1144261,"line_start":122,"line_end":122,"column_start":12,"column_end":24},"name":"off_diagonal","qualname":"<SymmetricTridiagonal<N, D>>::off_diagonal","value":"pub fn off_diagonal(&Self) -> VectorN<N::RealField, DimDiff<D, U1>> where\nDefaultAllocator: Allocator<N::RealField, DimDiff<D, U1>>","parent":null,"children":[],"decl_id":null,"docs":" The off-diagonal components of this decomposition.\n","sig":null,"attributes":[{"value":"/ The off-diagonal components of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144183,"byte_end":1144237,"line_start":121,"line_end":121,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":11448},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144506,"byte_end":1144507,"line_start":128,"line_end":128,"column_start":12,"column_end":13},"name":"q","qualname":"<SymmetricTridiagonal<N, D>>::q","value":"pub fn q(&Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the orthogonal matrix `Q` of this decomposition.\n","sig":null,"attributes":[{"value":"/ Computes the orthogonal matrix `Q` of this decomposition.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144433,"byte_end":1144494,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":11449},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144675,"byte_end":1144684,"line_start":133,"line_end":133,"column_start":12,"column_end":21},"name":"recompose","qualname":"<SymmetricTridiagonal<N, D>>::recompose","value":"pub fn recompose(Self) -> MatrixN<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Recomputes the original symmetric matrix.\n","sig":null,"attributes":[{"value":"/ Recomputes the original symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1144618,"byte_end":1144663,"line_start":132,"line_end":132,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":11454},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145416,"byte_end":1145440,"line_start":154,"line_end":154,"column_start":12,"column_end":36},"name":"symmetric_tridiagonalize","qualname":"<SquareMatrix<N, D, S>>::symmetric_tridiagonalize","value":"pub fn symmetric_tridiagonalize(Self) -> SymmetricTridiagonal<N, D>","parent":null,"children":[],"decl_id":null,"docs":" Computes the tridiagonalization of this symmetric matrix.","sig":null,"attributes":[{"value":"/ Computes the tridiagonalization of this symmetric matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145255,"byte_end":1145316,"line_start":151,"line_end":151,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145321,"byte_end":1145324,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ Only the lower-triangular part (including the diagonal) of `m` is read.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145329,"byte_end":1145404,"line_start":153,"line_end":153,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":11504},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1146121,"byte_end":1146134,"line_start":19,"line_end":19,"column_start":12,"column_end":25},"name":"convolve_full","qualname":"<Vector<N, D1, S1>>::convolve_full","value":"pub fn convolve_full<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, D2>, U1>> where D1: DimAdd<D2>,\nD2: DimAdd<D1, Output = DimSum<D1, D2>>, DimSum<D1, D2>: DimSub<U1>,\nS2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, D2>, U1>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145870,"byte_end":1145932,"line_start":10,"line_end":10,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145937,"byte_end":1145940,"line_start":11,"line_end":11,"column_start":5,"column_end":8}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145945,"byte_end":1145960,"line_start":12,"line_end":12,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145965,"byte_end":1145968,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145973,"byte_end":1146012,"line_start":14,"line_end":14,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1146017,"byte_end":1146020,"line_start":15,"line_end":15,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1146025,"byte_end":1146037,"line_start":16,"line_end":16,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `vector.len() >= kernel.len() > 0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1146042,"byte_end":1146101,"line_start":17,"line_end":17,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1146106,"byte_end":1146109,"line_start":18,"line_end":18,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":11507},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147672,"byte_end":1147686,"line_start":67,"line_end":67,"column_start":12,"column_end":26},"name":"convolve_valid","qualname":"<Vector<N, D1, S1>>::convolve_valid","value":"pub fn convolve_valid<D2, S2>(&Self, Vector<N, D2, S2>)\n-> VectorN<N, DimDiff<DimSum<D1, U1>, D2>> where D1: DimAdd<U1>, D2: Dim,\nDimSum<D1, U1>: DimSub<D2>, S2: Storage<N, D2>,\nDefaultAllocator: Allocator<N, DimDiff<DimSum<D1, U1>, D2>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147314,"byte_end":1147376,"line_start":56,"line_end":56,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147381,"byte_end":1147384,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ The output convolution consists only of those elements that do not rely on the zero-padding.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147389,"byte_end":1147485,"line_start":58,"line_end":58,"column_start":5,"column_end":101}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147490,"byte_end":1147505,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147510,"byte_end":1147513,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147518,"byte_end":1147557,"line_start":61,"line_end":61,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147562,"byte_end":1147565,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147570,"byte_end":1147573,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147578,"byte_end":1147590,"line_start":64,"line_end":64,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147595,"byte_end":1147652,"line_start":65,"line_end":65,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1147657,"byte_end":1147660,"line_start":66,"line_end":66,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":11510},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148863,"byte_end":1148876,"line_start":102,"line_end":102,"column_start":12,"column_end":25},"name":"convolve_same","qualname":"<Vector<N, D1, S1>>::convolve_same","value":"pub fn convolve_same<D2, S2>(&Self, Vector<N, D2, S2>) -> VectorN<N, D1> where\nD2: Dim, S2: Storage<N, D2>, DefaultAllocator: Allocator<N, D1>","parent":null,"children":[],"decl_id":null,"docs":" Returns the convolution of the target vector and a kernel.","sig":null,"attributes":[{"value":"/ Returns the convolution of the target vector and a kernel.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148515,"byte_end":1148577,"line_start":93,"line_end":93,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148582,"byte_end":1148585,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ The output convolution is the same size as vector, centered with respect to the ‘full’ output.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148590,"byte_end":1148692,"line_start":95,"line_end":95,"column_start":5,"column_end":103}},{"value":"/ # Arguments","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148697,"byte_end":1148712,"line_start":96,"line_end":96,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148717,"byte_end":1148720,"line_start":97,"line_end":97,"column_start":5,"column_end":8}},{"value":"/ * `kernel` - A Vector with size > 0","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148725,"byte_end":1148764,"line_start":98,"line_end":98,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148769,"byte_end":1148772,"line_start":99,"line_end":99,"column_start":5,"column_end":8}},{"value":"/ # Errors","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148777,"byte_end":1148789,"line_start":100,"line_end":100,"column_start":5,"column_end":17}},{"value":"/ Inputs must satisfy `self.len() >= kernel.len() > 0`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1148794,"byte_end":1148851,"line_start":101,"line_end":101,"column_start":5,"column_end":62}}]},{"kind":"Function","id":{"krate":0,"index":11604},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5479,"byte_end":5481,"line_start":180,"line_end":180,"column_start":8,"column_end":10},"name":"id","qualname":"::id","value":"pub fn id() -> Id","parent":null,"children":[],"decl_id":null,"docs":" Gets the ubiquitous multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the ubiquitous multiplicative identity element.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5327,"byte_end":5383,"line_start":175,"line_end":175,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5384,"byte_end":5387,"line_start":176,"line_end":176,"column_start":1,"column_end":4}},{"value":"/ Same as `Id::new()`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5388,"byte_end":5412,"line_start":177,"line_end":177,"column_start":1,"column_end":25}},{"value":"deprecated(note = \"use `Id::new()` instead.\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5413,"byte_end":5461,"line_start":178,"line_end":178,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5462,"byte_end":5471,"line_start":179,"line_end":179,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11605},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5670,"byte_end":5673,"line_start":191,"line_end":191,"column_start":8,"column_end":11},"name":"one","qualname":"::one","value":"pub fn one<T: Identity<Multiplicative>>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the multiplicative identity element.","sig":null,"attributes":[{"value":"/ Gets the multiplicative identity element.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5509,"byte_end":5554,"line_start":184,"line_end":184,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5555,"byte_end":5558,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5559,"byte_end":5574,"line_start":186,"line_end":186,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5575,"byte_end":5578,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5579,"byte_end":5623,"line_start":188,"line_end":188,"column_start":1,"column_end":45}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5624,"byte_end":5652,"line_start":189,"line_end":189,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5653,"byte_end":5662,"line_start":190,"line_end":190,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11607},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5886,"byte_end":5890,"line_start":202,"line_end":202,"column_start":8,"column_end":12},"name":"zero","qualname":"::zero","value":"pub fn zero<T: Identity<Additive>>() -> T","parent":null,"children":[],"decl_id":null,"docs":" Gets the additive identity element.","sig":null,"attributes":[{"value":"/ Gets the additive identity element.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5733,"byte_end":5772,"line_start":195,"line_end":195,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5773,"byte_end":5776,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5777,"byte_end":5792,"line_start":197,"line_end":197,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5793,"byte_end":5796,"line_start":198,"line_end":198,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5797,"byte_end":5823,"line_start":199,"line_end":199,"column_start":1,"column_end":27}},{"value":"/ * [`origin`](../nalgebra/fn.origin.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5824,"byte_end":5868,"line_start":200,"line_end":200,"column_start":1,"column_end":45}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5869,"byte_end":5878,"line_start":201,"line_end":201,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11609},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6311,"byte_end":6317,"line_start":219,"line_end":219,"column_start":8,"column_end":14},"name":"origin","qualname":"::origin","value":"pub fn origin<P: EuclideanSpace>() -> P","parent":null,"children":[],"decl_id":null,"docs":" Gets the origin of the given point.","sig":null,"attributes":[{"value":"/ Gets the origin of the given point.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5944,"byte_end":5983,"line_start":206,"line_end":206,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5984,"byte_end":5987,"line_start":207,"line_end":207,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":5988,"byte_end":6003,"line_start":208,"line_end":208,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6004,"byte_end":6007,"line_start":209,"line_end":209,"column_start":1,"column_end":4}},{"value":"/ * [`one`](fn.one.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6008,"byte_end":6034,"line_start":210,"line_end":210,"column_start":1,"column_end":27}},{"value":"/ * [`zero`](fn.zero.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6035,"byte_end":6063,"line_start":211,"line_end":211,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6064,"byte_end":6067,"line_start":212,"line_end":212,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6068,"byte_end":6084,"line_start":213,"line_end":213,"column_start":1,"column_end":17}},{"value":"/ Use [Point::origin] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6085,"byte_end":6117,"line_start":214,"line_end":214,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6118,"byte_end":6121,"line_start":215,"line_end":215,"column_start":1,"column_end":4}},{"value":"/ Or, use [EuclideanSpace::origin](https://docs.rs/alga/0.7.2/alga/linear/trait.EuclideanSpace.html#tymethod.origin).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6122,"byte_end":6241,"line_start":216,"line_end":216,"column_start":1,"column_end":120}},{"value":"deprecated(note = \"use `Point::origin` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6242,"byte_end":6293,"line_start":217,"line_end":217,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6294,"byte_end":6303,"line_start":218,"line_end":218,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11611},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6480,"byte_end":6489,"line_start":230,"line_end":230,"column_start":8,"column_end":17},"name":"dimension","qualname":"::dimension","value":"pub fn dimension<V: FiniteDimVectorSpace>() -> usize","parent":null,"children":[],"decl_id":null,"docs":" The dimension of the given algebraic entity seen as a vector space.\n","sig":null,"attributes":[{"value":"/ The dimension of the given algebraic entity seen as a vector space.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6391,"byte_end":6462,"line_start":228,"line_end":228,"column_start":1,"column_end":72}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6463,"byte_end":6472,"line_start":229,"line_end":229,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11613},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6927,"byte_end":6931,"line_start":246,"line_end":246,"column_start":8,"column_end":12},"name":"wrap","qualname":"::wrap","value":"pub fn wrap<T>(T, T, T) -> T where T: Copy + PartialOrd + AdditiveGroup","parent":null,"children":[],"decl_id":null,"docs":" Wraps `val` into the range `[min, max]` using modular arithmetics.","sig":null,"attributes":[{"value":"/ Wraps `val` into the range `[min, max]` using modular arithmetics.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6802,"byte_end":6872,"line_start":242,"line_end":242,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6873,"byte_end":6876,"line_start":243,"line_end":243,"column_start":1,"column_end":4}},{"value":"/ The range must not be empty.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6877,"byte_end":6909,"line_start":244,"line_end":244,"column_start":1,"column_end":33}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":6910,"byte_end":6919,"line_start":245,"line_end":245,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11615},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7633,"byte_end":7638,"line_start":279,"line_end":279,"column_start":8,"column_end":13},"name":"clamp","qualname":"::clamp","value":"pub fn clamp<T: PartialOrd>(T, T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the input value clamped to the interval `[min, max]`.","sig":null,"attributes":[{"value":"/ Returns a reference to the input value clamped to the interval `[min, max]`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7366,"byte_end":7446,"line_start":272,"line_end":272,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7447,"byte_end":7450,"line_start":273,"line_end":273,"column_start":1,"column_end":4}},{"value":"/ In particular:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7451,"byte_end":7469,"line_start":274,"line_end":274,"column_start":1,"column_end":19}},{"value":"/     * If `min < val < max`, this returns `val`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7470,"byte_end":7521,"line_start":275,"line_end":275,"column_start":1,"column_end":52}},{"value":"/     * If `val <= min`, this returns `min`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7522,"byte_end":7568,"line_start":276,"line_end":276,"column_start":1,"column_end":47}},{"value":"/     * If `val >= max`, this returns `max`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7569,"byte_end":7615,"line_start":277,"line_end":277,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7616,"byte_end":7625,"line_start":278,"line_end":278,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11617},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7861,"byte_end":7864,"line_start":293,"line_end":293,"column_start":8,"column_end":11},"name":"max","qualname":"::max","value":"pub fn max<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::max`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::max`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7820,"byte_end":7843,"line_start":291,"line_end":291,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7844,"byte_end":7853,"line_start":292,"line_end":292,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11619},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7955,"byte_end":7958,"line_start":299,"line_end":299,"column_start":8,"column_end":11},"name":"min","qualname":"::min","value":"pub fn min<T: Ord>(T, T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Same as `cmp::min`.\n","sig":null,"attributes":[{"value":"/ Same as `cmp::min`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7914,"byte_end":7937,"line_start":297,"line_end":297,"column_start":1,"column_end":24}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":7938,"byte_end":7947,"line_start":298,"line_end":298,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11621},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8193,"byte_end":8196,"line_start":308,"line_end":308,"column_start":8,"column_end":11},"name":"abs","qualname":"::abs","value":"pub fn abs<T: Signed>(&T) -> T","parent":null,"children":[],"decl_id":null,"docs":" The absolute value of `a`.","sig":null,"attributes":[{"value":"/ The absolute value of `a`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8008,"byte_end":8038,"line_start":303,"line_end":303,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8039,"byte_end":8042,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"/ Deprecated: Use [Matrix::abs] or [RealField::abs] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8043,"byte_end":8105,"line_start":305,"line_end":305,"column_start":1,"column_end":63}},{"value":"deprecated(note = \"use `Matrix::abs` or `RealField::abs` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8106,"byte_end":8175,"line_start":306,"line_end":306,"column_start":1,"column_end":70}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8176,"byte_end":8185,"line_start":307,"line_end":307,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11623},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8294,"byte_end":8297,"line_start":314,"line_end":314,"column_start":8,"column_end":11},"name":"inf","qualname":"::inf","value":"pub fn inf<T: MeetSemilattice>(&T, &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the infimum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the infimum of `a` and `b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8237,"byte_end":8276,"line_start":312,"line_end":312,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8277,"byte_end":8286,"line_start":313,"line_end":313,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11625},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8414,"byte_end":8417,"line_start":320,"line_end":320,"column_start":8,"column_end":11},"name":"sup","qualname":"::sup","value":"pub fn sup<T: JoinSemilattice>(&T, &T) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns the supremum of `a` and `b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8356,"byte_end":8396,"line_start":318,"line_end":318,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8397,"byte_end":8406,"line_start":319,"line_end":319,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11627},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8561,"byte_end":8568,"line_start":326,"line_end":326,"column_start":8,"column_end":15},"name":"inf_sup","qualname":"::inf_sup","value":"pub fn inf_sup<T: Lattice>(&T, &T) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns simultaneously the infimum and supremum of `a` and `b`.\n","sig":null,"attributes":[{"value":"/ Returns simultaneously the infimum and supremum of `a` and `b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8476,"byte_end":8543,"line_start":324,"line_end":324,"column_start":1,"column_end":68}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8544,"byte_end":8553,"line_start":325,"line_end":325,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11629},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8705,"byte_end":8716,"line_start":332,"line_end":332,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"::partial_cmp","value":"pub fn partial_cmp<T: PartialOrd>(&T, &T) -> Option<Ordering>","parent":null,"children":[],"decl_id":null,"docs":" Compare `a` and `b` using a partial ordering relation.\n","sig":null,"attributes":[{"value":"/ Compare `a` and `b` using a partial ordering relation.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8629,"byte_end":8687,"line_start":330,"line_end":330,"column_start":1,"column_end":59}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8688,"byte_end":8697,"line_start":331,"line_end":331,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11631},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8872,"byte_end":8882,"line_start":338,"line_end":338,"column_start":8,"column_end":18},"name":"partial_lt","qualname":"::partial_lt","value":"pub fn partial_lt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a < b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a < b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8792,"byte_end":8854,"line_start":336,"line_end":336,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8855,"byte_end":8864,"line_start":337,"line_end":337,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11633},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9018,"byte_end":9028,"line_start":344,"line_end":344,"column_start":8,"column_end":18},"name":"partial_le","qualname":"::partial_le","value":"pub fn partial_le<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a <= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a <= b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":8937,"byte_end":9000,"line_start":342,"line_end":342,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9001,"byte_end":9010,"line_start":343,"line_end":343,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11635},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9163,"byte_end":9173,"line_start":350,"line_end":350,"column_start":8,"column_end":18},"name":"partial_gt","qualname":"::partial_gt","value":"pub fn partial_gt<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a > b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a > b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9083,"byte_end":9145,"line_start":348,"line_end":348,"column_start":1,"column_end":63}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9146,"byte_end":9155,"line_start":349,"line_end":349,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11637},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9309,"byte_end":9319,"line_start":356,"line_end":356,"column_start":8,"column_end":18},"name":"partial_ge","qualname":"::partial_ge","value":"pub fn partial_ge<T: PartialOrd>(&T, &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` iff `a` and `b` are comparable and `a >= b`.\n","sig":null,"attributes":[{"value":"/ Returns `true` iff `a` and `b` are comparable and `a >= b`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9228,"byte_end":9291,"line_start":354,"line_end":354,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9292,"byte_end":9301,"line_start":355,"line_end":355,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11639},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9453,"byte_end":9464,"line_start":362,"line_end":362,"column_start":8,"column_end":19},"name":"partial_min","qualname":"::partial_min","value":"pub fn partial_min<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the minimum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the minimum of `a` and `b` if they are comparable.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9374,"byte_end":9435,"line_start":360,"line_end":360,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9436,"byte_end":9445,"line_start":361,"line_end":361,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11642},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9777,"byte_end":9788,"line_start":375,"line_end":375,"column_start":8,"column_end":19},"name":"partial_max","qualname":"::partial_max","value":"pub fn partial_max<'a, T: PartialOrd>(&'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Return the maximum of `a` and `b` if they are comparable.\n","sig":null,"attributes":[{"value":"/ Return the maximum of `a` and `b` if they are comparable.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9698,"byte_end":9759,"line_start":373,"line_end":373,"column_start":1,"column_end":62}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":9760,"byte_end":9769,"line_start":374,"line_end":374,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11645},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10146,"byte_end":10159,"line_start":389,"line_end":389,"column_start":8,"column_end":21},"name":"partial_clamp","qualname":"::partial_clamp","value":"pub fn partial_clamp<'a, T: PartialOrd>(&'a T, &'a T, &'a T) -> Option<&'a T>","parent":null,"children":[],"decl_id":null,"docs":" Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to\n `min` or `max`.\n","sig":null,"attributes":[{"value":"/ Clamp `value` between `min` and `max`. Returns `None` if `value` is not comparable to","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10019,"byte_end":10108,"line_start":386,"line_end":386,"column_start":1,"column_end":90}},{"value":"/ `min` or `max`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10109,"byte_end":10128,"line_start":387,"line_end":387,"column_start":1,"column_end":20}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10129,"byte_end":10138,"line_start":388,"line_end":388,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11648},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10633,"byte_end":10646,"line_start":405,"line_end":405,"column_start":8,"column_end":21},"name":"partial_sort2","qualname":"::partial_sort2","value":"pub fn partial_sort2<'a, T: PartialOrd>(&'a T, &'a T)\n-> Option<(&'a T, &'a T)>","parent":null,"children":[],"decl_id":null,"docs":" Sorts two values in increasing order using a partial ordering.\n","sig":null,"attributes":[{"value":"/ Sorts two values in increasing order using a partial ordering.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10549,"byte_end":10615,"line_start":403,"line_end":403,"column_start":1,"column_end":67}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10616,"byte_end":10625,"line_start":404,"line_end":404,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11651},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11110,"byte_end":11121,"line_start":427,"line_end":427,"column_start":8,"column_end":19},"name":"try_inverse","qualname":"::try_inverse","value":"pub fn try_inverse<M: AlgaSquareMatrix>(&M) -> Option<M>","parent":null,"children":[],"decl_id":null,"docs":" Tries to gets an inverted copy of a square matrix.","sig":null,"attributes":[{"value":"/ Tries to gets an inverted copy of a square matrix.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10915,"byte_end":10969,"line_start":420,"line_end":420,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10970,"byte_end":10973,"line_start":421,"line_end":421,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10974,"byte_end":10989,"line_start":422,"line_end":422,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10990,"byte_end":10993,"line_start":423,"line_end":423,"column_start":1,"column_end":4}},{"value":"/ * [`inverse`](fn.inverse.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":10994,"byte_end":11028,"line_start":424,"line_end":424,"column_start":1,"column_end":35}},{"value":"deprecated(note = \"use the `.try_inverse()` method instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11029,"byte_end":11092,"line_start":425,"line_end":425,"column_start":1,"column_end":64}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11093,"byte_end":11102,"line_start":426,"line_end":426,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11653},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11416,"byte_end":11423,"line_start":438,"line_end":438,"column_start":8,"column_end":15},"name":"inverse","qualname":"::inverse","value":"pub fn inverse<M: TwoSidedInverse<Multiplicative>>(&M) -> M","parent":null,"children":[],"decl_id":null,"docs":" Computes the multiplicative inverse of an (always invertible) algebraic entity.","sig":null,"attributes":[{"value":"/ Computes the multiplicative inverse of an (always invertible) algebraic entity.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11188,"byte_end":11271,"line_start":431,"line_end":431,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11272,"byte_end":11275,"line_start":432,"line_end":432,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11276,"byte_end":11291,"line_start":433,"line_end":433,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11292,"byte_end":11295,"line_start":434,"line_end":434,"column_start":1,"column_end":4}},{"value":"/ * [`try_inverse`](fn.try_inverse.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11296,"byte_end":11338,"line_start":435,"line_end":435,"column_start":1,"column_end":43}},{"value":"deprecated(note = \"use the `.inverse()` method instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11339,"byte_end":11398,"line_start":436,"line_end":436,"column_start":1,"column_end":60}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11399,"byte_end":11408,"line_start":437,"line_end":437,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11655},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11897,"byte_end":11900,"line_start":456,"line_end":456,"column_start":8,"column_end":11},"name":"dot","qualname":"::dot","value":"pub fn dot<V: FiniteDimVectorSpace>(&V, &V) -> V::Field","parent":null,"children":[],"decl_id":null,"docs":" Computes the dot product of two vectors.","sig":null,"attributes":[{"value":"/ Computes the dot product of two vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11533,"byte_end":11577,"line_start":446,"line_end":446,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11578,"byte_end":11581,"line_start":447,"line_end":447,"column_start":1,"column_end":4}},{"value":"/ ## Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11582,"byte_end":11599,"line_start":448,"line_end":448,"column_start":1,"column_end":18}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11600,"byte_end":11630,"line_start":449,"line_end":449,"column_start":1,"column_end":31}},{"value":"/   - [Matrix::dot]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11631,"byte_end":11652,"line_start":450,"line_end":450,"column_start":1,"column_end":22}},{"value":"/   - [Quaternion::dot]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11653,"byte_end":11678,"line_start":451,"line_end":451,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11679,"byte_end":11682,"line_start":452,"line_end":452,"column_start":1,"column_end":4}},{"value":"/ Or, use [FiniteDimVectorSpace::dot](https://docs.rs/alga/0.7.2/alga/linear/trait.FiniteDimVectorSpace.html#tymethod.dot).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11683,"byte_end":11808,"line_start":453,"line_end":453,"column_start":1,"column_end":126}},{"value":"deprecated(note = \"use `Matrix::dot` or `Quaternion::dot` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11809,"byte_end":11879,"line_start":454,"line_end":454,"column_start":1,"column_end":71}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11880,"byte_end":11889,"line_start":455,"line_end":455,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11657},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12259,"byte_end":12264,"line_start":468,"line_end":468,"column_start":8,"column_end":13},"name":"angle","qualname":"::angle","value":"pub fn angle<V: InnerSpace>(&V, &V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the smallest angle between two vectors.","sig":null,"attributes":[{"value":"/ Computes the smallest angle between two vectors.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":11970,"byte_end":12022,"line_start":460,"line_end":460,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12023,"byte_end":12026,"line_start":461,"line_end":461,"column_start":1,"column_end":4}},{"value":"/ ## Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12027,"byte_end":12044,"line_start":462,"line_end":462,"column_start":1,"column_end":18}},{"value":"/ Use [Matrix::angle] instead.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12045,"byte_end":12077,"line_start":463,"line_end":463,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12078,"byte_end":12081,"line_start":464,"line_end":464,"column_start":1,"column_end":4}},{"value":"/ Or, use [InnerSpace::angle](https://docs.rs/alga/0.7.2/alga/linear/trait.InnerSpace.html#method.angle).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12082,"byte_end":12189,"line_start":465,"line_end":465,"column_start":1,"column_end":108}},{"value":"deprecated(note = \"use `Matrix::angle` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12190,"byte_end":12241,"line_start":466,"line_end":466,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12242,"byte_end":12251,"line_start":467,"line_end":467,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11659},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12869,"byte_end":12873,"line_start":492,"line_end":492,"column_start":8,"column_end":12},"name":"norm","qualname":"::norm","value":"pub fn norm<V: NormedSpace>(&V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the L2 (Euclidean) norm of a vector.","sig":null,"attributes":[{"value":"/ Computes the L2 (Euclidean) norm of a vector.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12354,"byte_end":12403,"line_start":476,"line_end":476,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12404,"byte_end":12407,"line_start":477,"line_end":477,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12408,"byte_end":12423,"line_start":478,"line_end":478,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12424,"byte_end":12427,"line_start":479,"line_end":479,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12428,"byte_end":12466,"line_start":480,"line_end":480,"column_start":1,"column_end":39}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12467,"byte_end":12521,"line_start":481,"line_end":481,"column_start":1,"column_end":55}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12522,"byte_end":12566,"line_start":482,"line_end":482,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12567,"byte_end":12570,"line_start":483,"line_end":483,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12571,"byte_end":12587,"line_start":484,"line_end":484,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12588,"byte_end":12618,"line_start":485,"line_end":485,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::norm]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12619,"byte_end":12639,"line_start":486,"line_end":486,"column_start":1,"column_end":21}},{"value":"/ * [Quaternion::norm]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12640,"byte_end":12664,"line_start":487,"line_end":487,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12665,"byte_end":12668,"line_start":488,"line_end":488,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12669,"byte_end":12778,"line_start":489,"line_end":489,"column_start":1,"column_end":110}},{"value":"deprecated(note = \"use `Matrix::norm` or `Quaternion::norm` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12779,"byte_end":12851,"line_start":490,"line_end":490,"column_start":1,"column_end":73}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12852,"byte_end":12861,"line_start":491,"line_end":491,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11661},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13492,"byte_end":13504,"line_start":512,"line_end":512,"column_start":8,"column_end":20},"name":"norm_squared","qualname":"::norm_squared","value":"pub fn norm_squared<V: NormedSpace>(&V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" Computes the squared L2 (Euclidean) norm of the vector `v`.","sig":null,"attributes":[{"value":"/ Computes the squared L2 (Euclidean) norm of the vector `v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12931,"byte_end":12994,"line_start":496,"line_end":496,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12995,"byte_end":12998,"line_start":497,"line_end":497,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":12999,"byte_end":13014,"line_start":498,"line_end":498,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13015,"byte_end":13018,"line_start":499,"line_end":499,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13019,"byte_end":13057,"line_start":500,"line_end":500,"column_start":1,"column_end":39}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13058,"byte_end":13112,"line_start":501,"line_end":501,"column_start":1,"column_end":55}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13113,"byte_end":13141,"line_start":502,"line_end":502,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13142,"byte_end":13145,"line_start":503,"line_end":503,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13146,"byte_end":13162,"line_start":504,"line_end":504,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13163,"byte_end":13193,"line_start":505,"line_end":505,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::norm_squared]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13194,"byte_end":13222,"line_start":506,"line_end":506,"column_start":1,"column_end":29}},{"value":"/ * [Quaternion::norm_squared]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13223,"byte_end":13255,"line_start":507,"line_end":507,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13256,"byte_end":13259,"line_start":508,"line_end":508,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm_squared](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm_squared).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13260,"byte_end":13385,"line_start":509,"line_end":509,"column_start":1,"column_end":126}},{"value":"deprecated(note =\n             \"use `Matrix::norm_squared` or `Quaternion::norm_squared` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13386,"byte_end":13474,"line_start":510,"line_end":510,"column_start":1,"column_end":89}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13475,"byte_end":13484,"line_start":511,"line_end":511,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11663},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14099,"byte_end":14108,"line_start":532,"line_end":532,"column_start":8,"column_end":17},"name":"magnitude","qualname":"::magnitude","value":"pub fn magnitude<V: NormedSpace>(&V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`norm`](fn.norm.html), aka length.","sig":null,"attributes":[{"value":"/ A synonym for [`norm`](fn.norm.html), aka length.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13570,"byte_end":13623,"line_start":516,"line_end":516,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13624,"byte_end":13627,"line_start":517,"line_end":517,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13628,"byte_end":13643,"line_start":518,"line_end":518,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13644,"byte_end":13647,"line_start":519,"line_end":519,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude_squared`](fn.magnitude_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13648,"byte_end":13702,"line_start":520,"line_end":520,"column_start":1,"column_end":55}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13703,"byte_end":13731,"line_start":521,"line_end":521,"column_start":1,"column_end":29}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13732,"byte_end":13776,"line_start":522,"line_end":522,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13777,"byte_end":13780,"line_start":523,"line_end":523,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13781,"byte_end":13797,"line_start":524,"line_end":524,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13798,"byte_end":13828,"line_start":525,"line_end":525,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::magnitude]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13829,"byte_end":13854,"line_start":526,"line_end":526,"column_start":1,"column_end":26}},{"value":"/ * [Quaternion::magnitude]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13855,"byte_end":13884,"line_start":527,"line_end":527,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13885,"byte_end":13888,"line_start":528,"line_end":528,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13889,"byte_end":13998,"line_start":529,"line_end":529,"column_start":1,"column_end":110}},{"value":"deprecated(note =\n             \"use `Matrix::magnitude` or `Quaternion::magnitude` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":13999,"byte_end":14081,"line_start":530,"line_end":530,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14082,"byte_end":14091,"line_start":531,"line_end":531,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11665},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14756,"byte_end":14773,"line_start":553,"line_end":553,"column_start":8,"column_end":25},"name":"magnitude_squared","qualname":"::magnitude_squared","value":"pub fn magnitude_squared<V: NormedSpace>(&V) -> V::RealField","parent":null,"children":[],"decl_id":null,"docs":" A synonym for [`norm_squared`](fn.norm_squared.html),\n  aka length squared.","sig":null,"attributes":[{"value":"/ A synonym for [`norm_squared`](fn.norm_squared.html),","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14166,"byte_end":14223,"line_start":536,"line_end":536,"column_start":1,"column_end":58}},{"value":"/  aka length squared.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14224,"byte_end":14248,"line_start":537,"line_end":537,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14249,"byte_end":14252,"line_start":538,"line_end":538,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14253,"byte_end":14268,"line_start":539,"line_end":539,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14269,"byte_end":14272,"line_start":540,"line_end":540,"column_start":1,"column_end":4}},{"value":"/ * [`magnitude`](fn.magnitude.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14273,"byte_end":14311,"line_start":541,"line_end":541,"column_start":1,"column_end":39}},{"value":"/ * [`norm`](fn.norm.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14312,"byte_end":14340,"line_start":542,"line_end":542,"column_start":1,"column_end":29}},{"value":"/ * [`norm_squared`](fn.norm_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14341,"byte_end":14385,"line_start":543,"line_end":543,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14386,"byte_end":14389,"line_start":544,"line_end":544,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14390,"byte_end":14406,"line_start":545,"line_end":545,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14407,"byte_end":14437,"line_start":546,"line_end":546,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::magnitude_squared]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14438,"byte_end":14471,"line_start":547,"line_end":547,"column_start":1,"column_end":34}},{"value":"/ * [Quaternion::magnitude_squared]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14472,"byte_end":14509,"line_start":548,"line_end":548,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14510,"byte_end":14513,"line_start":549,"line_end":549,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::norm_squared](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.norm_squared).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14514,"byte_end":14639,"line_start":550,"line_end":550,"column_start":1,"column_end":126}},{"value":"deprecated(note =\n             \"use `Matrix::magnitude_squared` or `Quaternion::magnitude_squared` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14640,"byte_end":14738,"line_start":551,"line_end":551,"column_start":1,"column_end":99}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14739,"byte_end":14748,"line_start":552,"line_end":552,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11667},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15226,"byte_end":15235,"line_start":567,"line_end":567,"column_start":8,"column_end":17},"name":"normalize","qualname":"::normalize","value":"pub fn normalize<V: NormedSpace>(&V) -> V","parent":null,"children":[],"decl_id":null,"docs":" Computes the normalized version of the vector `v`.","sig":null,"attributes":[{"value":"/ Computes the normalized version of the vector `v`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14839,"byte_end":14893,"line_start":557,"line_end":557,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14894,"byte_end":14897,"line_start":558,"line_end":558,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14898,"byte_end":14914,"line_start":559,"line_end":559,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14915,"byte_end":14945,"line_start":560,"line_end":560,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::normalize]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14946,"byte_end":14971,"line_start":561,"line_end":561,"column_start":1,"column_end":26}},{"value":"/ * [Quaternion::normalize]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":14972,"byte_end":15001,"line_start":562,"line_end":562,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15002,"byte_end":15005,"line_start":563,"line_end":563,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::normalize](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.normalize).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15006,"byte_end":15125,"line_start":564,"line_end":564,"column_start":1,"column_end":120}},{"value":"deprecated(note =\n             \"use `Matrix::normalize` or `Quaternion::normalize` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15126,"byte_end":15208,"line_start":565,"line_end":565,"column_start":1,"column_end":83}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15209,"byte_end":15218,"line_start":566,"line_end":566,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11669},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15755,"byte_end":15768,"line_start":581,"line_end":581,"column_start":8,"column_end":21},"name":"try_normalize","qualname":"::try_normalize","value":"pub fn try_normalize<V: NormedSpace>(&V, V::RealField) -> Option<V>","parent":null,"children":[],"decl_id":null,"docs":" Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.","sig":null,"attributes":[{"value":"/ Computes the normalized version of the vector `v` or returns `None` if its norm is smaller than `min_norm`.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15287,"byte_end":15398,"line_start":571,"line_end":571,"column_start":1,"column_end":112}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15399,"byte_end":15402,"line_start":572,"line_end":572,"column_start":1,"column_end":4}},{"value":"/ # Deprecated","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15403,"byte_end":15419,"line_start":573,"line_end":573,"column_start":1,"column_end":17}},{"value":"/ Use these methods instead:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15420,"byte_end":15450,"line_start":574,"line_end":574,"column_start":1,"column_end":31}},{"value":"/ * [Matrix::try_normalize]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15451,"byte_end":15480,"line_start":575,"line_end":575,"column_start":1,"column_end":30}},{"value":"/ * [Quaternion::try_normalize]","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15481,"byte_end":15514,"line_start":576,"line_end":576,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15515,"byte_end":15518,"line_start":577,"line_end":577,"column_start":1,"column_end":4}},{"value":"/ Or, use [NormedSpace::try_normalize](https://docs.rs/alga/0.7.2/alga/linear/trait.NormedSpace.html#tymethod.try_normalize).","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15519,"byte_end":15646,"line_start":578,"line_end":578,"column_start":1,"column_end":128}},{"value":"deprecated(note =\n             \"use `Matrix::try_normalize` or `Quaternion::try_normalize` instead\")","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15647,"byte_end":15737,"line_start":579,"line_end":579,"column_start":1,"column_end":91}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15738,"byte_end":15747,"line_start":580,"line_end":580,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11671},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16055,"byte_end":16061,"line_start":597,"line_end":597,"column_start":8,"column_end":14},"name":"center","qualname":"::center","value":"pub fn center<P: EuclideanSpace>(&P, &P) -> P","parent":null,"children":[],"decl_id":null,"docs":" The center of two points.","sig":null,"attributes":[{"value":"/ The center of two points.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15898,"byte_end":15927,"line_start":590,"line_end":590,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15928,"byte_end":15931,"line_start":591,"line_end":591,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15932,"byte_end":15947,"line_start":592,"line_end":592,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15948,"byte_end":15951,"line_start":593,"line_end":593,"column_start":1,"column_end":4}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15952,"byte_end":15986,"line_start":594,"line_end":594,"column_start":1,"column_end":35}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":15987,"byte_end":16037,"line_start":595,"line_end":595,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16038,"byte_end":16047,"line_start":596,"line_end":596,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11673},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16345,"byte_end":16353,"line_start":608,"line_end":608,"column_start":8,"column_end":16},"name":"distance","qualname":"::distance","value":"pub fn distance<P: EuclideanSpace>(&P, &P) -> P::RealField","parent":null,"children":[],"decl_id":null,"docs":" The distance between two points.","sig":null,"attributes":[{"value":"/ The distance between two points.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16185,"byte_end":16221,"line_start":601,"line_end":601,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16222,"byte_end":16225,"line_start":602,"line_end":602,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16226,"byte_end":16241,"line_start":603,"line_end":603,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16242,"byte_end":16245,"line_start":604,"line_end":604,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16246,"byte_end":16276,"line_start":605,"line_end":605,"column_start":1,"column_end":31}},{"value":"/ * [distance_squared](fn.distance_squared.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16277,"byte_end":16327,"line_start":606,"line_end":606,"column_start":1,"column_end":51}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16328,"byte_end":16337,"line_start":607,"line_end":607,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11675},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16611,"byte_end":16627,"line_start":619,"line_end":619,"column_start":8,"column_end":24},"name":"distance_squared","qualname":"::distance_squared","value":"pub fn distance_squared<P: EuclideanSpace>(&P, &P) -> P::RealField","parent":null,"children":[],"decl_id":null,"docs":" The squared distance between two points.","sig":null,"attributes":[{"value":"/ The squared distance between two points.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16459,"byte_end":16503,"line_start":612,"line_end":612,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16504,"byte_end":16507,"line_start":613,"line_end":613,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16508,"byte_end":16523,"line_start":614,"line_end":614,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16524,"byte_end":16527,"line_start":615,"line_end":615,"column_start":1,"column_end":4}},{"value":"/ * [center](fn.center.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16528,"byte_end":16558,"line_start":616,"line_end":616,"column_start":1,"column_end":31}},{"value":"/ * [distance](fn.distance.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16559,"byte_end":16593,"line_start":617,"line_end":617,"column_start":1,"column_end":35}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16594,"byte_end":16603,"line_start":618,"line_end":618,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11677},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17216,"byte_end":17223,"line_start":638,"line_end":638,"column_start":8,"column_end":15},"name":"convert","qualname":"::convert","value":"pub fn convert<From, To: SupersetOf<From>>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16756,"byte_end":16830,"line_start":626,"line_end":626,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16831,"byte_end":16834,"line_start":627,"line_end":627,"column_start":1,"column_end":4}},{"value":"/ See also [`try_convert`](fn.try_convert.html) for conversion to more specific types.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16835,"byte_end":16923,"line_start":628,"line_end":628,"column_start":1,"column_end":89}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16924,"byte_end":16927,"line_start":629,"line_end":629,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16928,"byte_end":16943,"line_start":630,"line_end":630,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16944,"byte_end":16947,"line_start":631,"line_end":631,"column_start":1,"column_end":4}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16948,"byte_end":16988,"line_start":632,"line_end":632,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":16989,"byte_end":17049,"line_start":633,"line_end":633,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17050,"byte_end":17108,"line_start":634,"line_end":634,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17109,"byte_end":17149,"line_start":635,"line_end":635,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17150,"byte_end":17198,"line_start":636,"line_end":636,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17199,"byte_end":17208,"line_start":637,"line_end":637,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11680},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17722,"byte_end":17733,"line_start":654,"line_end":654,"column_start":8,"column_end":19},"name":"try_convert","qualname":"::try_convert","value":"pub fn try_convert<From: SupersetOf<To>, To>(From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17296,"byte_end":17353,"line_start":642,"line_end":642,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17354,"byte_end":17357,"line_start":643,"line_end":643,"column_start":1,"column_end":4}},{"value":"/ See also [`convert`](fn.convert.html) for conversion to more general types.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17358,"byte_end":17437,"line_start":644,"line_end":644,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17438,"byte_end":17441,"line_start":645,"line_end":645,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17442,"byte_end":17457,"line_start":646,"line_end":646,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17458,"byte_end":17461,"line_start":647,"line_end":647,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17462,"byte_end":17494,"line_start":648,"line_end":648,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17495,"byte_end":17535,"line_start":649,"line_end":649,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17536,"byte_end":17596,"line_start":650,"line_end":650,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17597,"byte_end":17655,"line_start":651,"line_end":651,"column_start":1,"column_end":59}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17656,"byte_end":17704,"line_start":652,"line_end":652,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17705,"byte_end":17714,"line_start":653,"line_end":653,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11683},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18187,"byte_end":18201,"line_start":669,"line_end":669,"column_start":8,"column_end":22},"name":"is_convertible","qualname":"::is_convertible","value":"pub fn is_convertible<From: SupersetOf<To>, To>(&From) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Indicates if [`try_convert`](fn.try_convert.html) will succeed without\n actually performing the conversion.","sig":null,"attributes":[{"value":"/ Indicates if [`try_convert`](fn.try_convert.html) will succeed without","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17806,"byte_end":17880,"line_start":658,"line_end":658,"column_start":1,"column_end":75}},{"value":"/ actually performing the conversion.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17881,"byte_end":17920,"line_start":659,"line_end":659,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17921,"byte_end":17924,"line_start":660,"line_end":660,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17925,"byte_end":17940,"line_start":661,"line_end":661,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17941,"byte_end":17944,"line_start":662,"line_end":662,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17945,"byte_end":17977,"line_start":663,"line_end":663,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":17978,"byte_end":18018,"line_start":664,"line_end":664,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18019,"byte_end":18079,"line_start":665,"line_end":665,"column_start":1,"column_end":61}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18080,"byte_end":18120,"line_start":666,"line_end":666,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18121,"byte_end":18169,"line_start":667,"line_end":667,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18170,"byte_end":18179,"line_start":668,"line_end":668,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11686},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18705,"byte_end":18722,"line_start":685,"line_end":685,"column_start":15,"column_end":32},"name":"convert_unchecked","qualname":"::convert_unchecked","value":"pub unsafe fn convert_unchecked<From: SupersetOf<To>, To>(From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18272,"byte_end":18339,"line_start":673,"line_end":673,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18340,"byte_end":18372,"line_start":674,"line_end":674,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18373,"byte_end":18376,"line_start":675,"line_end":675,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18377,"byte_end":18392,"line_start":676,"line_end":676,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18393,"byte_end":18396,"line_start":677,"line_end":677,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18397,"byte_end":18429,"line_start":678,"line_end":678,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18430,"byte_end":18470,"line_start":679,"line_end":679,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18471,"byte_end":18531,"line_start":680,"line_end":680,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18532,"byte_end":18590,"line_start":681,"line_end":681,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18591,"byte_end":18631,"line_start":682,"line_end":682,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18632,"byte_end":18680,"line_start":683,"line_end":683,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18681,"byte_end":18690,"line_start":684,"line_end":684,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11689},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19156,"byte_end":19167,"line_start":699,"line_end":699,"column_start":8,"column_end":19},"name":"convert_ref","qualname":"::convert_ref","value":"pub fn convert_ref<From, To: SupersetOf<From>>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Converts an object from one type to an equivalent or more general one.","sig":null,"attributes":[{"value":"/ Converts an object from one type to an equivalent or more general one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18797,"byte_end":18871,"line_start":689,"line_end":689,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18872,"byte_end":18875,"line_start":690,"line_end":690,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18876,"byte_end":18891,"line_start":691,"line_end":691,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18892,"byte_end":18895,"line_start":692,"line_end":692,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18896,"byte_end":18928,"line_start":693,"line_end":693,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18929,"byte_end":18989,"line_start":694,"line_end":694,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":18990,"byte_end":19048,"line_start":695,"line_end":695,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19049,"byte_end":19089,"line_start":696,"line_end":696,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19090,"byte_end":19138,"line_start":697,"line_end":697,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19139,"byte_end":19148,"line_start":698,"line_end":698,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11692},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19574,"byte_end":19589,"line_start":713,"line_end":713,"column_start":8,"column_end":23},"name":"try_convert_ref","qualname":"::try_convert_ref","value":"pub fn try_convert_ref<From: SupersetOf<To>, To>(&From) -> Option<To>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to convert an object to a more specific one.","sig":null,"attributes":[{"value":"/ Attempts to convert an object to a more specific one.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19240,"byte_end":19297,"line_start":703,"line_end":703,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19298,"byte_end":19301,"line_start":704,"line_end":704,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19302,"byte_end":19317,"line_start":705,"line_end":705,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19318,"byte_end":19321,"line_start":706,"line_end":706,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19322,"byte_end":19354,"line_start":707,"line_end":707,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19355,"byte_end":19395,"line_start":708,"line_end":708,"column_start":1,"column_end":41}},{"value":"/ * [convert_ref_unchecked](fn.convert_ref_unchecked.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19396,"byte_end":19456,"line_start":709,"line_end":709,"column_start":1,"column_end":61}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19457,"byte_end":19515,"line_start":710,"line_end":710,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19516,"byte_end":19556,"line_start":711,"line_end":711,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19557,"byte_end":19566,"line_start":712,"line_end":712,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":11695},"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":20035,"byte_end":20056,"line_start":728,"line_end":728,"column_start":15,"column_end":36},"name":"convert_ref_unchecked","qualname":"::convert_ref_unchecked","value":"pub unsafe fn convert_ref_unchecked<From: SupersetOf<To>, To>(&From) -> To","parent":null,"children":[],"decl_id":null,"docs":" Use with care! Same as [`try_convert`](fn.try_convert.html) but\n without any property checks.","sig":null,"attributes":[{"value":"/ Use with care! Same as [`try_convert`](fn.try_convert.html) but","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19663,"byte_end":19730,"line_start":717,"line_end":717,"column_start":1,"column_end":68}},{"value":"/ without any property checks.","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19731,"byte_end":19763,"line_start":718,"line_end":718,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19764,"byte_end":19767,"line_start":719,"line_end":719,"column_start":1,"column_end":4}},{"value":"/ # See also:","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19768,"byte_end":19783,"line_start":720,"line_end":720,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19784,"byte_end":19787,"line_start":721,"line_end":721,"column_start":1,"column_end":4}},{"value":"/ * [convert](fn.convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19788,"byte_end":19820,"line_start":722,"line_end":722,"column_start":1,"column_end":33}},{"value":"/ * [convert_ref](fn.convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19821,"byte_end":19861,"line_start":723,"line_end":723,"column_start":1,"column_end":41}},{"value":"/ * [is_convertible](../nalgebra/fn.is_convertible.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19862,"byte_end":19920,"line_start":724,"line_end":724,"column_start":1,"column_end":59}},{"value":"/ * [try_convert](fn.try_convert.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19921,"byte_end":19961,"line_start":725,"line_end":725,"column_start":1,"column_end":41}},{"value":"/ * [try_convert_ref](fn.try_convert_ref.html)","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":19962,"byte_end":20010,"line_start":726,"line_end":726,"column_start":1,"column_end":49}},{"value":"inline","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":20011,"byte_end":20020,"line_start":727,"line_end":727,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24195,"byte_end":24211,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24833,"byte_end":24849,"line_start":96,"line_end":96,"column_start":57,"column_end":73},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25696,"byte_end":25702,"line_start":18,"line_end":18,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":184}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26672,"byte_end":26678,"line_start":51,"line_end":51,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":189},{"krate":0,"index":190},{"krate":0,"index":191},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30409,"byte_end":30415,"line_start":196,"line_end":196,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31625,"byte_end":31631,"line_start":233,"line_end":233,"column_start":76,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":32572,"byte_end":32578,"line_start":266,"line_end":266,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":222},{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":40956,"byte_end":40962,"line_start":490,"line_end":490,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":238},{"krate":0,"index":241},{"krate":0,"index":247},{"krate":0,"index":253},{"krate":0,"index":258},{"krate":0,"index":264},{"krate":0,"index":270},{"krate":0,"index":277},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":53408,"byte_end":53414,"line_start":864,"line_end":864,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":302},{"krate":0,"index":308},{"krate":0,"index":313},{"krate":0,"index":321},{"krate":0,"index":328}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":66483,"byte_end":66489,"line_start":1227,"line_end":1227,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":346},{"krate":0,"index":351},{"krate":0,"index":357}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71752,"byte_end":71764,"line_start":1374,"line_end":1374,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":374},{"krate":0,"index":380},{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79858,"byte_end":79873,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80180,"byte_end":80195,"line_start":21,"line_end":21,"column_start":30,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80269,"byte_end":80284,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80358,"byte_end":80373,"line_start":29,"line_end":29,"column_start":40,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":429}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81972,"byte_end":81987,"line_start":78,"line_end":78,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":82069,"byte_end":82084,"line_start":82,"line_end":82,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":440}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":82166,"byte_end":82181,"line_start":86,"line_end":86,"column_start":48,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":90368,"byte_end":90384,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":548},{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":91364,"byte_end":91380,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":92308,"byte_end":92324,"line_start":110,"line_end":110,"column_start":58,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":564}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":93271,"byte_end":93287,"line_start":145,"line_end":145,"column_start":84,"column_end":100},"value":"","parent":null,"children":[{"krate":0,"index":572}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":94180,"byte_end":94196,"line_start":176,"line_end":176,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":578}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":95043,"byte_end":95059,"line_start":205,"line_end":205,"column_start":83,"column_end":99},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":95939,"byte_end":95955,"line_start":235,"line_end":235,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":589}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":96386,"byte_end":96402,"line_start":251,"line_end":251,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":594}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":96833,"byte_end":96849,"line_start":267,"line_end":267,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":97284,"byte_end":97300,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98144,"byte_end":98151,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98939,"byte_end":98946,"line_start":51,"line_end":51,"column_start":20,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98974,"byte_end":98981,"line_start":52,"line_end":52,"column_start":25,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99846,"byte_end":99853,"line_start":75,"line_end":75,"column_start":14,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":100108,"byte_end":100115,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":692},{"krate":0,"index":693}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":100264,"byte_end":100271,"line_start":101,"line_end":101,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":695},{"krate":0,"index":696}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103473,"byte_end":103475,"line_start":213,"line_end":213,"column_start":14,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103761,"byte_end":103763,"line_start":231,"line_end":231,"column_start":18,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":709},{"krate":0,"index":710}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103882,"byte_end":103884,"line_start":240,"line_end":240,"column_start":28,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":712}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":106263,"byte_end":106267,"line_start":307,"line_end":307,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":722}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":106830,"byte_end":106834,"line_start":320,"line_end":320,"column_start":15,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":731},{"krate":0,"index":732},{"krate":0,"index":733}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":107696,"byte_end":107700,"line_start":347,"line_end":347,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108344,"byte_end":108348,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108528,"byte_end":108532,"line_start":371,"line_end":371,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108667,"byte_end":108671,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":759},{"krate":0,"index":760},{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":109099,"byte_end":109103,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":109315,"byte_end":109319,"line_start":408,"line_end":408,"column_start":9,"column_end":13},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":113193,"byte_end":113200,"line_start":113,"line_end":113,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":113418,"byte_end":113425,"line_start":122,"line_end":122,"column_start":76,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":821}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114085,"byte_end":114092,"line_start":147,"line_end":147,"column_start":85,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114506,"byte_end":114516,"line_start":162,"line_end":162,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":844},{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114887,"byte_end":114897,"line_start":179,"line_end":179,"column_start":79,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":852},{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115565,"byte_end":115575,"line_start":204,"line_end":204,"column_start":88,"column_end":98},"value":"","parent":null,"children":[{"krate":0,"index":862}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115970,"byte_end":115980,"line_start":224,"line_end":224,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":869}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":116201,"byte_end":116211,"line_start":233,"line_end":233,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":116874,"byte_end":116884,"line_start":258,"line_end":258,"column_start":85,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":117304,"byte_end":117317,"line_start":273,"line_end":273,"column_start":66,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":902},{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":117691,"byte_end":117704,"line_start":290,"line_end":290,"column_start":79,"column_end":92},"value":"","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":912},{"krate":0,"index":913}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":118375,"byte_end":118388,"line_start":315,"line_end":315,"column_start":88,"column_end":101},"value":"","parent":null,"children":[{"krate":0,"index":920}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":119315,"byte_end":119321,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":1077},{"krate":0,"index":1078}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":119550,"byte_end":119556,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1084},{"krate":0,"index":1085}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120021,"byte_end":120027,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":1091}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120242,"byte_end":120248,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1097}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120657,"byte_end":120663,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1104}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":121265,"byte_end":121271,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1118}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":132899,"byte_end":132907,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":133174,"byte_end":133182,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1130}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":134251,"byte_end":134259,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":134563,"byte_end":134571,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1145}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":140082,"byte_end":140088,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1182},{"krate":0,"index":1183}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":140555,"byte_end":140561,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1192},{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":141159,"byte_end":141165,"line_start":636,"line_end":636,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":141652,"byte_end":141658,"line_start":653,"line_end":653,"column_start":74,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1210}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142212,"byte_end":142218,"line_start":672,"line_end":672,"column_start":31,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1220},{"krate":0,"index":1224},{"krate":0,"index":1232},{"krate":0,"index":1240},{"krate":0,"index":1248},{"krate":0,"index":1255}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147393,"byte_end":147399,"line_start":829,"line_end":829,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147912,"byte_end":147919,"line_start":849,"line_end":849,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1269}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":148227,"byte_end":148234,"line_start":859,"line_end":859,"column_start":62,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":1276}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":148538,"byte_end":148544,"line_start":869,"line_end":869,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1284},{"krate":0,"index":1287},{"krate":0,"index":1289},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186292,"byte_end":186299,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2266}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187546,"byte_end":187553,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2270}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187776,"byte_end":187783,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2273},{"krate":0,"index":2274},{"krate":0,"index":2275},{"krate":0,"index":2276},{"krate":0,"index":2277},{"krate":0,"index":2278},{"krate":0,"index":2279},{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282},{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191086,"byte_end":191098,"line_start":156,"line_end":156,"column_start":57,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2294},{"krate":0,"index":2296}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193787,"byte_end":193799,"line_start":243,"line_end":243,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2308},{"krate":0,"index":2310}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":196663,"byte_end":196675,"line_start":324,"line_end":324,"column_start":60,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":2316},{"krate":0,"index":2317}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":198260,"byte_end":198267,"line_start":368,"line_end":368,"column_start":88,"column_end":95},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199409,"byte_end":199415,"line_start":17,"line_end":17,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2399}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":207839,"byte_end":207847,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2514},{"krate":0,"index":2515},{"krate":0,"index":2516},{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2524},{"krate":0,"index":2525},{"krate":0,"index":2526},{"krate":0,"index":2527},{"krate":0,"index":2530},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2539}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217047,"byte_end":217054,"line_start":287,"line_end":287,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":236540,"byte_end":236548,"line_start":722,"line_end":722,"column_start":42,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2551},{"krate":0,"index":2552}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":236849,"byte_end":236856,"line_start":738,"line_end":738,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2557}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":237080,"byte_end":237088,"line_start":749,"line_end":749,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2562},{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":237429,"byte_end":237437,"line_start":765,"line_end":765,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2568}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":238503,"byte_end":238511,"line_start":800,"line_end":800,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2575}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246222,"byte_end":246229,"line_start":991,"line_end":991,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2590},{"krate":0,"index":2591},{"krate":0,"index":2592},{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":249886,"byte_end":249899,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2635},{"krate":0,"index":2636}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":251911,"byte_end":251927,"line_start":65,"line_end":65,"column_start":5,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2644},{"krate":0,"index":2645}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":254870,"byte_end":254883,"line_start":136,"line_end":136,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":2651},{"krate":0,"index":2652}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256038,"byte_end":256054,"line_start":162,"line_end":162,"column_start":37,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2658},{"krate":0,"index":2659}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":263881,"byte_end":263889,"line_start":26,"line_end":26,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":2825},{"krate":0,"index":2826},{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":274448,"byte_end":274454,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2856}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":274920,"byte_end":274926,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2863}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":275313,"byte_end":275319,"line_start":372,"line_end":372,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2870}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":275662,"byte_end":275668,"line_start":385,"line_end":385,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2878}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":276140,"byte_end":276146,"line_start":402,"line_end":402,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":276539,"byte_end":276545,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2892}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277597,"byte_end":277603,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2998},{"krate":0,"index":2999},{"krate":0,"index":3000},{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280205,"byte_end":280211,"line_start":95,"line_end":95,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3011},{"krate":0,"index":3012},{"krate":0,"index":3013},{"krate":0,"index":3014},{"krate":0,"index":3015},{"krate":0,"index":3016},{"krate":0,"index":3019},{"krate":0,"index":3021},{"krate":0,"index":3024},{"krate":0,"index":3027},{"krate":0,"index":3028},{"krate":0,"index":3029},{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285779,"byte_end":285785,"line_start":256,"line_end":256,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3035},{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286992,"byte_end":286998,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3042},{"krate":0,"index":3043},{"krate":0,"index":3044},{"krate":0,"index":3045},{"krate":0,"index":3047},{"krate":0,"index":3048},{"krate":0,"index":3050},{"krate":0,"index":3051},{"krate":0,"index":3053},{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3057},{"krate":0,"index":3059},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3068},{"krate":0,"index":3069},{"krate":0,"index":3070},{"krate":0,"index":3071},{"krate":0,"index":3074}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304145,"byte_end":304152,"line_start":800,"line_end":800,"column_start":17,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":3079}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304932,"byte_end":304940,"line_start":817,"line_end":817,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3083}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305886,"byte_end":305894,"line_start":838,"line_end":838,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3087}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":308910,"byte_end":308916,"line_start":939,"line_end":939,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3096}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":310426,"byte_end":310432,"line_start":987,"line_end":987,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3101}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":311044,"byte_end":311050,"line_start":1008,"line_end":1008,"column_start":53,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":3109}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":314347,"byte_end":314352,"line_start":50,"line_end":50,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":315423,"byte_end":315432,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":316385,"byte_end":316394,"line_start":113,"line_end":113,"column_start":43,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3180},{"krate":0,"index":3181},{"krate":0,"index":3182},{"krate":0,"index":3183}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":316921,"byte_end":316930,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3186},{"krate":0,"index":3187},{"krate":0,"index":3188},{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":317431,"byte_end":317445,"line_start":166,"line_end":166,"column_start":35,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3192},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":318841,"byte_end":318848,"line_start":205,"line_end":205,"column_start":35,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3198},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3201}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":319753,"byte_end":319769,"line_start":237,"line_end":237,"column_start":35,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3204},{"krate":0,"index":3205},{"krate":0,"index":3206},{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325629,"byte_end":325635,"line_start":435,"line_end":435,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3234},{"krate":0,"index":3237},{"krate":0,"index":3240},{"krate":0,"index":3243},{"krate":0,"index":3246},{"krate":0,"index":3249}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":338088,"byte_end":338094,"line_start":84,"line_end":84,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3488}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339476,"byte_end":339482,"line_start":139,"line_end":139,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339884,"byte_end":339890,"line_start":151,"line_end":151,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3500},{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3506},{"krate":0,"index":3507},{"krate":0,"index":3508},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3516},{"krate":0,"index":3521},{"krate":0,"index":3522},{"krate":0,"index":3525},{"krate":0,"index":3526},{"krate":0,"index":3529},{"krate":0,"index":3532},{"krate":0,"index":3535},{"krate":0,"index":3540},{"krate":0,"index":3547},{"krate":0,"index":3550},{"krate":0,"index":3557},{"krate":0,"index":3561}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354289,"byte_end":354295,"line_start":626,"line_end":626,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3567},{"krate":0,"index":3568},{"krate":0,"index":3569},{"krate":0,"index":3570},{"krate":0,"index":3571},{"krate":0,"index":3572},{"krate":0,"index":3573},{"krate":0,"index":3574},{"krate":0,"index":3578},{"krate":0,"index":3582},{"krate":0,"index":3584},{"krate":0,"index":3586},{"krate":0,"index":3592}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362060,"byte_end":362066,"line_start":862,"line_end":862,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3606}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362447,"byte_end":362453,"line_start":872,"line_end":872,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3611}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362876,"byte_end":362882,"line_start":882,"line_end":882,"column_start":64,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3617}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363141,"byte_end":363147,"line_start":890,"line_end":890,"column_start":67,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":3623}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363412,"byte_end":363418,"line_start":898,"line_end":898,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3628}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363892,"byte_end":363898,"line_start":916,"line_end":916,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3634},{"krate":0,"index":3638},{"krate":0,"index":3639},{"krate":0,"index":3643},{"krate":0,"index":3644},{"krate":0,"index":3646},{"krate":0,"index":3648}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366581,"byte_end":366587,"line_start":999,"line_end":999,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367216,"byte_end":367222,"line_start":1019,"line_end":1019,"column_start":55,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368331,"byte_end":368343,"line_start":1055,"line_end":1055,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":3671},{"krate":0,"index":3673},{"krate":0,"index":3676}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369811,"byte_end":369823,"line_start":1106,"line_end":1106,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3681},{"krate":0,"index":3682}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370748,"byte_end":370754,"line_start":1131,"line_end":1131,"column_start":83,"column_end":89},"value":"","parent":null,"children":[{"krate":0,"index":3687}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371469,"byte_end":371475,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3692},{"krate":0,"index":3693}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":372410,"byte_end":372416,"line_start":1173,"line_end":1173,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":3699}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373022,"byte_end":373028,"line_start":1189,"line_end":1189,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3705},{"krate":0,"index":3706},{"krate":0,"index":3707}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373492,"byte_end":373498,"line_start":1210,"line_end":1210,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3714},{"krate":0,"index":3715}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373960,"byte_end":373966,"line_start":1233,"line_end":1233,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3721},{"krate":0,"index":3722}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":374452,"byte_end":374458,"line_start":1253,"line_end":1253,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3732},{"krate":0,"index":3734},{"krate":0,"index":3736}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":377078,"byte_end":377084,"line_start":1341,"line_end":1341,"column_start":35,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":377193,"byte_end":377199,"line_start":1347,"line_end":1347,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3748}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":380988,"byte_end":380994,"line_start":1457,"line_end":1457,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":3756},{"krate":0,"index":3760}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384353,"byte_end":384359,"line_start":1548,"line_end":1548,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3767}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384881,"byte_end":384887,"line_start":1568,"line_end":1568,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3773}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385744,"byte_end":385750,"line_start":1597,"line_end":1597,"column_start":5,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":3781}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386491,"byte_end":386495,"line_start":1619,"line_end":1619,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":3787},{"krate":0,"index":3789}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":388769,"byte_end":388773,"line_start":1684,"line_end":1684,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":3796},{"krate":0,"index":3797},{"krate":0,"index":3798}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":389200,"byte_end":389204,"line_start":1703,"line_end":1703,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3804},{"krate":0,"index":3805}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":389705,"byte_end":389709,"line_start":1727,"line_end":1727,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3811},{"krate":0,"index":3812}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":390094,"byte_end":390100,"line_start":1744,"line_end":1744,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3818}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391363,"byte_end":391371,"line_start":26,"line_end":26,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3945}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391602,"byte_end":391610,"line_start":37,"line_end":37,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3950}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391849,"byte_end":391857,"line_start":48,"line_end":48,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3956}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":392872,"byte_end":392880,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":3962},{"krate":0,"index":3963}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393126,"byte_end":393134,"line_start":94,"line_end":94,"column_start":44,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":3968}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393297,"byte_end":393305,"line_start":102,"line_end":102,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3973}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393468,"byte_end":393476,"line_start":110,"line_end":110,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":3978},{"krate":0,"index":3979},{"krate":0,"index":3980},{"krate":0,"index":3981},{"krate":0,"index":3982}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":394320,"byte_end":394328,"line_start":148,"line_end":148,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":3987},{"krate":0,"index":3988},{"krate":0,"index":3989},{"krate":0,"index":3990},{"krate":0,"index":3991},{"krate":0,"index":3992},{"krate":0,"index":3993},{"krate":0,"index":3994}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":395137,"byte_end":395145,"line_start":185,"line_end":185,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":3999},{"krate":0,"index":4000}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":395680,"byte_end":395688,"line_start":203,"line_end":203,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4006}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":399906,"byte_end":399913,"line_start":330,"line_end":330,"column_start":50,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":4011}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":400128,"byte_end":400135,"line_start":341,"line_end":341,"column_start":55,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":4015}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":400878,"byte_end":400886,"line_start":370,"line_end":370,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4021}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":401136,"byte_end":401144,"line_start":381,"line_end":381,"column_start":45,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":4027}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":401386,"byte_end":401394,"line_start":392,"line_end":392,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":4033}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403734,"byte_end":403746,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":4117}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403998,"byte_end":404010,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4123},{"krate":0,"index":4124}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404305,"byte_end":404317,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":4129}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404563,"byte_end":404575,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4134}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404843,"byte_end":404855,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405072,"byte_end":405084,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4143}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405367,"byte_end":405379,"line_start":132,"line_end":132,"column_start":22,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405545,"byte_end":405557,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4152}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405838,"byte_end":405850,"line_start":155,"line_end":155,"column_start":43,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":4157},{"krate":0,"index":4158},{"krate":0,"index":4159},{"krate":0,"index":4160},{"krate":0,"index":4161},{"krate":0,"index":4162},{"krate":0,"index":4163},{"krate":0,"index":4164},{"krate":0,"index":4165}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":406945,"byte_end":406957,"line_start":207,"line_end":207,"column_start":46,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":4170},{"krate":0,"index":4171}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":407385,"byte_end":407397,"line_start":227,"line_end":227,"column_start":53,"column_end":65},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":407651,"byte_end":407663,"line_start":237,"line_end":237,"column_start":56,"column_end":68},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415442,"byte_end":415454,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415569,"byte_end":415581,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":4263}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418236,"byte_end":418251,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":4272},{"krate":0,"index":4273}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418841,"byte_end":418853,"line_start":201,"line_end":201,"column_start":82,"column_end":94},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418966,"byte_end":418981,"line_start":202,"line_end":202,"column_start":82,"column_end":97},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419097,"byte_end":419112,"line_start":203,"line_end":203,"column_start":85,"column_end":100},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419240,"byte_end":419252,"line_start":205,"line_end":205,"column_start":96,"column_end":108},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419372,"byte_end":419387,"line_start":206,"line_end":206,"column_start":96,"column_end":111},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419510,"byte_end":419525,"line_start":207,"line_end":207,"column_start":99,"column_end":114},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419604,"byte_end":419610,"line_start":209,"line_end":209,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4309}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439691,"byte_end":439696,"line_start":713,"line_end":713,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":4325},{"krate":0,"index":4326},{"krate":0,"index":4327},{"krate":0,"index":4328}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440045,"byte_end":440054,"line_start":732,"line_end":732,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4331},{"krate":0,"index":4332},{"krate":0,"index":4333},{"krate":0,"index":4334}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440413,"byte_end":440420,"line_start":751,"line_end":751,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":4337},{"krate":0,"index":4338},{"krate":0,"index":4339},{"krate":0,"index":4340}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440747,"byte_end":440756,"line_start":770,"line_end":770,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4343},{"krate":0,"index":4344},{"krate":0,"index":4345},{"krate":0,"index":4346}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441080,"byte_end":441086,"line_start":789,"line_end":789,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4355},{"krate":0,"index":4357}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442338,"byte_end":442344,"line_start":830,"line_end":830,"column_start":57,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":4364},{"krate":0,"index":4367},{"krate":0,"index":4369}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443672,"byte_end":443683,"line_start":872,"line_end":872,"column_start":5,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":4378}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445230,"byte_end":445240,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":4437},{"krate":0,"index":4438},{"krate":0,"index":4439},{"krate":0,"index":4440},{"krate":0,"index":4441}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446792,"byte_end":446802,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":4446}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446987,"byte_end":446997,"line_start":105,"line_end":105,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4450},{"krate":0,"index":4451},{"krate":0,"index":4452},{"krate":0,"index":4453},{"krate":0,"index":4454},{"krate":0,"index":4455},{"krate":0,"index":4456},{"krate":0,"index":4457},{"krate":0,"index":4458}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":447919,"byte_end":447929,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":4462},{"krate":0,"index":4463},{"krate":0,"index":4464},{"krate":0,"index":4465},{"krate":0,"index":4466},{"krate":0,"index":4467},{"krate":0,"index":4468},{"krate":0,"index":4469},{"krate":0,"index":4470}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":448891,"byte_end":448901,"line_start":198,"line_end":198,"column_start":62,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":4474},{"krate":0,"index":4475}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449236,"byte_end":449246,"line_start":212,"line_end":212,"column_start":69,"column_end":79},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449401,"byte_end":449411,"line_start":215,"line_end":215,"column_start":72,"column_end":82},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449560,"byte_end":449570,"line_start":218,"line_end":218,"column_start":66,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":4485},{"krate":0,"index":4486}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450335,"byte_end":450345,"line_start":247,"line_end":247,"column_start":73,"column_end":83},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450504,"byte_end":450514,"line_start":250,"line_end":250,"column_start":76,"column_end":86},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450628,"byte_end":450638,"line_start":253,"line_end":253,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4496}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":451345,"byte_end":451355,"line_start":271,"line_end":271,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4503}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":452255,"byte_end":452265,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":4507}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":452927,"byte_end":452933,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4564},{"krate":0,"index":4565},{"krate":0,"index":4566}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455172,"byte_end":455178,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4572}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455754,"byte_end":455766,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":4577},{"krate":0,"index":4578}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456921,"byte_end":456922,"line_start":17,"line_end":17,"column_start":52,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460719,"byte_end":460723,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4651},{"krate":0,"index":4652},{"krate":0,"index":4654},{"krate":0,"index":4655},{"krate":0,"index":4656},{"krate":0,"index":4657}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462893,"byte_end":462897,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":4660},{"krate":0,"index":4661},{"krate":0,"index":4663},{"krate":0,"index":4664},{"krate":0,"index":4665}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463927,"byte_end":463931,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4668}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":464075,"byte_end":464079,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":4671},{"krate":0,"index":4672},{"krate":0,"index":4673}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":465707,"byte_end":465711,"line_start":220,"line_end":220,"column_start":22,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":4676},{"krate":0,"index":4677}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":465878,"byte_end":465882,"line_start":229,"line_end":229,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":4680},{"krate":0,"index":4681}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466248,"byte_end":466254,"line_start":6,"line_end":6,"column_start":54,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":4726},{"krate":0,"index":4728},{"krate":0,"index":4730}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468159,"byte_end":468165,"line_start":57,"line_end":57,"column_start":80,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":4737},{"krate":0,"index":4739},{"krate":0,"index":4741},{"krate":0,"index":4743},{"krate":0,"index":4745},{"krate":0,"index":4747},{"krate":0,"index":4749},{"krate":0,"index":4751},{"krate":0,"index":4754},{"krate":0,"index":4755},{"krate":0,"index":4757},{"krate":0,"index":4759}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476938,"byte_end":476951,"line_start":32,"line_end":32,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":4827},{"krate":0,"index":4831}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":477659,"byte_end":477665,"line_start":51,"line_end":51,"column_start":35,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":4841},{"krate":0,"index":4846}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":478525,"byte_end":478536,"line_start":72,"line_end":72,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":4856},{"krate":0,"index":4861}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479515,"byte_end":479521,"line_start":98,"line_end":98,"column_start":60,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":4874},{"krate":0,"index":4875},{"krate":0,"index":4876},{"krate":0,"index":4880},{"krate":0,"index":4882},{"krate":0,"index":4887},{"krate":0,"index":4888},{"krate":0,"index":4889},{"krate":0,"index":4890},{"krate":0,"index":4891}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483264,"byte_end":483270,"line_start":216,"line_end":216,"column_start":63,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":4897},{"krate":0,"index":4898}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495983,"byte_end":495988,"line_start":30,"line_end":30,"column_start":70,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":4996}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":496236,"byte_end":496241,"line_start":40,"line_end":40,"column_start":38,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497661,"byte_end":497666,"line_start":94,"line_end":94,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5004},{"krate":0,"index":5005},{"krate":0,"index":5006},{"krate":0,"index":5007},{"krate":0,"index":5008},{"krate":0,"index":5009},{"krate":0,"index":5010},{"krate":0,"index":5011},{"krate":0,"index":5012}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501288,"byte_end":501293,"line_start":213,"line_end":213,"column_start":55,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":5016},{"krate":0,"index":5017},{"krate":0,"index":5018}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501704,"byte_end":501709,"line_start":231,"line_end":231,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5022},{"krate":0,"index":5023}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502189,"byte_end":502194,"line_start":254,"line_end":254,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502566,"byte_end":502571,"line_start":270,"line_end":270,"column_start":41,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502664,"byte_end":502669,"line_start":272,"line_end":272,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":5035}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502874,"byte_end":502879,"line_start":281,"line_end":281,"column_start":57,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5039},{"krate":0,"index":5040},{"krate":0,"index":5041},{"krate":0,"index":5042},{"krate":0,"index":5043}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":503544,"byte_end":503549,"line_start":315,"line_end":315,"column_start":61,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":5047}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504226,"byte_end":504231,"line_start":10,"line_end":10,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5094}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504399,"byte_end":504404,"line_start":18,"line_end":18,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5098},{"krate":0,"index":5099},{"krate":0,"index":5100},{"krate":0,"index":5101},{"krate":0,"index":5102},{"krate":0,"index":5103}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504937,"byte_end":504942,"line_start":50,"line_end":50,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5107}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":505187,"byte_end":505192,"line_start":61,"line_end":61,"column_start":41,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5111}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":505429,"byte_end":505434,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":5115}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506735,"byte_end":506740,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509904,"byte_end":509909,"line_start":115,"line_end":115,"column_start":51,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5229},{"krate":0,"index":5230}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":510200,"byte_end":510208,"line_start":129,"line_end":129,"column_start":59,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5234}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":513522,"byte_end":513527,"line_start":27,"line_end":27,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":5293},{"krate":0,"index":5294},{"krate":0,"index":5296}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":514221,"byte_end":514226,"line_start":52,"line_end":52,"column_start":62,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":5301},{"krate":0,"index":5302},{"krate":0,"index":5303}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":516608,"byte_end":516615,"line_start":133,"line_end":133,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":5307}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":516882,"byte_end":516887,"line_start":144,"line_end":144,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":5311}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":518853,"byte_end":518858,"line_start":21,"line_end":21,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":5488},{"krate":0,"index":5489}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":519073,"byte_end":519078,"line_start":32,"line_end":32,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5493}],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":519308,"byte_end":519313,"line_start":46,"line_end":46,"column_start":49,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":5497},{"krate":0,"index":5498}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527229,"byte_end":527237,"line_start":33,"line_end":33,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5570}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527491,"byte_end":527499,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527657,"byte_end":527665,"line_start":50,"line_end":50,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":5578}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529172,"byte_end":529180,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5582},{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585},{"krate":0,"index":5586},{"krate":0,"index":5587},{"krate":0,"index":5588},{"krate":0,"index":5589},{"krate":0,"index":5590},{"krate":0,"index":5591},{"krate":0,"index":5592}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538409,"byte_end":538417,"line_start":355,"line_end":355,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5596},{"krate":0,"index":5597},{"krate":0,"index":5598},{"krate":0,"index":5599}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541417,"byte_end":541425,"line_start":435,"line_end":435,"column_start":41,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541533,"byte_end":541541,"line_start":437,"line_end":437,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":5606}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541727,"byte_end":541735,"line_start":446,"line_end":446,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":5610},{"krate":0,"index":5611},{"krate":0,"index":5612}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":542155,"byte_end":542163,"line_start":465,"line_end":465,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":5616},{"krate":0,"index":5617}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":542657,"byte_end":542665,"line_start":489,"line_end":489,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":5621},{"krate":0,"index":5622}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":543085,"byte_end":543093,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":5626}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":544594,"byte_end":544602,"line_start":21,"line_end":21,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":5710}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":544797,"byte_end":544805,"line_start":30,"line_end":30,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":5714},{"krate":0,"index":5715}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":545104,"byte_end":545112,"line_start":44,"line_end":44,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5719}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":545822,"byte_end":545830,"line_start":73,"line_end":73,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5724},{"krate":0,"index":5725}],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":546217,"byte_end":546225,"line_start":87,"line_end":87,"column_start":74,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":5729},{"krate":0,"index":5730}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":546640,"byte_end":546648,"line_start":101,"line_end":101,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":5734},{"krate":0,"index":5735},{"krate":0,"index":5736},{"krate":0,"index":5737},{"krate":0,"index":5738},{"krate":0,"index":5739},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":547635,"byte_end":547643,"line_start":144,"line_end":144,"column_start":60,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":5747},{"krate":0,"index":5748},{"krate":0,"index":5749},{"krate":0,"index":5750}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":548400,"byte_end":548408,"line_start":176,"line_end":176,"column_start":66,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":5755},{"krate":0,"index":5756},{"krate":0,"index":5757}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551115,"byte_end":551123,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":5810}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551710,"byte_end":551718,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":5814}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":552809,"byte_end":552817,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":5908},{"krate":0,"index":5909},{"krate":0,"index":5910}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":553445,"byte_end":553454,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":5914},{"krate":0,"index":5915},{"krate":0,"index":5916}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":554054,"byte_end":554063,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":5920},{"krate":0,"index":5921},{"krate":0,"index":5922}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":554663,"byte_end":554671,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5928},{"krate":0,"index":5929},{"krate":0,"index":5930}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":555339,"byte_end":555347,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":5936},{"krate":0,"index":5937},{"krate":0,"index":5938}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":556072,"byte_end":556080,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":5944},{"krate":0,"index":5945},{"krate":0,"index":5946}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":557037,"byte_end":557045,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":5951},{"krate":0,"index":5952},{"krate":0,"index":5955}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558658,"byte_end":558665,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5958}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558801,"byte_end":558808,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5961}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558941,"byte_end":558948,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5964}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":559085,"byte_end":559092,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":5967}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_ops.rs","byte_start":559992,"byte_end":560000,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6054},{"krate":0,"index":6055}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565804,"byte_end":565813,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6132},{"krate":0,"index":6133},{"krate":0,"index":6135},{"krate":0,"index":6136},{"krate":0,"index":6137},{"krate":0,"index":6140},{"krate":0,"index":6143},{"krate":0,"index":6144},{"krate":0,"index":6145},{"krate":0,"index":6146},{"krate":0,"index":6147},{"krate":0,"index":6148}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573243,"byte_end":573251,"line_start":233,"line_end":233,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6151}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573788,"byte_end":573797,"line_start":258,"line_end":258,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":6156},{"krate":0,"index":6158},{"krate":0,"index":6159},{"krate":0,"index":6160},{"krate":0,"index":6162},{"krate":0,"index":6164},{"krate":0,"index":6165},{"krate":0,"index":6166},{"krate":0,"index":6167},{"krate":0,"index":6168},{"krate":0,"index":6171},{"krate":0,"index":6174},{"krate":0,"index":6177},{"krate":0,"index":6180},{"krate":0,"index":6183},{"krate":0,"index":6186},{"krate":0,"index":6187},{"krate":0,"index":6188},{"krate":0,"index":6189},{"krate":0,"index":6190},{"krate":0,"index":6191},{"krate":0,"index":6192}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594957,"byte_end":594965,"line_start":820,"line_end":820,"column_start":51,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6195}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597841,"byte_end":597851,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597892,"byte_end":597902,"line_start":52,"line_end":52,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":6271}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598187,"byte_end":598197,"line_start":60,"line_end":60,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6275}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598325,"byte_end":598335,"line_start":66,"line_end":66,"column_start":29,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598372,"byte_end":598382,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6281}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599101,"byte_end":599111,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":6288},{"krate":0,"index":6289},{"krate":0,"index":6290},{"krate":0,"index":6291},{"krate":0,"index":6292},{"krate":0,"index":6293},{"krate":0,"index":6294},{"krate":0,"index":6295},{"krate":0,"index":6296},{"krate":0,"index":6297},{"krate":0,"index":6298},{"krate":0,"index":6299},{"krate":0,"index":6300},{"krate":0,"index":6301},{"krate":0,"index":6302},{"krate":0,"index":6303},{"krate":0,"index":6304},{"krate":0,"index":6305},{"krate":0,"index":6306},{"krate":0,"index":6307},{"krate":0,"index":6308},{"krate":0,"index":6309},{"krate":0,"index":6310},{"krate":0,"index":6311},{"krate":0,"index":6312},{"krate":0,"index":6313},{"krate":0,"index":6314},{"krate":0,"index":6315},{"krate":0,"index":6316},{"krate":0,"index":6317},{"krate":0,"index":6318},{"krate":0,"index":6320},{"krate":0,"index":6322},{"krate":0,"index":6323},{"krate":0,"index":6324},{"krate":0,"index":6325},{"krate":0,"index":6326},{"krate":0,"index":6327},{"krate":0,"index":6328},{"krate":0,"index":6329},{"krate":0,"index":6330},{"krate":0,"index":6331},{"krate":0,"index":6332},{"krate":0,"index":6333}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":623113,"byte_end":623123,"line_start":854,"line_end":854,"column_start":59,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":6336},{"krate":0,"index":6337},{"krate":0,"index":6338}],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":623639,"byte_end":623649,"line_start":870,"line_end":870,"column_start":61,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":6342},{"krate":0,"index":6343}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":624244,"byte_end":624254,"line_start":890,"line_end":890,"column_start":53,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6347},{"krate":0,"index":6348}],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":624754,"byte_end":624764,"line_start":904,"line_end":904,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":6352}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625103,"byte_end":625117,"line_start":917,"line_end":917,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6357},{"krate":0,"index":6358},{"krate":0,"index":6359},{"krate":0,"index":6360},{"krate":0,"index":6361},{"krate":0,"index":6362},{"krate":0,"index":6363},{"krate":0,"index":6364},{"krate":0,"index":6365},{"krate":0,"index":6366},{"krate":0,"index":6367},{"krate":0,"index":6368},{"krate":0,"index":6370},{"krate":0,"index":6371},{"krate":0,"index":6372},{"krate":0,"index":6373},{"krate":0,"index":6374},{"krate":0,"index":6376},{"krate":0,"index":6377},{"krate":0,"index":6378},{"krate":0,"index":6379},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383},{"krate":0,"index":6384},{"krate":0,"index":6385},{"krate":0,"index":6386}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":643040,"byte_end":643054,"line_start":1425,"line_end":1425,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":6389}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":643669,"byte_end":643683,"line_start":1447,"line_end":1447,"column_start":59,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":6392},{"krate":0,"index":6393},{"krate":0,"index":6394}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":644022,"byte_end":644036,"line_start":1461,"line_end":1461,"column_start":61,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":6397},{"krate":0,"index":6398}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":644453,"byte_end":644467,"line_start":1480,"line_end":1480,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6401},{"krate":0,"index":6402}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645364,"byte_end":645374,"line_start":17,"line_end":17,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6506}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645498,"byte_end":645508,"line_start":24,"line_end":24,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6509}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645639,"byte_end":645649,"line_start":31,"line_end":31,"column_start":54,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6512}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645788,"byte_end":645798,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6515}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645939,"byte_end":645949,"line_start":45,"line_end":45,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6518}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646593,"byte_end":646603,"line_start":76,"line_end":76,"column_start":39,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":6522},{"krate":0,"index":6523}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646749,"byte_end":646759,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":6526}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646822,"byte_end":646832,"line_start":89,"line_end":89,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6529}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646905,"byte_end":646915,"line_start":93,"line_end":93,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6532},{"krate":0,"index":6533},{"krate":0,"index":6534},{"krate":0,"index":6535},{"krate":0,"index":6536}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":647508,"byte_end":647518,"line_start":120,"line_end":120,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":6539},{"krate":0,"index":6540},{"krate":0,"index":6541},{"krate":0,"index":6542},{"krate":0,"index":6543},{"krate":0,"index":6544},{"krate":0,"index":6545},{"krate":0,"index":6546}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648413,"byte_end":648427,"line_start":165,"line_end":165,"column_start":49,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":6549}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648562,"byte_end":648576,"line_start":172,"line_end":172,"column_start":54,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":6552}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648723,"byte_end":648737,"line_start":179,"line_end":179,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6555},{"krate":0,"index":6556}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649195,"byte_end":649209,"line_start":200,"line_end":200,"column_start":50,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6559},{"krate":0,"index":6560}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649508,"byte_end":649522,"line_start":212,"line_end":212,"column_start":60,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":6563},{"krate":0,"index":6564}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649849,"byte_end":649863,"line_start":224,"line_end":224,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":6567},{"krate":0,"index":6568},{"krate":0,"index":6569},{"krate":0,"index":6570},{"krate":0,"index":6571},{"krate":0,"index":6572},{"krate":0,"index":6573},{"krate":0,"index":6574},{"krate":0,"index":6575},{"krate":0,"index":6576}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":650772,"byte_end":650786,"line_start":265,"line_end":265,"column_start":46,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581},{"krate":0,"index":6582}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":651286,"byte_end":651300,"line_start":292,"line_end":292,"column_start":44,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":6586},{"krate":0,"index":6587},{"krate":0,"index":6588}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652229,"byte_end":652239,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":6650},{"krate":0,"index":6651},{"krate":0,"index":6652},{"krate":0,"index":6653},{"krate":0,"index":6655},{"krate":0,"index":6656},{"krate":0,"index":6658}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655144,"byte_end":655154,"line_start":108,"line_end":108,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6661}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655259,"byte_end":655269,"line_start":115,"line_end":115,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":6664},{"krate":0,"index":6665}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655492,"byte_end":655500,"line_start":127,"line_end":127,"column_start":52,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":6668}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656052,"byte_end":656066,"line_start":151,"line_end":151,"column_start":20,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":6673},{"krate":0,"index":6674},{"krate":0,"index":6676},{"krate":0,"index":6677},{"krate":0,"index":6678},{"krate":0,"index":6679},{"krate":0,"index":6680},{"krate":0,"index":6681},{"krate":0,"index":6684},{"krate":0,"index":6687},{"krate":0,"index":6690},{"krate":0,"index":6693},{"krate":0,"index":6696},{"krate":0,"index":6699},{"krate":0,"index":6702},{"krate":0,"index":6705},{"krate":0,"index":6707},{"krate":0,"index":6709},{"krate":0,"index":6711},{"krate":0,"index":6713}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":678936,"byte_end":678950,"line_start":733,"line_end":733,"column_start":28,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":6719}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":679082,"byte_end":679090,"line_start":740,"line_end":740,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":6722}],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":681606,"byte_end":681616,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":6792},{"krate":0,"index":6793},{"krate":0,"index":6794}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":682147,"byte_end":682161,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":6798},{"krate":0,"index":6799},{"krate":0,"index":6800}],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":682718,"byte_end":682732,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":6804},{"krate":0,"index":6805},{"krate":0,"index":6806}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":683323,"byte_end":683337,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":6811},{"krate":0,"index":6812},{"krate":0,"index":6813}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":683930,"byte_end":683944,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":6818},{"krate":0,"index":6819},{"krate":0,"index":6820}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":684572,"byte_end":684586,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":6825},{"krate":0,"index":6826},{"krate":0,"index":6827}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":685197,"byte_end":685211,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"value":"","parent":null,"children":[{"krate":0,"index":6831},{"krate":0,"index":6832},{"krate":0,"index":6833}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686548,"byte_end":686555,"line_start":221,"line_end":221,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6836}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686702,"byte_end":686711,"line_start":228,"line_end":228,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6839}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686857,"byte_end":686871,"line_start":235,"line_end":235,"column_start":43,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":6842}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":687025,"byte_end":687032,"line_start":242,"line_end":242,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":6845}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":687189,"byte_end":687199,"line_start":249,"line_end":249,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":6848}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_coordinates.rs","byte_start":687473,"byte_end":687483,"line_start":10,"line_end":10,"column_start":30,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":6871},{"krate":0,"index":6872}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_coordinates.rs","byte_start":687651,"byte_end":687661,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":6875}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":689329,"byte_end":689339,"line_start":66,"line_end":66,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":6958},{"krate":0,"index":6959}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":689502,"byte_end":689512,"line_start":75,"line_end":75,"column_start":40,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":6962}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":702926,"byte_end":702936,"line_start":550,"line_end":550,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":6968},{"krate":0,"index":6969}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707109,"byte_end":707120,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7023},{"krate":0,"index":7024},{"krate":0,"index":7025},{"krate":0,"index":7026},{"krate":0,"index":7027},{"krate":0,"index":7028},{"krate":0,"index":7029},{"krate":0,"index":7030},{"krate":0,"index":7031},{"krate":0,"index":7032},{"krate":0,"index":7033},{"krate":0,"index":7034},{"krate":0,"index":7035},{"krate":0,"index":7036},{"krate":0,"index":7037},{"krate":0,"index":7038},{"krate":0,"index":7039},{"krate":0,"index":7040},{"krate":0,"index":7041}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717098,"byte_end":717109,"line_start":326,"line_end":326,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7044}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717273,"byte_end":717284,"line_start":332,"line_end":332,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7047},{"krate":0,"index":7048},{"krate":0,"index":7049}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717629,"byte_end":717640,"line_start":346,"line_end":346,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":7052},{"krate":0,"index":7053}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":718080,"byte_end":718091,"line_start":365,"line_end":365,"column_start":31,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":7056},{"krate":0,"index":7057}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719023,"byte_end":719034,"line_start":20,"line_end":20,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7140}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719169,"byte_end":719180,"line_start":27,"line_end":27,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7143}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719327,"byte_end":719338,"line_start":34,"line_end":34,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7146},{"krate":0,"index":7147}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719952,"byte_end":719963,"line_start":61,"line_end":61,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7151},{"krate":0,"index":7152}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":720303,"byte_end":720314,"line_start":75,"line_end":75,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7155},{"krate":0,"index":7156}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":720682,"byte_end":720693,"line_start":89,"line_end":89,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7159},{"krate":0,"index":7160},{"krate":0,"index":7161},{"krate":0,"index":7162},{"krate":0,"index":7163},{"krate":0,"index":7164},{"krate":0,"index":7165},{"krate":0,"index":7166},{"krate":0,"index":7167},{"krate":0,"index":7168}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":721643,"byte_end":721654,"line_start":132,"line_end":132,"column_start":46,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":7171},{"krate":0,"index":7172},{"krate":0,"index":7173},{"krate":0,"index":7174}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":722241,"byte_end":722252,"line_start":162,"line_end":162,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7178},{"krate":0,"index":7179},{"krate":0,"index":7180}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723089,"byte_end":723100,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":7233},{"krate":0,"index":7234},{"krate":0,"index":7235},{"krate":0,"index":7236},{"krate":0,"index":7237},{"krate":0,"index":7239},{"krate":0,"index":7240},{"krate":0,"index":7241},{"krate":0,"index":7242},{"krate":0,"index":7243},{"krate":0,"index":7244},{"krate":0,"index":7247},{"krate":0,"index":7250},{"krate":0,"index":7253}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":732290,"byte_end":732301,"line_start":271,"line_end":271,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":7258}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":732430,"byte_end":732438,"line_start":278,"line_end":278,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7261}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":733696,"byte_end":733707,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":7325},{"krate":0,"index":7326},{"krate":0,"index":7327}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":734246,"byte_end":734257,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":7331},{"krate":0,"index":7332},{"krate":0,"index":7333}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":734856,"byte_end":734867,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7338},{"krate":0,"index":7339},{"krate":0,"index":7340}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":735460,"byte_end":735471,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":7345},{"krate":0,"index":7346},{"krate":0,"index":7347}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":736099,"byte_end":736110,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7352},{"krate":0,"index":7353},{"krate":0,"index":7354}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":736721,"byte_end":736732,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"value":"","parent":null,"children":[{"krate":0,"index":7358},{"krate":0,"index":7359},{"krate":0,"index":7360}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737208,"byte_end":737217,"line_start":158,"line_end":158,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7363}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737360,"byte_end":737371,"line_start":165,"line_end":165,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":7366}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737522,"byte_end":737529,"line_start":172,"line_end":172,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7369}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737676,"byte_end":737683,"line_start":179,"line_end":179,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7372}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":738994,"byte_end":739005,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7437},{"krate":0,"index":7438}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":739459,"byte_end":739470,"line_start":65,"line_end":65,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7447},{"krate":0,"index":7448}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":739964,"byte_end":739975,"line_start":84,"line_end":84,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":7457},{"krate":0,"index":7458}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":740461,"byte_end":740472,"line_start":102,"line_end":102,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":7467},{"krate":0,"index":7468}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747136,"byte_end":747147,"line_start":303,"line_end":303,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7479}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747314,"byte_end":747325,"line_start":310,"line_end":310,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":7483}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747518,"byte_end":747529,"line_start":318,"line_end":318,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":7486}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747696,"byte_end":747707,"line_start":325,"line_end":325,"column_start":58,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":7490}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747899,"byte_end":747910,"line_start":333,"line_end":333,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7493}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748124,"byte_end":748135,"line_start":342,"line_end":342,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":7497}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748373,"byte_end":748384,"line_start":352,"line_end":352,"column_start":51,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":7500}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748598,"byte_end":748609,"line_start":361,"line_end":361,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":7504}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748846,"byte_end":748854,"line_start":371,"line_end":371,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7507}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749091,"byte_end":749099,"line_start":380,"line_end":380,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7511}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749360,"byte_end":749368,"line_start":390,"line_end":390,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":7514}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749605,"byte_end":749613,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7518}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750803,"byte_end":750814,"line_start":34,"line_end":34,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":7594}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":751028,"byte_end":751039,"line_start":44,"line_end":44,"column_start":38,"column_end":49},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":751156,"byte_end":751167,"line_start":50,"line_end":50,"column_start":39,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":7602}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752608,"byte_end":752619,"line_start":108,"line_end":108,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":7606},{"krate":0,"index":7607},{"krate":0,"index":7608},{"krate":0,"index":7609}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755582,"byte_end":755593,"line_start":195,"line_end":195,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7613}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756186,"byte_end":756197,"line_start":214,"line_end":214,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":7617}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756773,"byte_end":756784,"line_start":231,"line_end":231,"column_start":41,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756889,"byte_end":756900,"line_start":233,"line_end":233,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7624}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":757116,"byte_end":757127,"line_start":242,"line_end":242,"column_start":55,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":757538,"byte_end":757549,"line_start":260,"line_end":260,"column_start":57,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":7634},{"krate":0,"index":7635}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":758029,"byte_end":758040,"line_start":283,"line_end":283,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":7639},{"krate":0,"index":7640}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":758459,"byte_end":758470,"line_start":304,"line_end":304,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":7644}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759419,"byte_end":759430,"line_start":22,"line_end":22,"column_start":61,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":7725}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759622,"byte_end":759633,"line_start":31,"line_end":31,"column_start":68,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":7729},{"krate":0,"index":7730}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759925,"byte_end":759936,"line_start":45,"line_end":45,"column_start":66,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":7734}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":760643,"byte_end":760654,"line_start":74,"line_end":74,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":7739},{"krate":0,"index":7740}],"docs":"","sig":null,"attributes":[]},{"id":550,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":761005,"byte_end":761016,"line_start":88,"line_end":88,"column_start":74,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":7744},{"krate":0,"index":7745}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":761387,"byte_end":761398,"line_start":102,"line_end":102,"column_start":70,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":7749},{"krate":0,"index":7750},{"krate":0,"index":7751},{"krate":0,"index":7752},{"krate":0,"index":7753},{"krate":0,"index":7754},{"krate":0,"index":7755},{"krate":0,"index":7756},{"krate":0,"index":7757},{"krate":0,"index":7758}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":762355,"byte_end":762366,"line_start":145,"line_end":145,"column_start":60,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":7762},{"krate":0,"index":7763},{"krate":0,"index":7764},{"krate":0,"index":7765}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":763031,"byte_end":763042,"line_start":176,"line_end":176,"column_start":65,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":7770},{"krate":0,"index":7771},{"krate":0,"index":7772},{"krate":0,"index":7773}],"docs":"","sig":null,"attributes":[]},{"id":554,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764579,"byte_end":764590,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":7871}],"docs":"","sig":null,"attributes":[]},{"id":555,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765258,"byte_end":765269,"line_start":41,"line_end":41,"column_start":56,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":7875}],"docs":"","sig":null,"attributes":[]},{"id":556,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765453,"byte_end":765461,"line_start":50,"line_end":50,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":7879}],"docs":"","sig":null,"attributes":[]},{"id":557,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":768510,"byte_end":768521,"line_start":23,"line_end":23,"column_start":59,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":7959},{"krate":0,"index":7960},{"krate":0,"index":7961}],"docs":"","sig":null,"attributes":[]},{"id":558,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":769154,"byte_end":769165,"line_start":47,"line_end":47,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":7967},{"krate":0,"index":7968},{"krate":0,"index":7969}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":769792,"byte_end":769803,"line_start":70,"line_end":70,"column_start":64,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":7975},{"krate":0,"index":7976},{"krate":0,"index":7977}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":770487,"byte_end":770498,"line_start":93,"line_end":93,"column_start":54,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":7983},{"krate":0,"index":7984},{"krate":0,"index":7985}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":771306,"byte_end":771317,"line_start":120,"line_end":120,"column_start":62,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":7990},{"krate":0,"index":7991},{"krate":0,"index":7993}],"docs":"","sig":null,"attributes":[]},{"id":562,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":772456,"byte_end":772463,"line_start":156,"line_end":156,"column_start":70,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":7997}],"docs":"","sig":null,"attributes":[]},{"id":563,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":772755,"byte_end":772766,"line_start":167,"line_end":167,"column_start":53,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":8001}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783192,"byte_end":783200,"line_start":80,"line_end":80,"column_start":88,"column_end":96},"value":"","parent":null,"children":[{"krate":0,"index":8194}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783501,"byte_end":783509,"line_start":91,"line_end":91,"column_start":81,"column_end":89},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783667,"byte_end":783675,"line_start":98,"line_end":98,"column_start":76,"column_end":84},"value":"","parent":null,"children":[{"krate":0,"index":8204}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783911,"byte_end":783919,"line_start":107,"line_end":107,"column_start":58,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":8209},{"krate":0,"index":8210},{"krate":0,"index":8211},{"krate":0,"index":8212},{"krate":0,"index":8213},{"krate":0,"index":8214},{"krate":0,"index":8215},{"krate":0,"index":8216},{"krate":0,"index":8217},{"krate":0,"index":8218},{"krate":0,"index":8219}],"docs":"","sig":null,"attributes":[]},{"id":578,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793119,"byte_end":793127,"line_start":354,"line_end":354,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":8224}],"docs":"","sig":null,"attributes":[]},{"id":579,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794298,"byte_end":794306,"line_start":387,"line_end":387,"column_start":42,"column_end":50},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":580,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794449,"byte_end":794457,"line_start":394,"line_end":394,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8233}],"docs":"","sig":null,"attributes":[]},{"id":581,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794749,"byte_end":794757,"line_start":405,"line_end":405,"column_start":49,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":8238},{"krate":0,"index":8239},{"krate":0,"index":8240}],"docs":"","sig":null,"attributes":[]},{"id":582,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":795305,"byte_end":795313,"line_start":425,"line_end":425,"column_start":50,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":8245},{"krate":0,"index":8246}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":795983,"byte_end":795991,"line_start":452,"line_end":452,"column_start":46,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":8251},{"krate":0,"index":8252}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":796573,"byte_end":796581,"line_start":476,"line_end":476,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":8257}],"docs":"","sig":null,"attributes":[]},{"id":585,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":797623,"byte_end":797631,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":8342}],"docs":"","sig":null,"attributes":[]},{"id":586,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":797864,"byte_end":797872,"line_start":33,"line_end":33,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":8347},{"krate":0,"index":8348}],"docs":"","sig":null,"attributes":[]},{"id":587,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":798205,"byte_end":798213,"line_start":49,"line_end":49,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":8353}],"docs":"","sig":null,"attributes":[]},{"id":588,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799008,"byte_end":799016,"line_start":81,"line_end":81,"column_start":67,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":8359},{"krate":0,"index":8360}],"docs":"","sig":null,"attributes":[]},{"id":589,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799423,"byte_end":799431,"line_start":97,"line_end":97,"column_start":77,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":8365},{"krate":0,"index":8366}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799866,"byte_end":799874,"line_start":113,"line_end":113,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":8371},{"krate":0,"index":8372},{"krate":0,"index":8373},{"krate":0,"index":8374},{"krate":0,"index":8375},{"krate":0,"index":8376},{"krate":0,"index":8377},{"krate":0,"index":8378},{"krate":0,"index":8379},{"krate":0,"index":8380},{"krate":0,"index":8381}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":801332,"byte_end":801340,"line_start":171,"line_end":171,"column_start":63,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":8386},{"krate":0,"index":8387},{"krate":0,"index":8388},{"krate":0,"index":8389}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803604,"byte_end":803612,"line_start":22,"line_end":22,"column_start":62,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":8504},{"krate":0,"index":8505}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":805126,"byte_end":805134,"line_start":68,"line_end":68,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":8510}],"docs":"","sig":null,"attributes":[]},{"id":594,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":805368,"byte_end":805376,"line_start":78,"line_end":78,"column_start":71,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":8515}],"docs":"","sig":null,"attributes":[]},{"id":595,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806153,"byte_end":806161,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8520},{"krate":0,"index":8521},{"krate":0,"index":8522}],"docs":"","sig":null,"attributes":[]},{"id":596,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807213,"byte_end":807221,"line_start":146,"line_end":146,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":8525},{"krate":0,"index":8526},{"krate":0,"index":8527}],"docs":"","sig":null,"attributes":[]},{"id":597,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":818239,"byte_end":818247,"line_start":20,"line_end":20,"column_start":68,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":8597},{"krate":0,"index":8598},{"krate":0,"index":8599}],"docs":"","sig":null,"attributes":[]},{"id":598,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":819140,"byte_end":819148,"line_start":48,"line_end":48,"column_start":70,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":8606},{"krate":0,"index":8607},{"krate":0,"index":8608}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":819889,"byte_end":819897,"line_start":72,"line_end":72,"column_start":57,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":8615},{"krate":0,"index":8616},{"krate":0,"index":8617}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":821067,"byte_end":821075,"line_start":106,"line_end":106,"column_start":65,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":8623},{"krate":0,"index":8624},{"krate":0,"index":8627}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":822782,"byte_end":822789,"line_start":152,"line_end":152,"column_start":63,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":8632}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":840546,"byte_end":840556,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":8770}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":840853,"byte_end":840863,"line_start":83,"line_end":83,"column_start":81,"column_end":91},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841020,"byte_end":841030,"line_start":89,"line_end":89,"column_start":76,"column_end":86},"value":"","parent":null,"children":[{"krate":0,"index":8780}],"docs":"","sig":null,"attributes":[]},{"id":649,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841240,"byte_end":841250,"line_start":98,"line_end":98,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8785},{"krate":0,"index":8786},{"krate":0,"index":8787},{"krate":0,"index":8788},{"krate":0,"index":8789},{"krate":0,"index":8790},{"krate":0,"index":8791},{"krate":0,"index":8792},{"krate":0,"index":8793},{"krate":0,"index":8794},{"krate":0,"index":8795},{"krate":0,"index":8796},{"krate":0,"index":8797},{"krate":0,"index":8798},{"krate":0,"index":8799},{"krate":0,"index":8800},{"krate":0,"index":8801},{"krate":0,"index":8802},{"krate":0,"index":8803}],"docs":"","sig":null,"attributes":[]},{"id":650,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849369,"byte_end":849379,"line_start":328,"line_end":328,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":8808}],"docs":"","sig":null,"attributes":[]},{"id":651,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849995,"byte_end":850005,"line_start":349,"line_end":349,"column_start":42,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":652,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850147,"byte_end":850157,"line_start":355,"line_end":355,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8817}],"docs":"","sig":null,"attributes":[]},{"id":653,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850441,"byte_end":850451,"line_start":366,"line_end":366,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":8822},{"krate":0,"index":8823},{"krate":0,"index":8824}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850991,"byte_end":851001,"line_start":386,"line_end":386,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":8829},{"krate":0,"index":8830}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":851663,"byte_end":851673,"line_start":413,"line_end":413,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":8835},{"krate":0,"index":8836}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":852208,"byte_end":852218,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":8841}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853287,"byte_end":853297,"line_start":19,"line_end":19,"column_start":64,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":8917}],"docs":"","sig":null,"attributes":[]},{"id":658,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853530,"byte_end":853540,"line_start":30,"line_end":30,"column_start":71,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":8922},{"krate":0,"index":8923}],"docs":"","sig":null,"attributes":[]},{"id":659,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853873,"byte_end":853883,"line_start":46,"line_end":46,"column_start":69,"column_end":79},"value":"","parent":null,"children":[{"krate":0,"index":8928}],"docs":"","sig":null,"attributes":[]},{"id":660,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":854680,"byte_end":854690,"line_start":78,"line_end":78,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":8934},{"krate":0,"index":8935}],"docs":"","sig":null,"attributes":[]},{"id":661,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":855097,"byte_end":855107,"line_start":94,"line_end":94,"column_start":77,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":8940},{"krate":0,"index":8941}],"docs":"","sig":null,"attributes":[]},{"id":662,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":855542,"byte_end":855552,"line_start":110,"line_end":110,"column_start":73,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":8946},{"krate":0,"index":8947},{"krate":0,"index":8948},{"krate":0,"index":8949},{"krate":0,"index":8950},{"krate":0,"index":8951},{"krate":0,"index":8952},{"krate":0,"index":8953},{"krate":0,"index":8954},{"krate":0,"index":8955},{"krate":0,"index":8956}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":856986,"byte_end":856996,"line_start":167,"line_end":167,"column_start":67,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":8961},{"krate":0,"index":8962},{"krate":0,"index":8963},{"krate":0,"index":8964}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858572,"byte_end":858582,"line_start":22,"line_end":22,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9072}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859254,"byte_end":859264,"line_start":48,"line_end":48,"column_start":43,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":9077}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859541,"byte_end":859549,"line_start":60,"line_end":60,"column_start":73,"column_end":81},"value":"","parent":null,"children":[{"krate":0,"index":9082}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859976,"byte_end":859986,"line_start":77,"line_end":77,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":9089}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861523,"byte_end":861533,"line_start":130,"line_end":130,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9092}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862295,"byte_end":862305,"line_start":153,"line_end":153,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":9095}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":872037,"byte_end":872047,"line_start":19,"line_end":19,"column_start":70,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":9165},{"krate":0,"index":9166},{"krate":0,"index":9167}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":872953,"byte_end":872963,"line_start":47,"line_end":47,"column_start":57,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":9174},{"krate":0,"index":9175},{"krate":0,"index":9176}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":874123,"byte_end":874133,"line_start":81,"line_end":81,"column_start":65,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":9182},{"krate":0,"index":9183},{"krate":0,"index":9186}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":877515,"byte_end":877522,"line_start":166,"line_end":166,"column_start":65,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9191}],"docs":"","sig":null,"attributes":[]},{"id":720,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897630,"byte_end":897632,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":721,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898175,"byte_end":898183,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":9369}],"docs":"","sig":null,"attributes":[]},{"id":722,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898418,"byte_end":898429,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":9373}],"docs":"","sig":null,"attributes":[]},{"id":723,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898681,"byte_end":898688,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":9377},{"krate":0,"index":9378}],"docs":"","sig":null,"attributes":[]},{"id":724,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":899399,"byte_end":899400,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":9385}],"docs":"","sig":null,"attributes":[]},{"id":725,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900017,"byte_end":900018,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":726,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":901024,"byte_end":901033,"line_start":176,"line_end":176,"column_start":69,"column_end":78},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":727,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":901248,"byte_end":901257,"line_start":183,"line_end":183,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9397}],"docs":"","sig":null,"attributes":[]},{"id":728,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902467,"byte_end":902476,"line_start":218,"line_end":218,"column_start":65,"column_end":74},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":729,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902631,"byte_end":902640,"line_start":221,"line_end":221,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":9406}],"docs":"","sig":null,"attributes":[]},{"id":730,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902879,"byte_end":902888,"line_start":230,"line_end":230,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9411},{"krate":0,"index":9412},{"krate":0,"index":9413},{"krate":0,"index":9414},{"krate":0,"index":9415},{"krate":0,"index":9416},{"krate":0,"index":9418},{"krate":0,"index":9419},{"krate":0,"index":9420},{"krate":0,"index":9421},{"krate":0,"index":9422},{"krate":0,"index":9423}],"docs":"","sig":null,"attributes":[]},{"id":731,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910967,"byte_end":910976,"line_start":457,"line_end":457,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":9428},{"krate":0,"index":9429}],"docs":"","sig":null,"attributes":[]},{"id":732,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911794,"byte_end":911803,"line_start":484,"line_end":484,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9434},{"krate":0,"index":9435}],"docs":"","sig":null,"attributes":[]},{"id":733,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912685,"byte_end":912694,"line_start":508,"line_end":508,"column_start":39,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9439}],"docs":"","sig":null,"attributes":[]},{"id":734,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":913131,"byte_end":913140,"line_start":519,"line_end":519,"column_start":67,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":9444},{"krate":0,"index":9445},{"krate":0,"index":9446}],"docs":"","sig":null,"attributes":[]},{"id":735,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":913600,"byte_end":913609,"line_start":537,"line_end":537,"column_start":68,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":9451},{"krate":0,"index":9452}],"docs":"","sig":null,"attributes":[]},{"id":736,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":914142,"byte_end":914151,"line_start":560,"line_end":560,"column_start":64,"column_end":73},"value":"","parent":null,"children":[{"krate":0,"index":9457},{"krate":0,"index":9458}],"docs":"","sig":null,"attributes":[]},{"id":737,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":915372,"byte_end":915381,"line_start":18,"line_end":18,"column_start":71,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":9538}],"docs":"","sig":null,"attributes":[]},{"id":738,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":915644,"byte_end":915653,"line_start":29,"line_end":29,"column_start":78,"column_end":87},"value":"","parent":null,"children":[{"krate":0,"index":9543},{"krate":0,"index":9544}],"docs":"","sig":null,"attributes":[]},{"id":739,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":916042,"byte_end":916051,"line_start":45,"line_end":45,"column_start":76,"column_end":85},"value":"","parent":null,"children":[{"krate":0,"index":9549}],"docs":"","sig":null,"attributes":[]},{"id":740,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":917301,"byte_end":917310,"line_start":88,"line_end":88,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9556},{"krate":0,"index":9557}],"docs":"","sig":null,"attributes":[]},{"id":741,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":917851,"byte_end":917860,"line_start":108,"line_end":108,"column_start":73,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":9562},{"krate":0,"index":9563}],"docs":"","sig":null,"attributes":[]},{"id":742,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920357,"byte_end":920366,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":9635}],"docs":"","sig":null,"attributes":[]},{"id":743,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921465,"byte_end":921474,"line_start":48,"line_end":48,"column_start":61,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":9640}],"docs":"","sig":null,"attributes":[]},{"id":744,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":922002,"byte_end":922011,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":9688},{"krate":0,"index":9689},{"krate":0,"index":9690}],"docs":"","sig":null,"attributes":[]},{"id":745,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":922843,"byte_end":922852,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"value":"","parent":null,"children":[{"krate":0,"index":9696},{"krate":0,"index":9697},{"krate":0,"index":9698}],"docs":"","sig":null,"attributes":[]},{"id":746,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":923636,"byte_end":923643,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":9703}],"docs":"","sig":null,"attributes":[]},{"id":747,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_ops.rs","byte_start":925946,"byte_end":925955,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":9826},{"krate":0,"index":9827}],"docs":"","sig":null,"attributes":[]},{"id":748,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_ops.rs","byte_start":926311,"byte_end":926320,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":9831}],"docs":"","sig":null,"attributes":[]},{"id":809,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947821,"byte_end":947831,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":9898},{"krate":0,"index":9899},{"krate":0,"index":9900},{"krate":0,"index":9901},{"krate":0,"index":9905},{"krate":0,"index":9909},{"krate":0,"index":9914}],"docs":"","sig":null,"attributes":[]},{"id":810,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952211,"byte_end":952224,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":811,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952261,"byte_end":952274,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":9972}],"docs":"","sig":null,"attributes":[]},{"id":812,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952424,"byte_end":952437,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":9975}],"docs":"","sig":null,"attributes":[]},{"id":813,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952582,"byte_end":952595,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":9978}],"docs":"","sig":null,"attributes":[]},{"id":814,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953308,"byte_end":953321,"line_start":64,"line_end":64,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":9981},{"krate":0,"index":9982},{"krate":0,"index":9983},{"krate":0,"index":9984},{"krate":0,"index":9985},{"krate":0,"index":9986},{"krate":0,"index":9987},{"krate":0,"index":9988},{"krate":0,"index":9989},{"krate":0,"index":9990},{"krate":0,"index":9991},{"krate":0,"index":9992},{"krate":0,"index":9993},{"krate":0,"index":9994},{"krate":0,"index":9995},{"krate":0,"index":9996},{"krate":0,"index":9997},{"krate":0,"index":9998},{"krate":0,"index":9999},{"krate":0,"index":10001},{"krate":0,"index":10002},{"krate":0,"index":10003},{"krate":0,"index":10004},{"krate":0,"index":10005},{"krate":0,"index":10006},{"krate":0,"index":10007},{"krate":0,"index":10008},{"krate":0,"index":10009}],"docs":"","sig":null,"attributes":[]},{"id":815,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":977373,"byte_end":977381,"line_start":681,"line_end":681,"column_start":55,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":10012}],"docs":"","sig":null,"attributes":[]},{"id":816,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":978424,"byte_end":978431,"line_start":712,"line_end":712,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10019}],"docs":"","sig":null,"attributes":[]},{"id":817,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979174,"byte_end":979186,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":818,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979223,"byte_end":979235,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":10076}],"docs":"","sig":null,"attributes":[]},{"id":819,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979385,"byte_end":979397,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10079}],"docs":"","sig":null,"attributes":[]},{"id":820,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979542,"byte_end":979554,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":10082}],"docs":"","sig":null,"attributes":[]},{"id":821,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":980265,"byte_end":980277,"line_start":65,"line_end":65,"column_start":20,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":10085},{"krate":0,"index":10086},{"krate":0,"index":10087},{"krate":0,"index":10088},{"krate":0,"index":10089},{"krate":0,"index":10090},{"krate":0,"index":10091},{"krate":0,"index":10092},{"krate":0,"index":10093},{"krate":0,"index":10094},{"krate":0,"index":10095},{"krate":0,"index":10096},{"krate":0,"index":10097},{"krate":0,"index":10098},{"krate":0,"index":10099},{"krate":0,"index":10100},{"krate":0,"index":10102},{"krate":0,"index":10103},{"krate":0,"index":10104},{"krate":0,"index":10105},{"krate":0,"index":10106}],"docs":"","sig":null,"attributes":[]},{"id":822,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986903,"byte_end":986911,"line_start":264,"line_end":264,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":10109}],"docs":"","sig":null,"attributes":[]},{"id":823,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":987699,"byte_end":987706,"line_start":287,"line_end":287,"column_start":46,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":10116}],"docs":"","sig":null,"attributes":[]},{"id":824,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993243,"byte_end":993253,"line_start":57,"line_end":57,"column_start":54,"column_end":64},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":825,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993610,"byte_end":993620,"line_start":68,"line_end":68,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":10241},{"krate":0,"index":10242},{"krate":0,"index":10243},{"krate":0,"index":10244},{"krate":0,"index":10245},{"krate":0,"index":10248},{"krate":0,"index":10249},{"krate":0,"index":10250},{"krate":0,"index":10252},{"krate":0,"index":10254}],"docs":"","sig":null,"attributes":[]},{"id":826,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1004119,"byte_end":1004125,"line_start":358,"line_end":358,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10260}],"docs":"","sig":null,"attributes":[]},{"id":827,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005577,"byte_end":1005585,"line_start":35,"line_end":35,"column_start":40,"column_end":48},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":828,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005711,"byte_end":1005719,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10314},{"krate":0,"index":10315},{"krate":0,"index":10316},{"krate":0,"index":10317},{"krate":0,"index":10318},{"krate":0,"index":10319},{"krate":0,"index":10323},{"krate":0,"index":10327}],"docs":"","sig":null,"attributes":[]},{"id":829,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009703,"byte_end":1009715,"line_start":151,"line_end":151,"column_start":64,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":10332}],"docs":"","sig":null,"attributes":[]},{"id":830,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010407,"byte_end":1010419,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"value":"","parent":null,"children":[{"krate":0,"index":10360}],"docs":"","sig":null,"attributes":[]},{"id":831,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1013764,"byte_end":1013773,"line_start":43,"line_end":43,"column_start":54,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":832,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014003,"byte_end":1014012,"line_start":50,"line_end":50,"column_start":45,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":10419},{"krate":0,"index":10420},{"krate":0,"index":10421},{"krate":0,"index":10422},{"krate":0,"index":10423},{"krate":0,"index":10424},{"krate":0,"index":10425}],"docs":"","sig":null,"attributes":[]},{"id":833,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017426,"byte_end":1017435,"line_start":159,"line_end":159,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":10429},{"krate":0,"index":10433},{"krate":0,"index":10437},{"krate":0,"index":10438},{"krate":0,"index":10439}],"docs":"","sig":null,"attributes":[]},{"id":834,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020686,"byte_end":1020692,"line_start":264,"line_end":264,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10445}],"docs":"","sig":null,"attributes":[]},{"id":835,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021519,"byte_end":1021533,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10487},{"krate":0,"index":10488},{"krate":0,"index":10489},{"krate":0,"index":10490},{"krate":0,"index":10491},{"krate":0,"index":10493},{"krate":0,"index":10495},{"krate":0,"index":10496},{"krate":0,"index":10497},{"krate":0,"index":10498},{"krate":0,"index":10502}],"docs":"","sig":null,"attributes":[]},{"id":836,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027454,"byte_end":1027464,"line_start":40,"line_end":40,"column_start":47,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":837,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027654,"byte_end":1027664,"line_start":47,"line_end":47,"column_start":38,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":10551},{"krate":0,"index":10552},{"krate":0,"index":10553},{"krate":0,"index":10554},{"krate":0,"index":10556},{"krate":0,"index":10558},{"krate":0,"index":10559}],"docs":"","sig":null,"attributes":[]},{"id":838,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030720,"byte_end":1030732,"line_start":136,"line_end":136,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":10564}],"docs":"","sig":null,"attributes":[]},{"id":839,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1035946,"byte_end":1035958,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":10656}],"docs":"","sig":null,"attributes":[]},{"id":840,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036329,"byte_end":1036341,"line_start":24,"line_end":24,"column_start":55,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":10661}],"docs":"","sig":null,"attributes":[]},{"id":841,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045067,"byte_end":1045069,"line_start":42,"line_end":42,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":842,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1046407,"byte_end":1046409,"line_start":89,"line_end":89,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10739},{"krate":0,"index":10740},{"krate":0,"index":10741},{"krate":0,"index":10742},{"krate":0,"index":10743},{"krate":0,"index":10744},{"krate":0,"index":10745},{"krate":0,"index":10746}],"docs":"","sig":null,"attributes":[]},{"id":843,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050115,"byte_end":1050117,"line_start":200,"line_end":200,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10750},{"krate":0,"index":10754},{"krate":0,"index":10758},{"krate":0,"index":10759},{"krate":0,"index":10761},{"krate":0,"index":10762}],"docs":"","sig":null,"attributes":[]},{"id":844,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1055417,"byte_end":1055423,"line_start":371,"line_end":371,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10778}],"docs":"","sig":null,"attributes":[]},{"id":845,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056758,"byte_end":1056777,"line_start":38,"line_end":38,"column_start":23,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":846,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056898,"byte_end":1056917,"line_start":44,"line_end":44,"column_start":18,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":10822}],"docs":"","sig":null,"attributes":[]},{"id":847,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057208,"byte_end":1057227,"line_start":55,"line_end":55,"column_start":6,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":10824}],"docs":"","sig":null,"attributes":[]},{"id":848,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057505,"byte_end":1057524,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":10827},{"krate":0,"index":10828},{"krate":0,"index":10829},{"krate":0,"index":10834},{"krate":0,"index":10839},{"krate":0,"index":10844},{"krate":0,"index":10849},{"krate":0,"index":10850}],"docs":"","sig":null,"attributes":[]},{"id":849,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061655,"byte_end":1061657,"line_start":43,"line_end":43,"column_start":54,"column_end":56},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":850,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061865,"byte_end":1061867,"line_start":50,"line_end":50,"column_start":45,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":10926},{"krate":0,"index":10927},{"krate":0,"index":10929},{"krate":0,"index":10931},{"krate":0,"index":10932},{"krate":0,"index":10933},{"krate":0,"index":10934}],"docs":"","sig":null,"attributes":[]},{"id":851,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065853,"byte_end":1065855,"line_start":162,"line_end":162,"column_start":49,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":10941},{"krate":0,"index":10945},{"krate":0,"index":10949},{"krate":0,"index":10953},{"krate":0,"index":10954}],"docs":"","sig":null,"attributes":[]},{"id":852,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1069712,"byte_end":1069718,"line_start":294,"line_end":294,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":10960}],"docs":"","sig":null,"attributes":[]},{"id":853,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071270,"byte_end":1071275,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":854,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071389,"byte_end":1071394,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":11046},{"krate":0,"index":11047},{"krate":0,"index":11049},{"krate":0,"index":11050},{"krate":0,"index":11051},{"krate":0,"index":11052},{"krate":0,"index":11053},{"krate":0,"index":11054},{"krate":0,"index":11055}],"docs":"","sig":null,"attributes":[]},{"id":855,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1085956,"byte_end":1085968,"line_start":490,"line_end":490,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11070},{"krate":0,"index":11071},{"krate":0,"index":11072},{"krate":0,"index":11073}],"docs":"","sig":null,"attributes":[]},{"id":856,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089332,"byte_end":1089344,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":11125},{"krate":0,"index":11129},{"krate":0,"index":11133},{"krate":0,"index":11137},{"krate":0,"index":11140},{"krate":0,"index":11144},{"krate":0,"index":11148},{"krate":0,"index":11151},{"krate":0,"index":11155},{"krate":0,"index":11159},{"krate":0,"index":11165},{"krate":0,"index":11171},{"krate":0,"index":11175},{"krate":0,"index":11179},{"krate":0,"index":11185},{"krate":0,"index":11191},{"krate":0,"index":11196}],"docs":"","sig":null,"attributes":[]},{"id":857,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103955,"byte_end":1103958,"line_start":56,"line_end":56,"column_start":54,"column_end":57},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":858,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1104314,"byte_end":1104317,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":11290},{"krate":0,"index":11291},{"krate":0,"index":11294},{"krate":0,"index":11295},{"krate":0,"index":11296},{"krate":0,"index":11297},{"krate":0,"index":11299},{"krate":0,"index":11300},{"krate":0,"index":11302}],"docs":"","sig":null,"attributes":[]},{"id":859,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1122461,"byte_end":1122467,"line_start":549,"line_end":549,"column_start":66,"column_end":72},"value":"","parent":null,"children":[{"krate":0,"index":11311},{"krate":0,"index":11312},{"krate":0,"index":11313},{"krate":0,"index":11314},{"krate":0,"index":11315}],"docs":"","sig":null,"attributes":[]},{"id":860,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127899,"byte_end":1127913,"line_start":47,"line_end":47,"column_start":40,"column_end":54},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":861,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128092,"byte_end":1128106,"line_start":54,"line_end":54,"column_start":31,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":11381},{"krate":0,"index":11382},{"krate":0,"index":11384},{"krate":0,"index":11385},{"krate":0,"index":11386}],"docs":"","sig":null,"attributes":[]},{"id":862,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136243,"byte_end":1136255,"line_start":307,"line_end":307,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":11393},{"krate":0,"index":11394},{"krate":0,"index":11395}],"docs":"","sig":null,"attributes":[]},{"id":863,"kind":"Direct","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141195,"byte_end":1141215,"line_start":40,"line_end":40,"column_start":47,"column_end":67},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":864,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141405,"byte_end":1141425,"line_start":47,"line_end":47,"column_start":38,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":11441},{"krate":0,"index":11442},{"krate":0,"index":11443},{"krate":0,"index":11444},{"krate":0,"index":11445},{"krate":0,"index":11447},{"krate":0,"index":11448},{"krate":0,"index":11449}],"docs":"","sig":null,"attributes":[]},{"id":865,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145153,"byte_end":1145165,"line_start":148,"line_end":148,"column_start":59,"column_end":71},"value":"","parent":null,"children":[{"krate":0,"index":11454}],"docs":"","sig":null,"attributes":[]},{"id":866,"kind":"Inherent","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145846,"byte_end":1145852,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":11504},{"krate":0,"index":11507},{"krate":0,"index":11510}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4343,"byte_end":4347,"line_start":134,"line_end":134,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20237,"byte_end":20246,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":14}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20266,"byte_end":20276,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":394}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20286,"byte_end":20297,"line_start":6,"line_end":6,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":444}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20307,"byte_end":20324,"line_start":7,"line_end":7,"column_start":9,"column_end":26},"ref_id":{"krate":0,"index":490}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20334,"byte_end":20343,"line_start":8,"line_end":8,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":605}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20353,"byte_end":20357,"line_start":9,"line_end":9,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":770}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20376,"byte_end":20383,"line_start":11,"line_end":11,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":1299}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20520,"byte_end":20528,"line_start":21,"line_end":21,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":3111}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/mod.rs","byte_start":20762,"byte_end":20768,"line_start":36,"line_end":36,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":4899}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4398,"byte_end":4406,"line_start":137,"line_end":137,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":4929}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/lib.rs","byte_start":4451,"byte_end":4457,"line_start":140,"line_end":140,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10138}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":987891,"byte_end":987900,"line_start":3,"line_end":3,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":10139}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":987974,"byte_end":987980,"line_start":8,"line_end":8,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":10446}},{"kind":"Mod","span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/mod.rs","byte_start":988006,"byte_end":988017,"line_start":10,"line_end":10,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":10565}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21902,"byte_end":21905,"line_start":19,"line_end":19,"column_start":54,"column_end":57},"kind":"SuperTrait","from":{"krate":2,"index":3516},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":21908,"byte_end":21913,"line_start":19,"line_end":19,"column_start":60,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22666,"byte_end":22675,"line_start":37,"line_end":37,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":22695,"byte_end":22704,"line_start":37,"line_end":37,"column_start":34,"column_end":43},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23898,"byte_end":23907,"line_start":62,"line_end":62,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":23921,"byte_end":23930,"line_start":62,"line_end":62,"column_start":28,"column_end":37},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24195,"byte_end":24211,"line_start":73,"line_end":73,"column_start":67,"column_end":83},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24586,"byte_end":24595,"line_start":87,"line_end":87,"column_start":5,"column_end":14},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24605,"byte_end":24614,"line_start":87,"line_end":87,"column_start":24,"column_end":33},"kind":"SuperTrait","from":{"krate":0,"index":45},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24640,"byte_end":24658,"line_start":87,"line_end":87,"column_start":59,"column_end":77},"kind":"SuperTrait","from":{"krate":0,"index":66},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/allocator.rs","byte_start":24833,"byte_end":24849,"line_start":96,"line_end":96,"column_start":57,"column_end":73},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":78}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":25696,"byte_end":25702,"line_start":18,"line_end":18,"column_start":49,"column_end":55},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":26672,"byte_end":26678,"line_start":51,"line_end":51,"column_start":56,"column_end":62},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":30409,"byte_end":30415,"line_start":196,"line_end":196,"column_start":60,"column_end":66},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":31625,"byte_end":31631,"line_start":233,"line_end":233,"column_start":76,"column_end":82},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":32572,"byte_end":32578,"line_start":266,"line_end":266,"column_start":46,"column_end":52},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":40956,"byte_end":40962,"line_start":490,"line_end":490,"column_start":20,"column_end":26},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":53408,"byte_end":53414,"line_start":864,"line_end":864,"column_start":53,"column_end":59},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":66483,"byte_end":66489,"line_start":1227,"line_end":1227,"column_start":53,"column_end":59},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/blas.rs","byte_start":71752,"byte_end":71764,"line_start":1374,"line_end":1374,"column_start":44,"column_end":56},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79763,"byte_end":79768,"line_start":9,"line_end":9,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":417},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":79858,"byte_end":79873,"line_start":11,"line_end":11,"column_start":78,"column_end":93},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":407}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80180,"byte_end":80195,"line_start":21,"line_end":21,"column_start":30,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":417}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80269,"byte_end":80284,"line_start":25,"line_end":25,"column_start":40,"column_end":55},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":417}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":80358,"byte_end":80373,"line_start":29,"line_end":29,"column_start":40,"column_end":55},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":417}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81726,"byte_end":81742,"line_start":71,"line_end":71,"column_start":5,"column_end":21},"kind":"SuperTrait","from":{"krate":0,"index":11698},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81753,"byte_end":81772,"line_start":71,"line_end":71,"column_start":32,"column_end":51},"kind":"SuperTrait","from":{"krate":0,"index":11711},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":81972,"byte_end":81987,"line_start":78,"line_end":78,"column_start":38,"column_end":53},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":82069,"byte_end":82084,"line_start":82,"line_end":82,"column_start":48,"column_end":63},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/constraint.rs","byte_start":82166,"byte_end":82181,"line_start":86,"line_end":86,"column_start":48,"column_end":63},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":405},"to":{"krate":0,"index":431}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":90368,"byte_end":90384,"line_start":37,"line_end":37,"column_start":38,"column_end":54},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":91364,"byte_end":91380,"line_start":79,"line_end":79,"column_start":54,"column_end":70},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":92308,"byte_end":92324,"line_start":110,"line_end":110,"column_start":58,"column_end":74},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":45}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":93271,"byte_end":93287,"line_start":145,"line_end":145,"column_start":84,"column_end":100},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":94180,"byte_end":94196,"line_start":176,"line_end":176,"column_start":83,"column_end":99},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":95043,"byte_end":95059,"line_start":205,"line_end":205,"column_start":83,"column_end":99},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":95939,"byte_end":95955,"line_start":235,"line_end":235,"column_start":9,"column_end":25},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":96386,"byte_end":96402,"line_start":251,"line_end":251,"column_start":9,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":96833,"byte_end":96849,"line_start":267,"line_end":267,"column_start":9,"column_end":25},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/default_allocator.rs","byte_start":97284,"byte_end":97300,"line_start":283,"line_end":283,"column_start":9,"column_end":25},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":542},"to":{"krate":0,"index":53}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98144,"byte_end":98151,"line_start":22,"line_end":22,"column_start":6,"column_end":13},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":13273},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98939,"byte_end":98946,"line_start":51,"line_end":51,"column_start":20,"column_end":27},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":13273},"to":{"krate":0,"index":677}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":98974,"byte_end":98981,"line_start":52,"line_end":52,"column_start":25,"column_end":32},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":13273},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99164,"byte_end":99167,"line_start":56,"line_end":56,"column_start":16,"column_end":19},"kind":"SuperTrait","from":{"krate":2,"index":3516},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99170,"byte_end":99175,"line_start":56,"line_end":56,"column_start":22,"column_end":27},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99178,"byte_end":99182,"line_start":56,"line_end":56,"column_start":30,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99185,"byte_end":99194,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99197,"byte_end":99201,"line_start":56,"line_end":56,"column_start":49,"column_end":53},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99204,"byte_end":99208,"line_start":56,"line_end":56,"column_start":56,"column_end":60},"kind":"SuperTrait","from":{"krate":2,"index":2865},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":99846,"byte_end":99853,"line_start":75,"line_end":75,"column_start":14,"column_end":21},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":13273},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":100108,"byte_end":100115,"line_start":92,"line_end":92,"column_start":21,"column_end":28},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":13273},"to":{"krate":2,"index":2920}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":100264,"byte_end":100271,"line_start":101,"line_end":101,"column_start":21,"column_end":28},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":13273},"to":{"krate":2,"index":2925}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":102873,"byte_end":102876,"line_start":189,"line_end":189,"column_start":20,"column_end":23},"kind":"SuperTrait","from":{"krate":0,"index":681},"to":{"krate":0,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103206,"byte_end":103211,"line_start":204,"line_end":204,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103214,"byte_end":103217,"line_start":204,"line_end":204,"column_start":29,"column_end":32},"kind":"SuperTrait","from":{"krate":2,"index":3516},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103220,"byte_end":103228,"line_start":204,"line_end":204,"column_start":35,"column_end":43},"kind":"SuperTrait","from":{"krate":22,"index":716},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103473,"byte_end":103475,"line_start":213,"line_end":213,"column_start":14,"column_end":16},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":13479},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103761,"byte_end":103763,"line_start":231,"line_end":231,"column_start":18,"column_end":20},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":13479},"to":{"krate":0,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":103882,"byte_end":103884,"line_start":240,"line_end":240,"column_start":28,"column_end":30},"kind":{"Impl":{"id":36}},"from":{"krate":22,"index":2786},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":106263,"byte_end":106267,"line_start":307,"line_end":307,"column_start":20,"column_end":24},"kind":{"Impl":{"id":37}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":106830,"byte_end":106834,"line_start":320,"line_end":320,"column_start":15,"column_end":19},"kind":{"Impl":{"id":38}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":107696,"byte_end":107700,"line_start":347,"line_end":347,"column_start":19,"column_end":23},"kind":{"Impl":{"id":39}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108344,"byte_end":108348,"line_start":366,"line_end":366,"column_start":9,"column_end":13},"kind":{"Impl":{"id":40}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108528,"byte_end":108532,"line_start":371,"line_end":371,"column_start":9,"column_end":13},"kind":{"Impl":{"id":41}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":702}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":108667,"byte_end":108671,"line_start":377,"line_end":377,"column_start":9,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":681}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":109099,"byte_end":109103,"line_start":397,"line_end":397,"column_start":9,"column_end":13},"kind":{"Impl":{"id":43}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/dimension.rs","byte_start":109315,"byte_end":109319,"line_start":408,"line_end":408,"column_start":9,"column_end":13},"kind":{"Impl":{"id":44}},"from":{"krate":22,"index":6663},"to":{"krate":0,"index":678}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":113193,"byte_end":113200,"line_start":113,"line_end":113,"column_start":63,"column_end":70},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":16869},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":113418,"byte_end":113425,"line_start":122,"line_end":122,"column_start":76,"column_end":83},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":16869},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114085,"byte_end":114092,"line_start":147,"line_end":147,"column_start":85,"column_end":92},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":16869},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114506,"byte_end":114516,"line_start":162,"line_end":162,"column_start":66,"column_end":76},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":829},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":114887,"byte_end":114897,"line_start":179,"line_end":179,"column_start":79,"column_end":89},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115565,"byte_end":115575,"line_start":204,"line_end":204,"column_start":88,"column_end":98},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":829},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":115970,"byte_end":115980,"line_start":224,"line_end":224,"column_start":63,"column_end":73},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":16884},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":116201,"byte_end":116211,"line_start":233,"line_end":233,"column_start":76,"column_end":86},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":16884},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":116874,"byte_end":116884,"line_start":258,"line_end":258,"column_start":85,"column_end":95},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":16884},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":117304,"byte_end":117317,"line_start":273,"line_end":273,"column_start":66,"column_end":79},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":887},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":117691,"byte_end":117704,"line_start":290,"line_end":290,"column_start":79,"column_end":92},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":7310}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/iter.rs","byte_start":118375,"byte_end":118388,"line_start":315,"line_end":315,"column_start":88,"column_end":101},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":887},"to":{"krate":2,"index":7199}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":119315,"byte_end":119321,"line_start":23,"line_end":23,"column_start":71,"column_end":77},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":119550,"byte_end":119556,"line_start":33,"line_end":33,"column_start":54,"column_end":60},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120021,"byte_end":120027,"line_start":53,"line_end":53,"column_start":77,"column_end":83},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120242,"byte_end":120248,"line_start":61,"line_end":61,"column_start":57,"column_end":63},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":120657,"byte_end":120663,"line_start":83,"line_end":83,"column_start":36,"column_end":42},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":121265,"byte_end":121271,"line_start":113,"line_end":113,"column_start":28,"column_end":34},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":132899,"byte_end":132907,"line_start":377,"line_end":377,"column_start":47,"column_end":55},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7106}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":133174,"byte_end":133182,"line_start":387,"line_end":387,"column_start":31,"column_end":39},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7106}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":134251,"byte_end":134259,"line_start":417,"line_end":417,"column_start":74,"column_end":82},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7106}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":134563,"byte_end":134571,"line_start":427,"line_end":427,"column_start":64,"column_end":72},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1421},"to":{"krate":2,"index":7106}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":140082,"byte_end":140088,"line_start":600,"line_end":600,"column_start":9,"column_end":15},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":140555,"byte_end":140561,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":141159,"byte_end":141165,"line_start":636,"line_end":636,"column_start":66,"column_end":72},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":141652,"byte_end":141658,"line_start":653,"line_end":653,"column_start":74,"column_end":80},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":142212,"byte_end":142218,"line_start":672,"line_end":672,"column_start":31,"column_end":37},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147393,"byte_end":147399,"line_start":829,"line_end":829,"column_start":66,"column_end":72},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":147912,"byte_end":147919,"line_start":849,"line_end":849,"column_start":39,"column_end":46},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":7110}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":148227,"byte_end":148234,"line_start":859,"line_end":859,"column_start":62,"column_end":69},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":7110}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/ops.rs","byte_start":148538,"byte_end":148544,"line_start":869,"line_end":869,"column_start":54,"column_end":60},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153370,"byte_end":153375,"line_start":39,"line_end":39,"column_start":59,"column_end":64},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":1347}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":153378,"byte_end":153383,"line_start":39,"line_end":39,"column_start":67,"column_end":72},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":1347}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":156577,"byte_end":156584,"line_start":120,"line_end":120,"column_start":62,"column_end":69},"kind":"SuperTrait","from":{"krate":0,"index":1347},"to":{"krate":0,"index":1365}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":158949,"byte_end":158956,"line_start":179,"line_end":179,"column_start":5,"column_end":12},"kind":"SuperTrait","from":{"krate":0,"index":1347},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159368,"byte_end":159385,"line_start":189,"line_end":189,"column_start":5,"column_end":22},"kind":"SuperTrait","from":{"krate":0,"index":1377},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/storage.rs","byte_start":159397,"byte_end":159407,"line_start":189,"line_end":189,"column_start":34,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":1365},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":186292,"byte_end":186299,"line_start":24,"line_end":24,"column_start":21,"column_end":28},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187546,"byte_end":187553,"line_start":68,"line_end":68,"column_start":20,"column_end":27},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":1434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":187776,"byte_end":187783,"line_start":76,"line_end":76,"column_start":20,"column_end":27},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":1436},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":191086,"byte_end":191098,"line_start":156,"line_end":156,"column_start":57,"column_end":69},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":193787,"byte_end":193799,"line_start":243,"line_end":243,"column_start":60,"column_end":72},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":196663,"byte_end":196675,"line_start":324,"line_end":324,"column_start":60,"column_end":72},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/cg.rs","byte_start":198260,"byte_end":198267,"line_start":368,"line_end":368,"column_start":88,"column_end":95},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1425},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/componentwise.rs","byte_start":199409,"byte_end":199415,"line_start":17,"line_end":17,"column_start":54,"column_end":60},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":207839,"byte_end":207847,"line_start":30,"line_end":30,"column_start":33,"column_end":41},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":217047,"byte_end":217054,"line_start":287,"line_end":287,"column_start":17,"column_end":24},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":236540,"byte_end":236548,"line_start":722,"line_end":722,"column_start":42,"column_end":50},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1421},"to":{"krate":20,"index":497}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":236849,"byte_end":236856,"line_start":738,"line_end":738,"column_start":29,"column_end":36},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":1425},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":237080,"byte_end":237088,"line_start":749,"line_end":749,"column_start":45,"column_end":53},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1421},"to":{"krate":20,"index":230}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":237429,"byte_end":237437,"line_start":765,"line_end":765,"column_start":69,"column_end":77},"kind":{"Impl":{"id":113}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":238503,"byte_end":238511,"line_start":800,"line_end":800,"column_start":70,"column_end":78},"kind":{"Impl":{"id":114}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction.rs","byte_start":246222,"byte_end":246229,"line_start":991,"line_end":991,"column_start":21,"column_end":28},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1504},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":249886,"byte_end":249899,"line_start":12,"line_end":12,"column_start":5,"column_end":18},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":1569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":251911,"byte_end":251927,"line_start":65,"line_end":65,"column_start":5,"column_end":21},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":254870,"byte_end":254883,"line_start":136,"line_end":136,"column_start":37,"column_end":50},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1569},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/construction_slice.rs","byte_start":256038,"byte_end":256054,"line_start":162,"line_end":162,"column_start":37,"column_end":53},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1868},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":263881,"byte_end":263889,"line_start":26,"line_end":26,"column_start":65,"column_end":73},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":274448,"byte_end":274454,"line_start":341,"line_end":341,"column_start":9,"column_end":15},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":274920,"byte_end":274926,"line_start":358,"line_end":358,"column_start":9,"column_end":15},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":275313,"byte_end":275319,"line_start":372,"line_end":372,"column_start":9,"column_end":15},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":275662,"byte_end":275668,"line_start":385,"line_end":385,"column_start":9,"column_end":15},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":276140,"byte_end":276146,"line_start":402,"line_end":402,"column_start":9,"column_end":15},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/conversion.rs","byte_start":276539,"byte_end":276545,"line_start":416,"line_end":416,"column_start":9,"column_end":15},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":277597,"byte_end":277603,"line_start":21,"line_end":21,"column_start":61,"column_end":67},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":280205,"byte_end":280211,"line_start":95,"line_end":95,"column_start":57,"column_end":63},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":285779,"byte_end":285785,"line_start":256,"line_end":256,"column_start":49,"column_end":55},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":286992,"byte_end":286998,"line_start":294,"line_end":294,"column_start":54,"column_end":60},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304145,"byte_end":304152,"line_start":800,"line_end":800,"column_start":17,"column_end":24},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1428},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":304932,"byte_end":304940,"line_start":817,"line_end":817,"column_start":25,"column_end":33},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":305886,"byte_end":305894,"line_start":838,"line_end":838,"column_start":25,"column_end":33},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1421},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":308910,"byte_end":308916,"line_start":939,"line_end":939,"column_start":29,"column_end":35},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":310426,"byte_end":310432,"line_start":987,"line_end":987,"column_start":26,"column_end":32},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/edition.rs","byte_start":311044,"byte_end":311050,"line_start":1008,"line_end":1008,"column_start":53,"column_end":59},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":314347,"byte_end":314352,"line_start":50,"line_end":50,"column_start":35,"column_end":40},"kind":{"Impl":{"id":138}},"from":{"krate":2,"index":38528},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":315423,"byte_end":315432,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"kind":{"Impl":{"id":139}},"from":{"krate":2,"index":38553},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":316385,"byte_end":316394,"line_start":113,"line_end":113,"column_start":43,"column_end":52},"kind":{"Impl":{"id":140}},"from":{"krate":2,"index":38553},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":316921,"byte_end":316930,"line_start":140,"line_end":140,"column_start":35,"column_end":44},"kind":{"Impl":{"id":141}},"from":{"krate":2,"index":38512},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":317431,"byte_end":317445,"line_start":166,"line_end":166,"column_start":35,"column_end":49},"kind":{"Impl":{"id":142}},"from":{"krate":2,"index":38597},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":318841,"byte_end":318848,"line_start":205,"line_end":205,"column_start":35,"column_end":42},"kind":{"Impl":{"id":143}},"from":{"krate":2,"index":38574},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":319753,"byte_end":319769,"line_start":237,"line_end":237,"column_start":35,"column_end":51},"kind":{"Impl":{"id":144}},"from":{"krate":2,"index":38620},"to":{"krate":0,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":320775,"byte_end":320780,"line_start":270,"line_end":270,"column_start":76,"column_end":81},"kind":"SuperTrait","from":{"krate":2,"index":2858},"to":{"krate":0,"index":3208}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":321985,"byte_end":321996,"line_start":306,"line_end":306,"column_start":82,"column_end":93},"kind":"SuperTrait","from":{"krate":0,"index":3208},"to":{"krate":0,"index":3219}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/indexing.rs","byte_start":325629,"byte_end":325635,"line_start":435,"line_end":435,"column_start":54,"column_end":60},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":338088,"byte_end":338094,"line_start":84,"line_end":84,"column_start":63,"column_end":69},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339476,"byte_end":339482,"line_start":139,"line_end":139,"column_start":36,"column_end":42},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":339884,"byte_end":339890,"line_start":151,"line_end":151,"column_start":54,"column_end":60},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":354289,"byte_end":354295,"line_start":626,"line_end":626,"column_start":57,"column_end":63},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362060,"byte_end":362066,"line_start":862,"line_end":862,"column_start":43,"column_end":49},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362447,"byte_end":362453,"line_start":872,"line_end":872,"column_start":46,"column_end":52},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":362876,"byte_end":362882,"line_start":882,"line_end":882,"column_start":64,"column_end":70},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363141,"byte_end":363147,"line_start":890,"line_end":890,"column_start":67,"column_end":73},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363412,"byte_end":363418,"line_start":898,"line_end":898,"column_start":49,"column_end":55},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":363892,"byte_end":363898,"line_start":916,"line_end":916,"column_start":60,"column_end":66},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":366581,"byte_end":366587,"line_start":999,"line_end":999,"column_start":63,"column_end":69},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":367216,"byte_end":367222,"line_start":1019,"line_end":1019,"column_start":55,"column_end":61},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":368331,"byte_end":368343,"line_start":1055,"line_end":1055,"column_start":46,"column_end":58},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":369811,"byte_end":369823,"line_start":1106,"line_end":1106,"column_start":52,"column_end":64},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":370748,"byte_end":370754,"line_start":1131,"line_end":1131,"column_start":83,"column_end":89},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":371469,"byte_end":371475,"line_start":1147,"line_end":1147,"column_start":57,"column_end":63},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":372410,"byte_end":372416,"line_start":1173,"line_end":1173,"column_start":57,"column_end":63},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373022,"byte_end":373028,"line_start":1189,"line_end":1189,"column_start":42,"column_end":48},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":20699},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373492,"byte_end":373498,"line_start":1210,"line_end":1210,"column_start":43,"column_end":49},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":20699},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":373960,"byte_end":373966,"line_start":1233,"line_end":1233,"column_start":39,"column_end":45},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":20699},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":374452,"byte_end":374458,"line_start":1253,"line_end":1253,"column_start":43,"column_end":49},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":377078,"byte_end":377084,"line_start":1341,"line_end":1341,"column_start":35,"column_end":41},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":377193,"byte_end":377199,"line_start":1347,"line_end":1347,"column_start":42,"column_end":48},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":380988,"byte_end":380994,"line_start":1457,"line_end":1457,"column_start":61,"column_end":67},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384353,"byte_end":384359,"line_start":1548,"line_end":1548,"column_start":44,"column_end":50},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":384881,"byte_end":384887,"line_start":1568,"line_end":1568,"column_start":60,"column_end":66},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":385744,"byte_end":385750,"line_start":1597,"line_end":1597,"column_start":5,"column_end":11},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":386491,"byte_end":386495,"line_start":1619,"line_end":1619,"column_start":49,"column_end":53},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":21151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":388769,"byte_end":388773,"line_start":1684,"line_end":1684,"column_start":42,"column_end":46},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":21151},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":389200,"byte_end":389204,"line_start":1703,"line_end":1703,"column_start":43,"column_end":47},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":21151},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":389705,"byte_end":389709,"line_start":1727,"line_end":1727,"column_start":39,"column_end":43},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":21151},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix.rs","byte_start":390094,"byte_end":390100,"line_start":1744,"line_end":1744,"column_start":27,"column_end":33},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":20699},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391363,"byte_end":391371,"line_start":26,"line_end":26,"column_start":56,"column_end":64},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391602,"byte_end":391610,"line_start":37,"line_end":37,"column_start":61,"column_end":69},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":391849,"byte_end":391857,"line_start":48,"line_end":48,"column_start":63,"column_end":71},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":392872,"byte_end":392880,"line_start":81,"line_end":81,"column_start":52,"column_end":60},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":647}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393126,"byte_end":393134,"line_start":94,"line_end":94,"column_start":44,"column_end":52},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":857}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393297,"byte_end":393305,"line_start":102,"line_end":102,"column_start":49,"column_end":57},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":1515}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":393468,"byte_end":393476,"line_start":110,"line_end":110,"column_start":58,"column_end":66},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":1529}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":394320,"byte_end":394328,"line_start":148,"line_end":148,"column_start":63,"column_end":71},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":1517}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":395137,"byte_end":395145,"line_start":185,"line_end":185,"column_start":62,"column_end":70},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":1526}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":395680,"byte_end":395688,"line_start":203,"line_end":203,"column_start":71,"column_end":79},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":1537}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":399906,"byte_end":399913,"line_start":330,"line_end":330,"column_start":50,"column_end":57},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":1425},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":400128,"byte_end":400135,"line_start":341,"line_end":341,"column_start":55,"column_end":62},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":1425},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":400878,"byte_end":400886,"line_start":370,"line_end":370,"column_start":45,"column_end":53},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":609}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":401136,"byte_end":401144,"line_start":381,"line_end":381,"column_start":45,"column_end":53},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":611}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_alga.rs","byte_start":401386,"byte_end":401394,"line_start":392,"line_end":392,"column_start":37,"column_end":45},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":1421},"to":{"krate":36,"index":613}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403734,"byte_end":403746,"line_start":51,"line_end":51,"column_start":24,"column_end":36},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":403998,"byte_end":404010,"line_start":64,"line_end":64,"column_start":25,"column_end":37},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404305,"byte_end":404317,"line_start":79,"line_end":79,"column_start":28,"column_end":40},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404563,"byte_end":404575,"line_start":92,"line_end":92,"column_start":25,"column_end":37},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":404843,"byte_end":404855,"line_start":106,"line_end":106,"column_start":24,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405072,"byte_end":405084,"line_start":116,"line_end":116,"column_start":25,"column_end":37},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405367,"byte_end":405379,"line_start":132,"line_end":132,"column_start":22,"column_end":34},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405545,"byte_end":405557,"line_start":141,"line_end":141,"column_start":29,"column_end":41},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4104},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":405838,"byte_end":405850,"line_start":155,"line_end":155,"column_start":43,"column_end":55},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4104},"to":{"krate":0,"index":1347}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":406945,"byte_end":406957,"line_start":207,"line_end":207,"column_start":46,"column_end":58},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4104},"to":{"krate":0,"index":1365}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":407385,"byte_end":407397,"line_start":227,"line_end":227,"column_start":53,"column_end":65},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4104},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/array_storage.rs","byte_start":407651,"byte_end":407663,"line_start":237,"line_end":237,"column_start":56,"column_end":68},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":4104},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415442,"byte_end":415454,"line_start":93,"line_end":93,"column_start":9,"column_end":21},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":20848},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":415569,"byte_end":415581,"line_start":98,"line_end":98,"column_start":9,"column_end":21},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":20848},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418236,"byte_end":418251,"line_start":182,"line_end":182,"column_start":9,"column_end":24},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":20904},"to":{"krate":0,"index":1365}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418841,"byte_end":418853,"line_start":201,"line_end":201,"column_start":82,"column_end":94},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":20848},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":418966,"byte_end":418981,"line_start":202,"line_end":202,"column_start":82,"column_end":97},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":20904},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419097,"byte_end":419112,"line_start":203,"line_end":203,"column_start":85,"column_end":100},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":20904},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419240,"byte_end":419252,"line_start":205,"line_end":205,"column_start":96,"column_end":108},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":20848},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419372,"byte_end":419387,"line_start":206,"line_end":206,"column_start":96,"column_end":111},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":20904},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419510,"byte_end":419525,"line_start":207,"line_end":207,"column_start":99,"column_end":114},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":20904},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":419604,"byte_end":419610,"line_start":209,"line_end":209,"column_start":54,"column_end":60},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":439691,"byte_end":439696,"line_start":713,"line_end":713,"column_start":32,"column_end":37},"kind":{"Impl":{"id":218}},"from":{"krate":2,"index":38528},"to":{"krate":0,"index":4311}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440045,"byte_end":440054,"line_start":732,"line_end":732,"column_start":32,"column_end":41},"kind":{"Impl":{"id":219}},"from":{"krate":2,"index":38553},"to":{"krate":0,"index":4311}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440413,"byte_end":440420,"line_start":751,"line_end":751,"column_start":32,"column_end":39},"kind":{"Impl":{"id":220}},"from":{"krate":2,"index":38574},"to":{"krate":0,"index":4311}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":440747,"byte_end":440756,"line_start":770,"line_end":770,"column_start":32,"column_end":41},"kind":{"Impl":{"id":221}},"from":{"krate":2,"index":38512},"to":{"krate":0,"index":4311}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":441080,"byte_end":441086,"line_start":789,"line_end":789,"column_start":54,"column_end":60},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":442338,"byte_end":442344,"line_start":830,"line_end":830,"column_start":57,"column_end":63},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/matrix_slice.rs","byte_start":443672,"byte_end":443683,"line_start":872,"line_end":872,"column_start":5,"column_end":16},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":20955},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":445230,"byte_end":445240,"line_start":36,"line_end":36,"column_start":25,"column_end":35},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":21067},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446792,"byte_end":446802,"line_start":92,"line_end":92,"column_start":42,"column_end":52},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":21067},"to":{"krate":2,"index":2756}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":446987,"byte_end":446997,"line_start":105,"line_end":105,"column_start":59,"column_end":69},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1347}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":447919,"byte_end":447929,"line_start":149,"line_end":149,"column_start":63,"column_end":73},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1347}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":448891,"byte_end":448901,"line_start":198,"line_end":198,"column_start":62,"column_end":72},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1365}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449236,"byte_end":449246,"line_start":212,"line_end":212,"column_start":69,"column_end":79},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449401,"byte_end":449411,"line_start":215,"line_end":215,"column_start":72,"column_end":82},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":449560,"byte_end":449570,"line_start":218,"line_end":218,"column_start":66,"column_end":76},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1365}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450335,"byte_end":450345,"line_start":247,"line_end":247,"column_start":73,"column_end":83},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1377}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450504,"byte_end":450514,"line_start":250,"line_end":250,"column_start":76,"column_end":86},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":21067},"to":{"krate":0,"index":1381}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":450628,"byte_end":450638,"line_start":253,"line_end":253,"column_start":31,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":21067},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":451345,"byte_end":451355,"line_start":271,"line_end":271,"column_start":50,"column_end":60},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":21067},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/vec_storage.rs","byte_start":452255,"byte_end":452265,"line_start":300,"line_end":300,"column_start":23,"column_end":33},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":21067},"to":{"krate":2,"index":7156}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":452927,"byte_end":452933,"line_start":12,"line_end":12,"column_start":54,"column_end":60},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455172,"byte_end":455178,"line_start":87,"line_end":87,"column_start":60,"column_end":66},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/properties.rs","byte_start":455754,"byte_end":455766,"line_start":104,"line_end":104,"column_start":49,"column_end":61},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456593,"byte_end":456597,"line_start":8,"line_end":8,"column_start":19,"column_end":23},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":4589}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456600,"byte_end":456609,"line_start":8,"line_end":8,"column_start":26,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":4589}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456612,"byte_end":456617,"line_start":8,"line_end":8,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":4589}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456620,"byte_end":456623,"line_start":8,"line_end":8,"column_start":46,"column_end":49},"kind":"SuperTrait","from":{"krate":2,"index":3516},"to":{"krate":0,"index":4589}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/scalar.rs","byte_start":456921,"byte_end":456922,"line_start":17,"line_end":17,"column_start":52,"column_end":53},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4593},"to":{"krate":0,"index":4589}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":460719,"byte_end":460723,"line_start":56,"line_end":56,"column_start":22,"column_end":26},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":21151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":462893,"byte_end":462897,"line_start":113,"line_end":113,"column_start":9,"column_end":13},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":21151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":463927,"byte_end":463931,"line_start":149,"line_end":149,"column_start":22,"column_end":26},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":21151},"to":{"krate":2,"index":2750}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":464075,"byte_end":464079,"line_start":161,"line_end":161,"column_start":38,"column_end":42},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":21151},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":465707,"byte_end":465711,"line_start":220,"line_end":220,"column_start":22,"column_end":26},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":21151},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/unit.rs","byte_start":465878,"byte_end":465882,"line_start":229,"line_end":229,"column_start":19,"column_end":23},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":21151},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":466248,"byte_end":466254,"line_start":6,"line_end":6,"column_start":54,"column_end":60},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/statistics.rs","byte_start":468159,"byte_end":468165,"line_start":57,"line_end":57,"column_start":80,"column_end":86},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":476938,"byte_end":476951,"line_start":32,"line_end":32,"column_start":35,"column_end":48},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4818},"to":{"krate":0,"index":4805}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":477659,"byte_end":477665,"line_start":51,"line_end":51,"column_start":35,"column_end":41},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4820},"to":{"krate":0,"index":4805}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":478525,"byte_end":478536,"line_start":72,"line_end":72,"column_start":35,"column_end":46},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4823},"to":{"krate":0,"index":4805}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":479515,"byte_end":479521,"line_start":98,"line_end":98,"column_start":60,"column_end":66},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/base/norm.rs","byte_start":483264,"byte_end":483270,"line_start":216,"line_end":216,"column_start":63,"column_end":69},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":495983,"byte_end":495988,"line_start":30,"line_end":30,"column_start":70,"column_end":75},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":496236,"byte_end":496241,"line_start":40,"line_end":40,"column_start":38,"column_end":43},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":497661,"byte_end":497666,"line_start":94,"line_end":94,"column_start":29,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":21177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501288,"byte_end":501293,"line_start":213,"line_end":213,"column_start":55,"column_end":60},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":21177},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":501704,"byte_end":501709,"line_start":231,"line_end":231,"column_start":57,"column_end":62},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":21177},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502189,"byte_end":502194,"line_start":254,"line_end":254,"column_start":49,"column_end":54},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":21177},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502566,"byte_end":502571,"line_start":270,"line_end":270,"column_start":41,"column_end":46},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502664,"byte_end":502669,"line_start":272,"line_end":272,"column_start":43,"column_end":48},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":502874,"byte_end":502879,"line_start":281,"line_end":281,"column_start":57,"column_end":62},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2551}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point.rs","byte_start":503544,"byte_end":503549,"line_start":315,"line_end":315,"column_start":61,"column_end":66},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504226,"byte_end":504231,"line_start":10,"line_end":10,"column_start":53,"column_end":58},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":1541}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504399,"byte_end":504404,"line_start":18,"line_end":18,"column_start":51,"column_end":56},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":1545}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":504937,"byte_end":504942,"line_start":50,"line_end":50,"column_start":41,"column_end":46},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":609}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":505187,"byte_end":505192,"line_start":61,"line_end":61,"column_start":41,"column_end":46},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":611}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_alga.rs","byte_start":505429,"byte_end":505434,"line_start":72,"line_end":72,"column_start":33,"column_end":38},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":613}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":506735,"byte_end":506740,"line_start":15,"line_end":15,"column_start":29,"column_end":34},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":21177},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":509904,"byte_end":509909,"line_start":115,"line_end":115,"column_start":51,"column_end":56},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":21177},"to":{"krate":20,"index":230}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_construction.rs","byte_start":510200,"byte_end":510208,"line_start":129,"line_end":129,"column_start":59,"column_end":67},"kind":{"Impl":{"id":272}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":513522,"byte_end":513527,"line_start":27,"line_end":27,"column_start":44,"column_end":49},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":514221,"byte_end":514226,"line_start":52,"line_end":52,"column_start":62,"column_end":67},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":21177},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":516608,"byte_end":516615,"line_start":133,"line_end":133,"column_start":64,"column_end":71},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":1504},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_conversion.rs","byte_start":516882,"byte_end":516887,"line_start":144,"line_end":144,"column_start":53,"column_end":58},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":518853,"byte_end":518858,"line_start":21,"line_end":21,"column_start":46,"column_end":51},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":519073,"byte_end":519078,"line_start":32,"line_end":32,"column_start":49,"column_end":54},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/point_ops.rs","byte_start":519308,"byte_end":519313,"line_start":46,"line_end":46,"column_start":49,"column_end":54},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":21177},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527229,"byte_end":527237,"line_start":33,"line_end":33,"column_start":70,"column_end":78},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527491,"byte_end":527499,"line_start":43,"line_end":43,"column_start":38,"column_end":46},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":527657,"byte_end":527665,"line_start":50,"line_end":50,"column_start":39,"column_end":47},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":529172,"byte_end":529180,"line_start":108,"line_end":108,"column_start":29,"column_end":37},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":21567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":538409,"byte_end":538417,"line_start":355,"line_end":355,"column_start":32,"column_end":40},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":21567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541417,"byte_end":541425,"line_start":435,"line_end":435,"column_start":41,"column_end":49},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541533,"byte_end":541541,"line_start":437,"line_end":437,"column_start":55,"column_end":63},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":541727,"byte_end":541735,"line_start":446,"line_end":446,"column_start":35,"column_end":43},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":21567},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":542155,"byte_end":542163,"line_start":465,"line_end":465,"column_start":36,"column_end":44},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":21567},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":542657,"byte_end":542665,"line_start":489,"line_end":489,"column_start":32,"column_end":40},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":21567},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation.rs","byte_start":543085,"byte_end":543093,"line_start":511,"line_end":511,"column_start":38,"column_end":46},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":544594,"byte_end":544602,"line_start":21,"line_end":21,"column_start":61,"column_end":69},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":544797,"byte_end":544805,"line_start":30,"line_end":30,"column_start":68,"column_end":76},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":545104,"byte_end":545112,"line_start":44,"line_end":44,"column_start":66,"column_end":74},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":545822,"byte_end":545830,"line_start":73,"line_end":73,"column_start":64,"column_end":72},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":546217,"byte_end":546225,"line_start":87,"line_end":87,"column_start":74,"column_end":82},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":546640,"byte_end":546648,"line_start":101,"line_end":101,"column_start":70,"column_end":78},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":547635,"byte_end":547643,"line_start":144,"line_end":144,"column_start":60,"column_end":68},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_alga.rs","byte_start":548400,"byte_end":548408,"line_start":176,"line_end":176,"column_start":66,"column_end":74},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":1410}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551115,"byte_end":551123,"line_start":11,"line_end":11,"column_start":21,"column_end":29},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":21567},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_construction.rs","byte_start":551710,"byte_end":551718,"line_start":33,"line_end":33,"column_start":29,"column_end":37},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":21567},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":552809,"byte_end":552817,"line_start":33,"line_end":33,"column_start":56,"column_end":64},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":553445,"byte_end":553454,"line_start":55,"line_end":55,"column_start":47,"column_end":56},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":5771},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":554054,"byte_end":554063,"line_start":78,"line_end":78,"column_start":44,"column_end":53},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":5769},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":554663,"byte_end":554671,"line_start":101,"line_end":101,"column_start":62,"column_end":70},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":555339,"byte_end":555347,"line_start":124,"line_end":124,"column_start":64,"column_end":72},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":556072,"byte_end":556080,"line_start":147,"line_end":147,"column_start":54,"column_end":62},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":557037,"byte_end":557045,"line_start":176,"line_end":176,"column_start":62,"column_end":70},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":21567},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558658,"byte_end":558665,"line_start":220,"line_end":220,"column_start":43,"column_end":50},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558801,"byte_end":558808,"line_start":227,"line_end":227,"column_start":43,"column_end":50},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":558941,"byte_end":558948,"line_start":234,"line_end":234,"column_start":43,"column_end":50},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_conversion.rs","byte_start":559085,"byte_end":559092,"line_start":241,"line_end":241,"column_start":43,"column_end":50},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_ops.rs","byte_start":559992,"byte_end":560000,"line_start":33,"line_end":33,"column_start":55,"column_end":63},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":565804,"byte_end":565813,"line_start":23,"line_end":23,"column_start":20,"column_end":29},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":5769},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573243,"byte_end":573251,"line_start":233,"line_end":233,"column_start":51,"column_end":59},"kind":{"Impl":{"id":368}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":573788,"byte_end":573797,"line_start":258,"line_end":258,"column_start":20,"column_end":29},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":5771},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/rotation_specialization.rs","byte_start":594957,"byte_end":594965,"line_start":820,"line_end":820,"column_start":51,"column_end":59},"kind":{"Impl":{"id":370}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597841,"byte_end":597851,"line_start":50,"line_end":50,"column_start":32,"column_end":42},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":597892,"byte_end":597902,"line_start":52,"line_end":52,"column_start":34,"column_end":44},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598187,"byte_end":598197,"line_start":60,"line_end":60,"column_start":48,"column_end":58},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598325,"byte_end":598335,"line_start":66,"line_end":66,"column_start":29,"column_end":39},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":598372,"byte_end":598382,"line_start":68,"line_end":68,"column_start":30,"column_end":40},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":599101,"byte_end":599111,"line_start":97,"line_end":97,"column_start":20,"column_end":30},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":21847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":623113,"byte_end":623123,"line_start":854,"line_end":854,"column_start":59,"column_end":69},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":21847},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":623639,"byte_end":623649,"line_start":870,"line_end":870,"column_start":61,"column_end":71},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":21847},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":624244,"byte_end":624254,"line_start":890,"line_end":890,"column_start":53,"column_end":63},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":21847},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":624754,"byte_end":624764,"line_start":904,"line_end":904,"column_start":52,"column_end":62},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":625103,"byte_end":625117,"line_start":917,"line_end":917,"column_start":20,"column_end":34},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":6353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":643040,"byte_end":643054,"line_start":1425,"line_end":1425,"column_start":52,"column_end":66},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":6353},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":643669,"byte_end":643683,"line_start":1447,"line_end":1447,"column_start":59,"column_end":73},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6353},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":644022,"byte_end":644036,"line_start":1461,"line_end":1461,"column_start":61,"column_end":75},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6353},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion.rs","byte_start":644453,"byte_end":644467,"line_start":1480,"line_end":1480,"column_start":53,"column_end":67},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6353},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645364,"byte_end":645374,"line_start":17,"line_end":17,"column_start":49,"column_end":59},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645498,"byte_end":645508,"line_start":24,"line_end":24,"column_start":43,"column_end":53},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645639,"byte_end":645649,"line_start":31,"line_end":31,"column_start":54,"column_end":64},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645788,"byte_end":645798,"line_start":38,"line_end":38,"column_start":48,"column_end":58},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":645939,"byte_end":645949,"line_start":45,"line_end":45,"column_start":50,"column_end":60},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646593,"byte_end":646603,"line_start":76,"line_end":76,"column_start":39,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":647}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646749,"byte_end":646759,"line_start":85,"line_end":85,"column_start":31,"column_end":41},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":857}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646822,"byte_end":646832,"line_start":89,"line_end":89,"column_start":36,"column_end":46},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":1515}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":646905,"byte_end":646915,"line_start":93,"line_end":93,"column_start":45,"column_end":55},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":1529}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":647508,"byte_end":647518,"line_start":120,"line_end":120,"column_start":36,"column_end":46},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":1517}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648413,"byte_end":648427,"line_start":165,"line_end":165,"column_start":49,"column_end":63},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648562,"byte_end":648576,"line_start":172,"line_end":172,"column_start":54,"column_end":68},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":648723,"byte_end":648737,"line_start":179,"line_end":179,"column_start":56,"column_end":70},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649195,"byte_end":649209,"line_start":200,"line_end":200,"column_start":50,"column_end":64},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649508,"byte_end":649522,"line_start":212,"line_end":212,"column_start":60,"column_end":74},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":649849,"byte_end":649863,"line_start":224,"line_end":224,"column_start":56,"column_end":70},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":650772,"byte_end":650786,"line_start":265,"line_end":265,"column_start":46,"column_end":60},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_alga.rs","byte_start":651286,"byte_end":651300,"line_start":292,"line_end":292,"column_start":44,"column_end":58},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":1410}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":652229,"byte_end":652239,"line_start":20,"line_end":20,"column_start":20,"column_end":30},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":21847},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655144,"byte_end":655154,"line_start":108,"line_end":108,"column_start":28,"column_end":38},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":21847},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655259,"byte_end":655269,"line_start":115,"line_end":115,"column_start":29,"column_end":39},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":21847},"to":{"krate":20,"index":497}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":655492,"byte_end":655500,"line_start":127,"line_end":127,"column_start":52,"column_end":60},"kind":{"Impl":{"id":407}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":656052,"byte_end":656066,"line_start":151,"line_end":151,"column_start":20,"column_end":34},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6353},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":678936,"byte_end":678950,"line_start":733,"line_end":733,"column_start":28,"column_end":42},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6353},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_construction.rs","byte_start":679082,"byte_end":679090,"line_start":740,"line_end":740,"column_start":56,"column_end":64},"kind":{"Impl":{"id":410}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":681606,"byte_end":681616,"line_start":35,"line_end":35,"column_start":43,"column_end":53},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":21847},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":682147,"byte_end":682161,"line_start":58,"line_end":58,"column_start":47,"column_end":61},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":682718,"byte_end":682732,"line_start":79,"line_end":79,"column_start":45,"column_end":59},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":683323,"byte_end":683337,"line_start":102,"line_end":102,"column_start":51,"column_end":65},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":683930,"byte_end":683944,"line_start":124,"line_end":124,"column_start":53,"column_end":67},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":684572,"byte_end":684586,"line_start":146,"line_end":146,"column_start":52,"column_end":66},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":685197,"byte_end":685211,"line_start":168,"line_end":168,"column_start":79,"column_end":93},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6353},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686548,"byte_end":686555,"line_start":221,"line_end":221,"column_start":48,"column_end":55},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686702,"byte_end":686711,"line_start":228,"line_end":228,"column_start":48,"column_end":57},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":5771},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":686857,"byte_end":686871,"line_start":235,"line_end":235,"column_start":43,"column_end":57},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":6353},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":687025,"byte_end":687032,"line_start":242,"line_end":242,"column_start":48,"column_end":55},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_conversion.rs","byte_start":687189,"byte_end":687199,"line_start":249,"line_end":249,"column_start":41,"column_end":51},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_coordinates.rs","byte_start":687473,"byte_end":687483,"line_start":10,"line_end":10,"column_start":30,"column_end":40},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":3064}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_coordinates.rs","byte_start":687651,"byte_end":687661,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":3077}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":689329,"byte_end":689339,"line_start":66,"line_end":66,"column_start":37,"column_end":47},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":689502,"byte_end":689512,"line_start":75,"line_end":75,"column_start":40,"column_end":50},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/quaternion_ops.rs","byte_start":702926,"byte_end":702936,"line_start":550,"line_end":550,"column_start":28,"column_end":38},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":21847},"to":{"krate":2,"index":2947}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":707109,"byte_end":707120,"line_start":12,"line_end":12,"column_start":20,"column_end":31},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":7019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717098,"byte_end":717109,"line_start":326,"line_end":326,"column_start":52,"column_end":63},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717273,"byte_end":717284,"line_start":332,"line_end":332,"column_start":34,"column_end":45},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":7019},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":717629,"byte_end":717640,"line_start":346,"line_end":346,"column_start":35,"column_end":46},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":7019},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex.rs","byte_start":718080,"byte_end":718091,"line_start":365,"line_end":365,"column_start":31,"column_end":42},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":7019},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719023,"byte_end":719034,"line_start":20,"line_end":20,"column_start":49,"column_end":60},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719169,"byte_end":719180,"line_start":27,"line_end":27,"column_start":54,"column_end":65},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719327,"byte_end":719338,"line_start":34,"line_end":34,"column_start":56,"column_end":67},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":719952,"byte_end":719963,"line_start":61,"line_end":61,"column_start":50,"column_end":61},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":720303,"byte_end":720314,"line_start":75,"line_end":75,"column_start":60,"column_end":71},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":720682,"byte_end":720693,"line_start":89,"line_end":89,"column_start":56,"column_end":67},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":721643,"byte_end":721654,"line_start":132,"line_end":132,"column_start":46,"column_end":57},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_alga.rs","byte_start":722241,"byte_end":722252,"line_start":162,"line_end":162,"column_start":44,"column_end":55},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":1410}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":723089,"byte_end":723100,"line_start":15,"line_end":15,"column_start":20,"column_end":31},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":7019},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":732290,"byte_end":732301,"line_start":271,"line_end":271,"column_start":28,"column_end":39},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":7019},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_construction.rs","byte_start":732430,"byte_end":732438,"line_start":278,"line_end":278,"column_start":53,"column_end":61},"kind":{"Impl":{"id":485}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":733696,"byte_end":733707,"line_start":29,"line_end":29,"column_start":44,"column_end":55},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":734246,"byte_end":734257,"line_start":50,"line_end":50,"column_start":42,"column_end":53},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":734856,"byte_end":734867,"line_start":73,"line_end":73,"column_start":51,"column_end":62},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":735460,"byte_end":735471,"line_start":95,"line_end":95,"column_start":53,"column_end":64},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":736099,"byte_end":736110,"line_start":117,"line_end":117,"column_start":52,"column_end":63},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":736721,"byte_end":736732,"line_start":139,"line_end":139,"column_start":79,"column_end":90},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":7019},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737208,"byte_end":737217,"line_start":158,"line_end":158,"column_start":45,"column_end":54},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":5769},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737360,"byte_end":737371,"line_start":165,"line_end":165,"column_start":43,"column_end":54},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737522,"byte_end":737529,"line_start":172,"line_end":172,"column_start":45,"column_end":52},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":1434},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_conversion.rs","byte_start":737676,"byte_end":737683,"line_start":179,"line_end":179,"column_start":45,"column_end":52},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":1432},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":738994,"byte_end":739005,"line_start":47,"line_end":47,"column_start":34,"column_end":45},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":739459,"byte_end":739470,"line_start":65,"line_end":65,"column_start":52,"column_end":63},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2930}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":739964,"byte_end":739975,"line_start":84,"line_end":84,"column_start":34,"column_end":45},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":740461,"byte_end":740472,"line_start":102,"line_end":102,"column_start":52,"column_end":63},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2935}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747136,"byte_end":747147,"line_start":303,"line_end":303,"column_start":50,"column_end":61},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747314,"byte_end":747325,"line_start":310,"line_end":310,"column_start":58,"column_end":69},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747518,"byte_end":747529,"line_start":318,"line_end":318,"column_start":50,"column_end":61},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747696,"byte_end":747707,"line_start":325,"line_end":325,"column_start":58,"column_end":69},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":747899,"byte_end":747910,"line_start":333,"line_end":333,"column_start":51,"column_end":62},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748124,"byte_end":748135,"line_start":342,"line_end":342,"column_start":59,"column_end":70},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748373,"byte_end":748384,"line_start":352,"line_end":352,"column_start":51,"column_end":62},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748598,"byte_end":748609,"line_start":361,"line_end":361,"column_start":59,"column_end":70},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":7019},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":748846,"byte_end":748854,"line_start":371,"line_end":371,"column_start":50,"column_end":58},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749091,"byte_end":749099,"line_start":380,"line_end":380,"column_start":58,"column_end":66},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2959}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749360,"byte_end":749368,"line_start":390,"line_end":390,"column_start":50,"column_end":58},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/unit_complex_ops.rs","byte_start":749605,"byte_end":749613,"line_start":399,"line_end":399,"column_start":58,"column_end":66},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":21567},"to":{"krate":2,"index":2963}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":750803,"byte_end":750814,"line_start":34,"line_end":34,"column_start":70,"column_end":81},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":751028,"byte_end":751039,"line_start":44,"line_end":44,"column_start":38,"column_end":49},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":751156,"byte_end":751167,"line_start":50,"line_end":50,"column_start":39,"column_end":50},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":752608,"byte_end":752619,"line_start":108,"line_end":108,"column_start":29,"column_end":40},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":22464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":755582,"byte_end":755593,"line_start":195,"line_end":195,"column_start":41,"column_end":52},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":22464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756186,"byte_end":756197,"line_start":214,"line_end":214,"column_start":41,"column_end":52},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":22464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756773,"byte_end":756784,"line_start":231,"line_end":231,"column_start":41,"column_end":52},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":756889,"byte_end":756900,"line_start":233,"line_end":233,"column_start":55,"column_end":66},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":757116,"byte_end":757127,"line_start":242,"line_end":242,"column_start":55,"column_end":66},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":22464},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":757538,"byte_end":757549,"line_start":260,"line_end":260,"column_start":57,"column_end":68},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":22464},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":758029,"byte_end":758040,"line_start":283,"line_end":283,"column_start":49,"column_end":60},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":22464},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation.rs","byte_start":758459,"byte_end":758470,"line_start":304,"line_end":304,"column_start":64,"column_end":75},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759419,"byte_end":759430,"line_start":22,"line_end":22,"column_start":61,"column_end":72},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759622,"byte_end":759633,"line_start":31,"line_end":31,"column_start":68,"column_end":79},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":759925,"byte_end":759936,"line_start":45,"line_end":45,"column_start":66,"column_end":77},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":760643,"byte_end":760654,"line_start":74,"line_end":74,"column_start":64,"column_end":75},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":761005,"byte_end":761016,"line_start":88,"line_end":88,"column_start":74,"column_end":85},"kind":{"Impl":{"id":550}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":761387,"byte_end":761398,"line_start":102,"line_end":102,"column_start":70,"column_end":81},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":762355,"byte_end":762366,"line_start":145,"line_end":145,"column_start":60,"column_end":71},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_alga.rs","byte_start":763031,"byte_end":763042,"line_start":176,"line_end":176,"column_start":65,"column_end":76},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":1404}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":764579,"byte_end":764590,"line_start":18,"line_end":18,"column_start":36,"column_end":47},"kind":{"Impl":{"id":554}},"from":{"krate":0,"index":22464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765258,"byte_end":765269,"line_start":41,"line_end":41,"column_start":56,"column_end":67},"kind":{"Impl":{"id":555}},"from":{"krate":0,"index":22464},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_construction.rs","byte_start":765453,"byte_end":765461,"line_start":50,"line_end":50,"column_start":65,"column_end":73},"kind":{"Impl":{"id":556}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":768510,"byte_end":768521,"line_start":23,"line_end":23,"column_start":59,"column_end":70},"kind":{"Impl":{"id":557}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":769154,"byte_end":769165,"line_start":47,"line_end":47,"column_start":62,"column_end":73},"kind":{"Impl":{"id":558}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":769792,"byte_end":769803,"line_start":70,"line_end":70,"column_start":64,"column_end":75},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":770487,"byte_end":770498,"line_start":93,"line_end":93,"column_start":54,"column_end":65},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":771306,"byte_end":771317,"line_start":120,"line_end":120,"column_start":62,"column_end":73},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":22464},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":772456,"byte_end":772463,"line_start":156,"line_end":156,"column_start":70,"column_end":77},"kind":{"Impl":{"id":562}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/translation_conversion.rs","byte_start":772755,"byte_end":772766,"line_start":167,"line_end":167,"column_start":53,"column_end":64},"kind":{"Impl":{"id":563}},"from":{"krate":0,"index":22464},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783192,"byte_end":783200,"line_start":80,"line_end":80,"column_start":88,"column_end":96},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783501,"byte_end":783509,"line_start":91,"line_end":91,"column_start":81,"column_end":89},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783667,"byte_end":783675,"line_start":98,"line_end":98,"column_start":76,"column_end":84},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":783911,"byte_end":783919,"line_start":107,"line_end":107,"column_start":58,"column_end":66},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":22643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":793119,"byte_end":793127,"line_start":354,"line_end":354,"column_start":35,"column_end":43},"kind":{"Impl":{"id":578}},"from":{"krate":0,"index":22643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794298,"byte_end":794306,"line_start":387,"line_end":387,"column_start":42,"column_end":50},"kind":{"Impl":{"id":579}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794449,"byte_end":794457,"line_start":394,"line_end":394,"column_start":49,"column_end":57},"kind":{"Impl":{"id":580}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":794749,"byte_end":794757,"line_start":405,"line_end":405,"column_start":49,"column_end":57},"kind":{"Impl":{"id":581}},"from":{"krate":0,"index":22643},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":795305,"byte_end":795313,"line_start":425,"line_end":425,"column_start":50,"column_end":58},"kind":{"Impl":{"id":582}},"from":{"krate":0,"index":22643},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":795983,"byte_end":795991,"line_start":452,"line_end":452,"column_start":46,"column_end":54},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":22643},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry.rs","byte_start":796573,"byte_end":796581,"line_start":476,"line_end":476,"column_start":67,"column_end":75},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":22643},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":797623,"byte_end":797631,"line_start":22,"line_end":22,"column_start":64,"column_end":72},"kind":{"Impl":{"id":585}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":797864,"byte_end":797872,"line_start":33,"line_end":33,"column_start":71,"column_end":79},"kind":{"Impl":{"id":586}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":798205,"byte_end":798213,"line_start":49,"line_end":49,"column_start":69,"column_end":77},"kind":{"Impl":{"id":587}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799008,"byte_end":799016,"line_start":81,"line_end":81,"column_start":67,"column_end":75},"kind":{"Impl":{"id":588}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799423,"byte_end":799431,"line_start":97,"line_end":97,"column_start":77,"column_end":85},"kind":{"Impl":{"id":589}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":799866,"byte_end":799874,"line_start":113,"line_end":113,"column_start":73,"column_end":81},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_alga.rs","byte_start":801332,"byte_end":801340,"line_start":171,"line_end":171,"column_start":63,"column_end":71},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":803604,"byte_end":803612,"line_start":22,"line_end":22,"column_start":62,"column_end":70},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":22643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":805126,"byte_end":805134,"line_start":68,"line_end":68,"column_start":70,"column_end":78},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":22643},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":805368,"byte_end":805376,"line_start":78,"line_end":78,"column_start":71,"column_end":79},"kind":{"Impl":{"id":594}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":806153,"byte_end":806161,"line_start":111,"line_end":111,"column_start":20,"column_end":28},"kind":{"Impl":{"id":595}},"from":{"krate":0,"index":22643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_construction.rs","byte_start":807213,"byte_end":807221,"line_start":146,"line_end":146,"column_start":20,"column_end":28},"kind":{"Impl":{"id":596}},"from":{"krate":0,"index":22643},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":818239,"byte_end":818247,"line_start":20,"line_end":20,"column_start":68,"column_end":76},"kind":{"Impl":{"id":597}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":819140,"byte_end":819148,"line_start":48,"line_end":48,"column_start":70,"column_end":78},"kind":{"Impl":{"id":598}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":819889,"byte_end":819897,"line_start":72,"line_end":72,"column_start":57,"column_end":65},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":821067,"byte_end":821075,"line_start":106,"line_end":106,"column_start":65,"column_end":73},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":22643},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/isometry_conversion.rs","byte_start":822782,"byte_end":822789,"line_start":152,"line_end":152,"column_start":63,"column_end":70},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":840546,"byte_end":840556,"line_start":72,"line_end":72,"column_start":9,"column_end":19},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":9093}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":840853,"byte_end":840863,"line_start":83,"line_end":83,"column_start":81,"column_end":91},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841020,"byte_end":841030,"line_start":89,"line_end":89,"column_start":76,"column_end":86},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":841240,"byte_end":841250,"line_start":98,"line_end":98,"column_start":35,"column_end":45},"kind":{"Impl":{"id":649}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849369,"byte_end":849379,"line_start":328,"line_end":328,"column_start":35,"column_end":45},"kind":{"Impl":{"id":650}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":849995,"byte_end":850005,"line_start":349,"line_end":349,"column_start":42,"column_end":52},"kind":{"Impl":{"id":651}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850147,"byte_end":850157,"line_start":355,"line_end":355,"column_start":49,"column_end":59},"kind":{"Impl":{"id":652}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850441,"byte_end":850451,"line_start":366,"line_end":366,"column_start":49,"column_end":59},"kind":{"Impl":{"id":653}},"from":{"krate":0,"index":23184},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":850991,"byte_end":851001,"line_start":386,"line_end":386,"column_start":50,"column_end":60},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":23184},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":851663,"byte_end":851673,"line_start":413,"line_end":413,"column_start":46,"column_end":56},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":23184},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity.rs","byte_start":852208,"byte_end":852218,"line_start":436,"line_end":436,"column_start":41,"column_end":51},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":23184},"to":{"krate":2,"index":8894}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853287,"byte_end":853297,"line_start":19,"line_end":19,"column_start":64,"column_end":74},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853530,"byte_end":853540,"line_start":30,"line_end":30,"column_start":71,"column_end":81},"kind":{"Impl":{"id":658}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":853873,"byte_end":853883,"line_start":46,"line_end":46,"column_start":69,"column_end":79},"kind":{"Impl":{"id":659}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":854680,"byte_end":854690,"line_start":78,"line_end":78,"column_start":67,"column_end":77},"kind":{"Impl":{"id":660}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":855097,"byte_end":855107,"line_start":94,"line_end":94,"column_start":77,"column_end":87},"kind":{"Impl":{"id":661}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":855542,"byte_end":855552,"line_start":110,"line_end":110,"column_start":73,"column_end":83},"kind":{"Impl":{"id":662}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":1363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_alga.rs","byte_start":856986,"byte_end":856996,"line_start":167,"line_end":167,"column_start":67,"column_end":77},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":1376}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":858572,"byte_end":858582,"line_start":22,"line_end":22,"column_start":35,"column_end":45},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859254,"byte_end":859264,"line_start":48,"line_end":48,"column_start":43,"column_end":53},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":23184},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859541,"byte_end":859549,"line_start":60,"line_end":60,"column_start":73,"column_end":81},"kind":{"Impl":{"id":666}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":859976,"byte_end":859986,"line_start":77,"line_end":77,"column_start":35,"column_end":45},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":861523,"byte_end":861533,"line_start":130,"line_end":130,"column_start":20,"column_end":30},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_construction.rs","byte_start":862295,"byte_end":862305,"line_start":153,"line_end":153,"column_start":20,"column_end":30},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":23184},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":872037,"byte_end":872047,"line_start":19,"line_end":19,"column_start":70,"column_end":80},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":872953,"byte_end":872963,"line_start":47,"line_end":47,"column_start":57,"column_end":67},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":874123,"byte_end":874133,"line_start":81,"line_end":81,"column_start":65,"column_end":75},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":23184},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/similarity_conversion.rs","byte_start":877515,"byte_end":877522,"line_start":166,"line_end":166,"column_start":65,"column_end":72},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896261,"byte_end":896264,"line_start":21,"line_end":21,"column_start":22,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":3516},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896267,"byte_end":896272,"line_start":21,"line_end":21,"column_start":28,"column_end":33},"kind":"SuperTrait","from":{"krate":2,"index":8887},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896275,"byte_end":896279,"line_start":21,"line_end":21,"column_start":36,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2863},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896282,"byte_end":896291,"line_start":21,"line_end":21,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2504},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896294,"byte_end":896298,"line_start":21,"line_end":21,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":2,"index":2853},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":896988,"byte_end":896997,"line_start":39,"line_end":39,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":0,"index":9353},"to":{"krate":0,"index":9358}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897380,"byte_end":897389,"line_start":47,"line_end":47,"column_start":47,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":9353},"to":{"krate":0,"index":9361}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897581,"byte_end":897590,"line_start":52,"line_end":52,"column_start":45,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":9353},"to":{"krate":0,"index":9363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":897630,"byte_end":897632,"line_start":53,"line_end":53,"column_start":37,"column_end":39},"kind":{"Impl":{"id":720}},"from":{"krate":0,"index":9366},"to":{"krate":0,"index":9363}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898175,"byte_end":898183,"line_start":72,"line_end":72,"column_start":20,"column_end":28},"kind":{"Impl":{"id":721}},"from":{"krate":0,"index":23775},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898418,"byte_end":898429,"line_start":83,"line_end":83,"column_start":20,"column_end":31},"kind":{"Impl":{"id":722}},"from":{"krate":0,"index":23790},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":898681,"byte_end":898688,"line_start":94,"line_end":94,"column_start":20,"column_end":27},"kind":{"Impl":{"id":723}},"from":{"krate":0,"index":23805},"to":{"krate":0,"index":9353}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":899399,"byte_end":899400,"line_start":122,"line_end":122,"column_start":40,"column_end":41},"kind":{"Impl":{"id":724}},"from":{"krate":0,"index":9384},"to":{"krate":0,"index":9358}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":900017,"byte_end":900018,"line_start":146,"line_end":146,"column_start":44,"column_end":45},"kind":{"Impl":{"id":725}},"from":{"krate":0,"index":9388},"to":{"krate":0,"index":9361}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":901024,"byte_end":901033,"line_start":176,"line_end":176,"column_start":69,"column_end":78},"kind":{"Impl":{"id":726}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":901248,"byte_end":901257,"line_start":183,"line_end":183,"column_start":63,"column_end":72},"kind":{"Impl":{"id":727}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902467,"byte_end":902476,"line_start":218,"line_end":218,"column_start":65,"column_end":74},"kind":{"Impl":{"id":728}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":2509}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902631,"byte_end":902640,"line_start":221,"line_end":221,"column_start":67,"column_end":76},"kind":{"Impl":{"id":729}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":902879,"byte_end":902888,"line_start":230,"line_end":230,"column_start":53,"column_end":62},"kind":{"Impl":{"id":730}},"from":{"krate":0,"index":23835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":910967,"byte_end":910976,"line_start":457,"line_end":457,"column_start":31,"column_end":40},"kind":{"Impl":{"id":731}},"from":{"krate":0,"index":23835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":911794,"byte_end":911803,"line_start":484,"line_end":484,"column_start":53,"column_end":62},"kind":{"Impl":{"id":732}},"from":{"krate":0,"index":23835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":912685,"byte_end":912694,"line_start":508,"line_end":508,"column_start":39,"column_end":48},"kind":{"Impl":{"id":733}},"from":{"krate":0,"index":23835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":913131,"byte_end":913140,"line_start":519,"line_end":519,"column_start":67,"column_end":76},"kind":{"Impl":{"id":734}},"from":{"krate":0,"index":23835},"to":{"krate":19,"index":15}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":913600,"byte_end":913609,"line_start":537,"line_end":537,"column_start":68,"column_end":77},"kind":{"Impl":{"id":735}},"from":{"krate":0,"index":23835},"to":{"krate":19,"index":66}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform.rs","byte_start":914142,"byte_end":914151,"line_start":560,"line_end":560,"column_start":64,"column_end":73},"kind":{"Impl":{"id":736}},"from":{"krate":0,"index":23835},"to":{"krate":19,"index":107}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":915372,"byte_end":915381,"line_start":18,"line_end":18,"column_start":71,"column_end":80},"kind":{"Impl":{"id":737}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":503}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":915644,"byte_end":915653,"line_start":29,"line_end":29,"column_start":78,"column_end":87},"kind":{"Impl":{"id":738}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":698}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":916042,"byte_end":916051,"line_start":45,"line_end":45,"column_start":76,"column_end":85},"kind":{"Impl":{"id":739}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":194}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":917301,"byte_end":917310,"line_start":88,"line_end":88,"column_start":63,"column_end":72},"kind":{"Impl":{"id":740}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":1355}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_alga.rs","byte_start":917851,"byte_end":917860,"line_start":108,"line_end":108,"column_start":73,"column_end":82},"kind":{"Impl":{"id":741}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":1359}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":920357,"byte_end":920366,"line_start":11,"line_end":11,"column_start":53,"column_end":62},"kind":{"Impl":{"id":742}},"from":{"krate":0,"index":23835},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_construction.rs","byte_start":921465,"byte_end":921474,"line_start":48,"line_end":48,"column_start":61,"column_end":70},"kind":{"Impl":{"id":743}},"from":{"krate":0,"index":23835},"to":{"krate":20,"index":507}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":922002,"byte_end":922011,"line_start":9,"line_end":9,"column_start":69,"column_end":78},"kind":{"Impl":{"id":744}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":922843,"byte_end":922852,"line_start":37,"line_end":37,"column_start":74,"column_end":83},"kind":{"Impl":{"id":745}},"from":{"krate":0,"index":23835},"to":{"krate":36,"index":870}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_conversion.rs","byte_start":923636,"byte_end":923643,"line_start":64,"line_end":64,"column_start":64,"column_end":71},"kind":{"Impl":{"id":746}},"from":{"krate":0,"index":1425},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_ops.rs","byte_start":925946,"byte_end":925955,"line_start":82,"line_end":82,"column_start":63,"column_end":72},"kind":{"Impl":{"id":747}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":3149}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/transform_ops.rs","byte_start":926311,"byte_end":926320,"line_start":96,"line_end":96,"column_start":52,"column_end":61},"kind":{"Impl":{"id":748}},"from":{"krate":0,"index":23835},"to":{"krate":2,"index":3153}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/reflection.rs","byte_start":947821,"byte_end":947831,"line_start":16,"line_end":16,"column_start":49,"column_end":59},"kind":{"Impl":{"id":809}},"from":{"krate":0,"index":9888},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952211,"byte_end":952224,"line_start":24,"line_end":24,"column_start":29,"column_end":42},"kind":{"Impl":{"id":810}},"from":{"krate":0,"index":9965},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952261,"byte_end":952274,"line_start":26,"line_end":26,"column_start":30,"column_end":43},"kind":{"Impl":{"id":811}},"from":{"krate":0,"index":9965},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952424,"byte_end":952437,"line_start":33,"line_end":33,"column_start":35,"column_end":48},"kind":{"Impl":{"id":812}},"from":{"krate":0,"index":9965},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":952582,"byte_end":952595,"line_start":39,"line_end":39,"column_start":34,"column_end":47},"kind":{"Impl":{"id":813}},"from":{"krate":0,"index":9965},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":953308,"byte_end":953321,"line_start":64,"line_end":64,"column_start":20,"column_end":33},"kind":{"Impl":{"id":814}},"from":{"krate":0,"index":9965},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":977373,"byte_end":977381,"line_start":681,"line_end":681,"column_start":55,"column_end":63},"kind":{"Impl":{"id":815}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/orthographic.rs","byte_start":978424,"byte_end":978431,"line_start":712,"line_end":712,"column_start":47,"column_end":54},"kind":{"Impl":{"id":816}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979174,"byte_end":979186,"line_start":25,"line_end":25,"column_start":29,"column_end":41},"kind":{"Impl":{"id":817}},"from":{"krate":0,"index":10069},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979223,"byte_end":979235,"line_start":27,"line_end":27,"column_start":30,"column_end":42},"kind":{"Impl":{"id":818}},"from":{"krate":0,"index":10069},"to":{"krate":2,"index":2474}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979385,"byte_end":979397,"line_start":34,"line_end":34,"column_start":35,"column_end":47},"kind":{"Impl":{"id":819}},"from":{"krate":0,"index":10069},"to":{"krate":2,"index":8887}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":979542,"byte_end":979554,"line_start":40,"line_end":40,"column_start":34,"column_end":46},"kind":{"Impl":{"id":820}},"from":{"krate":0,"index":10069},"to":{"krate":2,"index":2504}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":980265,"byte_end":980277,"line_start":65,"line_end":65,"column_start":20,"column_end":32},"kind":{"Impl":{"id":821}},"from":{"krate":0,"index":10069},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":986903,"byte_end":986911,"line_start":264,"line_end":264,"column_start":54,"column_end":62},"kind":{"Impl":{"id":822}},"from":{"krate":28,"index":2414},"to":{"krate":28,"index":807}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/geometry/perspective.rs","byte_start":987699,"byte_end":987706,"line_start":287,"line_end":287,"column_start":46,"column_end":53},"kind":{"Impl":{"id":823}},"from":{"krate":0,"index":1436},"to":{"krate":2,"index":2759}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993243,"byte_end":993253,"line_start":57,"line_end":57,"column_start":54,"column_end":64},"kind":{"Impl":{"id":824}},"from":{"krate":0,"index":24548},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":993610,"byte_end":993620,"line_start":68,"line_end":68,"column_start":45,"column_end":55},"kind":{"Impl":{"id":825}},"from":{"krate":0,"index":24548},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/bidiagonal.rs","byte_start":1004119,"byte_end":1004125,"line_start":358,"line_end":358,"column_start":66,"column_end":72},"kind":{"Impl":{"id":826}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005577,"byte_end":1005585,"line_start":35,"line_end":35,"column_start":40,"column_end":48},"kind":{"Impl":{"id":827}},"from":{"krate":0,"index":24566},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1005711,"byte_end":1005719,"line_start":41,"line_end":41,"column_start":43,"column_end":51},"kind":{"Impl":{"id":828}},"from":{"krate":0,"index":24566},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/cholesky.rs","byte_start":1009703,"byte_end":1009715,"line_start":151,"line_end":151,"column_start":64,"column_end":76},"kind":{"Impl":{"id":829}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/determinant.rs","byte_start":1010407,"byte_end":1010419,"line_start":10,"line_end":10,"column_start":70,"column_end":82},"kind":{"Impl":{"id":830}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1013764,"byte_end":1013773,"line_start":43,"line_end":43,"column_start":54,"column_end":63},"kind":{"Impl":{"id":831}},"from":{"krate":0,"index":24578},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1014003,"byte_end":1014012,"line_start":50,"line_end":50,"column_start":45,"column_end":54},"kind":{"Impl":{"id":832}},"from":{"krate":0,"index":24578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1017426,"byte_end":1017435,"line_start":159,"line_end":159,"column_start":49,"column_end":58},"kind":{"Impl":{"id":833}},"from":{"krate":0,"index":24578},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/full_piv_lu.rs","byte_start":1020686,"byte_end":1020692,"line_start":264,"line_end":264,"column_start":66,"column_end":72},"kind":{"Impl":{"id":834}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/givens.rs","byte_start":1021519,"byte_end":1021533,"line_start":20,"line_end":20,"column_start":23,"column_end":37},"kind":{"Impl":{"id":835}},"from":{"krate":0,"index":24595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027454,"byte_end":1027464,"line_start":40,"line_end":40,"column_start":47,"column_end":57},"kind":{"Impl":{"id":836}},"from":{"krate":0,"index":24607},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1027654,"byte_end":1027664,"line_start":47,"line_end":47,"column_start":38,"column_end":48},"kind":{"Impl":{"id":837}},"from":{"krate":0,"index":24607},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/hessenberg.rs","byte_start":1030720,"byte_end":1030732,"line_start":136,"line_end":136,"column_start":59,"column_end":71},"kind":{"Impl":{"id":838}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1035946,"byte_end":1035958,"line_start":10,"line_end":10,"column_start":52,"column_end":64},"kind":{"Impl":{"id":839}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/inverse.rs","byte_start":1036329,"byte_end":1036341,"line_start":24,"line_end":24,"column_start":55,"column_end":67},"kind":{"Impl":{"id":840}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1045067,"byte_end":1045069,"line_start":42,"line_end":42,"column_start":54,"column_end":56},"kind":{"Impl":{"id":841}},"from":{"krate":0,"index":24620},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1046407,"byte_end":1046409,"line_start":89,"line_end":89,"column_start":45,"column_end":47},"kind":{"Impl":{"id":842}},"from":{"krate":0,"index":24620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1050115,"byte_end":1050117,"line_start":200,"line_end":200,"column_start":49,"column_end":51},"kind":{"Impl":{"id":843}},"from":{"krate":0,"index":24620},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/lu.rs","byte_start":1055417,"byte_end":1055423,"line_start":371,"line_end":371,"column_start":66,"column_end":72},"kind":{"Impl":{"id":844}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056758,"byte_end":1056777,"line_start":38,"line_end":38,"column_start":23,"column_end":42},"kind":{"Impl":{"id":845}},"from":{"krate":0,"index":24636},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1056898,"byte_end":1056917,"line_start":44,"line_end":44,"column_start":18,"column_end":37},"kind":{"Impl":{"id":846}},"from":{"krate":0,"index":24636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057208,"byte_end":1057227,"line_start":55,"line_end":55,"column_start":6,"column_end":25},"kind":{"Impl":{"id":847}},"from":{"krate":0,"index":24636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/permutation_sequence.rs","byte_start":1057505,"byte_end":1057524,"line_start":65,"line_end":65,"column_start":14,"column_end":33},"kind":{"Impl":{"id":848}},"from":{"krate":0,"index":24636},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061655,"byte_end":1061657,"line_start":43,"line_end":43,"column_start":54,"column_end":56},"kind":{"Impl":{"id":849}},"from":{"krate":0,"index":24646},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1061865,"byte_end":1061867,"line_start":50,"line_end":50,"column_start":45,"column_end":47},"kind":{"Impl":{"id":850}},"from":{"krate":0,"index":24646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1065853,"byte_end":1065855,"line_start":162,"line_end":162,"column_start":49,"column_end":51},"kind":{"Impl":{"id":851}},"from":{"krate":0,"index":24646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/qr.rs","byte_start":1069712,"byte_end":1069718,"line_start":294,"line_end":294,"column_start":66,"column_end":72},"kind":{"Impl":{"id":852}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071270,"byte_end":1071275,"line_start":45,"line_end":45,"column_start":40,"column_end":45},"kind":{"Impl":{"id":853}},"from":{"krate":0,"index":24662},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1071389,"byte_end":1071394,"line_start":51,"line_end":51,"column_start":31,"column_end":36},"kind":{"Impl":{"id":854}},"from":{"krate":0,"index":24662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/schur.rs","byte_start":1085956,"byte_end":1085968,"line_start":490,"line_end":490,"column_start":52,"column_end":64},"kind":{"Impl":{"id":855}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/solve.rs","byte_start":1089332,"byte_end":1089344,"line_start":9,"line_end":9,"column_start":52,"column_end":64},"kind":{"Impl":{"id":856}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1103955,"byte_end":1103958,"line_start":56,"line_end":56,"column_start":54,"column_end":57},"kind":{"Impl":{"id":857}},"from":{"krate":0,"index":24675},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1104314,"byte_end":1104317,"line_start":66,"line_end":66,"column_start":45,"column_end":48},"kind":{"Impl":{"id":858}},"from":{"krate":0,"index":24675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/svd.rs","byte_start":1122461,"byte_end":1122467,"line_start":549,"line_end":549,"column_start":66,"column_end":72},"kind":{"Impl":{"id":859}},"from":{"krate":0,"index":20699},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1127899,"byte_end":1127913,"line_start":47,"line_end":47,"column_start":40,"column_end":54},"kind":{"Impl":{"id":860}},"from":{"krate":0,"index":24692},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1128092,"byte_end":1128106,"line_start":54,"line_end":54,"column_start":31,"column_end":45},"kind":{"Impl":{"id":861}},"from":{"krate":0,"index":24692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_eigen.rs","byte_start":1136243,"byte_end":1136255,"line_start":307,"line_end":307,"column_start":59,"column_end":71},"kind":{"Impl":{"id":862}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141195,"byte_end":1141215,"line_start":40,"line_end":40,"column_start":47,"column_end":67},"kind":{"Impl":{"id":863}},"from":{"krate":0,"index":24705},"to":{"krate":2,"index":2863}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1141405,"byte_end":1141425,"line_start":47,"line_end":47,"column_start":38,"column_end":58},"kind":{"Impl":{"id":864}},"from":{"krate":0,"index":24705},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/symmetric_tridiagonal.rs","byte_start":1145153,"byte_end":1145165,"line_start":148,"line_end":148,"column_start":59,"column_end":71},"kind":{"Impl":{"id":865}},"from":{"krate":0,"index":3455},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/strelda/.cargo/registry/src/github.com-1ecc6299db9ec823/nalgebra-0.19.0/src/linalg/convolution.rs","byte_start":1145846,"byte_end":1145852,"line_start":9,"line_end":9,"column_start":49,"column_end":55},"kind":{"Impl":{"id":866}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}}]}